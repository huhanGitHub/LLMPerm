/androidx/camera/extensions/impl/BeautyImageCaptureExtenderImpl.java,getSupportedResolutions,Yes, this method likely requires permissions related to camera access, as it involves accessing camera characteristics and configurations.
/androidx/camera/extensions/impl/HdrImageCaptureExtenderImpl.java,getCaptureStages,Yes, this method likely requires permissions related to camera and sensor access, as it involves configuring capture requests and sensor exposure times.
/androidx/camera/extensions/impl/ExtenderStateListener.java,onPresetSession,Yes, this method likely requires camera permissions to access and manipulate camera parameters when dealing with camera sessions.
/androidx/camera/extensions/impl/ExtenderStateListener.java,onEnableSession,Yes, because it involves camera usage, which typically requires camera permissions.
/androidx/camera/extensions/impl/advanced/SessionProcessorImpl.java,initSession,Yes, it requires permissions to access the camera.
/androidx/camera/extensions/impl/advanced/SessionProcessorImpl.java,startRepeating,Yes, this method likely requires camera permissions for capturing images or video.
/androidx/camera/extensions/impl/advanced/SessionProcessorImpl.java,startCapture,Yes, it requires camera permissions to perform capture operations.
/androidx/camera/extensions/impl/advanced/BaseAdvancedExtenderImpl.java,initSession,Yes, the method `initSession` likely requires permissions related to camera access (e.g., `CAMERA` permission) because it initializes a camera session, which involves accessing the camera hardware.
/androidx/camera/extensions/impl/advanced/BaseAdvancedExtenderImpl.java,initSession,Yes, because accessing the camera often requires permissions such as `CAMERA` and possibly `WRITE_EXTERNAL_STORAGE` or `READ_EXTERNAL_STORAGE`.
/androidx/camera/extensions/impl/serviceforward/PlatformApi.java,createCaptureRequest,Yes, this method likely requires permissions related to camera access, as it is creating a `CaptureRequest`, which is typically used in camera operations.
/androidx/camera/extensions/impl/serviceforward/PlatformApi.java,createCaptureRequest,Yes, because it involves camera functionality which typically requires camera permissions.
/androidx/camera/extensions/impl/serviceforward/ServiceManager.java,bindServiceSync,Yes, because binding a service in Android generally requires the `BIND_SERVICE` permission if the service is declared in a way that requires it.
/androidx/camera/extensions/impl/serviceforward/ServiceManager.java,createImageCaptureExtenderImpl,Yes, the method likely requires permissions to bind to a service and perform operations related to image capture extensions, which may involve accessing device resources.
/androidx/camera/extensions/impl/serviceforward/ForwardSessionProcessor.java,initSession,Yes, the method likely requires permissions because it interacts with the camera, which typically requires "CAMERA" permissions in Android.
/androidx/camera/extensions/impl/serviceforward/ForwardAdvancedExtender.java,getAvailableCaptureRequestKeys,Yes, the method `getAvailableCaptureRequestKeys` likely requires permissions related to camera access, as it involves retrieving metadata related to camera capture requests.
/androidx/camera/extensions/impl/serviceforward/ForwardImageCaptureExtender.java,getAvailableCaptureRequestKeys,Yes, this method interacts with camera functionality, which typically requires permissions such as `CAMERA` or `CAMERA_HARDWARE` in Android.
/androidx/multidex/MultiDexExtractor.java,load,Yes, because it involves reading and writing files in the application data directory, which requires storage permissions.
/androidx/multidex/MultiDexExtractor.java,clearDexDir,Yes, because the method interacts with the file system to delete files, requiring permissions related to file storage access.
/androidx/multidex/MultiDex.java,doInstallation,Yes, this method likely requires permissions. It deals with file operations, specifically accessing and writing to the device’s storage, which requires appropriate permissions in Android (like READ_EXTERNAL_STORAGE or WRITE_EXTERNAL_STORAGE).
/androidx/multidex/MultiDex.java,installSecondaryDexes,Yes, this method deals with installing secondary dex files, which typically requires permission to access the file system or modify app data.
/androidx/multidex/MultiDex.java,newInstance,Yes, this method requires permissions as it interacts with the filesystem (accessing a `File` and `DexFile`), which typically necessitates storage permissions in Android.
/org/w3c/domts/JAXPDOMTestDocumentBuilderFactory.java,load,Yes, this method likely requires permissions related to internet access, as it appears to load a document from a specified URL.
/org/w3c/domts/BatikTestDocumentBuilderFactory.java,load,Yes, this method likely requires permissions to access the internet to load a specified URL.
/org/apache/harmony/testframework/serialization/SerializationTest.java,produceGoldenFiles,Yes, because the method involves file creation which likely requires permission to write to storage.
/jdk/net/Sockets.java,getOption,Yes, Security exceptions may occur if the caller lacks required permissions.
/jdk/net/Sockets.java,setOption,Yes, because the method may throw a `SecurityException` if a security manager is set and the caller does not have the required permission.
/jdk/net/Sockets.java,getOption,Yes, the method can throw a `SecurityException` if a security manager is set and the caller lacks the required permission.
/jdk/net/Sockets.java,setOption,Yes, because it may require permissions related to network operations, and a security manager can enforce permission checks.
/jdk/net/Sockets.java,getOption,Yes, this method can require permissions if a security manager is set and the caller does not have the required permission.
/java/net/MulticastSocket.java,joinGroup,Yes, it requires permissions for multicast operations, which involve security checks for multicast addressing.
/java/net/MulticastSocket.java,leaveGroup,Yes, it requires permissions because it involves the use of multicast networking, which may require specific permissions to access network resources.
/java/net/MulticastSocket.java,joinGroup,Yes, this method requires permission. It involves joining a multicast group, which necessitates checking for the appropriate permissions to access network resources.
/java/net/MulticastSocket.java,leaveGroup,Yes, because a security manager checks for multicast permissions when leaving a multicast group.
/java/net/MulticastSocket.java,send,Yes, it requires permissions because it involves sending data over the network, which typically requires network permissions in Android (like `INTERNET` or `ACCESS_NETWORK_STATE`).
/java/net/PlainSocketImpl.java,setOption,Yes, this method likely requires permissions because it checks for a specific permission (`checkSetOptionPermission`) before setting an option on a socket, indicating that certain operations may be restricted.
/java/net/PlainSocketImpl.java,getOption,Yes, the method likely requires permissions because it involves checking socket options and possibly accessing network resources, which typically require permission in Android.
/java/net/PlainSocketImpl.java,socketConnect,Yes, because the method involves network communication, which typically requires permissions such as `INTERNET` in Android.
/java/net/PlainSocketImpl.java,socketBind,Yes, this method likely requires permissions because binding a socket to an address and port involves network operations, which typically require permissions in Android (e.g., `INTERNET` or `ACCESS_NETWORK_STATE`).
/java/net/PlainSocketImpl.java,socketAccept,Yes, this method likely requires permissions related to network access, such as `INTERNET`, since it deals with socket operations.
/java/net/DatagramSocket.java,connect,Yes, because it requires permissions to access remote addresses for socket connections, especially when a security manager is present.
/java/net/DatagramSocket.java,connect,Yes, the method requires permissions because it involves network operations, specifically connecting to a remote address, which typically requires internet access permissions in Android.
/java/net/DatagramSocket.java,send,Yes, the method may require permissions due to security checks for connecting to remote addresses, specifically `checkConnect` and `checkMulticast` which could result in a `SecurityException` if not allowed.
/java/net/DatagramSocket.java,receive,Yes, this method requires permissions because it interacts with network resources, specifically receiving datagram packets which typically requires network permissions in Android.
/java/net/DatagramSocket.java,getOption,Yes, because the method can throw a `SecurityException` if a security manager is set and the socket option requires a security permission.
/java/net/PlainDatagramSocketImpl.java,setOption,Yes, the method requires permissions because it calls a method `checkSetOptionPermission`, indicating that certain permissions need to be verified before executing the option setting.
/java/net/PlainDatagramSocketImpl.java,getOption,Yes, it likely requires permissions to access certain socket options or flows which may depend on the system's configuration or security.
/java/net/PlainDatagramSocketImpl.java,send,Yes, this method requires permissions related to network communication, specifically sending data over a socket or using Datagram packets.
/java/net/PlainDatagramSocketImpl.java,peek,Yes, this method likely requires permissions because it involves network operations (such as using `InetAddress` and `DatagramPacket`), which typically necessitate network-related permissions in Android.
/java/net/PlainDatagramSocketImpl.java,join,Yes, the method `join` may require network permissions, as it involves joining a multicast group which typically necessitates specific network access.
/java/net/PlainDatagramSocketImpl.java,leave,Yes, because managing network connections may require permissions like INTERNET or CHANGE_NETWORK_STATE.
/java/net/PlainDatagramSocketImpl.java,datagramSocketCreate,Yes, it may require permissions to access network resources and broadcast capabilities.
/java/net/ProxySelector.java,getDefault,Yes, it requires permission to check for `getProxySelector`.
/java/net/ProxySelector.java,setDefault,Yes, because it involves setting the system-wide proxy selector, which requires specific permissions.
/java/net/Inet6AddressImpl.java,lookupHostByName,Yes, this method requires the INTERNET permission. It resolves a hostname to its IP addresses, which necessitates network access.
/java/net/Inet6AddressImpl.java,isReachable,Yes, because it involves network operations which typically require internet or network-related permissions in Android.
/java/net/URL.java,checkSpecifyHandler,Yes, this method requires permissions because it checks for `SPECIFY_HANDLER_PERMISSION`.
/java/net/URL.java,openConnection,Yes, because establishing a network connection typically requires internet permissions in Android.
/java/net/URL.java,openConnection,Yes, because the method may involve network connections, and a `SecurityException` is thrown if the caller does not have the permission to connect to the proxy.
/java/net/URL.java,openStream,Yes, because accessing network resources requires INTERNET permission in Android.
/java/net/URLClassLoader.java,close,Yes, because it may require the `closeClassLoader` permission if a security manager is set.
/java/net/URLClassLoader.java,getPermissions,Yes, this method requires permissions because it deals with security management and grants permissions based on URLs and file access.
/java/net/URLClassLoader.java,run,Yes, it likely requires permissions because it involves checking permissions within its body.
/java/net/CookieHandler.java,getDefault,Yes, it requires permissions because it checks for the 'getCookieHandler' permission.
/java/net/CookieHandler.java,setDefault,Yes, the method requires permissions because it checks for the `setCookieHandler` permission via a security manager, which indicates a need for appropriate permissions.
/java/net/ResponseCache.java,getDefault,Yes, because the method checks for the permission "getResponseCache" and may throw a SecurityException if permission is denied.
/java/net/ResponseCache.java,setDefault,Yes, because it checks for the "setResponseCache" permission which may require certain security permissions to perform the operation.
/java/net/Authenticator.java,setDefault,Yes, the method requires permissions because it checks for `NetPermission("setDefaultAuthenticator")` through the security manager, and failing this can result in a `SecurityException`.
/java/net/Authenticator.java,requestPasswordAuthentication,Yes, the method requires permissions because it checks for the `NetPermission("requestPasswordAuthentication")` which can lead to a `SecurityException` if permission is not granted.
/java/net/Authenticator.java,requestPasswordAuthentication,Yes, because it involves requesting password authentication, which requires `NetPermission("requestPasswordAuthentication")`.
/java/net/Authenticator.java,requestPasswordAuthentication,Yes, it requires permissions because it calls a security manager's `checkPermission` method with a `NetPermission("requestPasswordAuthentication")`.
/java/net/SocksSocketImpl.java,connect,Yes, because it deals with network connections and may require internet or network permissions.
/java/net/ServerSocket.java,bind,Yes, the method requires permissions because it may involve network operations, specifically listening for incoming connections, which typically requires specific network-related permissions in Android.
/java/net/ServerSocket.java,setOption,Yes, because setting socket options may require specific security permissions if a security manager is present.
/java/net/ServerSocket.java,getOption,Yes, because a security manager may require specific security permissions for certain socket options.
/java/net/PasswordAuthentication.java,getPassword,Yes, this method likely requires permissions as it accesses sensitive user information (the password).
/java/net/AbstractPlainSocketImpl.java,connect,Yes, this method requires permissions because it establishes a network connection, which typically requires the `INTERNET` permission in Android.
/java/net/AbstractPlainSocketImpl.java,connect,Yes, this method requires permissions to access network resources.
/java/net/AbstractPlainSocketImpl.java,connect,Yes, this method requires permissions because it involves network operations, which typically require internet access permissions in Android.
/java/net/AbstractPlainDatagramSocketImpl.java,create,Yes, this method may require permissions because it deals with network operations (creating a datagram socket) which typically requires specific permissions in Android, such as `INTERNET` and possibly `ACCESS_NETWORK_STATE`.
/java/net/AbstractPlainDatagramSocketImpl.java,bind,Yes, this method likely requires network permissions to bind a datagram socket, as it involves operating with network resources.
/java/net/AbstractPlainDatagramSocketImpl.java,join,Yes, because joining a multicast group typically requires network permissions.
/java/net/NetworkInterface.java,getInetAddresses,Yes, the method requires the "getNetworkInformation" permission to return all InetAddresses.
/java/net/NetworkInterface.java,getAll,Yes, this method requires permissions. It is likely to access network interfaces, which may require specific permissions related to network state or access in the Android environment.
/java/net/NetworkInterface.java,getHardwareAddress,Yes, the method requires permission because it accesses network information and checks for the permission `NetPermission("getNetworkInformation")`.
/java/net/NetworkInterface.java,getFlags,Yes, because it interacts with sockets which may require network permissions.
/java/net/InetAddress.java,isReachable,Yes, this method requires permissions because it involves network operations, specifically checking if a host address is reachable, which typically requires INTERNET permission in Android.
/java/net/InetAddress.java,isReachable,Yes, this method requires permissions for network access to check if an address is reachable.
/java/net/InetAddress.java,getCanonicalHostName,Yes, the method may require permissions to connect to the network and resolve hostnames, as indicated by the reference to `SecurityManager#checkConnect`.
/java/net/InetAddress.java,getHostFromNameService,Yes, this method requires permissions due to the security checks involved in connecting to a host and resolving a hostname from an IP address.
/java/net/InetAddress.java,getByName,Yes, because it may require network access to resolve the hostname.
/java/net/InetAddress.java,getByNameOnNet,Yes, it likely requires permissions because it involves network access for host resolution.
/java/net/InetAddress.java,getAllByNameOnNet,Yes, this method likely requires permissions because it performs network operations (hostname resolution) that typically necessitate network access permissions in Android.
/java/util/Locale.java,setDefault,Yes, this method requires permissions because it calls `checkPermission` for `PropertyPermission("user.language", "write")`, which restricts changes to the default locale based on security context.
/java/util/Locale.java,setDefault,Yes, because it involves changing the default locale and invokes a permission check (`PropertyPermission("user.language", "write")`).
/java/util/prefs/Preferences.java,systemNodeForPackage,Yes, SecurityManager may deny permission to access preferences.
/java/util/prefs/Preferences.java,userRoot,Yes, the method requires permissions to access preferences, as indicated by the potential for a `SecurityException` if `RuntimePermission("preferences")` is denied.
/java/util/prefs/Preferences.java,systemRoot,Yes, the method requires permissions because it mentions a potential `SecurityException` if the `RuntimePermission("preferences")` is denied.
/java/util/prefs/Preferences.java,importPreferences,Yes, because it requires `RuntimePermission("preferences")` for accessing or modifying preferences.
/java/util/prefs/FileSystemPreferences.java,run,Yes, this method requires permissions because it involves file system operations, such as creating directories and modifying file permissions, which typically require specific permissions in Android, such as WRITE_EXTERNAL_STORAGE.
/java/util/prefs/FileSystemPreferences.java,run,Yes, this method likely requires permissions because it involves file operations (creating, modifying, AND checking for existence) in a system directory, which typically requires specific filesystem permissions.
/java/util/prefs/FileSystemPreferences.java,run,Yes, the method involves file operations such as creating directories and writing to files, which generally requires permissions like `WRITE_EXTERNAL_STORAGE` or appropriate file access permissions in Android.
/java/util/prefs/FileSystemPreferences.java,run,Yes, the method requires file system permissions to read and delete files and directories.
/java/util/prefs/FileSystemPreferences.java,lockFile,Yes, because it mentions a `SecurityException` if file access is denied, indicating that permissions are required for file operations.
/java/util/prefs/FileSystemPreferences.java,chmod,Yes, it requires permissions because changing file permissions typically involves modifying system-level file access controls.
/java/util/prefs/FileSystemPreferences.java,unlockFile,Yes, because the method raises a `SecurityException` if file access is denied, indicating that it requires appropriate permissions to access files.
/java/util/logging/Handler.java,close,Yes, because it throws a SecurityException if the caller lacks LoggingPermission("control").
/java/util/logging/Handler.java,setFormatter,Yes, the method requires permissions because it checks for `LoggingPermission("control")`, which indicates a need for specific logging permissions to call this method.
/java/util/logging/Handler.java,setEncoding,Yes, it requires permissions. The method can throw a `SecurityException` if the caller does not have `LoggingPermission("control")`.
/java/util/logging/Handler.java,setFilter,Yes, because it requires `LoggingPermission("control")` to set the filter when a security manager exists.
/java/util/logging/Handler.java,setErrorManager,Yes, because it requires `LoggingPermission("control")` for security.
/java/util/logging/Handler.java,getErrorManager,Yes, it requires permissions because of the potential for a `SecurityException` if the caller does not have `LoggingPermission("control")`.
/java/util/logging/Handler.java,setLevel,Yes, SecurityException is thrown if the caller lacks the LoggingPermission("control").
/java/util/logging/StreamHandler.java,setOutputStream,Yes, because it requires `LoggingPermission("control")` if a security manager exists.
/java/util/logging/StreamHandler.java,setEncoding,Yes, because it may throw a `SecurityException` if the caller does not have `LoggingPermission("control")`.
/java/util/logging/Logger.java,setFilter,Yes, because it throws a SecurityException if the caller does not have LoggingPermission("control").
/java/util/logging/Logger.java,setLevel,Yes, it requires permissions because it throws a `SecurityException` if a security manager exists and the caller does not have `LoggingPermission("control")`.
/java/util/logging/Logger.java,addHandler,Yes, because it throws a SecurityException if the caller does not have LoggingPermission("control").
/java/util/logging/Logger.java,removeHandler,Yes, SecurityException may occur if the caller does not have LoggingPermission("control").
/java/util/logging/Logger.java,setUseParentHandlers,Yes, because it throws a SecurityException if a security manager exists, and the caller does not have the LoggingPermission("control").
/java/util/logging/Logger.java,setupResourceInfo,Yes, the method contains a call to `checkPermission`, which requires permissions in Android.
/java/util/logging/Logger.java,setParent,Yes, the method requires permissions because it can throw a `SecurityException` if the caller does not have `LoggingPermission("control")`.
/java/util/logging/LogManager.java,checkSubclassPermissions,Yes, it requires permission checks related to SecurityManager and runtime permissions.
/java/util/logging/LogManager.java,addPropertyChangeListener,Yes, this method requires permissions because it checks for `LoggingPermission("control")`, which indicates that the caller needs specific permissions related to logging control in the security manager.
/java/util/logging/LogManager.java,removePropertyChangeListener,Yes, it requires `LoggingPermission("control")` if a security manager exists.
/java/util/logging/LogManager.java,readConfiguration,Yes, because it may throw a `SecurityException` if the caller lacks `LoggingPermission("control")`.
/java/util/logging/LogManager.java,reset,Yes, the method requires permissions because it can throw a `SecurityException` if the caller does not have `LoggingPermission("control")`.
/java/util/logging/LogManager.java,readConfiguration,Yes, SecurityException is thrown if the caller does not have LoggingPermission("control").
/java/util/logging/LogManager.java,checkPermission,Yes, the method checks permission using a SecurityManager, which typically requires permissions to access sensitive resources.
/java/util/logging/LogManager.java,checkAccess,Yes, because it requires `LoggingPermission("control")` to modify the logging configuration.
/java/util/logging/SocketHandler.java,connect,Yes, this method requires permissions due to network access for creating a socket connection.
/java/util/logging/SocketHandler.java,close,Yes, the method requires permission due to the potential for a `SecurityException` if a security manager exists and the caller does not have `LoggingPermission("control")`.
/java/util/logging/LoggingMXBean.java,setLoggerLevel,Yes, because setting the logger level requires specific permissions, indicated by potential `SecurityException` if the caller lacks `LoggingPermission("control")`.
/java/util/logging/FileHandler.java,open,Yes, this method likely requires permissions to access or write to the file specified by the `File` parameter, particularly if it interacts with the external storage or sensitive directories.
/java/util/logging/FileHandler.java,openFiles,Yes, this method likely requires permissions because it involves file operations such as creating, writing, and managing file locks, which typically necessitate file system permissions in Android.
/java/util/logging/FileHandler.java,close,Yes, because it requires `LoggingPermission("control")` for security management.
/java/util/logging/MemoryHandler.java,close,Yes, the method requires the "LoggingPermission('control')" permission to avoid a SecurityException if a security manager exists.
/java/util/logging/MemoryHandler.java,setPushLevel,Yes, because it requires `LoggingPermission("control")` to be granted for the caller.
/java/security/Provider.java,putIfAbsent,Yes, because it checks security access with a SecurityManager, which may require permissions to set property values.
/java/security/Provider.java,remove,Yes, it requires permissions because it checks security access to manipulate provider properties, indicating sensitive operations may be involved.
/java/security/Provider.java,replace,Yes, the method may require permissions because it involves security checks that depend on a security manager's approval for accessing and modifying provider property values.
/java/security/Provider.java,replace,Yes, it requires permissions because it checks security access for setting property values.
/java/security/Provider.java,compute,Yes, it requires permissions because it involves security checks related to setting and removing provider properties.
/java/security/Provider.java,check,Yes, the method checks security access, which typically requires permissions related to security in the Android SDK.
/java/security/Provider.java,putService,Yes, it requires permissions. The method checks for a security permission to set provider property values.
/java/security/Provider.java,removeService,Yes, the method requires permissions because it involves a security check through the `checkSecurityAccess` method, which may enforce a `SecurityPermission` for removing a provider's properties.
/java/security/UnresolvedPermissionCollection.java,writeObject,Yes, this method interacts with permissions, which may require specific permissions for access or manipulation.
/java/security/AccessController.java,doPrivileged,Yes, this method operates within a privileged context and involves permissions management.
/java/security/AccessController.java,doPrivileged,Yes, it requires permissions because it deals with security contexts and privileged actions which typically necessitate access control.
/java/security/Identity.java,setPublicKey,Yes, the method involves security operations that require a security manager's permission to set the public key.
/java/security/Identity.java,setInfo,Yes, the method requires permissions because it checks for security access to verify if setting the information string is allowed.
/java/security/Identity.java,removeCertificate,Yes, because it checks security access before removing a certificate.
/java/security/Identity.java,check,Yes, because it accesses the security manager and checks security access, which typically requires permissions.
/java/security/Security.java,insertProviderAt,Yes, the method requires permissions because it involves a security check to add a new provider, which is controlled by specific permissions (`insertProvider` and potentially `insertProvider.<providerName>`).
/java/security/Security.java,addProvider,Yes, the method requires permissions to ensure security checks when adding a provider.
/java/security/Security.java,removeProvider,Yes, it requires permissions because it calls `checkSecurityAccess` and checks for `SecurityPermission("removeProvider."+name)` to ensure access is granted to remove a provider.
/java/security/Security.java,getProperty,Yes, because it checks permissions via a security manager before retrieving a property value.
/java/security/Security.java,setProperty,Yes, requires permission to set security properties.
/java/security/Permission.java,implies,Yes, because the method takes a `Permission` object as a parameter, indicating it deals with permissions.
/java/security/Signer.java,setKeyPair,Yes, because it requires the security manager's permission to set the key pair.
/java/security/Signer.java,check,Yes, the method checks for security access via a `SecurityManager`, which typically requires permissions to perform certain actions.
/java/security/IdentityScope.java,setSystemScope,Yes, it requires permissions because it checks the security manager's authorization to set the system's identity scope.
/java/security/Policy.java,add,Yes, because the method parameter is of type `Permission`, indicating that it is likely related to managing or requesting permissions.
/java/security/KeyStore.java,getInstance,Yes, this method requires permissions. Specifically, it may require read access to the specified keystore file, which is subject to security permissions in Android.
/java/security/KeyStore.java,getInstance,Yes, because it involves reading a keystore file, which requires file read permissions.
/java/io/FileSystem.java,setPermission,Yes, this method likely requires permissions as it deals with setting access permissions for files or directories in the filesystem.
/java/io/FileSystem.java,createFileExclusively,Yes, it requires permissions because creating a file involves writing to the file system, which typically requires specific permissions in Android.
/java/io/FileSystem.java,delete,Yes, because deleting files or directories typically requires write permissions on the storage.
/java/io/FileSystem.java,createDirectory,Yes, it requires permissions to write to storage.
/java/io/FileSystem.java,rename,Yes, this method may require permissions to access or modify files in the filesystem.
/java/io/ObjectOutputStream.java,enableReplaceObject,Yes, because it checks for the `SerializablePermission("enableSubstitution")` permission when enabled.
/java/io/ObjectOutputStream.java,verifySubclass,Yes, because it checks for the "enableSubclassImplementation" SerializablePermission, which requires security permissions.
/java/io/FileOutputStream.java,write,Yes, this method requires permissions because it involves writing to a file, which typically requires storage permissions in Android.
/java/io/UnixFileSystem.java,checkAccess,Yes, the method checks for file access which requires permissions related to file operations.
/java/io/UnixFileSystem.java,setPermission,Yes, this method likely requires permissions related to file access and modification due to its nature of setting permissions on a file.
/java/io/UnixFileSystem.java,setPermission0,Yes, it likely requires permissions to modify file access settings.
/java/io/UnixFileSystem.java,delete,Yes, because the method interacts with the file system, it may require permissions such as `WRITE_EXTERNAL_STORAGE` or similar depending on the location of the file.
/java/io/UnixFileSystem.java,createDirectory,Yes, this method likely requires permissions to access the file system to create a directory.
/java/io/UnixFileSystem.java,setLastModifiedTime,Yes, it likely requires permissions because it involves modifying file attributes which generally requires storage permissions in Android.
/java/io/UnixFileSystem.java,setReadOnly,Yes, this method likely requires permissions to write to the file system (to set a file as read-only).
/java/io/UnixFileSystem.java,listRoots,Yes, because it checks for read permissions on the root files, which typically requires file access permissions.
/java/io/File.java,getCanonicalFile,Yes, the method may require permissions because it involves filesystem queries, which can be restricted by security managers and may need read access to verify the canonical pathname.
/java/io/File.java,canRead,Yes, because it checks if the application can read a file, which may require read permissions.
/java/io/File.java,canWrite,Yes, because the method checks if the application has write access to a file, which may require appropriate permissions depending on the file system and Android security model.
/java/io/File.java,exists,Yes, this method may require permissions because it checks for read access to a file or directory, which can be restricted by the security manager.
/java/io/File.java,isFile,Yes, because it checks read access to a file, which may require permission.
/java/io/File.java,lastModified,Yes, because it checks for read access to the file, which requires appropriate permissions.
/java/io/File.java,length,Yes, because it requires read access to the file, which can be subject to permission checks.
/java/io/File.java,createNewFile,Yes, this method requires permissions because it checks for write access to the file path, and a `SecurityException` is thrown if permissions are denied.
/java/io/File.java,delete,Yes, because deleting files or directories typically requires write permissions on the file system.
/java/io/File.java,list,Yes, because it may require read access to the directory.
/java/io/File.java,list,Yes, this method requires permissions because it may attempt to read directory contents, which needs read access permissions.
/java/io/File.java,listFiles,Yes, this method requires permissions because it may attempt to access files in a directory, which could be restricted by the Android security model.
/java/io/File.java,listFiles,Yes, because it may require read access to the directory, which is controlled by the `SecurityManager`.
/java/io/File.java,listFiles,Yes, because it may require read access to the directory, which needs specific permissions.
/java/io/File.java,mkdir,Yes, because creating a directory may require write permissions depending on the location and context in which the method is called.
/java/io/File.java,mkdirs,Yes, this method requires permissions because it involves creating directories, which typically requires write permissions on the file system.
/java/io/File.java,renameTo,Yes, write permission is required on the directories containing both the source and destination paths.
/java/io/File.java,setLastModified,Yes, this method requires permissions because it involves writing to a file, and a security manager may deny write access if permissions are not granted.
/java/io/File.java,setReadOnly,Yes, because it involves changing file permissions, which requires write access that may be restricted by security settings.
/java/io/File.java,setWritable,Yes, because this method modifies file permissions, which requires the appropriate write access permissions.
/java/io/File.java,setWritable,Yes, because it requires write permission to change file access permissions.
/java/io/File.java,setReadable,Yes, changing file permissions requires write access, which typically requires appropriate permissions in Android.
/java/io/File.java,setReadable,Yes, because it requires permission to change file access permissions.
/java/io/File.java,setExecutable,Yes, because the method deals with file permissions which require specific user permissions to modify.
/java/io/File.java,getTotalSpace,Yes, because it checks for permissions related to file system attributes and read access.
/java/io/File.java,getFreeSpace,Yes, this method requires permissions because it can throw a `SecurityException` if the security manager denies the required permissions to access file system attributes or read access to the file.
/java/io/File.java,getUsableSpace,Yes, it requires permissions because it checks for write permissions and read access to the file.
/java/io/File.java,generateFile,Yes, because it involves file creation which typically requires permissions such as `WRITE_EXTERNAL_STORAGE` or appropriate directory permissions in Android.
/java/io/File.java,createTempFile,Yes, because it may require permission to write files to a specific directory.
/java/time/chrono/AbstractChronology.java,writeExternal,Yes, it requires permission for writing external data.
/java/time/chrono/JapaneseEra.java,writeExternal,Yes, because it involves writing data externally, which typically requires write permissions.
/java/lang/UNIXProcess.java,forkAndExec,Yes, because forking a process and executing binaries typically requires permissions related to process creation and execution in the system.
/java/lang/ProcessBuilder.java,environment,Yes, because it requires `RuntimePermission("getenv.*")` permission if a security manager is present.
/java/lang/ProcessBuilder.java,appendTo,Yes, the method requires permissions because it interacts with file storage which typically requires storage permissions in Android.
/java/lang/ProcessBuilder.java,start,Yes, the method requires permissions because it may attempt to start an operating system process, which necessitates the `checkExec` permission in a security manager context, and may also require read or write access based on input/output redirections.
/java/lang/ProcessImpl.java,start,Yes, this method requires permissions because it involves starting a process, which can potentially access system resources.
/java/lang/StackWalker.java,getInstance,Yes, this method requires permissions because it may call `checkPermission` for `RuntimePermission("getStackWalkerWithClassReference")` if the option requires class reference retention.
/java/lang/StackWalker.java,getInstance,Yes, because it checks for `RuntimePermission("getStackWalkerWithClassReference")`, requiring permission for access to this feature.
/java/lang/StackWalker.java,newInstance,Yes, this method likely requires permissions, as it involves checking permissions through the `checkPermission` method, suggesting that it interacts with system resources or features that may be restricted.
/java/lang/LiveStackFrame.java,getStackWalker,Yes, requires permission due to the potential for accessing sensitive runtime information.
/java/lang/LiveStackFrame.java,getStackWalker,Yes, it requires permissions because it throws a `SecurityException` if access to certain runtime permissions (`liveStackFrames` and `getStackWalkerWithClassReference`) is denied by the security manager.
/java/lang/reflect/AccessibleObject.java,setAccessible,Yes, because it checks for `ReflectPermission("suppressAccessChecks")`, indicating a need for specific permissions to change access flags.
/java/lang/reflect/Proxy.java,getProxyClass,Yes, it requires permissions due to access checks enforced by the SecurityManager for specific operations related to class loaders and package access.
/java/lang/reflect/Proxy.java,getProxyClass0,Yes, the method requires permissions as it mentions that you must call the `checkProxyAccess` method to perform permission checks before calling it.
/java/nio/file/Watchable.java,register,Yes, this method may require permissions to monitor a file system object, and a security manager can deny access if specific permissions are not granted.
/java/nio/file/Watchable.java,register,Yes, because it mentions a `SecurityException` that may arise if a security manager denies a permission required to monitor the object.
/java/nio/file/FileSystem.java,getRootDirectories,Yes, because it may require read access to the root directories, which would necessitate specific permissions.
/java/nio/file/FileSystem.java,getFileStores,Yes, because it requires permission to access file store attributes and read access to the file store's top-most directory.
/java/nio/file/SecureDirectoryStream.java,newDirectoryStream,Yes, this method requires permissions because it checks read access to the directory through the `SecurityManager`.
/java/nio/file/SecureDirectoryStream.java,newByteChannel,Yes, it requires permissions because it checks for read and write access to file paths.
/java/nio/file/SecureDirectoryStream.java,deleteFile,Yes, because it may require permission to delete files on the file system.
/java/nio/file/SecureDirectoryStream.java,deleteDirectory,Yes, this method requires permissions because it involves deleting a directory, which may require specific filesystem write permissions to perform the delete operation.
/java/nio/file/SecureDirectoryStream.java,move,Yes, because the method checks for write access which may require permissions to modify files in the specified directories.
/java/nio/file/Files.java,newInputStream,Yes, because it may require permission to read from the specified file system path.
/java/nio/file/Files.java,newOutputStream,Yes, because it involves writing to files, which requires write permissions.
/java/nio/file/Files.java,newByteChannel,Yes, the method may require permissions to read or write files as it involves accessing a file path.
/java/nio/file/Files.java,newDirectoryStream,Yes, because accessing a directory requires read permissions.
/java/nio/file/Files.java,newDirectoryStream,Yes, it requires permissions because it involves reading a directory, which may require read access permissions based on the system's security settings.
/java/nio/file/Files.java,newDirectoryStream,Yes, this method requires permissions because it may invoke `SecurityManager#checkRead(String)`, which checks read access to the directory.
/java/nio/file/Files.java,createFile,Yes, the method requires permissions because it involves creating a file, which may need write access to the filesystem.
/java/nio/file/Files.java,createDirectory,Yes, because it requires write access to the filesystem to create a directory.
/java/nio/file/Files.java,createDirectories,Yes, because it requires write access to the file system to create directories.
/java/nio/file/Files.java,createTempFile,Yes, it requires permissions because it needs write access to create a file in the specified directory.
/java/nio/file/Files.java,createTempFile,Yes, because it requires write access to create a file in the temporary directory.
/java/nio/file/Files.java,createTempDirectory,Yes, this method requires permissions because it checks for write access on the specified directory, which may involve file system permissions.
/java/nio/file/Files.java,createSymbolicLink,Yes, this method may require permissions due to the need for write access to the file system for creating symbolic links, and it can throw a `SecurityException` if access is denied.
/java/nio/file/Files.java,createLink,Yes, because creating a link to an existing file may require write access, which typically necessitates permissions.
/java/nio/file/Files.java,delete,Yes, because it may require delete access to the file, which could be restricted by permissions.
/java/nio/file/Files.java,deleteIfExists,Yes, because deleting a file requires permission to write or modify files in the file system.
/java/nio/file/Files.java,copy,Yes, the method requires permissions because it checks for read and write access to the source and target files.
/java/nio/file/Files.java,move,Yes, this method requires permissions because it performs file operations that may need write access to both the source and target file locations.
/java/nio/file/Files.java,readSymbolicLink,Yes, because it checks for `FilePermission` with the "readlink" action in the case of the default provider, which requires security permissions.
/java/nio/file/Files.java,getFileStore,Yes, because it checks for read access to the file and requires the "getFileStoreAttributes" runtime permission.
/java/nio/file/Files.java,isSameFile,Yes, because it may require read access to both files, which involves checking permissions.
/java/nio/file/Files.java,isHidden,Yes, it may require permission to access the file system to determine if a file is hidden.
/java/nio/file/Files.java,probeContentType,Yes, because it may require file access permissions depending on the path provided.
/java/nio/file/Files.java,readAttributes,Yes, this method requires permissions because it reads file attributes, which involves checking for read access to the file through the security manager.
/java/nio/file/Files.java,setAttribute,Yes, the method requires permissions because it can modify file attributes, which may involve write access that requires permission checks.
/java/nio/file/Files.java,getAttribute,Yes, because reading file attributes may necessitate read permissions on the file.
/java/nio/file/Files.java,readAttributes,Yes, the method may require permissions because it attempts to read file attributes, which could be restricted based on the security manager's settings and file access permissions.
/java/nio/file/Files.java,getPosixFilePermissions,Yes, it requires permissions. The method can throw a SecurityException if access to the file is denied by the security manager, specifically related to file read access.
/java/nio/file/Files.java,getOwner,Yes, the method requires permissions because it may throw a `SecurityException` if access to the file is denied by the security manager.
/java/nio/file/Files.java,setOwner,Yes, the method requires permissions because it may throw a `SecurityException` if access to user information is denied or if write access to the file is not allowed by the security manager.
/java/nio/file/Files.java,isDirectory,Yes, because it requires read access to the file, which may be denied by the security manager.
/java/nio/file/Files.java,getLastModifiedTime,Yes, because it may require read access to the file, which could need permission depending on the security manager settings.
/java/nio/file/Files.java,setLastModifiedTime,Yes, the method requires permissions because it checks write access to the file through a security manager's `checkWrite` method, indicating that write permissions are necessary to modify the file's last modified time.
/java/nio/file/Files.java,size,Yes, the method requires permissions because it performs file operations that may need read access, which is subject to security restrictions.
/java/nio/file/Files.java,exists,Yes, because it checks read access to the file, which requires permission.
/java/nio/file/Files.java,notExists,Yes, the method requires permissions because it invokes `SecurityManager#checkRead(String)` to check read access to the file, which requires read permissions.
/java/nio/file/Files.java,isAccessible,Yes, because accessing a file typically requires permissions related to reading, writing, or executing depending on the access modes being checked.
/java/nio/file/Files.java,isReadable,Yes, this method may require permissions to read file attributes based on security settings.
/java/nio/file/Files.java,isWritable,Yes, it may require permissions to check file write access.
/java/nio/file/Files.java,isExecutable,Yes, the method may require permissions to read file access permissions, which can involve checking whether the Java virtual machine has appropriate privileges to execute the file.
/java/nio/file/Files.java,walkFileTree,Yes, the method requires permissions because it attempts to read file attributes and may need access to file systems, which can be restricted by security settings.
/java/nio/file/Files.java,walkFileTree,Yes, because it may require read access to the starting file, which is checked by the security manager.
/java/nio/file/Files.java,newBufferedReader,Yes, because it reads a file, which may require read permissions to access the file system.
/java/nio/file/Files.java,newBufferedReader,Yes, due to the need for reading access to the specified file, which may require permissions.
/java/nio/file/Files.java,newBufferedWriter,Yes, requires write permissions to access the file system.
/java/nio/file/Files.java,newBufferedWriter,Yes, because writing to files requires appropriate permissions to access the file system.
/java/nio/file/Files.java,copy,Yes, because the method may perform file writing operations that require write permissions.
/java/nio/file/Files.java,copy,Yes, this method requires permissions. It may require read access to the file specified by the `source` parameter, which depends on the security manager's checks.
/java/nio/file/Files.java,readAllBytes,Yes, this method requires permissions because it attempts to read a file, which may require read access depending on the file location and security settings.
/java/nio/file/Files.java,readAllLines,Yes, because it performs file read operations which may require read permissions.
/java/nio/file/Files.java,readAllLines,Yes, because reading a file may require permissions related to file access, especially if the file is not in the app's private storage.
/java/nio/file/Files.java,write,Yes, because it requires write access to a file, which is subject to permission checks.
/java/nio/file/Files.java,write,Yes, because it requires permission to write to files on the filesystem.
/java/nio/file/Files.java,write,Yes, this method requires permissions to write to a file.
/java/nio/file/Files.java,list,Yes, because it checks for read access to the directory, which may require permissions in a secure context.
/java/nio/file/Files.java,walk,Yes, the method requires permissions because it attempts to access files on the file system, which may require read permissions.
/java/nio/file/Files.java,walk,Yes, access to the starting file may require permissions based on security settings, specifically read access.
/java/nio/file/Files.java,find,Yes, because accessing the file system requires read permissions, which is checked by the security manager.
/java/nio/file/Files.java,lines,Yes, because it checks for read access to the file.
/java/nio/file/Files.java,lines,Yes, it may require permissions to read files from storage, depending on the Android API level and the file location.
/java/nio/file/FileSystems.java,getFileSystem,Yes, the method may require permissions due to possible security checks by the provider implementation if a security manager is installed.
/java/nio/file/FileSystems.java,newFileSystem,Yes, this method may require permissions because it interacts with file systems, and certain file system operations can be restricted by security policies.
/java/nio/file/CopyMoveHelper.java,moveToForeignTarget,Yes, this method likely requires permissions because it involves file operations (copying and deleting files), which typically need storage permissions in Android.
/java/nio/file/TempFileHelper.java,create,Yes, it requires permissions to create or modify files and directories.
/java/nio/file/Path.java,toAbsolutePath,Yes, SecurityException may be thrown if a security manager is present and the path is not absolute, indicating access checks to system properties are required.
/java/nio/file/Path.java,toRealPath,Yes, this method requires permissions because it checks read access to the file through the `SecurityManager`.
/java/nio/file/Path.java,register,Yes, the method may require permissions due to the potential invocation of `SecurityManager#checkRead(String)` to check read access to the file, which implies that read permissions are needed.
/java/nio/file/Path.java,register,Yes, because it may require read access to the file being watched, which involves a security check.
/java/nio/file/attribute/UserPrincipalLookupService.java,lookupPrincipalByName,Yes, because it checks for the "lookupUserInformation" permission in the case of the default provider with a security manager installed.
/java/nio/file/attribute/UserPrincipalLookupService.java,lookupPrincipalByGroupName,Yes, this method requires permissions because it checks for `lookupUserInformation` permission in the presence of a security manager.
/java/nio/file/attribute/BasicFileAttributeView.java,readAttributes,Yes, because it checks read access to the file, which may require permissions.
/java/nio/file/attribute/BasicFileAttributeView.java,setTimes,Yes, because it checks for write access to the file, which requires appropriate permissions.
/java/nio/file/attribute/DosFileAttributeView.java,readAttributes,Yes, because it throws a SecurityException, indicating that permissions may be required to access the resource.
/java/nio/file/attribute/DosFileAttributeView.java,setReadOnly,Yes, because it may require write access to modify file attributes.
/java/nio/file/attribute/DosFileAttributeView.java,setHidden,Yes, because it may require write access to the file, which triggers a security check.
/java/nio/file/attribute/DosFileAttributeView.java,setSystem,Yes, it may require permissions as it checks write access to the file, potentially needing write permissions.
/java/nio/file/attribute/DosFileAttributeView.java,setArchive,Yes, because it may require write access to the file, which is subject to security permissions.
/java/nio/file/attribute/PosixFileAttributeView.java,setPermissions,Yes, because the method may deny permissions related to file write access and requires knowledge of user information access.
/java/nio/file/attribute/PosixFileAttributeView.java,setGroup,Yes, this method requires permissions because it may throw a `SecurityException` if the `accessUserInformation` permission is denied.
/java/nio/file/attribute/UserDefinedFileAttributeView.java,list,Yes, because it may throw a `SecurityException` if access to user-defined attributes is restricted by the security manager.
/java/nio/file/attribute/UserDefinedFileAttributeView.java,size,Yes, permission is required. It needs permission to access user-defined attributes.
/java/nio/file/attribute/UserDefinedFileAttributeView.java,read,Yes, because it checks for permissions to access user-defined attributes and may throw a `SecurityException` if permission is denied.
/java/nio/file/attribute/UserDefinedFileAttributeView.java,write,Yes, because it may require permission to write user-defined attributes and access file system.
/java/nio/file/attribute/UserDefinedFileAttributeView.java,delete,Yes, because it mentions potential denial of permission for accessing user-defined attributes.
/java/nio/file/attribute/FileOwnerAttributeView.java,getOwner,Yes, because it may require the "accessUserInformation" permission if a security manager is installed.
/java/nio/file/attribute/FileOwnerAttributeView.java,setOwner,Yes, because it requires the permission to access user information and write access to files.
/java/nio/file/attribute/AclFileAttributeView.java,getAcl,Yes, because the method may require `accessUserInformation` permission to read access control lists, as indicated by the SecurityException documentation.
/java/nio/file/attribute/AclFileAttributeView.java,setAcl,Yes, the method requires permissions. It mentions a need for write access to the file, and if a security manager is present, it may deny permissions related to user information and write access.
/java/nio/file/spi/FileSystemProvider.java,checkPermission,Yes, because it appears to check runtime permissions.
/java/nio/file/spi/FileSystemProvider.java,newFileSystem,Yes, SecurityException may occur if a security manager denies permission.
/java/nio/file/spi/FileSystemProvider.java,newInputStream,Yes, the method requires permissions because it checks for read access to the file using `SecurityManager#checkRead(String)` which requires appropriate permissions to be granted.
/java/nio/file/spi/FileSystemProvider.java,newOutputStream,Yes, this method requires permissions. It checks for write access to the file, which necessitates the appropriate permissions depending on the file system location and security settings.
/java/nio/file/spi/FileSystemProvider.java,newAsynchronousFileChannel,Yes, because it checks for read and write access permissions via SecurityManager in case of the default file system.
/java/nio/file/spi/FileSystemProvider.java,newByteChannel,Yes, because it requires permissions to read, write, or delete files as it checks access using a security manager.
/java/nio/file/spi/FileSystemProvider.java,newDirectoryStream,Yes, because it may require read permissions to access the directory.
/java/nio/file/spi/FileSystemProvider.java,createDirectory,Yes, this method may require write permissions to create a directory.
/java/nio/file/spi/FileSystemProvider.java,createLink,Yes, it requires permissions. Specifically, it may require write permissions for creating links due to potential security restrictions.
/java/nio/file/spi/FileSystemProvider.java,delete,Yes, requires permission to delete files, as it may invoke security checks for delete access.
/java/nio/file/spi/FileSystemProvider.java,deleteIfExists,Yes, this method may require permissions because it involves file deletion, which could be restricted by a security manager.
/java/nio/file/spi/FileSystemProvider.java,readSymbolicLink,Yes, because it checks for `FilePermission` with the "readlink" action, which requires permission.
/java/nio/file/spi/FileSystemProvider.java,copy,Yes, it requires permissions for read access to the source file and write access to the target file.
/java/nio/file/spi/FileSystemProvider.java,move,Yes, it requires permissions because it checks write access to the source and target file, which may require the WRITE_EXTERNAL_STORAGE permission in Android.
/java/nio/file/spi/FileSystemProvider.java,isSameFile,Yes, it may require permissions due to security checks for file access.
/java/nio/file/spi/FileSystemProvider.java,isHidden,Yes, requires permission to check read access to the file.
/java/nio/file/spi/FileSystemProvider.java,getFileStore,Yes, it requires permission due to the need for read access to the file and checking against security manager policies.
/java/nio/file/spi/FileSystemProvider.java,checkAccess,Yes, the method interacts with file system permissions which require permissions for reading, writing, or executing files.
/java/nio/file/spi/FileSystemProvider.java,readAttributes,Yes, this method requires permissions because it may throw a `SecurityException` if read access to the file is denied by the security manager.
/java/nio/file/spi/FileSystemProvider.java,setAttribute,Yes, the method requires permissions because it involves writing to a file, which may need specific write access permissions depending on the security manager's checks.
/java/nio/file/spi/FileTypeDetector.java,checkPermission,Yes, this method likely requires permissions because it involves checking for security permissions through a `SecurityManager` and potentially dealing with runtime permissions.
/java/nio/file/spi/FileTypeDetector.java,probeContentType,Yes, because the method may require permission to access the file, as indicated by the `SecurityException` in the javadoc.
/java/nio/charset/spi/CharsetProvider.java,checkPermission,Yes, this method checks for permissions, which typically requires appropriate permissions to be specified in the application's manifest.
/java/nio/channels/NetworkChannel.java,bind,Yes, because it may require permissions related to network access and binding sockets, which a security manager may restrict.
/java/nio/channels/AsynchronousFileChannel.java,open,Yes, this method requires permissions. It checks for read and write access to the file, which mandates the appropriate permissions in the Android environment.
/java/nio/channels/AsynchronousFileChannel.java,write,Yes, writing to a file requires permissions to access storage.
/java/nio/channels/MulticastChannel.java,join,Yes, the method requires permissions because joining a multicast group may need network-related permissions, especially if a security manager is in place that checks for multicast access.
/java/nio/channels/MulticastChannel.java,join,Yes, because joining a multicast group typically requires network permissions to access network interfaces and transmit data.
/java/nio/channels/FileChannel.java,open,Yes, it requires permissions because it involves accessing files, which may require read and/or write permissions based on the options specified.
/java/nio/channels/FileChannel.java,open,Yes, this method requires permissions because it involves reading from or writing to a file, which typically requires `READ_EXTERNAL_STORAGE` or `WRITE_EXTERNAL_STORAGE` permissions in Android.
/java/nio/channels/FileChannel.java,write,Yes, because writing to a file may require storage permissions.
/java/nio/channels/DatagramChannel.java,bind,Yes, the method may require permissions due to the potential security manager denial when trying to bind to a socket address.
/java/nio/channels/DatagramChannel.java,connect,Yes, it requires permissions because it involves network operations which may be restricted by the security manager and require appropriate permissions for connecting to remote addresses.
/java/nio/channels/DatagramChannel.java,receive,Yes, it requires permissions because it may involve security checks on network datagrams, which are subject to security manager permissions.
/java/nio/channels/DatagramChannel.java,send,Yes, this method requires permissions because it involves sending datagrams, which may be restricted by a security manager's permissions.
/java/nio/channels/ServerSocketChannel.java,bind,Yes, this method requires permissions because it may attempt to bind a socket to a local address, which typically requires network permissions.
/java/nio/channels/ServerSocketChannel.java,bind,Yes, the method may require permissions due to the potential need for network access and binding to local addresses, which can be restricted by a security manager.
/java/nio/channels/ServerSocketChannel.java,accept,Yes, because it involves accepting network connections, which requires network permissions.
/java/nio/channels/AsynchronousSocketChannel.java,bind,Yes, because it may require permission to bind to a specific network address, which involves security checks.
/java/nio/channels/AsynchronousSocketChannel.java,connect,Yes, because it performs security checks similar to the `java.net.Socket` class, which may require permission to connect to remote addresses.
/java/nio/channels/SocketChannel.java,connect,Yes, the method requires permissions due to security checks related to connecting to a remote address and port.
/java/nio/channels/AsynchronousServerSocketChannel.java,open,Yes, this method requires permissions because it involves opening a server socket, which typically requires network permissions in Android to accept incoming connections.
/java/nio/channels/AsynchronousServerSocketChannel.java,bind,Yes, it may require permissions due to the potential need to listen for network connections, which could be restricted by the security manager.
/java/nio/channels/spi/AsynchronousChannelProvider.java,checkPermission,Yes, the method likely checks permissions using a SecurityManager, which generally requires permission checks in Android.
/java/nio/channels/spi/SelectorProvider.java,checkPermission,Yes, this method checks for permissions, specifically related to security management, which typically requires permissions in Android applications.
/java/nio/channels/spi/SelectorProvider.java,openServerSocketChannel,Yes, this method requires permissions related to network access, as it deals with opening a server-socket channel.
/java/nio/channels/spi/SelectorProvider.java,inheritedChannel,Yes, because it can throw a `SecurityException` if a security manager denies `RuntimePermission("inheritedChannel")`.
/java/sql/DriverManager.java,setLogWriter,Yes, because it checks for `SQLPermission` to set the logging stream.
/java/sql/DriverManager.java,setLogStream,Yes, it requires permissions because it checks for `SQLPermission` before setting the log stream.
/jsr166/ExecutorsTest.java,haveCCLPermissions,Yes, this method requires permissions because it checks permissions using a `SecurityManager`, which typically involves runtime permissions in Android.
/jsr166/ExecutorsTest.java,checkCCL,Yes, because the method involves checking permissions via a `SecurityManager`.
/jsr166/ExecutorsTest.java,testPrivilegedCallableWithNoPrivs,Yes, the method indicates that calling `privilegedCallable` without permissions will throw an Access Control Exception (ACE).
/jsr166/ExecutorsTest.java,testPrivilegedCallableWithPrivs,Yes, the method involves calling a privileged operation which indicates that certain permissions are required to execute it successfully.
/jsr166/AbstractExecutorServiceTest.java,testSubmitPrivilegedAction,Yes, the method seems to involve privileged actions and permissions related to runtime contexts or threading, which typically require specific permissions.
/jsr166/AbstractExecutorServiceTest.java,testSubmitPrivilegedExceptionAction,Yes, this method likely requires permissions as it involves executing actions that may access privileged resources or perform sensitive operations.
/javax/crypto/CryptoPermissions.java,add,Yes, it requires permission related to the 'Permission' parameter.
/javax/net/SocketFactory.java,createSocket,Yes, because it may require permission to connect to a network host, which is controlled by the security manager.
/javax/net/SocketFactory.java,createSocket,Yes, because it involves network operations which typically require internet permissions.
/javax/net/SocketFactory.java,createSocket,Yes, because it may require network permissions to connect to a host.
/javax/net/SocketFactory.java,createSocket,Yes, it may require permissions to establish network connections and the presence of a security manager could lead to a SecurityException.
/javax/net/SocketFactory.java,createSocket,Yes, accessing network sockets requires Internet permissions in Android.
/javax/net/SocketFactory.java,createSocket,Yes, this method requires permissions because creating a socket may involve network access, which typically requires the INTERNET permission in Android.
/javax/net/SocketFactory.java,createSocket,Yes, this method requires permissions because it involves network operations through creating a socket, which typically necessitates internet permissions in Android.
/javax/net/ServerSocketFactory.java,createServerSocket,Yes, the method requires permissions because it involves listening on a specified port, which could be restricted by the security manager's policies.
/javax/net/ServerSocketFactory.java,createServerSocket,Yes, requires permission to open network sockets.
/javax/net/ServerSocketFactory.java,createServerSocket,Yes, creating a server socket typically requires network permissions, such as `INTERNET` in Android.
/javax/net/ServerSocketFactory.java,createServerSocket,Yes, this method requires permissions because it involves network operations, specifically creating server sockets, which typically requires network-related permissions in Android.
/javax/net/ssl/SSLServerSocketFactory.java,createServerSocket,Yes, the method likely requires permissions to open a socket on a specified port, which could involve network-related permissions.
/javax/net/ssl/SSLServerSocketFactory.java,createServerSocket,Yes, this method requires permissions. It involves creating a server socket which typically requires network permissions in Android.
/javax/net/ssl/SSLServerSocketFactory.java,createServerSocket,Yes, the method involves creating a server socket, which requires network permissions.
/javax/net/ssl/SSLContext.java,setDefault,Yes, because the method checks for `SSLPermission("setDefaultSSLContext")`.
/javax/net/ssl/HttpsURLConnection.java,setDefaultHostnameVerifier,Yes, it requires permissions. The method checks for `SSLPermission("setHostnameVerifier")` which indicates that permission is needed to set the hostname verifier.
/javax/net/ssl/SSLSession.java,getSessionContext,Yes, requires SSLPermission to access the session context.
/javax/net/ssl/SSLSocketFactory.java,createSocket,Yes, this method likely requires permissions related to network operations.
/javax/net/ssl/SSLSocketFactory.java,createSocket,Yes, this method likely requires network permissions as it involves creating a socket connection.
/javax/net/ssl/SSLSocketFactory.java,createSocket,Yes, because creating a socket typically requires network permissions in Android.
/javax/security/auth/Destroyable.java,destroy,Yes, the method requires permission because it can throw a `SecurityException` if the caller does not have permission to destroy the object.
/benchmarks/regression/ByteBufferBulkBenchmark.java,newBuffer,Yes, it requires permissions because it involves file operations such as creating temporary files and potentially accessing file channels.
/android/multiuser/BroadcastWaiter.java,close,Yes, because the method unregisters a broadcast receiver, which requires the appropriate permissions to receive broadcasts.
/android/se/omapi/Session.java,openBasicChannel,Yes, the method requires permissions because it involves accessing secure elements or applets which typically requires specific permissions set in AndroidManifest.xml, such as `android.permission.READ_EXTERNAL_STORAGE` or similar permissions related to secure element access.
/android/se/omapi/Session.java,openBasicChannel,Yes, this method requires permissions. Specifically, it needs permission to access the Secure Element and the specified AID, as indicated by the potential `SecurityException` if access cannot be granted.
/android/se/omapi/Session.java,openLogicalChannel,Yes, because the calling application requires access to the Secure Element associated with the specified AID, which implies a level of permission for secure operations.
/android/se/omapi/Session.java,openLogicalChannel,Yes, the method may require permissions to access the Secure Element and specific Applets identified by the AID.
/android/se/omapi/SEService.java,getReader,Yes, the method interacts with the SecureElementService, which typically requires specific permissions related to secure elements or NFC operations in Android.
/android/power/PowerStatsInternal.java,getEnergyConsumedAsync,Yes, it likely requires permissions to access energy consumption data.
/android/drm/DrmManagerClient.java,getConstraints,Yes, this method likely requires permissions to access DRM-protected content.
/android/drm/DrmManagerClient.java,getConstraints,Yes, this method likely requires permissions because it retrieves constraint information from rights-protected content, which typically involves accessing secured data that may require specific permissions to access.
/android/drm/DrmManagerClient.java,saveRights,Yes, the method requires permissions because it involves saving files to specified paths, which typically requires storage permissions in Android applications.
/android/drm/DrmManagerClient.java,acquireRights,Yes, this method likely requires permissions because it processes DRM (Digital Rights Management) information, which often involves accessing protected content that typically necessitates specific permissions to ensure security and privacy.
/android/drm/DrmManagerClient.java,removeRights,Yes, because it likely involves accessing content identified by a URI, which may require permissions to read or modify such data.
/android/drm/DrmManagerClient.java,convertUriToPath,Yes, this method requires permissions because it accesses media content, which typically requires permissions such as `READ_EXTERNAL_STORAGE` or `ACCESS_MEDIA_LOCATION` in Android.
/android/drm/DrmOutputStream.java,write,Yes, because writing data typically requires permissions related to file access or network access, depending on the context in which this method is used.
/android/drm/DrmUtils.java,readBytes,Yes, accessing files requires permissions, specifically for reading storage in Android.
/android/drm/DrmUtils.java,readBytes,Yes, this method requires permissions because it reads bytes from a file, which typically involves accessing storage permissions in Android.
/android/drm/DrmUtils.java,writeToFile,Yes, this method requires permissions because it involves writing to a file, which typically requires storage permissions in Android.
/android/database/CrossProcessCursorPerfTest.java,time,Yes, because it interacts with a ContentProvider, which requires appropriate permissions to access and manipulate data.
/android/database/AbstractCursor.java,registerContentObserver,Yes, because registering a content observer typically requires permission to access the content it observes.
/android/database/SQLiteDatabasePerfTest.java,createOrOpenTestDatabase,Yes, this method requires permissions because it interacts with a database, which typically requires permission to read and write to the device's storage in Android.
/android/database/SQLiteDatabasePerfTest.java,doReadLoop,Yes, because the method appears to access a database (using a Cursor and rawQuery), which typically requires permissions for database access in Android.
/android/database/SQLiteDatabasePerfTest.java,doUpdateLoop,Yes, this method likely requires permissions because it interacts with a database and performs update operations, which typically necessitate the `WRITE_EXTERNAL_STORAGE` or database-related permissions in Android.
/android/database/SQLiteDatabasePerfTest.java,insertT1TestDataSet,Yes, this method requires permissions. It interacts with a database (insert operation), which typically requires write permissions in Android (e.g., `WRITE_EXTERNAL_STORAGE` or database permissions).
/android/database/SQLiteDatabaseIoPerfTest.java,setUp,Yes, the method requires permissions. It interacts with the database and may require permissions related to storage or database access.
/android/database/SQLiteDatabaseIoPerfTest.java,getIoStats,Yes, this method requires permissions because it accesses the file system, specifically reading from `/proc/self/io`, which typically requires appropriate permissions to read system files in Android.
/android/database/MergeCursor.java,registerContentObserver,Yes, this method typically requires permissions because registering a `ContentObserver` may involve accessing sensitive data or system resources that require explicit permissions from the user, such as accessing contacts, calls, or other content providers.
/android/database/sqlite/SqliteWrapper.java,query,Yes, because querying data from content providers typically requires permissions, such as READ_EXTERNAL_STORAGE or specific permissions defined by the content provider.
/android/database/sqlite/SqliteWrapper.java,update,Yes, the method likely requires permissions to access or modify a database through the ContentResolver and Uri parameters.
/android/database/sqlite/SqliteWrapper.java,delete,Yes, the method likely requires permissions to access the content provider associated with the given `Uri`.
/android/database/sqlite/SqliteWrapper.java,insert,Yes, because inserting data into a ContentProvider typically requires specific permissions defined in the AndroidManifest.xml, depending on the URI used.
/android/database/sqlite/SQLiteConnection.java,open,Yes, this method likely requires permissions to access files or directories, as it involves checking if a file exists and whether it is readable.
/android/database/sqlite/SQLiteOpenHelper.java,setFilePermissionsForDb,Yes, because it involves setting file permissions which may require specific filesystem access permissions.
/android/startop/test/DexBuilderTest.java,loadDexFile,Yes, this method requires permissions because it accesses and loads a file from the filesystem, which typically requires storage permissions in Android.
/android/webkit/GeolocationPermissions.java,invoke,Yes, this method manages Geolocation permission, which requires specific permissions to access location data.
/android/webkit/GeolocationPermissions.java,clear,Yes, it involves geolocation permissions.
/android/webkit/GeolocationPermissions.java,clearAll,Yes, because it clears the Geolocation permission state, which typically requires specific permissions to modify.
/android/webkit/WebViewUpdateService.java,getValidWebViewPackages,Yes, because the method interacts with webview providers, which may require permissions to access specific aspects of web content or services.
/android/webkit/WebChromeClient.java,onGeolocationPermissionsShowPrompt,Yes, it requires permissions because it involves accessing the Geolocation API, which necessitates user permission for location data.
/android/webkit/WebChromeClient.java,onPermissionRequest,Yes, this method involves requesting permission for web content access, which implies the need for permissions.
/android/webkit/UserPackage.java,getPackageInfosAllUsers,Yes, this method requires permissions. It interacts with user and package information, likely necessitating permissions related to accessing user data and package management on the device.
/android/webkit/UserPackage.java,getAllUsers,Yes, it requires permissions because accessing user information typically requires specific permissions in Android, such as `READ_CONTACTS` or similar.
/android/attention/AttentionManagerInternal.java,onStartProximityUpdates,Yes, this method likely requires permissions because it involves requesting continuous updates for a proximity signal, which typically relates to accessing device sensors or location services, both of which may require specific permissions in Android.
/android/printservice/PrinterDiscoverySession.java,startPrinterDiscovery,Yes, this method likely requires permissions. It appears to initiate a printer discovery process, which typically requires permissions related to accessing connected devices, such as USB or network permissions, to discover printers.
/android/printservice/PrintDocument.java,getData,Yes, this method requires permissions because it accesses document data, which generally requires permission to read files in the context of an Android application.
/android/hardware/ConsumerIrManager.java,transmit,Yes, this method likely requires permissions because it transmits an infrared pattern, which could involve accessing hardware features that typically require specific permissions in Android applications.
/android/hardware/SensorDirectChannel.java,configure,Yes, because accessing sensor data typically requires permissions such as `android.permission.BODY_SENSORS` or `android.permission.ACCESS_FINE_LOCATION`, depending on the sensor type.
/android/hardware/SensorManager.java,getDefaultSensor,Yes, the method requires permissions to access certain sensors.
/android/hardware/SensorManager.java,getDefaultSensor,Yes, the method may require permissions to access certain sensors in the application.
/android/hardware/SensorManager.java,registerListener,Yes, it requires permissions because accessing sensors typically requires device permissions related to hardware sensors.
/android/hardware/SensorManager.java,registerListener,Yes, because registering for sensor data may require permissions depending on the type of sensor being accessed (e.g., body sensors may require specific permissions).
/android/hardware/SensorManager.java,registerListener,Yes, because accessing sensor data may require specific permissions in the Android manifest, such as `android.permission.BODY_SENSORS` or similar depending on the type of sensors being accessed.
/android/hardware/SensorManager.java,getRotationMatrix,Yes, because it uses sensor data from the device which typically requires permissions like ACCESS_FINE_LOCATION or BODY_SENSORS.
/android/hardware/SensorManager.java,requestTriggerSensor,Yes, because it likely requires permissions to access the trigger sensor hardware on the device.
/android/hardware/LegacySensorManager.java,registerListener,Yes, this method requires permissions to access sensors in Android.
/android/hardware/LegacySensorManager.java,registerLegacyListener,Yes, this method requires permissions because it involves sensor operations, which typically require specific permissions in Android (like `BODY_SENSORS` or `ACCESS_FINE_LOCATION` depending on the sensor used).
/android/hardware/Sensor.java,getHighestDirectReportRateLevel,Yes, the method requires permission to access high-sampling rate sensors.
/android/hardware/Sensor.java,getMinDelay,Yes, this method requires permissions because it mentions the need for the {@link android.Manifest.permission#HIGH_SAMPLING_RATE_SENSORS} permission to obtain a lower minimum delay.
/android/hardware/Sensor.java,getRequiredPermission,Yes, it indicates that some sensors require specific permissions to access, as mentioned in the method's documentation.
/android/hardware/soundtrigger/SoundTriggerModule.java,loadSoundModel,Yes, because the method explicitly mentions a return status indicating "STATUS_PERMISSION_DENIED" if the caller does not have system permission.
/android/hardware/soundtrigger/SoundTriggerModule.java,unloadSoundModel,Yes, the method requires system permissions to unload a sound model, as indicated by the potential return status of `STATUS_PERMISSION_DENIED` if the caller lacks the necessary permission.
/android/hardware/soundtrigger/SoundTriggerModule.java,startRecognition,Yes, this method requires system permissions to operate, as indicated by the possible return value `STATUS_PERMISSION_DENIED`.
/android/hardware/soundtrigger/SoundTriggerModule.java,stopRecognition,Yes, the method requires system permissions, as indicated by the potential return status of `STATUS_PERMISSION_DENIED` if the caller does not have the necessary permissions.
/android/hardware/soundtrigger/SoundTriggerModule.java,getModelState,Yes, it requires permissions because it mentions STATUS_PERMISSION_DENIED if the caller does not have system permission.
/android/hardware/radio/TunerAdapter.java,setConfiguration,Yes, it likely requires permissions because it deals with setting configurations for radio services, which typically requires specific permissions related to modifying system settings or accessing hardware.
/android/hardware/radio/TunerAdapter.java,getConfiguration,Yes, this method likely requires permissions because it interacts with the `RadioManager`, which typically involves actions that need specific permissions related to device settings or services.
/android/hardware/radio/TunerAdapter.java,tune,Yes, because tuning a radio typically requires permissions related to accessing hardware like the radio tuner in an Android application.
/android/hardware/input/InputDeviceVibratorManager.java,vibrate,Yes, because the method likely requires permissions to access device vibration features.
/android/hardware/input/InputDeviceVibrator.java,addVibratorStateListener,Yes, because it involves listening to vibrator state changes, which may require the `VIBRATE` permission to access the vibrator hardware.
/android/hardware/input/InputDeviceVibrator.java,vibrate,Yes, this method likely requires permission because it interacts with device hardware (vibration), which typically requires user consent or permissions in Android.
/android/hardware/location/GeofenceHardwareRequest.java,createCircularGeofence,Yes, this method likely requires permissions for accessing location services to create a geofence.
/android/hardware/location/NanoAppState.java,getNanoAppPermissions,Yes, this method returns a list of permissions required to communicate with a nanoapp, indicating that it requires permissions.
/android/hardware/location/GeofenceHardwareMonitorEvent.java,getLocation,Yes, because accessing the last known location typically requires location permissions.
/android/hardware/location/GeofenceHardware.java,getMonitoringTypes,Yes, requires {@link android.Manifest.permission#LOCATION_HARDWARE} permission to access geofencing in hardware.
/android/hardware/location/GeofenceHardware.java,addGeofence,Yes, because it requires `ACCESS_FINE_LOCATION` and `LOCATION_HARDWARE` permissions to monitor geofences.
/android/hardware/location/GeofenceHardware.java,removeGeofence,Yes, requires ACCESS_FINE_LOCATION and LOCATION_HARDWARE permissions for geofencing operations.
/android/hardware/location/GeofenceHardware.java,pauseGeofence,Yes, it requires permissions due to location services involved in geofencing.
/android/hardware/location/GeofenceHardware.java,resumeGeofence,Yes, requires `ACCESS_FINE_LOCATION` and `LOCATION_HARDWARE` permissions for geofencing.
/android/hardware/location/GeofenceHardware.java,registerForMonitorStateChangeCallback,Yes, requires permissions for accessing location and geofencing hardware.
/android/hardware/location/GeofenceHardware.java,unregisterForMonitorStateChangeCallback,Yes, Requires location permissions for hardware geofence monitoring.
/android/hardware/location/GeofenceHardwareImpl.java,acquireWakeLock,Yes, this method requires permissions. Specifically, acquiring a wake lock typically requires the `WAKE_LOCK` permission in Android to prevent the device from going to sleep.
/android/hardware/location/GeofenceHardwareImpl.java,addCircularFence,Yes, this method requires permissions because it involves adding geofences, which typically requires location-related permissions in Android (e.g., ACCESS_FINE_LOCATION or ACCESS_COARSE_LOCATION).
/android/hardware/location/GeofenceHardwareImpl.java,removeGeofence,Yes, this method likely requires permissions related to location services since it involves managing geofences, which typically requires access to location data.
/android/hardware/location/GeofenceHardwareImpl.java,pauseGeofence,Yes, this method requires permissions related to location services (e.g., ACCESS_FINE_LOCATION or ACCESS_COARSE_LOCATION in Android) because it interacts with geofencing, which typically relies on GPS or network location data.
/android/hardware/location/GeofenceHardwareImpl.java,resumeGeofence,Yes, this method likely requires permissions related to location services, as it involves geofencing which typically requires location access permissions in Android (ACCESS_FINE_LOCATION or ACCESS_COARSE_LOCATION).
/android/hardware/location/GeofenceHardwareImpl.java,reportGeofenceTransition,Yes, the method involves geolocation functionalities that typically require permissions such as ACCESS_FINE_LOCATION or ACCESS_COARSE_LOCATION.
/android/hardware/location/GeofenceHardwareImpl.java,getAllowedResolutionLevel,Yes, because the method checks for permissions related to location (ACCESS_FINE_LOCATION and ACCESS_COARSE_LOCATION).
/android/hardware/location/ActivityChangedEvent.java,getActivityRecognitionEvents,Yes, because accessing activity recognition events typically requires permissions related to user activity or location.
/android/hardware/hdmi/HdmiSwitchClient.java,selectPort,Yes, it likely requires permissions to interact with hardware resources such as HDMI ports.
/android/hardware/hdmi/HdmiTvClient.java,setSystemAudioVolume,Yes, this method requires permission to modify system audio settings.
/android/hardware/hdmi/HdmiTvClient.java,setSystemAudioMute,Yes, it likely requires permissions because it involves changing system settings, specifically the audio mute status, which generally necessitates modifying system audio settings.
/android/hardware/hdmi/HdmiTvClient.java,sendStandby,Yes, because sending commands to another device typically requires permissions such as access to network or device management features.
/android/hardware/hdmi/HdmiTvClient.java,startOneTouchRecord,Yes, this method likely requires permissions to access recording capabilities and potentially interacting with external devices, as it involves starting a recording through the `HdmiTvClient`.
/android/hardware/hdmi/HdmiTvClient.java,stopOneTouchRecord,Yes, this method likely requires permissions related to audio recording, as it involves stopping a recording process.
/android/hardware/hdmi/HdmiTvClient.java,startTimerRecording,Yes, the method likely requires permissions because it interacts with external recording devices which may require specific user permissions to access or control.
/android/hardware/hdmi/HdmiControlServiceWrapper.java,setSystemAudioVolume,Yes, likely requires permission to modify system audio settings.
/android/hardware/hdmi/HdmiControlServiceWrapper.java,powerOffRemoteDevice,Yes, this method likely requires permissions to control hardware devices remotely, as it involves powering off a remote device, which could impact user experience or device functionality.
/android/hardware/hdmi/HdmiControlServiceWrapper.java,startOneTouchRecord,Yes, this method likely requires permissions to access hardware resources for recording.
/android/hardware/hdmi/HdmiControlServiceWrapper.java,powerOffRemoteDevice,Yes, this method likely requires permissions because it deals with power management, which typically involves sensitive operations that could affect device functionality.
/android/hardware/hdmi/HdmiAudioSystemClient.java,setSystemAudioMode,Yes, this method likely requires permissions to modify system audio settings.
/android/hardware/usb/UsbDevice.java,getSerialNumber,Yes, it requires permission to read from the device, especially for apps targeting SDK >= Q.
/android/hardware/usb/UsbDevice.java,getDeviceId,Yes, it likely requires permission to access device identification data.
/android/hardware/usb/UsbDevice.java,build,Yes, it likely requires permissions related to USB access.
/android/hardware/usb/UsbAccessory.java,getSerial,Yes, the method requires permission to read from the accessory when targeting SDK >= Q.
/android/hardware/usb/UsbRequest.java,queue,Yes, the method interacts with USB devices, which typically requires permission for USB access in Android.
/android/hardware/usb/UsbRequest.java,queueIfConnectionOpen,Yes, this method requires permissions, specifically to access USB devices and manipulate their connections.
/android/hardware/usb/UsbRequest.java,queue,Yes, this method likely requires USB permissions to access the endpoint for data transfer.
/android/hardware/display/DisplayManagerInternal.java,userScreenshot,Yes, taking a screenshot in Android typically requires permissions (like `WRITE_EXTERNAL_STORAGE` or `READ_EXTERNAL_STORAGE`) depending on where the screenshot is saved.
/android/hardware/display/DisplayManagerInternal.java,setWindowManagerMirroring,Yes, it requires permissions because it involves updating display properties related to window management, potentially affecting user privacy and system behavior.
/android/hardware/display/AmbientDisplayConfiguration.java,disableDozeSettings,Yes, this method likely requires permissions as it relates to modifying Doze settings, which usually necessitates higher privileges in Android.
/android/hardware/display/AmbientDisplayConfiguration.java,disableDozeSettings,Yes, this method likely requires permissions as it deals with system settings related to Doze mode, which may require specific privileges to modify.
/android/hardware/display/AmbientDisplayConfiguration.java,putDozeSetting,Yes, this method likely requires permissions because it interacts with `Settings.Secure`, which generally involves modifying system settings that require appropriate permissions (e.g., WRITE_SETTINGS).
/android/hardware/display/WifiDisplay.java,getDeviceAddress,Yes, it requires permissions because accessing the MAC address may involve accessing device or network state information, which typically requires permissions related to networking.
/android/hardware/display/VirtualDisplay.java,setDisplayState,Yes, this method likely requires permissions related to display management, such as changing virtual display states.
/android/hardware/display/NightDisplayListener.java,onChange,Yes, this method requires permissions as it accesses secure settings related to night display features, which typically require permissions to read or modify user settings.
/android/hardware/display/NightDisplayListener.java,setCallbackInternal,Yes, because it registers a content observer which typically requires permissions to access secure settings in Android (e.g., READ_SECURE_SETTINGS).
/android/hardware/lights/LightsManager.java,openSession,Yes, because controlling device lights typically requires specific permissions related to managing system resources.
/android/hardware/camera2/DngCreator.java,writeInputStream,Yes, the method likely requires permissions related to file write access, as it involves writing pixel data to a DNG file, which typically requires storage access permissions.
/android/hardware/camera2/DngCreator.java,writeByteBuffer,Yes, this method requires permissions to write a DNG file, typically involving storage permissions.
/android/hardware/camera2/CameraConstrainedHighSpeedCaptureSession.java,createHighSpeedRequestList,Yes, this method requires permissions because it interacts with the camera hardware for high speed video capture, which typically requires CAMERA permissions.
/android/hardware/camera2/CameraExtensionSession.java,getDevice,Yes, because accessing the camera device typically requires camera permissions in Android.
/android/hardware/camera2/CameraExtensionSession.java,capture,Yes, this method requires permissions. It interacts with the camera device, which necessitates camera permissions (`CAMERA`) inAndroid.
/android/hardware/camera2/CameraExtensionSession.java,setRepeatingRequest,Yes, this method requires permissions. It involves accessing the camera, which typically requires camera permissions in Android.
/android/hardware/camera2/CameraExtensionCharacteristics.java,connectToProxyLocked,Yes, this method likely requires permissions because it involves connecting to a service, which typically requires permissions in Android (e.g., binding to services). Additionally, there are references to system properties that may also necessitate specific permissions.
/android/hardware/camera2/CameraExtensionCharacteristics.java,isExtensionSupported,Yes, the method is related to camera extensions and may require permissions to access camera functionalities.
/android/hardware/camera2/CameraExtensionCharacteristics.java,getPostviewSupportedSizes,Yes, this method requires permissions because it interacts with camera hardware and retrieves postview sizes, which typically necessitates camera permissions in Android.
/android/hardware/camera2/CameraExtensionCharacteristics.java,getExtensionSupportedSizes,Yes, the method likely requires permissions related to camera access (e.g., CAMERA permission) to check and interact with camera extensions.
/android/hardware/camera2/CameraExtensionCharacteristics.java,getAvailableCaptureRequestKeys,Yes, this method requires permissions because it interacts with the camera to retrieve supported keys, which typically requires camera access permissions in Android.
/android/hardware/camera2/CameraDevice.java,createCaptureSessionByOutputConfigurations,Yes, requires camera permissions to access and use the camera device.
/android/hardware/camera2/CameraDevice.java,createReprocessableCaptureSession,Yes, camera access requires permissions.
/android/hardware/camera2/CameraDevice.java,createReprocessableCaptureSessionByConfigurations,Yes, because accessing the camera requires the CAMERA permission in Android.
/android/hardware/camera2/CameraDevice.java,createConstrainedHighSpeedCaptureSession,Yes, because this method involves accessing and controlling the camera hardware, which requires camera permissions.
/android/hardware/camera2/CameraDevice.java,createExtensionSession,Yes, this method likely requires camera permissions to access the camera hardware and utilize its features for capturing images and video.
/android/hardware/camera2/CameraDevice.java,createCustomCaptureSession,Yes, this method likely requires camera permissions to access the camera hardware for creating a capture session.
/android/hardware/camera2/CameraDevice.java,createCaptureSession,Yes, the method requires permissions because it involves accessing and using the device's camera hardware, which typically requires CAMERA permission in Android.
/android/hardware/camera2/CameraDevice.java,createCaptureRequest,Yes, requires CAMERA permission for accessing camera features.
/android/hardware/camera2/CameraDevice.java,getCameraAudioRestriction,Yes, this method requires permission because it deals with camera audio settings, which generally require camera-related permissions to access.
/android/hardware/camera2/impl/CameraInjectionSessionImpl.java,setRemoteInjectionSession,Yes, it likely requires permissions. The method interacts with a remote camera injection session, which typically involves hardware access or communication with system services that may need specific permissions related to camera usage.
/android/hardware/camera2/impl/CameraDeviceImpl.java,setRemoteDevice,Yes, this method likely requires camera permissions to access and operate on the camera device.
/android/hardware/camera2/impl/CameraDeviceImpl.java,configureStreamsChecked,Yes, this method likely requires permissions related to camera access, as it involves configuring input and output streams for a camera device.
/android/hardware/camera2/impl/CameraDeviceImpl.java,createCaptureSession,Yes, the method likely requires permissions to access the camera hardware.
/android/hardware/camera2/impl/CameraDeviceImpl.java,createCaptureSessionByOutputConfigurations,Yes, this method likely requires permissions related to camera usage, as it deals with capturing camera output configurations.
/android/hardware/camera2/impl/CameraDeviceImpl.java,createReprocessableCaptureSession,Yes, this method likely requires camera permissions to access and configure the camera hardware for capturing sessions.
/android/hardware/camera2/impl/CameraDeviceImpl.java,createConstrainedHighSpeedCaptureSession,Yes, because creating a capture session generally requires camera permissions to access the device's camera hardware.
/android/hardware/camera2/impl/CameraDeviceImpl.java,createCaptureSessionInternal,Yes, this method requires permissions because it involves camera functionalities which typically require camera access permissions in Android.
/android/hardware/camera2/impl/CameraDeviceImpl.java,createCaptureRequest,Yes, this method likely requires permissions as it involves camera operations. Specifically, accessing or creating a capture request is associated with camera functionality, which typically requires camera permissions in Android.
/android/hardware/camera2/impl/CameraDeviceImpl.java,createCaptureRequest,Yes, this method likely requires permissions because it interacts with the camera hardware, which typically requires camera permissions in Android.
/android/hardware/camera2/impl/CameraDeviceImpl.java,getCameraAudioRestriction,Yes, this method likely requires permissions related to camera access, as it involves checking camera status and interacting with audio restrictions for the camera.
/android/hardware/camera2/impl/CameraDeviceImpl.java,createExtensionSession,Yes, this method likely requires camera permissions to access and create camera extension sessions.
/android/net/SntpClient.java,requestTime,Yes, this method requires permissions because it involves network operations.
/android/net/SntpClient.java,requestTime,Yes, the method requires permissions to access the network and perform socket operations.
/android/net/NetworkKey.java,createFromScanResult,Yes, access to Wi-Fi related functionalities typically requires permissions such as `ACCESS_WIFI_STATE` and `CHANGE_WIFI_STATE`.
/android/net/NetworkKey.java,createFromWifiInfo,Yes, this method likely requires permissions because it interacts with the device's Wi-Fi information, which typically requires location permissions in Android to access. Specifically, you need to request permissions like `ACCESS_FINE_LOCATION` or `ACCESS_COARSE_LOCATION` to retrieve Wi-Fi network details.
/android/net/NetworkStackClient.java,checkCallerUid,Yes, this method checks the UID of the caller against specific system UIDs, indicating it likely needs permissions related to accessing system-level services.
/android/net/NetworkStackClient.java,makeDhcpServer,Yes, this method likely requires permissions because it involves creating a DHCP server, which typically necessitates access to networking features or settings.
/android/net/NetworkStackClient.java,start,Yes, because starting the network stack may require permissions related to network management.
/android/net/ConnectivityModuleConnector.java,getModuleServiceIntent,Yes, this method may require permissions because it involves checking module service permissions and retrieving a service intent.
/android/net/ConnectivityModuleConnector.java,startModuleService,Yes, the method requires permissions because it involves starting a networking module, which typically necessitates specific permissions related to network operations.
/android/net/ConnectivityModuleConnector.java,checkModuleServicePermission,Yes, because the method checks for a service permission, which implies that it requires permission management.
/android/net/NetworkFactoryLegacyImpl.java,evalRequest,Yes, because the method appears to involve network requests, which typically require network-related permissions in Android (like `ACCESS_NETWORK_STATE` or `INTERNET`).
/android/net/NetworkStack.java,checkNetworkStackPermission,Yes, it requires permissions related to the NetworkStack.
/android/net/NetworkStack.java,checkNetworkStackPermissionOr,Yes, requires permissions to enforce NetworkStack-related security.
/android/net/Uri.java,getCanonicalUri,Yes, the method interacts with file paths, which may require permissions to access external storage.
/android/net/NetworkRecommendationProvider.java,requestScores,Yes, this method likely requires permissions as it includes a call to `enforceCallingPermission`, which typically checks for the necessary permissions before executing certain actions.
/android/net/NetworkRecommendationProvider.java,enforceCallingPermission,Yes, because it involves checking permissions related to making requests, typically requiring access control.
/android/net/wifi/WifiMigration.java,convertAndRetrieveSharedConfigStoreFile,Yes, because accessing shared Wi-Fi configuration files typically requires permissions related to the network, such as `ACCESS_WIFI_STATE` or `CHANGE_WIFI_STATE`.
/android/net/wifi/WifiMigration.java,convertAndRetrieveUserConfigStoreFile,Yes, the method requires permissions to access legacy user wifi config store files, which are subject to file permissions and security policy rules.
/android/net/wifi/WifiMigration.java,loadFromSettings,Yes, this method requires permissions to read and write settings in `Settings.Global`.
/android/net/wifi/SoftApConfToXmlMigrationUtil.java,convert,Yes, because it accesses the legacy Wifi configuration file, which typically requires permissions related to accessing system files.
/android/net/wifi/SoftApConfToXmlMigrationUtil.java,remove,Yes, this method likely requires permissions because it involves deleting a file from the system's data directory, which typically requires storage-related permissions on Android.
/android/net/wifi/WifiNetworkScoreCache.java,getNetworkScore,Yes, this method likely requires permissions related to accessing network information, as it involves getting the network score from a `ScanResult` object, which typically requires location or network state permissions in Android.
/android/net/wifi/WifiNetworkScoreCache.java,dump,Yes, the method requires permissions because it enforces calling or self-permission, likely for accessing sensitive data related to Wi-Fi.
/android/net/wifi/nl80211/WifiNl80211Manager.java,retrieveWificondAndRegisterForDeath,Yes, because accessing WiFi-related functionalities typically requires permissions such as `ACCESS_WIFI_STATE` or `CHANGE_WIFI_STATE`.
/android/net/wifi/nl80211/WifiNl80211Manager.java,setupInterfaceForClientMode,Yes, this method likely requires permissions related to using Wi-Fi features, such as configuring interfaces or scanning for networks.
/android/net/wifi/nl80211/WifiNl80211Manager.java,tearDownClientInterface,Yes, this method likely requires permissions related to managing Wi-Fi interfaces and services.
/android/net/wifi/nl80211/WifiNl80211Manager.java,setupInterfaceForSoftApMode,Yes, the method likely requires permissions to configure the device's network interfaces for Soft AP mode, which involves modifying system-level settings.
/android/net/wifi/nl80211/WifiNl80211Manager.java,tearDownSoftApInterface,Yes, the method likely requires permissions related to managing Wi-Fi functionalities, specifically for tearing down a Soft AP interface, which could involve accessing or modifying network interfaces.
/android/net/wifi/nl80211/WifiNl80211Manager.java,getTxPacketCounters,Yes, it requires permissions because it interacts with network interfaces, which typically requires appropriate permissions in Android (like ACCESS_NETWORK_STATE or CHANGE_NETWORK_STATE).
/android/net/wifi/nl80211/WifiNl80211Manager.java,getScanResults,Yes, this method likely requires permissions related to Wi-Fi scanning, as it deals with fetching scan results, which typically requires location permissions in Android.
/android/net/wifi/nl80211/WifiNl80211Manager.java,startScan,Yes, the method likely requires permissions related to network scanning, typically fine location permissions.
/android/net/wifi/nl80211/WifiNl80211Manager.java,startPnoScan,Yes, because it involves network operations that typically require permissions such as `ACCESS_FINE_LOCATION` or `ACCESS_WIFI_STATE`.
/android/net/wifi/nl80211/WifiNl80211Manager.java,stopPnoScan,Yes, because it involves managing Wi-Fi scanning operations which typically require location permissions in Android.
/android/net/wifi/nl80211/WifiNl80211Manager.java,getChannelsMhzForBand,Yes, this method requires permissions related to Wi-Fi scanning and accessing Wi-Fi information.
/android/net/wifi/nl80211/WifiNl80211Manager.java,registerApCallback,Yes, this method likely requires permissions related to Wi-Fi Direct or other network-related operations since it deals with registering a callback for SoftAP (Soft Access Point) events.
/android/net/wifi/nl80211/WifiNl80211Manager.java,sendMgmtFrame,Yes, this method likely requires permissions related to network operations, specifically for accessing and modifying Wi-Fi management frames.
/android/net/wifi/sharedconnectivity/app/HotspotNetwork.java,setHotspotSsid,Yes, it likely requires permissions related to managing Wi-Fi or hotspot settings, as it involves setting the SSID for a hotspot.
/android/net/wifi/sharedconnectivity/app/HotspotNetwork.java,getHotspotBssid,Yes, requires permissions to access hotspot information.
/android/net/wifi/sharedconnectivity/app/SharedConnectivitySettingsState.java,setInstantTetherEnabled,Yes, this method likely requires permissions because it modifies system settings related to tethering, which typically requires appropriate permissions in Android.
/android/net/wifi/sharedconnectivity/app/KnownNetwork.java,getSsid,Yes, because accessing the SSID of a network typically requires network-related permissions such as `ACCESS_WIFI_STATE`.
/android/net/util/SocketUtils.java,bindSocketToInterface,Yes, this method requires network-related permissions to create and manage a socket.
/android/net/http/HttpResponseCache.java,install,Yes, this method requires permissions to read and write to the specified directory for cache storage.
/android/net/sip/SipSession.java,getPeerProfile,Yes, this method may require permissions related to SIP communication in Android. SIP features usually need specific permissions to access network and telephony services.
/android/net/sip/SipSession.java,makeCall,Yes, this method likely requires permissions to initiate a call, as it involves making a call to a specified profile, which usually requires permissions related to making phone calls (e.g., `CALL_PHONE` or similar in Android).
/android/net/sip/SipSession.java,answerCall,Yes, this method likely requires permissions to answer incoming calls on a device, as it alters the state of an ongoing call.
/android/net/sip/SipSession.java,endCall,Yes, the method involves managing calls, which typically requires permissions related to phone state and call management in Android.
/android/net/sip/SipProfile.java,build,Yes, this method likely requires permissions related to SIP (Session Initiation Protocol) operations, particularly to manage network connections or access the internet.
/android/net/sip/SipManager.java,open,Yes, it likely requires the `USE_SIP` permission since it involves making SIP (Session Initiation Protocol) calls.
/android/net/sip/SipManager.java,open,Yes, requires permissions. This method involves SIP (Session Initiation Protocol) for voice calls, which typically requires network permissions to manage calls and user data.
/android/net/sip/SipManager.java,close,Yes, this method likely requires permissions related to SIP (Session Initiation Protocol) services to manage call profiles.
/android/net/sip/SipManager.java,isOpened,Yes, because it interacts with the SIP service, which typically requires permission to access network services.
/android/net/sip/SipManager.java,isRegistered,Yes, because it interacts with the SIP service, which generally requires specific permissions related to SIP communication in Android.
/android/net/sip/SipManager.java,makeAudioCall,Yes, this method requires permissions related to making VOIP calls, as it interacts with the SIP service.
/android/net/sip/SipManager.java,makeAudioCall,Yes, the method involves making a VOIP call which typically requires permissions like `USE_SIP` and `INTERNET` in Android.
/android/net/sip/SipManager.java,takeAudioCall,Yes, the method likely requires permissions related to managing SIP calls. Specifically, it may require `INTERNET` permission and possibly `USE_SIP` if the app is accessing SIP functionalities.
/android/net/sip/SipManager.java,register,Yes, requires permissions for SIP communication.
/android/net/sip/SipManager.java,unregister,Yes, because this method interacts with the SIP service, which typically requires specific permissions to manage network connections and call functionalities.
/android/net/sip/SipManager.java,getSessionFor,Yes, requires permissions for managing SIP calls.
/android/net/sip/SipManager.java,createSipSession,Yes, this method likely requires permissions related to network access, specifically for SIP (Session Initiation Protocol) operations, as it interacts with SIP sessions and connections.
/android/net/sip/SipManager.java,getProfiles,Yes, it likely requires permissions since it interacts with the SIP service, which typically involves network and possibly user data permissions.
/android/net/sip/SipAudioCall.java,onRinging,Yes, this method likely requires permissions related to SIP (Session Initiation Protocol) communication, as it involves handling sessions and potentially making or receiving calls.
/android/net/sip/SipAudioCall.java,attachCall,Yes, this method likely requires permissions because it involves handling VoIP (Voice over Internet Protocol) calls, which typically necessitate specific permissions for audio and network operations in Android.
/android/net/sip/SipAudioCall.java,makeCall,Yes, this method likely requires permission for making VoIP calls, such as `USE_SIP` or similar permissions, to facilitate audio calls over the internet.
/android/net/sip/SipAudioCall.java,endCall,Yes, this method would require permissions because it involves ending a call, which typically requires specific telephony permissions in Android.
/android/net/sip/SipAudioCall.java,holdCall,Yes, this method likely requires permissions to manage calls (e.g., hold a call), which would typically require permissions related to calling features in Android, like `android.permission.CALL_PHONE` or similar for SIP (Session Initiation Protocol) calls.
/android/net/sip/SipAudioCall.java,answerCall,Yes, requires permissions. It involves handling SIP calls, which typically requires permissions related to making phone calls and network access.
/android/net/sip/SipAudioCall.java,continueCall,Yes, the method likely requires permissions related to call handling, such as phone or SIP-related permissions, to manage calls.
/android/net/sip/SipAudioCall.java,grabWifiHighPerfLock,Yes, this method likely requires permissions because it involves managing a Wi-Fi high-performance lock, which typically requires access to Wi-Fi functionalities that are restricted by permissions in Android.
/android/net/sip/SipAudioCall.java,setSpeakerMode,Yes, requires {@link android.Manifest.permission#MODIFY_AUDIO_SETTINGS} permission to change audio settings.
/android/net/sip/SipAudioCall.java,sendDtmf,Yes, it requires permissions because sending DTMF tones typically involves interacting with telephony services, which necessitates permissions such as `CALL_PHONE` or similar telephony-related permissions in Android.
/android/net/sip/SipAudioCall.java,sendDtmf,Yes, it likely requires permissions to access audio resources and manage calls.
/android/net/sip/SipAudioCall.java,startAudio,Yes, because it requires permissions for recording audio, accessing Wi-Fi state, and waking the device.
/android/surfaceflinger/SurfaceFlingerPerfTest.java,layerScreenshot,Yes, because taking a screenshot typically requires the WRITE_EXTERNAL_STORAGE or SYSTEM_ALERT_WINDOW permission.
/android/app/ActivityManagerNative.java,broadcastStickyIntent,Yes, because it involves sending intents which may require specific permissions based on the intent's action.
/android/app/ActivityManagerNative.java,broadcastStickyIntent,Yes, because sending a sticky broadcast could require specific permissions to perform such actions securely in the Android environment.
/android/app/ActivityManagerNative.java,noteAlarmStart,Yes, requires permissions to manage alarms and pending intents.
/android/app/ActivityManagerInternal.java,checkContentProviderAccess,Yes, because it checks access to a content provider, which typically requires permissions.
/android/app/ActivityManagerInternal.java,killForegroundAppsForUser,Yes, because killing foreground apps typically requires special permissions to ensure user security and system stability.
/android/app/ActivityManagerInternal.java,updateDeviceIdleTempAllowlist,Yes, this method likely requires permissions as it deals with modifying app IDs on the temp allowlist, which can impact app behavior and system resources.
/android/app/ActivityManagerInternal.java,setHasOverlayUi,Yes, this method requires permission because it involves setting overlay UI for a process, which may need special permissions for security and user experience considerations.
/android/app/ActivityManagerInternal.java,getMemoryStateForProcesses,Yes, this method likely requires permissions to access information about running processes, as it deals with system-level data that usually needs special privileges.
/android/app/ActivityManagerInternal.java,enforceCallingPermission,Yes, it checks if the calling process has a specific permission.
/android/app/ActivityManagerInternal.java,killProcess,Yes, because killing a process typically requires system-level permissions.
/android/app/ActivityManagerInternal.java,updateActivityUsageStats,Yes, this method likely requires permissions related to accessing and updating usage statistics for activities.
/android/app/ActivityManagerInternal.java,broadcastIntentInPackage,Yes, because it involves broadcasting intents, which typically requires specific permissions based on the intent's content and target.
/android/app/ActivityManagerInternal.java,startServiceInPackage,Yes, this method likely requires permissions to start a service, particularly if it's intended to be used by applications.
/android/app/ActivityManagerInternal.java,killAllBackgroundProcessesExcept,Yes, because killing background processes typically requires system-level permissions.
/android/app/ActivityManagerInternal.java,stopAppForUser,Yes, because stopping an app's processes typically requires special permissions to manage app activity and user processes securely.
/android/app/ActivityManagerInternal.java,setDeviceOwnerUid,Yes, it requires permissions because it involves setting the device owner, which typically requires elevated privileges.
/android/app/ActivityManagerInternal.java,broadcastIntent,Yes, the method involves sending a broadcast which typically requires permissions to access certain components or information, depending on the intent's nature and the receiver's requirements.
/android/app/ActivityManagerInternal.java,broadcastIntentWithCallback,Yes, this method likely requires permissions as it involves broadcasting intents, which often necessitates permissions for actions depending on the intent properties and the receivers involved.
/android/app/ActivityManagerInternal.java,sendIntentSender,Yes, this method may require permissions to send intents to other components, especially if the intent is associated with operations that need granting specific access rights.
/android/app/ActivityManagerInternal.java,restart,Yes, restarting Android typically requires permissions due to the nature of the operation, as it affects system-level functionality and stability.
/android/app/ActivityManagerInternal.java,registerNetworkPolicyUidObserver,Yes, it requires permissions related to network policy management as it involves observing UID states in the context of network policies.
/android/app/ActivityManagerInternal.java,startForegroundServiceDelegate,Yes, starting a foreground service typically requires the `FOREGROUND_SERVICE` permission in Android.
/android/app/ActivityManagerInternal.java,notifyMediaProjectionEvent,Yes, the method requires permissions because it involves starting a media projection, which requires user-granted permission via the MediaProjection APIs.
/android/app/UiAutomationConnection.java,connect,Yes, this method likely requires permissions because it interacts with accessibility services and user handles, which generally require specific user permissions in Android.
/android/app/UiAutomationConnection.java,injectInputEvent,Yes, this method likely requires permissions because it involves injecting input events, which usually requires special privileges to prevent misuse and ensure security in the Android environment.
/android/app/UiAutomationConnection.java,setRotation,Yes, this method likely requires permissions because it involves changing the device's orientation, which typically requires special permissions to ensure that only trusted applications can make such changes.
/android/app/UiAutomationConnection.java,takeSurfaceControlScreenshot,Yes, the method likely requires permissions because it involves taking a screenshot of a surface control, which usually requires specific permissions related to app security and user privacy in Android.
/android/app/UiAutomationConnection.java,clearWindowContentFrameStats,Yes, this method likely requires permissions because it interacts with window content and system-level resources, which typically require specific permissions in Android for security and access control.
/android/app/UiAutomationConnection.java,getWindowContentFrameStats,Yes, this method likely requires permissions because it involves accessing window content statistics, which may involve system-level data that is protected.
/android/app/UiAutomationConnection.java,grantRuntimePermission,Yes, the method likely requires permission to grant other permissions at runtime, as it manipulates permission settings for a given package.
/android/app/UiAutomationConnection.java,revokeRuntimePermission,Yes, this method requires permissions because it likely involves modifying runtime permissions for a package, which typically requires elevated permissions or specific system-level rights in Android.
/android/app/UiAutomationConnection.java,adoptShellPermissionIdentity,Yes, this method likely requires permissions because it appears to manage shell permissions, which typically involve elevated access rights in the Android operating system.
/android/app/UiAutomationConnection.java,getAdoptedShellPermissions,Yes, this method likely requires permissions because it involves operations related to system services (like ActivityManager) that typically require specific permissions in Android.
/android/app/UiAutomationConnection.java,executeShellCommand,Yes, this method likely requires permissions because it involves executing shell commands, which typically requires elevated permissions on Android devices.
/android/app/UiAutomationConnection.java,executeShellCommandWithStderr,Yes, because executing shell commands may require permissions related to device administration or system-level access depending on the command being executed.
/android/app/ResourcesManagerPerfTest.java,copyApkToTemp,Yes, the method `copyApkToTemp` likely requires permissions to read from assets and write to storage, which are typically restricted in Android.
/android/app/AppOpInfo.java,setPermission,Yes, the method appears to deal with permissions, likely modifying or setting a permission value, which necessitates permission handling in Android.
/android/app/ComponentOptions.java,setPendingIntentBackgroundActivityLaunchAllowedByPermission,Yes, the method mentions that it requires the BAL permission to allow launching a PendingIntent activity from the background.
/android/app/ComponentOptions.java,isPendingIntentBackgroundActivityLaunchAllowedByPermission,Yes, because it mentions the requirement of "BAL permission" for launching a background activity.
/android/app/Fragment.java,requestPermissions,Yes, it requires permissions because it specifically requests dangerous permissions that must be granted by the user.
/android/app/Fragment.java,shouldShowRequestPermissionRationale,Yes, this method involves checking whether a specific permission requires a rationale before requesting it, which implies that permissions need to be defined in the app's manifest.
/android/app/UriGrantsManager.java,clearGrantedUriPermissions,Yes, requires {@code CLEAR_APP_GRANTED_URI_PERMISSIONS} permission to clear URI permissions.
/android/app/UriGrantsManager.java,getGrantedUriPermissions,Yes, requires `GET_APP_GRANTED_URI_PERMISSIONS` permission to access granted URI permissions.
/android/app/ScreenCaptureCallbackHandler.java,registerScreenCaptureCallback,Yes, the method involves monitoring screen captures, which may require permissions related to privacy and security.
/android/app/Person.java,setUri,Yes, this method requires permissions to access contacts data.
/android/app/DisabledWallpaperManager.java,setWallpaperComponent,Yes, because setting a wallpaper component typically requires permission to access the user's wallpaper settings.
/android/app/DisabledWallpaperManager.java,setWallpaperComponent,Yes, this method likely requires permissions to change the wallpaper component, as setting a wallpaper usually involves permission to modify system settings or access storage.
/android/app/DisabledWallpaperManager.java,setWallpaperOffsets,Yes, this method likely requires permissions as it involves setting wallpaper offsets, which typically requires wallpaper-related permissions in Android.
/android/app/DisabledWallpaperManager.java,sendWallpaperCommand,Yes, because manipulating wallpaper may require permissions related to accessing and modifying system settings or resources.
/android/app/RemoteInput.java,addDataResultToIntent,Yes, it likely requires permissions. The method involves handling URIs and intents, which often necessitate permissions related to storage or accessing specific data types in Android.
/android/app/Service.java,startForeground,Yes, because it requires the permission `FOREGROUND_SERVICE` for apps targeting API level P or later to use this method.
/android/app/Service.java,startForeground,Yes, requires permission. Starting a foreground service requires specific permissions, particularly from API Level 31 (Android 12) and higher, specifying the correct foreground service type in the manifest.
/android/app/NotificationHistory.java,removeChannelFromWrite,Yes, this method likely requires permissions to modify notifications in the system.
/android/app/NotificationHistory.java,getNotificationsToWrite,Yes, this method likely requires permissions because it deals with accessing historical notifications, which typically involves reading sensitive user information.
/android/app/NotificationChannel.java,getCanonicalizedSoundUri,Yes, this method likely requires permissions to access resources identified by the URI, as it interacts with `ContentResolver`, which often requires specific permissions depending on the content being accessed.
/android/app/NotificationChannel.java,restoreSoundUri,Yes, the method requires permission to access sound URIs, which typically involves reading from external storage or system settings.
/android/app/SearchDialog.java,launchIntent,Yes, this method requires permissions to launch activities (e.g., for user interface-related tasks), which may involve checking intent filters and other resource management.
/android/app/AutomaticZenRule.java,setInterruptionFilter,Yes, this method likely requires permissions because it involves setting an interruption filter related to Do Not Disturb settings, which typically requires specific permissions in Android.
/android/app/AutomaticZenRule.java,setZenPolicy,Yes, this method likely requires permissions because it sets the zen policy, which is related to "Do Not Disturb" settings and typically requires specific permissions to modify system settings on Android devices.
/android/app/WallpaperInfo.java,getSettingsSliceUri,Yes, the method requires the android.permission.BIND_WALLPAPER permission to protect the URI it returns, as it is accessible to other apps.
/android/app/AppOpsManagerInternal.java,noteOperation,Yes, because it deals with operations related to app permissions and may need permission to access or modify app-specific data.
/android/app/FragmentHostCallback.java,onRequestPermissionsFromFragment,Yes, because it requests permissions, which typically require explicit permission declarations in the manifest.
/android/app/compat/ChangeIdStateCache.java,recompute,Yes, this method likely requires permissions because it deals with querying system services that could involve accessing sensitive information based on the package name or user ID.
/android/app/slice/SliceProvider.java,onCreatePermissionRequest,Yes, it requires permissions because it involves accessing a slice for which write permission is needed.
/android/app/slice/SliceProvider.java,update,Yes, this method likely requires permissions to access and modify data represented by the `Uri` parameter.
/android/app/slice/SliceProvider.java,delete,Yes, because deleting data typically requires permissions to access the data source (e.g., WRITE_EXTERNAL_STORAGE or similar).
/android/app/slice/SliceProvider.java,query,Yes, the `query` method typically requires permissions to access data from a `Uri`, which may involve reading from a database or content provider.
/android/app/slice/SliceProvider.java,query,Yes, this method requires permissions because it queries a database or content provider, which typically necessitates appropriate permissions to access data.
/android/app/slice/SliceProvider.java,query,Yes, this method likely requires permissions because it involves querying data which may require access to protected resources (e.g., database or files) that are usually secured in Android.
/android/app/slice/SliceProvider.java,insert,Yes, this method likely requires permissions because it inserts data into a content provider, which typically requires the `WRITE_EXTERNAL_STORAGE` or similar permissions in Android to access and modify data.
/android/app/slice/SliceProvider.java,call,Yes, this method requires permissions because it checks for the calling UID against the system UID and throws a SecurityException if it is not from the system.
/android/app/slice/SliceProvider.java,handleBindSlice,Yes, this method likely requires permissions to access and bind slices, as it mentions enforcing slice permissions and may involve security checks based on the calling package and UID.
/android/app/slice/SliceProvider.java,createPermissionSlice,Yes, it requires permissions because it involves creating a permission slice which typically requires permission access for managing app permissions.
/android/app/slice/SliceProvider.java,createPermissionPendingIntent,Yes, this method likely requires permissions because it involves creating a `PendingIntent`, which may need specific permissions depending on the intent's target and context in Android.
/android/app/slice/SliceProvider.java,createPermissionIntent,Yes, this method likely requires permissions because it interacts with system components and permissions related to managing slices, which usually necessitate the appropriate access controls.
/android/app/slice/SliceManager.java,pinSlice,Yes, because it can only be called by apps that are the default launcher or default voice interaction service, implying a restriction on usage that suggests permission requirements.
/android/app/slice/SliceManager.java,unpinSlice,Yes, this method requires permissions because it can only be called by apps that are the default launcher or the default voice interaction service, otherwise it throws a `SecurityException`.
/android/app/slice/SliceManager.java,getSliceDescendants,Yes, the method likely requires permissions since it interacts with a `ContentProvider` to obtain slice descendants, which typically requires permission to access the data provided by the content URI.
/android/app/slice/SliceManager.java,bindSlice,Yes, it requires permissions. It interacts with a content provider via `ContentResolver`, which typically requires permissions to access data.
/android/app/slice/SliceManager.java,checkSlicePermission,Yes, this method checks if a process and user ID has permission to access a slice URI, which implies it requires permission checks.
/android/app/slice/SliceManager.java,grantSlicePermission,Yes, this method requires permissions because it involves granting access to specific URI resources to another package, which typically requires appropriate permissions to protect sensitive data.
/android/app/slice/SliceManager.java,revokeSlicePermission,Yes, this method requires permissions because it deals with granting and revoking access to specific content provider Uris.
/android/app/slice/SliceManager.java,enforceSlicePermission,Yes, because the method performs a permission check to see if a caller has access to a specific slice, which implies that it requires appropriate permissions to access certain resources.
/android/app/admin/ProvisioningIntentHelper.java,createProvisioningIntentFromNfcIntent,Yes, this method likely requires permissions related to NFC usage, as it interacts with NFC intents and records.
/android/app/admin/DelegatedAdminReceiver.java,onChoosePrivateKeyAlias,Yes, because it involves selecting a private key and certificate pair, which requires permission for secure actions in the context of device policy management.
/android/app/admin/DelegatedAdminReceiver.java,onNetworkLogsAvailable,Yes, this method requires permissions because it pertains to network logging, which is a sensitive operation that typically requires special permissions in Android.
/android/app/admin/DelegatedAdminReceiver.java,onSecurityLogsAvailable,Yes, requires permissions because it involves accessing security logs, which requires specific device policy permissions.
/android/app/admin/DelegatedAdminReceiver.java,onReceive,Yes, this method likely requires permissions because it is designed to handle device administrator broadcasts, which typically need specific permissions related to security and device management in Android.
/android/app/admin/PolicyUpdateReceiver.java,onReceive,Yes, because it listens to device policy updates which may require permissions related to device administration or management.
/android/app/admin/PolicyUpdateReceiver.java,onPolicySetResult,Yes, the method is related to device policy administration, which requires the `BIND_DEVICE_ADMIN` permission to ensure only the system can send updates.
/android/app/admin/PolicyUpdateReceiver.java,onPolicyChanged,Yes, because the method requires the `BIND_DEVICE_ADMIN` permission for the receiver to be protected and ensure only the system can send updates.
/android/app/admin/PackagePermissionPolicyKey.java,saveToXml,Yes, it appears to handle permission-related data (e.g., writing permissions), which often requires permissions in Android.
/android/app/admin/DevicePolicyEventLogger.java,setAdmin,Yes, this method likely requires permission, as it involves setting the package name of an admin application, which typically relates to device administration and security.
/android/app/admin/DevicePolicyEventLogger.java,setAdmin,Yes, because setting the admin application typically requires device admin permissions in Android.
/android/app/admin/DevicePolicyEventLogger.java,write,Yes, this method likely requires permissions because it involves writing metrics to `StatsLog`, which typically involves device policy events that may require specific permissions to log or track events related to device management or security.
/android/app/admin/FactoryResetProtectionPolicy.java,setFactoryResetProtectionEnabled,Yes, this method likely requires permissions related to device administration or security settings, as it involves enabling or disabling factory reset protection.
/android/app/admin/DevicePolicyManagerInternal.java,getProfileOwnerOrDeviceOwnerSupervisionComponent,Yes, this method likely requires permissions to access user profiles and device ownership information.
/android/app/admin/DevicePolicyManagerInternal.java,canSilentlyInstallPackage,Yes, because it relates to installing or uninstalling packages, which typically requires specific permissions.
/android/app/admin/DevicePolicyManagerInternal.java,getAllCrossProfilePackages,Yes, requires permission for cross-profile communication management.
/android/app/admin/DevicePolicyManagerInternal.java,broadcastIntentToManifestReceivers,Yes, it requires permissions because it involves sending intents across profiles, which requires specific permissions for interaction.
/android/app/admin/DevicePolicyManagerInternal.java,resetOp,Yes, this method likely requires permissions as it involves resetting operations for a specific package and user, which typically requires elevated privileges.
/android/app/admin/DevicePolicyManagerInternal.java,enforcePermission,Yes, because it checks for permissions related to applying device policies.
/android/app/admin/DevicePolicyManagerInternal.java,hasPermission,Yes, it checks if the caller has permission to apply device policies on a specific user.
/android/app/admin/DevicePolicyManagerInternal.java,getPackagesSuspendedByAdmin,Yes, because the method deals with packages and user management, which typically requires administrative permissions.
/android/app/admin/DeviceAdminReceiver.java,getManager,Yes, this method requires permissions because it accesses the DevicePolicyManager, which typically involves managing device security policies that require specific permissions in Android (e.g., DEVICE_ADMIN).
/android/app/admin/DeviceAdminReceiver.java,onProfileProvisioningComplete,Yes, because it involves managed provisioning which typically requires device admin permissions.
/android/app/admin/DeviceAdminReceiver.java,onNetworkLogsAvailable,Yes, this method requires permissions because it deals with network logging, which typically involves access to sensitive user data.
/android/app/admin/DeviceAdminReceiver.java,onReceive,Yes, the method `onReceive` is likely to require permissions related to device administration actions, such as managing device policies or responding to password changes, which typically necessitate specific permissions in Android.
/android/app/usage/UsageStatsManagerInternal.java,reportEvent,Yes, the method likely requires permissions related to accessing usage statistics or events, especially considering the context of Android R and user privacy.
/android/app/usage/UsageStatsManagerInternal.java,reportEvent,Yes, it requires permissions to report events to the UsageStatsManager.
/android/app/usage/UsageStatsManagerInternal.java,getBackupPayload,Yes, because backup and restore operations typically require specific permissions related to data storage and access.
/android/app/usage/UsageStatsManagerInternal.java,queryUsageStatsForUser,Yes, this method requires permissions because it deals with usage stats, which typically requires specific permissions from the user to access.
/android/app/usage/UsageStatsManagerInternal.java,queryEventsForUser,Yes, this method likely requires permissions related to accessing usage events due to its nature of querying user events over a specified period.
/android/app/usage/UsageStatsManagerInternal.java,getAppUsageLimit,Yes, it requires permissions because accessing app usage limits typically needs specific permissions related to usage statistics and user data.
/android/app/usage/CacheQuotaHint.java,setUsageStats,Yes, this method likely requires permission to access usage stats, which is a sensitive operation in Android.
/android/app/usage/UsageStats.java,getLastTimeAnyComponentUsed,Yes, this method likely requires permissions because it deals with usage data of application components, which typically requires access permissions for privacy reasons.
/android/app/usage/UsageStats.java,update,Yes, because updating usage stats requires permission to access app usage data.
/android/app/usage/ExternalStorageStats.java,getTotalBytes,Yes, this method likely requires permissions because it accesses data in shared/external storage.
/android/app/usage/ExternalStorageStats.java,getAudioBytes,Yes, the method accesses audio files in external storage, which typically requires permission to read external storage.
/android/app/usage/ExternalStorageStats.java,getVideoBytes,Yes, this method likely requires permissions to access external storage.
/android/app/usage/ExternalStorageStats.java,getImageBytes,Yes, accessing shared/external storage generally requires permissions.
/android/app/usage/ExternalStorageStats.java,getAppBytes,Yes, because it involves accessing app data stored in shared/external storage.
/android/app/people/PeopleSpaceTile.java,getContactUri,Yes, this method may require permissions to access the Contacts database.
/android/app/people/PeopleSpaceTile.java,getContactUri,Yes, the method may require permissions to access contacts on the device.
/android/app/people/PeopleSpaceTile.java,setContactUri,Yes, this method likely requires permissions to access the Android Contacts database to set a contact URI.
/android/app/people/PeopleSpaceTile.java,setCanBypassDnd,Yes, this method likely requires permission because it involves managing the Do Not Disturb (DND) settings, which typically requires explicit user permissions to modify.
/android/app/people/PeopleSpaceTile.java,setIsPackageSuspended,Yes, this method likely requires permissions because it deals with the suspension of a package, which may involve modifying the application's operational state and can affect system-level behaviors.
/android/app/job/JobService.java,setNotification,Yes, this method requires permission to display notifications, specifically `android.permission.ACCESS_NOTIFICATION_POLICY`, as it involves posting a notification to inform the user about the job's lifecycle.
/android/app/job/JobParameters.java,isUserInitiatedJob,Yes, because it mentions the requirement of the `RUN_USER_INITIATED_JOBS` permission for user-initiated job guarantees.
/android/app/job/JobParameters.java,getTriggeredContentUris,Yes, it requires permissions because it deals with content URIs, which typically require permissions to access.
/android/app/job/JobParameters.java,getNetwork,Yes, because it requires permissions specified in `JobInfo.Builder#setRequiredNetwork(NetworkRequest)`.
/android/app/backup/BackupHelperDispatcher.java,performBackup,Yes, because backup operations typically require permissions related to reading and writing to external storage or access to backup services.
/android/app/backup/BackupHelperDispatcher.java,performRestore,Yes, this method likely requires permissions for access to backup and restore data. It involves handling backup data input and managing application state, which typically involves permissions related to data privacy and storage.
/android/app/backup/ForwardingBackupAgent.java,onBackup,Yes, it relates to backup operations which typically require storage permissions.
/android/app/backup/FileBackupHelper.java,performBackup,Yes, this method requires permissions because it involves accessing and backing up files within the application's data directory, which is sensitive data management that requires appropriate permissions in Android.
/android/app/backup/FileBackupHelper.java,restoreEntity,Yes, because restoring a file may require permissions related to storage access.
/android/app/backup/AbsoluteFileBackupHelper.java,performBackup,Yes, this method likely requires permissions as it handles application data backup, which typically involves accessing sensitive user data.
/android/app/backup/FullBackup.java,backupToTar,Yes, this method likely requires permissions to access or manipulate app data for backup purposes.
/android/app/backup/FullBackup.java,restoreFile,Yes, the method requires permissions because it involves writing data to a file system location which necessitates the WRITE_EXTERNAL_STORAGE permission if the output file is intended for external storage.
/android/app/backup/FullBackup.java,isFullBackupEnabled,Yes, the method `isFullBackupEnabled` likely requires permissions related to backup and recovery operations in Android, as it checks the backup scheme, which typically necessitates permissions to access and manage backup settings.
/android/app/backup/RestoreSession.java,getAvailableRestoreSets,Yes, this method likely requires permissions for backup and restore operations, which typically involve accessing user data and storage.
/android/app/backup/RestoreSession.java,getAvailableRestoreSets,Yes, it likely requires permissions for data access during backup and restore processes.
/android/app/backup/RestoreSession.java,restoreAll,Yes, because callers must hold the `android.permission.BACKUP` permission to use this method.
/android/app/backup/RestoreSession.java,restoreAll,Yes, because it requires the android.permission.BACKUP permission to use this method.
/android/app/backup/RestoreSession.java,restorePackages,Yes, Callers must hold the android.permission.BACKUP permission to use this method.
/android/app/backup/RestoreSession.java,restorePackages,Yes, the method requires the android.permission.BACKUP permission to be called.
/android/app/backup/RestoreSession.java,restoreSome,Yes, the method requires the `android.permission.BACKUP` permission to perform its operation.
/android/app/backup/RestoreSession.java,restoreSome,Yes, because it requires the `android.permission.BACKUP` permission to use this method.
/android/app/backup/RestoreSession.java,restorePackage,Yes, the method requires the `android.permission.BACKUP` permission if the package name provided is not the caller's own package.
/android/app/backup/RestoreSession.java,restorePackage,Yes, the method requires the `android.permission.BACKUP` permission if the package name provided is not that of the caller's own package.
/android/app/backup/BackupAgentHelper.java,onBackup,Yes, this method likely requires permissions because it involves backing up data, which typically requires storage permissions to read from and write to files.
/android/app/backup/BackupAgentHelper.java,onRestore,Yes, this method likely requires permissions related to backup and restore operations, as it involves restoring data.
/android/app/backup/BackupAgent.java,onBackup,Yes, the method involves writing backup data, which requires permission to access backup features.
/android/app/backup/BackupAgent.java,applyXmlFiltersAndDoFullBackupForDomain,Yes, this method requires permissions because it involves backing up files, which typically requires user permissions related to storage and backup services in Android.
/android/app/backup/BackupAgent.java,fullBackupFile,Yes, this method requires permissions because it handles backup operations, which typically necessitate sensitive permissions related to accessing and modifying filesystem data.
/android/app/backup/BackupAgent.java,fullBackupFileTree,Yes, this method requires permissions because it involves scanning the file system and processing files, which typically requires storage access permissions in Android.
/android/app/backup/BackupAgent.java,onRestoreFile,Yes, this method likely requires permissions because it handles file operations, including reading from a file descriptor and writing to the file system, which typically require appropriate access permissions in Android.
/android/app/backup/BackupAgent.java,doBackup,Yes, this method requires permissions because it interacts with backup and restore functionality, which typically requires user permissions for data security and privacy.
/android/app/backup/BackupAgent.java,doRestore,Yes, this method likely requires permissions related to backup and restore operations, as it deals with restoring application state, which typically needs specific user permissions in Android.
/android/app/backup/BackupAgent.java,doRestoreWithExcludedKeys,Yes, this method likely requires permissions because it deals with restoring app data, which typically involves accessing and modifying app storage, necessitating permissions related to backup and restore operations.
/android/app/backup/BackupAgent.java,doFullBackup,Yes, the `doFullBackup` method likely requires permissions because it deals with backup operations, which typically require explicit user permissions to access and backup app data.
/android/app/backup/BackupAgent.java,doRestoreFile,Yes, this method likely requires permissions related to backup and restore functionality in Android, as it deals with restoring files, which typically involves accessing protected data.
/android/app/backup/BackupAgent.java,doRestoreFinished,Yes, this method likely requires permissions because it interacts with system-level features related to backup and restore, which typically require permissions to access user data.
/android/app/backup/BackupDataOutput.java,writeEntityData,Yes, this method likely requires permissions because it involves writing data to a backup transport, which typically requires specific permissions related to data storage and backup in Android.
/android/app/backup/BackupUtilsTest.java,file,Yes, it likely requires permissions because it involves file creation and directory manipulations, which typically require storage permissions in Android.
/android/app/backup/BackupUtilsTest.java,directory,Yes, the method likely requires permissions to access the filesystem to create or modify directories.
/android/app/backup/WallpaperBackupHelper.java,restoreEntity,Yes, this method requires permissions because it involves restoring a file and potentially setting a wallpaper, which typically requires storage and wallpaper permissions in Android.
/android/app/backup/BackupTransport.java,clearBackupData,Yes, the method likely requires permissions because it involves manipulating backup data, which typically requires specific user permissions related to data storage and privacy.
/android/app/backup/BackupTransport.java,finishBackup,Yes, this method likely requires permissions related to backup operations, as it involves finalizing application data for backup destinations.
/android/app/backup/BackupTransport.java,performBackup,Yes, this method requires permissions because it involves backing up application data, which typically requires the `android.permission.BACKUP` permission in Android.
/android/app/backup/BackupTransport.java,performBackup,Yes, this method likely requires permissions related to backup operations in Android.
/android/app/backup/BackupTransport.java,startRestore,Yes, requires permissions for backup and restore operations.
/android/app/backup/BackupTransport.java,nextRestorePackage,Yes, this method requires permission to access backup data. It interacts with restore operations, which typically require specific permissions related to backup and restore functionality in Android.
/android/app/backup/BackupTransport.java,getRestoreData,Yes, this method likely requires permissions related to backup and restore operations in Android, which typically involve access to storage and backup data.
/android/app/backup/BackupTransport.java,performFullBackup,Yes, this method requires permissions because it involves backing up application data, which typically requires the permission to access and manage application data on the device.
/android/app/backup/BackupTransport.java,performFullBackup,Yes, this method likely requires permission to perform backups, typically the `android.permission.BACKUP` permission, which is necessary for accessing backup and restoration features.
/android/app/backup/BackupTransport.java,performBackup,Yes, performing backup operations typically requires permissions related to data access and storage changes in Android, such as `android.permission.BACKUP` or `android.permission.WRITE_EXTERNAL_STORAGE`.
/android/app/backup/BackupTransport.java,clearBackupData,Yes, this method likely requires permissions because it involves clearing backup data, which generally requires specific permissions to prevent unauthorized access to applications' data.
/android/app/backup/BackupTransport.java,startRestore,Yes, the method likely requires permissions related to backup and restore operations, as it deals with restoring app data which typically involves accessing sensitive user data.
/android/app/backup/BackupTransport.java,getRestoreData,Yes, the method may require permissions related to backup and restore operations.
/android/app/backup/BackupTransport.java,requestFullBackupTime,Yes, this method likely requires permissions related to backup operations, such as `android.permission.BACKUP` or `android.permission.RESTORE`.
/android/app/backup/BackupTransport.java,performFullBackup,Yes, this method likely requires permissions related to backup and restore operations, which typically involve accessing package information and external storage.
/android/app/backup/FileBackupHelperBase.java,performBackup_checked,Yes, this method likely requires permissions related to backup operations, such as `android.permission.BACKUP` or similar, due to its involvement in data backup processing.
/android/app/backup/FileBackupHelperBase.java,writeFile,Yes, because this method involves file operations which typically require storage permissions in Android.
/android/widget/SuggestionsAdapter.java,getDrawable,Yes, this method requires permissions because it accesses resources via a URI, which often necessitates permissions to read from external sources depending on the URI scheme.
/android/widget/ScrollView.java,performAccessibilityActionInternal,Yes, it likely requires permissions related to accessibility actions, such as performing accessibility events or interacting with accessibility services.
/android/widget/MediaController.java,dispatchKeyEvent,Yes, this method likely requires permissions related to handling key events, especially if it is managing media keys or volume keys.
/android/widget/VideoView.java,setVideoPath,Yes, because setting a video path typically requires access to external storage or media files.
/android/widget/VideoView.java,openVideo,Yes, this method likely requires permissions related to audio and video playback, such as `USE_FULL_SCREEN_INTENT`, `MODIFY_AUDIO_SETTINGS`, or even internet permissions if streaming content, as it interacts with media components and potentially requests audio focus.
/android/widget/ImageSwitcher.java,setImageURI,Yes, requires permissions to access the URI of an image, typically from external storage.
/android/widget/ActivityChooserView.java,startActivity,Yes, the `startActivity` method requires permissions to launch activities that may involve sensitive data or features, such as accessing the user's location or contacts.
/android/widget/TimePickerClockDelegate.java,tryVibrate,Yes, the method likely requires permission to access device vibrations or haptic feedback features.
/android/mtp_perf/AppFusePerfTest.java,testReadWriteFile,Yes, because it interacts with file storage, which typically requires storage permissions in Android.
/android/test/SyncBaseInstrumentation.java,syncProvider,Yes, this method likely requires permissions. It interacts with a content provider and may need permissions related to reading or writing data, such as `READ_CONTACTS` or `WRITE_CONTACTS`, depending on the specific provider being synced.
/android/test/SyncBaseInstrumentation.java,cancelSyncsandDisableAutoSync,Yes, it requires permissions because it interacts with synchronization settings, which typically require permissions to access or modify data.
/android/test/IsolatedContext.java,getContentResolver,Yes, it requires permissions to access content providers.
/android/test/IsolatedContext.java,bindService,Yes, bindService requires permissions as it involves binding to a service, which may need specific permissions depending on the service being bound to.
/android/test/IsolatedContext.java,bindService,Yes, it may require permission to bind to a service, depending on the service being bound.
/android/test/IsolatedContext.java,registerReceiver,Yes, because `registerReceiver` requires the `RECEIVE_BOOT_COMPLETED` permission if you want to register for specific broadcasts.
/android/test/IsolatedContext.java,sendBroadcast,Yes, sending a broadcast typically requires permission to ensure that only authorized components can send specific intents.
/android/test/IsolatedContext.java,sendOrderedBroadcast,Yes, sending broadcasts may require permissions to ensure that only authorized receivers can respond to them.
/android/test/IsolatedContext.java,checkUriPermission,Yes, it requires permissions to check if the specified URI can be accessed with the given permissions.
/android/test/IsolatedContext.java,checkUriPermission,Yes, requires permissions to check access to the given URI.
/android/test/ProviderTestCase2.java,getDir,Yes, this method likely requires permissions because it interacts with the file system by retrieving a directory, which usually requires storage-related permissions in Android.
/android/test/RenamingDelegatingContext.java,makeExistingFilesAndDbsAccessible,Yes, it requires permissions. This method accesses files and databases, which typically requires storage permissions in Android.
/android/test/RenamingDelegatingContext.java,openOrCreateDatabase,Yes, this method requires permissions. Specifically, it involves database access operations that typically require permissions like `WRITE_EXTERNAL_STORAGE` or `WRITE_DATABASE`.
/android/test/RenamingDelegatingContext.java,openOrCreateDatabase,Yes, because this method involves accessing or creating a database, which typically requires permissions related to storage access in Android.
/android/test/RenamingDelegatingContext.java,getDatabasePath,Yes, this method may require permissions related to accessing the file system (storage permissions) to retrieve the database path.
/android/test/RenamingDelegatingContext.java,openFileInput,Yes, because opening a file typically requires storage permissions.
/android/test/RenamingDelegatingContext.java,openFileOutput,Yes, because it involves writing to a file, which typically requires permission to access storage.
/android/test/RenamingDelegatingContext.java,deleteFile,Yes, because deleting a file typically requires WRITE_EXTERNAL_STORAGE permission in Android.
/android/test/AndroidTestCase.java,assertActivityRequiresPermission,Yes, the method tests for a specific permission required to launch an activity, implying that this permission must be defined for the activity to be accessed.
/android/test/AndroidTestCase.java,assertReadingContentUriRequiresPermission,Yes, because it asserts that querying a content URI requires a specific permission, which implies that permissions are necessary to access the content.
/android/test/AndroidTestCase.java,assertWritingContentUriRequiresPermission,Yes, the method requires permissions because it is designed to assert that inserting into a content URI requires a specific permission, indicated by the use of a `SecurityException`.
/android/test/mock/MockContentResolver.java,acquireUnstableProvider,Yes, this method requires permissions because it interacts with a content provider, which typically requires specific permissions to access its data.
/android/test/mock/MockContext.java,openFileInput,Yes, this method likely requires permission to access files stored on the device.
/android/test/mock/MockContext.java,getExternalFilesDir,Yes, because accessing external files typically requires storage permissions in Android.
/android/test/mock/MockContext.java,openOrCreateDatabase,Yes, the method `openOrCreateDatabase` requires permissions because it involves accessing or creating a database, which typically requires filesystem permissions in Android.
/android/test/mock/MockContext.java,openOrCreateDatabase,Yes, it requires permissions because it involves file operations that typically need storage access permissions in Android.
/android/test/mock/MockContext.java,setWallpaper,Yes, because setting a wallpaper typically requires the `SET_WALLPAPER` permission in Android.
/android/test/mock/MockContext.java,setWallpaper,Yes, this method requires permission because setting the wallpaper typically requires the `SET_WALLPAPER` permission in Android.
/android/test/mock/MockContext.java,startActivity,Yes, starting an activity typically requires permission if the activity being started requires specific permissions to access features or data.
/android/test/mock/MockContext.java,startActivities,Yes, this method requires permissions because it starts activities, which typically requires permission to launch other apps or activities in Android.
/android/test/mock/MockContext.java,sendBroadcast,Yes, it typically requires permissions to send broadcasts to ensure that apps have the necessary rights to communicate with others.
/android/test/mock/MockContext.java,sendBroadcastMultiplePermissions,Yes, because it involves sending a broadcast which may require specific permissions based on the intent data and target receivers.
/android/test/mock/MockContext.java,sendBroadcastMultiplePermissions,Yes, it requires permissions to send broadcasts to multiple receivers, which typically involves permission checks in Android.
/android/test/mock/MockContext.java,sendBroadcastAsUserMultiplePermissions,Yes, the method likely requires permissions because it involves sending a broadcast, which typically requires the appropriate permissions to ensure secure communication between components.
/android/test/mock/MockContext.java,sendBroadcast,Yes, sending a broadcast typically requires specific broadcast permissions to ensure secure communication between components.
/android/test/mock/MockContext.java,sendBroadcast,Yes, the `sendBroadcast` method requires permissions because it involves sending a broadcast, which often necessitates specifying permissions for security reasons.
/android/test/mock/MockContext.java,sendOrderedBroadcast,Yes, because sending broadcasts may require specific permissions depending on the intent and the registered receivers.
/android/test/mock/MockContext.java,sendOrderedBroadcast,Yes, this method involves sending broadcasts, which generally requires permissions in Android to ensure that only authorized applications can receive certain types of broadcasts.
/android/test/mock/MockContext.java,sendOrderedBroadcast,Yes, the method `sendOrderedBroadcast` typically requires permissions to send broadcasts in Android. Specifically, if a receiver is specified with `receiverPermission`, the sender must hold that permission.
/android/test/mock/MockContext.java,sendBroadcastAsUser,Yes, because sending broadcasts may require permissions depending on the intent being broadcasted.
/android/test/mock/MockContext.java,sendBroadcastAsUser,Yes, this method likely requires permissions to broadcast intents, as it is designed to send broadcasts to specific users and may involve sensitive operations.
/android/test/mock/MockContext.java,sendBroadcastAsUser,Yes, this method may require permissions to send broadcasts, as it deals with `Intent` and includes receiver permissions.
/android/test/mock/MockContext.java,sendBroadcastAsUser,Yes, this method needs permissions because it deals with broadcasting intents, which typically requires the appropriate permissions to ensure security and privacy.
/android/test/mock/MockContext.java,sendOrderedBroadcastAsUser,Yes, it requires permissions to send broadcasts.
/android/test/mock/MockContext.java,sendOrderedBroadcast,Yes, this method involves sending broadcasts, which typically requires permissions to ensure that only authorized apps can receive sensitive data.
/android/test/mock/MockContext.java,sendOrderedBroadcast,Yes, it requires permissions because broadcasting intents typically involves security considerations and may need specific permissions to ensure only authorized applications can access or respond to the broadcast.
/android/test/mock/MockContext.java,sendStickyBroadcast,Yes, it requires permission because sending broadcasts may require specific permissions based on the type of data being transmitted.
/android/test/mock/MockContext.java,sendStickyBroadcastAsUser,Yes, this method likely requires permissions as it involves sending broadcasts, which could affect other apps and system components.
/android/test/mock/MockContext.java,registerReceiver,Yes, this method requires permissions because it involves registering a broadcast receiver, which can interact with system broadcasts, potentially requiring permissions depending on the broadcasts being listened to.
/android/test/mock/MockContext.java,registerReceiver,Yes, this method requires permissions because registering a BroadcastReceiver may involve actions that could be dependent on certain permissions in the Android system, such as receiving system broadcasts or monitoring specific events.
/android/test/mock/MockContext.java,registerReceiver,Yes, this method requires permissions to receive broadcasts if the `broadcastPermission` parameter is specified.
/android/test/mock/MockContext.java,registerReceiver,Yes, because `registerReceiver` usually requires permissions to receive specific broadcasts, indicated by the `broadcastPermission` parameter.
/android/test/mock/MockContext.java,registerReceiverForAllUsers,Yes, this method likely requires permissions because it involves registering a broadcast receiver, which typically requires specific permissions to receive broadcasts in Android.
/android/test/mock/MockContext.java,registerReceiverForAllUsers,Yes, this method is related to registering a broadcast receiver, which typically requires permissions to listen for broadcasts.
/android/test/mock/MockContext.java,registerReceiverAsUser,Yes, this method requires permissions because it registers a broadcast receiver, which typically requires declaring appropriate permissions in the Android manifest to receive specific broadcasts.
/android/test/mock/MockContext.java,registerReceiverAsUser,Yes, the method likely requires permissions to receive broadcasts, as indicated by the `broadcastPermission` parameter.
/android/test/mock/MockContext.java,startService,Yes, this method requires permissions because starting a service typically requires specific permissions depending on the service being started.
/android/test/mock/MockContext.java,startForegroundService,Yes, it requires permission to start a foreground service, specifically the `FOREGROUND_SERVICE` permission.
/android/test/mock/MockContext.java,startServiceAsUser,Yes, because starting a service typically requires permissions related to the service being accessed.
/android/test/mock/MockContext.java,startForegroundServiceAsUser,Yes, this method likely requires permissions to start a foreground service, especially given that it involves user contexts.
/android/test/mock/MockContext.java,bindService,Yes, this method typically requires permission to bind to a service, as it involves interacting with system components.
/android/test/mock/MockContext.java,bindService,Yes, the method `bindService` generally requires permissions to bind to a service, such as `BIND_DATA_SMS` or similar depending on the service being accessed.
/android/test/mock/MockContext.java,bindIsolatedService,Yes, this method likely requires permissions to bind to a service, as binding to services often involves accessing components that may require user permissions as per Android's security model.
/android/test/mock/MockContext.java,bindServiceAsUser,Yes, it likely requires permissions to bind to services, especially when specifying a user context.
/android/test/mock/MockContext.java,checkPermission,Yes, it requires permissions because the method's name suggests it checks for permissions which typically involves security checks related to Android permissions.
/android/test/mock/MockContext.java,checkPermission,Yes, because it involves checking permissions for specific processes and user identifiers.
/android/test/mock/MockContext.java,checkCallingPermission,Yes, because it checks for permissions.
/android/test/mock/MockContext.java,checkCallingOrSelfPermission,Yes, because the method checks for permissions, which typically requires the appropriate permission to be granted.
/android/test/mock/MockContext.java,checkSelfPermission,Yes, it requires permission to check if a specific permission is granted.
/android/test/mock/MockContext.java,enforceCallingPermission,Yes, because it suggests checking for a specific permission before allowing access to a functionality.
/android/test/mock/MockContext.java,enforceCallingOrSelfPermission,Yes, it requires permissions because it is used to enforce permission checks for calling or self permissions in the Android framework.
/android/test/mock/MockContext.java,grantUriPermission,Yes, it requires permissions because granting URI permissions typically involves access control over sensitive data represented by the URI.
/android/test/mock/MockContext.java,checkUriPermission,Yes, this method likely requires permissions to access the URI being checked for permission, as it deals with URI access control.
/android/test/mock/MockContext.java,checkUriPermission,Yes, this method checks URI permissions which typically requires specific permissions related to accessing or using content from URIs.
/android/test/mock/MockContext.java,checkUriPermission,Yes, it is likely that the method involves checking permissions related to Uri access.
/android/test/mock/MockContext.java,enforceUriPermission,Yes, this method enforces permissions related to URI access, which typically requires specific permissions to check whether a particular action is allowed for a given URI.
/android/test/mock/MockContext.java,enforceCallingOrSelfUriPermission,Yes, because it involves enforcing URI permissions related to the content.
/android/test/mock/MockContext.java,createPackageContext,Yes, it requires permissions because it involves creating a context for a specific package, which may require access to resources or data tied to that package.
/android/test/mock/MockContext.java,createPackageContextAsUser,Yes, this method likely requires permissions related to accessing context for a specific user, as it handles user-specific package contexts.
/android/test/mock/MockContext.java,createContextAsUser,Yes, this method likely requires permissions because it deals with creating a context for a specific user, which often involves accessing user-specific data or resources that require user permissions in Android.
/android/test/mock/MockContext.java,getExternalFilesDirs,Yes, it requires permissions to access external storage directories.
/android/test/mock/MockAccountManager.java,getAccountsByTypeAndFeatures,Yes, this method likely requires permissions because accessing accounts typically involves sensitive data, which necessitates the appropriate permissions in an Android application.
/android/test/mock/MockAccountManager.java,blockingGetAuthToken,Yes, this method likely requires permissions as it involves authentication, which typically requires user consent and possibly specific permissions to access account information.
/android/test/mock/MockPackageManager.java,getPackageInfo,Yes, this method likely requires permissions to access package information in the context of an Android application.
/android/test/mock/MockPackageManager.java,getPackageInfo,Yes, the method likely requires permissions to access package information and related system resources.
/android/test/mock/MockPackageManager.java,getPackageInfoAsUser,Yes, this method likely requires permissions to access package information related to a user, as it involves querying the system for specific package details.
/android/test/mock/MockPackageManager.java,getInstalledPackages,Yes, this method requires permission. Specifically, it typically requires the `PACKAGE_USAGE_STATS` or `QUERY_ALL_PACKAGES` permission to retrieve information about installed packages on the device.
/android/test/mock/MockPackageManager.java,getPackagesHoldingPermissions,Yes, this method requires permissions because it deals with retrieving information about packages that hold specific permissions.
/android/test/mock/MockPackageManager.java,getInstalledPackagesAsUser,Yes, because retrieving installed packages typically requires permissions related to visibility of other applications, such as `QUERY_ALL_PACKAGES`.
/android/test/mock/MockPackageManager.java,checkPermission,Yes, this method likely requires permissions since it is checking for a specific permission (`permName`) associated with a package (`pkgName`).
/android/test/mock/MockPackageManager.java,grantRuntimePermission,Yes, it likely requires permissions as it involves granting a runtime permission to a specific package.
/android/test/mock/MockPackageManager.java,revokeRuntimePermission,Yes, because it deals with revoking runtime permissions, which typically requires permissions to manage other app permissions.
/android/test/mock/MockPackageManager.java,shouldShowRequestPermissionRationale,Yes, because it deals with permissions and checks if the rationale for a specific permission is needed.
/android/test/mock/MockPackageManager.java,getInstalledApplicationsAsUser,Yes, because the method deals with retrieving information about installed applications, which typically requires permissions related to accessing app info (like `GET_PACKAGE_SIZE` or `PACKAGE_USAGE_STATS`).
/android/test/mock/MockPackageManager.java,clearApplicationUserData,Yes, this method requires permission. It clears the application user data, which typically requires elevated privileges (e.g., `android.permission.CLEAR_APP_CACHE`).
/android/test/mock/MockPackageManager.java,deletePackageAsUser,Yes, this method likely requires permissions because it involves deleting a package, which typically requires elevated permissions in Android for security reasons.
/android/test/mock/MockPackageManager.java,setComponentEnabledSetting,Yes, the method modifies the state of a component, which typically requires permissions to manage app components (like ENABLED or DISABLED state).
/android/test/mock/MockPackageManager.java,setApplicationEnabledSetting,Yes, because changing the enabled setting of an application typically requires specific permissions related to the app's configuration and management.
/android/test/mock/MockPackageManager.java,getPackageSizeInfoAsUser,Yes, this method likely requires permissions to access package size information for a specific user, as it involves querying system data.
/android/test/mock/MockPackageManager.java,setPackagesSuspended,Yes, this method likely requires permissions because it manipulates package states, which typically involves security considerations in Android.
/android/util/PackageUtils.java,computeSha256DigestForLargeFileAsBytes,Yes, because accessing a file at a specified path requires storage permissions.
/android/util/PackageUtils.java,computeSha256DigestForLargeFile,Yes, this method likely requires permissions to access the file specified by `filePath`.
/android/util/AtomicFile.java,startWrite,Yes, because writing to a file typically requires write permissions.
/android/util/AtomicFile.java,startWrite,Yes, this method likely requires permissions for file operations, such as writing to external storage or accessing specific directories, due to its interaction with `FileOutputStream` and file management operations.
/android/util/EventLog.java,readEvents,Yes, because reading logs typically requires permissions such as `READ_LOGS`.
/android/util/KeyValueSettingObserver.java,start,Yes, this method likely requires permissions because it involves observing changes, which typically requires access to content providers or settings, potentially needing relevant permissions.
/android/util/apk/ApkSignatureSchemeV3Verifier.java,unsafeGetCertsWithoutVerification,Yes, because accessing APK files may require storage permissions.
/android/util/apk/ApkSignatureSchemeV3Verifier.java,getVerityRootHash,Yes, this method likely requires permissions to access the file system, as it involves reading an APK file.
/android/util/apk/ApkSignatureVerifier.java,unsafeGetCertsWithoutVerification,Yes, this method may require permissions related to accessing APK files, as it deals with retrieving certificate information without verification, which poses a security risk.
/android/util/apk/SourceStampVerifier.java,verify,Yes, the method may require permissions related to file access (READ_EXTERNAL_STORAGE) since it deals with accessing and verifying an APK file.
/android/util/jar/StrictJarFile.java,read,Yes, the method likely requires permissions to read from a file or another data source, as it involves file reading operations that typically need appropriate permissions in Android.
/android/perftests/utils/ShellHelper.java,runShellCommand,Yes, running shell commands typically requires permissions due to potential access to sensitive system resources or data.
/android/perftests/utils/ShellHelper.java,runShellCommandRaw,Yes, this method likely requires permissions because it is running a shell command, which typically necessitates specific permissions to access system features or files in Android.
/android/perftests/utils/BitmapUtils.java,saveBitmapIntoPNG,Yes, this method requires permissions because it deals with file storage (saving a bitmap), which typically requires WRITE_EXTERNAL_STORAGE permission in Android.
/android/perftests/utils/WindowPerfTestBase.java,setUpOnce,Yes, it requires permissions. The method interacts with system services (like PowerManager and KeyguardManager) and executes shell commands, which typically need specific permissions (e.g., for waking the device or dismissing the keyguard).
/android/perftests/utils/WindowPerfTestBase.java,startAsyncAtrace,Yes, this method likely requires permissions to execute shell commands.
/android/perftests/utils/WindowPerfTestBase.java,stopAsyncAtraceWithStream,Yes, the method likely requires permissions to execute shell commands, especially if it interacts with system-level features like Atrace.
/android/perftests/utils/WindowPerfTestBase.java,startProfiling,Yes, the method requires permissions because it executes shell commands that may need system-level access to perform operations related to method tracing.
/android/perftests/utils/WindowPerfTestBase.java,stopProfiling,Yes, because it involves executing a shell command that may require permission to access system-level features.
/android/perftests/utils/WindowPerfTestBase.java,executeShellCommand,Yes, it likely requires permissions because executing shell commands may involve sensitive operations that require permissions such as `android.permission.INTERNET` or `android.permission.ACCESS_SUPERUSER`.
/android/perftests/utils/WindowPerfTestBase.java,runWithShellPermissionIdentity,Yes, this method requires permissions because it involves executing code with shell permissions, which typically requires elevated permissions in the Android environment.
/android/perftests/utils/SettingsHelper.java,get,Yes, this method likely requires permissions to access system settings or perform shell commands.
/android/perftests/utils/WindowPerfRunPreconditionBase.java,testRunStarted,Yes, because the method interacts with system services and processes that may require permissions, such as managing recent tasks and potentially killing background processes.
/android/perftests/utils/WindowPerfRunPreconditionBase.java,killBackgroundProcesses,Yes, this method requires permissions. Specifically, it involves managing background processes, which typically requires the `KILL_BACKGROUND_PROCESSES` permission in Android.
/android/perftests/utils/TestPackageInstaller.java,installPackage,Yes, the method requires permissions because installing an APK typically requires permissions related to package management, such as `REQUEST_INSTALL_PACKAGES`.
/android/perftests/utils/TestPackageInstaller.java,uninstall,Yes, because uninstalling a package typically requires permissions related to package management.
/android/perftests/utils/TestPackageInstaller.java,getIntentSender,Yes, because it registers a receiver and retrieves a pending intent that may involve broadcasting and receiving actions, which typically require the appropriate permissions in Android.
/android/security/KeyStoreException.java,requiresUserAuthentication,Yes, this method likely requires permissions because it checks authentication status, which typically involves secure access to user data or device security features.
/android/security/AndroidKeyStoreMaintenance.java,migrateKeyNamespace,Yes, the method requires permissions because the source descriptor requires the permissions to use, delete, and grant, while the destination requires the permission to rebind.
/android/security/KeyStore2.java,grant,Yes, this method appears to require permissions related to accessing a keystore, as it involves granting access to a key for a specific grantee. Permissions are typically needed for security-sensitive operations like modifying keystore access rights.
/android/security/KeyStore2.java,ungrant,Yes, this method likely requires permissions to manage key grants related to security and access control.
/android/security/ConfirmationPrompt.java,getUiOptionsAsFlags,Yes, this method requires permissions because it accesses system settings (e.g., settings for accessibility and font scale) which typically require specific permissions in Android.
/android/security/Authorization.java,onLockScreenEvent,Yes, because the method interacts with the keystore and lock screen events, which typically require permissions related to device security and lock state.
/android/security/LegacyVpnProfileStore.java,put,Yes, the method likely requires permissions to access secure storage or modify profiles related to VPNs, depending on implementation details not provided in the code.
/android/security/LegacyVpnProfileStore.java,get,Yes, because accessing VPN profiles typically requires permissions related to VPN or network access.
/android/security/LegacyVpnProfileStore.java,remove,Yes, this method likely requires permissions to modify or remove profiles from a database in the Android SDK, which typically involves sensitive user data.
/android/security/SystemKeyStore.java,generateNewKey,Yes, the method likely requires permissions because it involves file operations (creating and writing to a file), which typically require storage permissions in Android.
/android/security/keystore2/AndroidKeyStoreKeyGeneratorSpi.java,engineGenerateKey,Yes, this method likely requires permissions, as it deals with cryptographic key generation, which usually involves secure storage and access to system-level security features in Android.
/android/security/keystore2/AndroidKeyStoreRSACipherSpi.java,adjustConfigForEncryptingWithPrivateKey,Yes, this method likely requires permissions due to its involvement with cryptographic operations, which often necessitate specific permissions to ensure security.
/android/security/keystore2/KeyStore2ParameterUtils.java,addUserAuthArgs,Yes, the method involves user authentication, which requires permissions related to access and security.
/android/security/keystore2/AndroidKeyStoreECPublicKey.java,getPrivateKey,Yes, this method likely requires permissions related to accessing the Android KeyStore or cryptographic operations.
/android/security/keystore2/AndroidKeyStoreProvider.java,loadAndroidKeyStoreKeyPairFromKeystore,Yes, because accessing key pairs from the Android Keystore typically requires permissions related to cryptographic operations and secure storage.
/android/security/keystore2/AndroidKeyStoreProvider.java,loadAndroidKeyStoreKeyFromKeystore,Yes, the method interacts with the Android KeyStore, which requires permissions to manage keys securely.
/android/security/keystore2/AndroidKeyStoreSecretKeyFactorySpi.java,getGateKeeperSecureUserId,Yes, it likely requires permissions to access user security information.
/android/security/net/config/NetworkSecurityConfigProvider.java,install,Yes, it likely requires permissions related to network security configurations.
/android/security/keystore/KeyProtection.java,setUserAuthenticationRequired,Yes, because it involves user authentication, which requires permissions related to secure lock screen and biometric authentication.
/android/security/keystore/KeyProtection.java,setUserAuthenticationValidityDurationSeconds,Yes, because it requires user authentication to use the key, which may involve biometric or secure lock screen permissions.
/android/security/keystore/KeyGenParameterSpec.java,setNamespace,Yes, the method requires permissions because it involves installing a key in a specified SELinux namespace, which necessitates sufficient permissions as per SEPolicy.
/android/security/keystore/KeyGenParameterSpec.java,setUserAuthenticationRequired,Yes, because it involves user authentication which requires permissions related to biometric and device security.
/android/security/keystore/KeyGenParameterSpec.java,setUserAuthenticationValidityDurationSeconds,Yes, it requires permissions because it deals with user authentication and secure lock screen authentication.
/android/security/keystore/KeyGenParameterSpec.java,setUniqueIdIncluded,Yes, because the method is marked as @hide and is intended for use only by system apps, which implies the need for specific permissions to access.
/android/security/identity/CredstoreIdentityCredentialStore.java,getInstanceForType,Yes, because interacting with credential stores often requires permissions related to security and data privacy.
/android/security/identity/CredstoreIdentityCredentialStore.java,getSupportedDocTypes,Yes, it likely requires permissions related to accessing security hardware information (e.g., `READ_SECURITY_HARDWARE`).
/android/security/identity/CredstoreIdentityCredentialStore.java,createCredential,Yes, this method likely requires permissions to access the credential store or perform operations related to identity credentials on the device.
/android/security/identity/CredstoreIdentityCredentialStore.java,deleteCredentialByName,Yes, the method likely requires permissions because it involves deleting credentials, which typically requires secure access and user permission on Android.
/android/security/identity/CredstoreWritableIdentityCredential.java,getCredentialKeyCertificateChain,Yes, this method may require permissions related to accessing or manipulating certificates, which often involves security-sensitive operations in Android.
/android/security/identity/CredstoreIdentityCredential.java,update,Yes, the method likely requires permissions to access or modify personalization data, which may be sensitive user information.
/android/security/identity/IdentityCredentialStore.java,getDirectAccessInstance,Yes, this method likely requires permissions related to NFC hardware access.
/android/security/identity/PresentationSession.java,getCredentialData,Yes, the method requires permissions due to the handling of sensitive credential data and potential user authentication scenarios.
/android/security/identity/CredstorePresentationSession.java,getCredentialData,Yes, the method `getCredentialData` likely requires permissions as it deals with credential data, which generally involves sensitive information that can require specific user consent and security permissions in Android, such as access to the credential store or secure storage mechanisms.
/android/security/identity/IdentityCredential.java,getEntries,Yes, the method may require permissions related to biometric authentication to access certain data entries securely.
/android/location/GpsMeasurementsEvent.java,onGpsMeasurementsReceived,Yes, because it deals with GPS measurements, which typically requires location permissions.
/android/location/LocationListener.java,onLocationChanged,Yes, the method likely requires location permissions to access the updated location information.
/android/location/LocationListener.java,onLocationChanged,Yes, location-related methods typically require permissions for accessing location data in Android (e.g., ACCESS_FINE_LOCATION or ACCESS_COARSE_LOCATION).
/android/location/GnssRequest.java,setFullTracking,Yes, this method likely requires permissions related to location services (e.g., ACCESS_FINE_LOCATION or ACCESS_COARSE_LOCATION) due to its impact on GNSS functionalities and location tracking.
/android/location/SettingInjectorService.java,refreshSettings,Yes, this method requires permissions because it sends a broadcast, which typically requires the appropriate permissions defined in the AndroidManifest.
/android/location/Geocoder.java,isPresent,Yes, the method likely requires permissions because it interacts with location services, which typically require location-related permissions in Android (e.g., ACCESS_FINE_LOCATION or ACCESS_COARSE_LOCATION).
/android/location/Geocoder.java,getFromLocation,Yes, this method requires permissions to access location features on the device, as it interacts with geocoding services based on latitude and longitude.
/android/location/Geocoder.java,getFromLocation,Yes, it may require permissions related to location access in order to retrieve geocoding information based on latitude and longitude.
/android/location/Geocoder.java,getFromLocationName,Yes, because it may require internet access for geocoding services.
/android/location/Geocoder.java,getFromLocationName,Yes, requires access to geolocation services.
/android/location/Geocoder.java,getFromLocationName,Yes, this method may require permissions related to accessing location services (e.g., for geocoding), especially if it interacts with network services.
/android/location/Geocoder.java,getFromLocationName,Yes, because it involves geocoding which may require location permissions.
/android/location/GnssMeasurementsEvent.java,onGnssMeasurementsReceived,Yes, because it involves accessing GNSS (Global Navigation Satellite System) data, which requires location permissions.
/android/location/GpsStatus.java,getSatellites,Yes, because accessing GPS satellite data typically requires location permissions.
/android/location/util/identity/CallerIdentity.java,fromBinder,Yes, because it involves security checks to validate the package associated with the calling UID, which requires appropriate permissions.
/android/location/util/identity/CallerIdentity.java,fromBinder,Yes, the method interacts with package information, which typically requires permissions such as `PACKAGE_USAGE_STATS` or `GET_PACKAGE_SIZE` depending on the context.
/android/location/provider/LocationProviderBase.java,reportLocation,Yes, location-related methods typically require permissions like `ACCESS_FINE_LOCATION` or `ACCESS_COARSE_LOCATION` to access or report location data.
/android/location/provider/LocationProviderBase.java,reportLocations,Yes, this method likely requires permissions related to accessing location data.
/android/inputmethodservice/RemoteInputConnection.java,sendKeyEvent,Yes, this method requires permissions because it deals with sending key events, which typically requires user interaction permissions in Android.
/android/inputmethodservice/InputMethodServiceInternal.java,dump,Yes, the method requires permissions because it mentions that the caller is responsible for checking `android.Manifest.permission.DUMP`.
/android/inputmethodservice/IInputMethodWrapper.java,dump,Yes, the method requires the permission `android.Manifest.permission.DUMP` to perform its operation, as it checks for this permission before executing.
/android/inputmethodservice/IInputMethodWrapper.java,changeInputMethodSubtype,Yes, because changing the input method subtype may require user permissions related to input methods.
/android/provider/Contacts.java,getSetting,Yes, accessing settings and contacts may require permissions, such as `READ_SETTINGS` or `READ_CONTACTS`.
/android/provider/Contacts.java,setSetting,Yes, because it modifies settings that typically require permissions to access or change.
/android/provider/Contacts.java,tryGetMyContactsGroupId,Yes, because it accesses contacts data, which requires permissions related to reading contacts.
/android/provider/Contacts.java,addToMyContactsGroup,Yes, because it involves adding a contact to a group, which requires permissions to access and modify contacts.
/android/provider/Contacts.java,addToGroup,Yes, this method likely requires permissions related to modifying contacts, such as `WRITE_CONTACTS`, because it adds a person to a contact group.
/android/provider/Contacts.java,addToGroup,Yes, this method requires permissions because it involves modifying contact data, which typically requires permissions related to accessing and editing contacts in Android (e.g., `WRITE_CONTACTS`).
/android/provider/Contacts.java,createPersonInMyContactsGroup,Yes, the method requires permissions because it interacts with the contacts database, which is generally protected and requires specific permissions to access and modify contacts on an Android device.
/android/provider/Contacts.java,queryGroups,Yes, this method likely requires permissions to access contact information, specifically to query groups in the contacts database, as suggested by its interaction with `ContactsContract`.
/android/provider/Contacts.java,setPhotoData,Yes, because it modifies contact data which requires appropriate permissions.
/android/provider/Contacts.java,openContactPhotoInputStream,Yes, it requires permissions to access contacts and their photos.
/android/provider/Contacts.java,loadContactPhoto,Yes, because it interacts with contacts data.
/android/provider/Contacts.java,addPostalLocation,Yes, the method requires permissions because it modifies postal address data, which typically requires WRITE_CONTACTS permission in Android.
/android/provider/Browser.java,getAllBookmarks,Yes, the method requires permission to access bookmarks which typically involves reading from the user's stored bookmarks, necessitating the `READ_BOOKMARKS` permission in Android.
/android/provider/Browser.java,getVisitedLike,Yes, the method requires permissions because it accesses content through a `ContentResolver`, which typically requires specific permissions to access shared data (e.g., reading from a content provider).
/android/provider/Browser.java,getVisitedHistory,Yes, this method likely requires permissions to access the browsing history, as accessing such data typically involves querying a database that is protected for user privacy.
/android/provider/Browser.java,truncateHistory,Yes, this method likely requires permissions to access and modify the history database.
/android/provider/Browser.java,deleteHistoryTimeFrame,Yes, because deleting history items typically requires permissions to access and modify data in the database.
/android/provider/Browser.java,addSearchUrl,Yes, this method is likely to require permissions to access the searches database through the ContentResolver.
/android/provider/SettingsProviderPerfTest.java,setUp,Yes, because the method interacts with `Settings.Secure` and `Settings.Config`, which typically require permissions to modify system settings.
/android/provider/SettingsProviderPerfTest.java,destroy,Yes, the method interacts with settings, which typically requires permissions such as `WRITE_SETTINGS` or `WRITE_SECURE_SETTINGS`.
/android/provider/SettingsProviderPerfTest.java,testSettingsValueConsecutiveRead,Yes, this method interacts with secure settings via `Settings.Secure`, which requires permissions to read/write settings.
/android/provider/SettingsProviderPerfTest.java,testSettingsNamespaceConsecutiveReadAfterWrite,Yes, the method likely requires permissions because it interacts with `ContentResolver` and `Settings.Config`, which typically involves accessing app settings or system configuration data that may require specific permissions in Android.
/android/provider/SearchRecentSuggestions.java,saveRecentQueryBlocking,Yes, the method likely requires permissions to access or manipulate content in a content provider, as indicated by the use of `ContentResolver` and operations such as `insert`, which generally require `WRITE` permissions in Android.
/android/provider/SearchRecentSuggestions.java,clearHistory,Yes, this method likely requires permissions to modify or delete history data, which involves user privacy considerations.
/android/provider/SearchRecentSuggestions.java,truncateHistory,Yes, because it interacts with the content resolver which may require permissions to modify shared data.
/android/provider/SearchIndexablesProvider.java,attachInfo,Yes, the method requires permissions, specifically `READ_SEARCH_INDEXABLES`, as it checks for this permission and throws a `SecurityException` if not granted.
/android/provider/SearchIndexablesProvider.java,query,Yes, it likely requires permissions because querying data from a URI (e.g., Content Provider) often requires specific permissions in Android.
/android/provider/DocumentsContract.java,getBaseDocumentUriBuilder,Yes, because it uses `ContentResolver`, which typically requires permissions for accessing content providers.
/android/provider/DocumentsContract.java,buildDocumentUriUsingTree,Yes, because it involves accessing documents from a document provider, which typically requires permissions related to file access.
/android/provider/DocumentsContract.java,buildChildDocumentsUriUsingTree,Yes, because it interacts with a document provider, which typically requires permissions to access files or documents on the device.
/android/provider/DocumentsContract.java,getDocumentThumbnail,Yes, because accessing the document at the given URI typically requires permissions related to reading from external storage or interacting with the document provider.
/android/provider/DocumentsContract.java,createDocument,Yes, this method requires permissions. It involves creating a document, which typically requires file write permissions in a storage system.
/android/provider/DocumentsContract.java,renameDocument,Yes, this method requires permissions because it involves renaming a document, which typically requires access to the document provider and potentially user consent through permissions.
/android/provider/DocumentsContract.java,deleteDocument,Yes, this method likely requires permissions to delete documents, as it interfaces with document URIs and uses `DocumentsContract.METHOD_DELETE_DOCUMENT`, which typically involves permissions related to document management.
/android/provider/DocumentsContract.java,copyDocument,Yes, because copying a document typically requires permissions related to reading and writing storage or accessing documents.
/android/provider/DocumentsContract.java,moveDocument,Yes, because moving documents typically requires permissions to access and modify content within the document storage or filesystem.
/android/provider/DocumentsContract.java,removeDocument,Yes, because it involves removing a document from a parent directory, which typically requires permissions to manipulate files or documents.
/android/provider/DocumentsContract.java,ejectRoot,Yes, it likely requires permissions related to accessing and modifying storage or files, as it involves ejection operations with URIs.
/android/provider/DocumentsContract.java,getDocumentMetadata,Yes, it likely requires permissions because it interacts with document URIs, which typically require access permissions to read the document metadata.
/android/provider/DocumentsContract.java,findDocumentPath,Yes, the method requires permissions because it interacts with a document tree via a URI, likely needing permission to access document providers.
/android/provider/DocumentsContract.java,openImageThumbnail,Yes, it requires permissions to read files from storage.
/android/provider/DocumentsContract.java,getRootId,Yes, it requires permission to access root information.
/android/provider/DocumentsContract.java,getPath,Yes, the method requires permissions to access documents.
/android/provider/SettingsStringUtil.java,write,Yes, because it involves writing to secure settings, which typically requires specific permissions such as `WRITE_SECURE_SETTINGS`.
/android/provider/SyncStateContract.java,get,Yes, this method likely requires permissions to access account-related data and potentially sensitive synchronization state data.
/android/provider/SyncStateContract.java,set,Yes, this method likely requires permissions to access and modify data associated with accounts in a ContentProvider.
/android/provider/SyncStateContract.java,insert,Yes, this method likely requires permissions because it inserts data into a content provider, which typically requires explicit permissions to access or modify data.
/android/provider/SyncStateContract.java,update,Yes, this method likely requires permissions. It interacts with a `ContentProvider`, which typically requires the appropriate permissions to read or write data.
/android/provider/SyncStateContract.java,getWithUri,Yes, this method likely requires permissions because it interacts with a `ContentProviderClient` and uses a `Uri`, both of which generally necessitate permissions to access data from content providers in Android.
/android/provider/SyncStateContract.java,newSetOperation,Yes, it likely requires permissions to access and modify the sync state for an account, typically requiring permissions related to accounts and potentially data management.
/android/provider/SyncStateContract.java,newUpdateOperation,Yes, this method likely requires permissions to access and modify content within a ContentProvider, as it interacts with a URI and updates data, which typically necessitates appropriate permissions.
/android/provider/UserDictionary.java,addWord,Yes, this method requires permissions because it interacts with the device's dictionary, which generally requires permission to modify user data.
/android/provider/ContactsInternal.java,maybeStartManagedQuickContact,Yes, this method requires permissions related to accessing contacts, specifically for managing and launching quick contact for corporate contacts, as it interacts with the `ContactsContract` and `DevicePolicyManager`.
/android/provider/BlockedNumberContract.java,isBlocked,Yes, this method likely requires permissions because it interacts with blocked numbers and uses content resolvers, which typically require permissions related to phone and contacts management.
/android/provider/BlockedNumberContract.java,unblock,Yes, this method requires permissions because it manipulates blocked numbers, which likely involves accessing sensitive user data related to call and contact management.
/android/provider/BlockedNumberContract.java,notifyEmergencyContact,Yes, the method likely requires permissions because it interacts with the content resolver, which typically requires permissions to access data from a content provider.
/android/provider/BlockedNumberContract.java,shouldSystemBlockNumber,Yes, requires permission to access blocked numbers.
/android/provider/BlockedNumberContract.java,setEnhancedBlockSetting,Yes, this method likely requires permissions because it interacts with system settings or configurations, which typically are protected and require explicit permissions to modify.
/android/provider/VoicemailContract.java,insert,Yes, this method likely requires permissions to insert a voicemail into the voicemail content provider. Specifically, it would require the appropriate permissions to access and modify the voicemail data.
/android/provider/VoicemailContract.java,insert,Yes, because this method involves inserting data into a content provider, which typically requires permission to access and modify the corresponding data (like voicemails).
/android/provider/VoicemailContract.java,deleteAll,Yes, the method likely requires permissions to access and delete voicemails from the content provider, as it deals with sensitive data (voicemails).
/android/content/AsyncQueryHandler.java,startQuery,Yes, this method likely requires permissions to access content via a URI, as it involves querying data from a content provider.
/android/content/AsyncQueryHandler.java,startInsert,Yes, this method likely requires permissions, as it involves database operations through URI and ContentValues, which typically need specific permissions in Android (like WRITE_EXTERNAL_STORAGE or specific ContentProvider permissions).
/android/content/AsyncQueryHandler.java,startDelete,Yes, this method requires permissions. It performs a delete operation on a URI, which typically requires specific permissions to access the data associated with that URI.
/android/content/LoggingContentInterface.java,query,Yes, this method requires permissions because it interacts with a `Uri` which typically involves accessing content that may be protected, such as contacts or media files, requiring appropriate permissions in Android.
/android/content/LoggingContentInterface.java,checkUriPermission,Yes, this method likely requires permissions because it checks URI permissions, which typically involves accessing or manipulating content URI that may be protected by system permissions.
/android/content/LoggingContentInterface.java,insert,Yes, this method requires permissions because it interacts with the content provider to insert data, which requires the appropriate permissions (e.g., WRITE_EXTERNAL_STORAGE or WRITE_CONTENT).
/android/content/LoggingContentInterface.java,bulkInsert,Yes, this method likely requires permissions because it interacts with a URI to insert data, which typically requires permission to access or modify content in a content provider.
/android/content/LoggingContentInterface.java,delete,Yes, this method likely requires permissions to access or manipulate data referenced by the provided `Uri`, such as reading or deleting content in a content provider.
/android/content/LoggingContentInterface.java,update,Yes, the `update` method likely requires permissions to access or modify data associated with the `Uri` provided in the parameters.
/android/content/LoggingContentInterface.java,openFile,Yes, this method requires permissions because it involves accessing files represented by a `Uri`, which typically requires storage permissions in Android.
/android/content/LoggingContentInterface.java,openAssetFile,Yes, the method likely requires permissions to access the specified `Uri`, which may reference files or resources that need appropriate permissions to read or write.
/android/content/LoggingContentInterface.java,openTypedAssetFile,Yes, this method requires permissions because it involves accessing and reading data from a content URI, which typically requires storage or access permissions in Android.
/android/content/LoggingContentInterface.java,applyBatch,Yes, the method requires permissions because it interacts with a content provider, which typically requires specific permissions to access.
/android/content/ContentInsertHandler.java,insert,Yes, it likely requires permissions to access the ContentResolver for inserting data.
/android/content/IntentSender.java,sendIntent,Yes, because it allows specifying a required permission for the recipient of the PendingIntent, particularly for broadcast intents.
/android/content/IntentSender.java,sendIntent,Yes, requiredPermission may denote a permission that the recipient of the PendingIntent must hold, particularly for broadcast intents.
/android/content/DefaultDataHandler.java,insert,Yes, because the method involves inserting data, which typically requires permissions for accessing and modifying data in a content provider.
/android/content/ContentProviderOperation.java,newInsert,Yes, this method likely requires permissions. The method deals with `ContentProvider#insert`, which generally requires proper permissions to write data to a content provider.
/android/content/ContentProviderOperation.java,apply,Yes, this method likely requires permissions, as it interacts with a `ContentProvider`, which typically needs specific permissions to read or write data.
/android/content/SyncActivityTooManyDeletes.java,startSyncReallyDelete,Yes, the method interacts with the `ContentResolver`, which typically requires permissions to access data from content providers.
/android/content/SearchRecentSuggestionsProvider.java,insert,Yes, this method requires permission. It interacts with content providers, which typically need the appropriate read/write permissions declared in the manifest.
/android/content/SearchRecentSuggestionsProvider.java,query,Yes, this method likely requires permissions, such as read access to content providers, as it interacts with data through a URI and a ContentResolver.
/android/content/SyncInfo.java,createAccountRedacted,Yes, this method references `Manifest.permission.GET_ACCOUNTS`, which indicates that it requires permission to access account information.
/android/content/ContentInterface.java,insert,Yes, this method likely requires permissions since it involves inserting data into a content provider, which typically requires write permissions.
/android/content/ContentInterface.java,bulkInsert,Yes, because the `bulkInsert` method typically requires permissions related to accessing and modifying the data at the specified Uri.
/android/content/ContentInterface.java,delete,Yes, because the method likely interacts with content identified by the Uri, which may require permissions depending on the data being accessed or modified.
/android/content/ContentInterface.java,update,Yes, it likely requires permissions since it involves updating data using a URI, which typically requires permissions to access the content.
/android/content/ContentInterface.java,openFile,Yes, it requires permissions to access files via a Uri.
/android/content/ContentInterface.java,openTypedAssetFile,Yes, requires permission to access the specified URI.
/android/content/ContentInterface.java,applyBatch,Yes, because it interacts with a content provider, which typically requires permissions to access the data.
/android/content/ContentInterface.java,call,Yes, because it likely interacts with content providers, which typically require permissions for access.
/android/content/AbstractThreadedSyncAdapter.java,startSync,Yes, this method requires permissions because it interacts with a `ContentResolver` to get and set synchronization settings, which typically requires permissions related to accessing accounts or sync settings in Android.
/android/content/AbstractThreadedSyncAdapter.java,run,Yes, this method likely requires permissions because it involves accessing a `ContentProvider` and performing operations that may modify or retrieve sensitive data.
/android/content/ContentProviderNative.java,query,Yes, this method requires permissions because it interacts with a content provider, which typically requires specific permissions to access data.
/android/content/ContentProviderNative.java,insert,Yes, this method likely requires permissions because it involves inserting data, which typically requires write permissions to a content provider in Android.
/android/content/ContentProviderNative.java,bulkInsert,Yes, this method likely requires permissions related to accessing or modifying content from a content provider, as it involves bulk inserting data using a URI.
/android/content/ContentProviderNative.java,applyBatch,Yes, because it interacts with a content provider, which typically requires read or write permissions to access data.
/android/content/ContentProviderNative.java,delete,Yes, this method likely requires permissions because it involves operations that may access or modify content from a Content Provider, which typically requires specific permissions in Android (e.g., reading or writing data from the provider).
/android/content/ContentProviderNative.java,update,Yes, this method likely requires permissions related to accessing or modifying data through a ContentProvider, as indicated by the use of `IContentProvider` and the parameter types.
/android/content/ContentProviderNative.java,openFile,Yes, this method likely requires permissions to access files through a URI, depending on the URI's source.
/android/content/ContentProviderNative.java,openAssetFile,Yes, the method likely requires permissions because it deals with accessing assets or files which typically requires permissions in Android (e.g., READ_EXTERNAL_STORAGE).
/android/content/ContentProviderNative.java,getStreamTypes,Yes, this method likely requires permissions because it involves interactions with `IContentProvider`, which typically requires specific permissions to access data or resources.
/android/content/ContentProviderNative.java,openTypedAssetFile,Yes, this method likely requires permissions because it involves accessing a content provider through the `Uri` parameter. Accessing content providers typically requires explicit permissions defined in the Android manifest.
/android/content/ContentProviderNative.java,checkUriPermission,Yes, this method likely requires permissions because it checks URI permissions, which usually involve accessing content providers or resources that may be restricted and typically require appropriate permissions in Android.
/android/content/SyncRequest.java,syncPeriodic,Yes, because using periodic syncs generally requires permissions to access the sync service and account information defined in the Android framework.
/android/content/SyncRequest.java,setSyncAdapter,Yes, this method requires permissions to access the specified content provider for syncing data.
/android/content/SyncAdaptersCache.java,getSyncAdapterPackagesForAuthority,Yes, this method likely requires permissions because it deals with access to sync adapter packages, which are sensitive system-level resources that typically require specific permissions to access in Android.
/android/content/RestrictionsManager.java,getApplicationRestrictionsPerAdmin,Yes, this method requires permissions as it deals with application restrictions set by managing agents, which typically involve security and administrative controls that require specific permissions to access.
/android/content/RestrictionsManager.java,requestPermission,Yes, because the method is related to requesting permissions for operations in the Android system.
/android/content/Entity.java,addSubValue,Yes, it likely requires permissions to access the `Uri` and modify `ContentValues`.
/android/content/CursorLoader.java,loadInBackground,Yes, this method likely requires permissions. It appears to access the content resolver and perform database queries, which typically necessitates permissions such as `READ_EXTERNAL_STORAGE` or `WRITE_EXTERNAL_STORAGE` depending on the data being accessed.
/android/content/ClipData.java,coerceToText,Yes, the method may require permissions due to accessing content providers (which can require read permissions), specifically when retrieving data via a URI.
/android/content/ClipData.java,coerceToHtmlOrStyledText,Yes, the method requires permissions because it accesses the content resolver and potentially reads from the file system, which generally requires runtime permissions in Android, specifically for accessing external storage or content URIs.
/android/content/ClipData.java,newUri,Yes, because accessing a content URI typically requires permissions to read from or write to specific content providers.
/android/content/ClipData.java,addItem,Yes, because it involves accessing content URIs which may require permissions to read from or write to external storage or other content providers.
/android/content/ClipData.java,prepareToLeaveProcess,Yes, it requires permissions because it involves the handling of URIs and content, which may require permissions to access sensitive data.
/android/content/pm/PackageManagerInternal.java,getPackageInfo,Yes, this method may require permissions to access application package information.
/android/content/pm/PackageManagerInternal.java,getInstalledApplications,Yes, this method requires permissions to access the list of installed applications.
/android/content/pm/PackageManagerInternal.java,removeDistractingPackageRestrictions,Yes, this method likely requires permissions to manage package restrictions, as it impacts app behavior and could affect user experience.
/android/content/pm/PackageManagerInternal.java,getSuspendingPackage,Yes, the method requires permissions because it involves actions that can only be performed by device administrators or apps with specific permissions related to user and app management.
/android/content/pm/PackageManagerInternal.java,setPackagesSuspendedByAdmin,Yes, it requires admin permissions to modify package statuses on behalf of an administrator.
/android/content/pm/PackageManagerInternal.java,setPackagesSuspendedForQuietMode,Yes, because modifying the state of packages generally requires special permissions related to app management.
/android/content/pm/PackageManagerInternal.java,queryIntentActivities,Yes, this method requires permissions because it queries for activities based on an intent and filtering context, which typically requires permissions related to accessing activities and intents in Android.
/android/content/pm/PackageManagerInternal.java,setDeviceAndProfileOwnerPackages,Yes, because this method is related to setting device owner and profile owner packages, which typically requires specific permissions related to device management.
/android/content/pm/PackageManagerInternal.java,setOwnerProtectedPackages,Yes, the method likely requires permissions to manage package protection settings, which typically involves user security and privacy controls.
/android/content/pm/PackageManagerInternal.java,grantImplicitAccess,Yes, this method likely requires permissions because it involves granting access to another application's package metadata, which typically requires appropriate permissions to ensure security and privacy.
/android/content/pm/PackageManagerInternal.java,getTargetPackageNames,Yes, because retrieving package names typically requires permissions related to accessing app information or user data.
/android/content/pm/PackageManagerInternal.java,setEnabledOverlayPackages,Yes, this method likely requires permissions to modify package overlays and manage user-specific settings in Android.
/android/content/pm/PackageManagerInternal.java,getPackageList,Yes, this method likely requires permissions to access the list of installed packages, as interacting with package management typically involves querying system-level information that is protected by permissions.
/android/content/pm/PackageManagerInternal.java,canQueryPackage,Yes, because it checks for the permission {@link android.Manifest.permission.QUERY_ALL_PACKAGES} which is required to query packages.
/android/content/pm/PackageManagerInternal.java,freeAllAppCacheAboveQuota,Yes, because it deals with clearing app cache, which typically requires permissions to access storage and modify app data.
/android/content/pm/PackageManagerInternal.java,setEnableRollbackCode,Yes, the method requires the PACKAGE_ROLLBACK_AGENT permission.
/android/content/pm/PackageManagerInternal.java,uninstallApex,Yes, the method likely requires permissions related to uninstalling applications, as it involves modifying installed packages.
/android/content/pm/PackageManagerInternal.java,writePermissionSettings,Yes, because it involves writing permission settings, which typically requires specific permissions to modify system settings.
/android/content/pm/PackageManagerInternal.java,setIntegrityVerificationResult,Yes, because this method deals with package integrity verification, which typically requires system-level permissions.
/android/content/pm/PackageManagerInternal.java,clearBlockUninstallForUser,Yes, it likely requires permissions as it modifies uninstall settings for user packages, which typically involves sensitive operations.
/android/content/pm/PackageManagerInternal.java,deleteOatArtifactsOfPackage,Yes, this method likely requires permissions because it involves modifying or deleting files associated with installed packages, which typically requires elevated privileges in the Android environment.
/android/content/pm/PackageManagerInternal.java,checkUidSignaturesForAllUsers,Yes, because it requires the permission `INTERACT_ACROSS_USERS` to execute successfully.
/android/content/pm/PathPermission.java,writeToParcel,Yes, it uses `mReadPermission` and `mWritePermission`, which imply permissions are involved in the method.
/android/content/pm/CrossProfileAppsInternal.java,verifyPackageHasInteractAcrossProfilePermission,Yes, this method requires permissions to check for cross-profile communication.
/android/content/pm/CrossProfileAppsInternal.java,verifyUidHasInteractAcrossProfilePermission,Yes, the method requires permissions related to interacting across users or profiles.
/android/content/pm/CrossProfileAppsInternal.java,setInteractAcrossProfilesAppOp,Yes, it requires permission because it involves configuring settings related to the INTERACT_ACROSS_PROFILES permission.
/android/content/pm/DataLoaderManager.java,bindToDataLoader,Yes, because it requires PackageManager to find and bind to the data loader service.
/android/content/pm/InstallSourceInfo.java,getOriginatingPackageName,Yes, the method requires the INSTALL_PACKAGES permission to access certain installation information.
/android/content/pm/ShortcutServiceInternal.java,getShortcutsAsync,Yes, it likely requires permission to access shortcuts, as the method interacts with package and user-specific data.
/android/content/pm/ShortcutServiceInternal.java,pinShortcuts,Yes, it likely requires permission to modify or pin shortcuts on the user's device.
/android/content/pm/ShortcutServiceInternal.java,createShortcutIntents,Yes, this method likely requires permissions related to modifying or creating shortcuts, given its functionality implied by the name and parameters involving user and package identifiers.
/android/content/pm/ShortcutServiceInternal.java,getShortcutIconFd,Yes, this method likely requires permissions related to accessing shortcut icons, as it involves user ID and package information.
/android/content/pm/ShortcutServiceInternal.java,getShortcutIconUri,Yes, because it grants Uri read permission to the caller.
/android/content/pm/ShortcutServiceInternal.java,getShortcutIconUriAsync,Yes, the method grants Uri read permission to the caller.
/android/content/pm/UserProperties.java,getShowInLauncher,Yes, it requires permissions because it involves querying how a profile is shown in the Launcher, and accessing this information typically requires specific permissions to maintain user privacy and security.
/android/content/pm/UserProperties.java,getShowInSettings,Yes, because it requires the permission `MANAGE_USERS` to query the property.
/android/content/pm/UserProperties.java,getStartWithParent,Yes, because the method may throw a `SecurityException` if the necessary permissions are not granted to query the `startWithParent` property.
/android/content/pm/UserProperties.java,getDeleteAppWithParent,Yes, this method appears to require permissions as it references a security exception related to querying the "deleteAppWithParent" functionality, implying that access is restricted.
/android/content/pm/UserProperties.java,getInheritDevicePolicy,Yes, this method requires permissions because it mentions throwing a `SecurityException` if there is no permission to query the inherit device policy.
/android/content/pm/UserProperties.java,getUseParentsContacts,Yes, because it deals with accessing contacts based on user profiles, which usually requires permissions related to contacts.
/android/content/pm/UserProperties.java,getUpdateCrossProfileIntentFiltersOnOTA,Yes, this method requires permissions. It throws a `SecurityException` if permission to query is not granted.
/android/content/pm/UserProperties.java,isMediaSharedWithParent,Yes, this method likely requires permission as it checks if a profile shares media with its parent user and may involve sensitive user data.
/android/content/pm/UserProperties.java,isCredentialShareableWithParent,Yes, because the method involves querying credential-related information, which typically requires permissions to ensure user privacy and security.
/android/content/pm/UserProperties.java,getCrossProfileIntentFilterAccessControl,Yes, because the method checks for permission to query cross-profile intent filter access control and throws a SecurityException if permission is not granted.
/android/content/pm/UserProperties.java,getCrossProfileIntentResolutionStrategy,Yes, because the method involves querying `crossProfileIntentResolutionStrategy`, which likely requires permissions related to cross-profile access.
/android/content/pm/parsing/ApkLiteParseUtils.java,isDeviceAdminReceiver,Yes, the method refers to the permission `BIND_DEVICE_ADMIN`, which indicates that it requires permission to check if the app is a device admin receiver.
/android/content/res/ObbScanner.java,getObbInfo,Yes, this method requires permissions because it accesses the file system to scan an OBB file, which typically requires storage permissions.
/android/print/PrintDocumentAdapter.java,onWrite,Yes, because writing to a file typically requires write permissions.
/android/print/PrintFileDocumentAdapter.java,doInBackground,Yes, because the method interacts with file input and output, which typically requires permissions like READ_EXTERNAL_STORAGE and WRITE_EXTERNAL_STORAGE in Android.
/android/speech/tts/FileSynthesisCallback.java,start,Yes, because the method likely interacts with audio or file operations that require permissions such as `RECORD_AUDIO` or `WRITE_EXTERNAL_STORAGE`.
/android/speech/tts/TextToSpeechService.java,getSecureSettingInt,Yes, this method requires permissions because it accesses secure settings which typically require specific permissions to read on Android (e.g., `READ_SECURE_SETTINGS`).
/android/speech/tts/TextToSpeechService.java,broadcastTtsQueueProcessingCompleted,Yes, because it uses `sendBroadcast`, which typically requires permissions associated with the broadcast action.
/android/speech/tts/TextToSpeechService.java,speak,Yes, this method likely requires permissions related to text-to-speech functionality in Android, particularly as it involves synthesis of speech, which typically requires specific permissions to operate on user data and audio output.
/android/speech/tts/TextToSpeechService.java,synthesizeToFileDescriptor,Yes, this method likely requires permissions to access audio resources or the file system for creating and managing audio output, especially since it deals with speech synthesis and file descriptors.
/android/speech/tts/TextToSpeechService.java,playAudio,Yes, this method likely requires permissions because it handles audio playback via a URI, which typically necessitates permissions related to accessing audio files or external storage.
/android/speech/tts/TextToSpeechService.java,loadVoice,Yes, this method likely requires permissions related to voice recognition or audio usage, as it involves loading and handling voice data within the TextToSpeech framework.
/android/speech/tts/TextToSpeech.java,addSpeech,Yes, the method requires permissions to access sound files from storage (likely READ_EXTERNAL_STORAGE) since it takes a file path as a parameter.
/android/speech/tts/TextToSpeech.java,addEarcon,Yes, because it accesses files from the device's storage.
/android/speech/tts/TextToSpeech.java,speak,Yes, this method requires permission to access the text-to-speech service.
/android/speech/tts/TextToSpeech.java,playSilentUtterance,Yes, it requires permissions because it interacts with the Text-to-Speech (TTS) service, which typically requires permissions to access the TTS engine and audio output features in Android.
/android/speech/tts/TextToSpeech.java,synthesizeToFile,Yes, it requires permissions because it involves writing to a file, which typically requires storage permissions in Android.
/android/speech/tts/TextToSpeech.java,synthesizeToFile,Yes, because it writes audio data to a file which requires write permissions to external storage.
/android/speech/tts/TextToSpeech.java,connect,Yes, because the method involves connecting to a service (presumably TTS service), which typically requires the permission to bind to that service.
/android/speech/tts/BlockingAudioTrack.java,createStreamingAudioTrack,Yes, this method likely requires permissions related to audio recording or playback, such as `RECORD_AUDIO` or `MODIFY_AUDIO_SETTINGS`, depending on its intended use within the application.
/android/filterpacks/videosrc/MediaSource.java,setupMediaPlayer,Yes, this method may require permissions, specifically for accessing media files or network resources depending on its implementation details and usage context.
/android/filterpacks/videosrc/CameraSource.java,open,Yes, because it involves camera operations which typically require permissions like `CAMERA` and possibly `WRITE_EXTERNAL_STORAGE`.
/android/filterpacks/videosrc/CameraSource.java,fieldPortValueUpdated,Yes, because it interacts with camera parameters which typically require camera permissions.
/android/filterpacks/videosrc/CameraSource.java,getCameraParameters,Yes, this method requires permissions because it interacts with the camera hardware, which typically requires the CAMERA permission in Android.
/android/filterpacks/videosrc/CameraSource.java,setCameraParameters,Yes, because changing camera parameters often requires camera permissions such as `CAMERA` in Android.
/android/filterpacks/videosink/MediaEncoderFilter.java,updateMediaRecorderParams,Yes, the method likely requires permissions related to media recording and storage access.
/android/filterpacks/videosink/MediaEncoderFilter.java,open,Yes, the method may require permissions related to recording audio or logging, as it includes a method called `startRecording`, which typically requires appropriate permissions in Android to access the microphone.
/android/filterpacks/videosink/MediaEncoderFilter.java,startRecording,Yes, the method likely requires permissions because it involves starting a `MediaRecorder`, which generally requires permissions for audio and video recording in Android.
/android/filterpacks/videosink/MediaEncoderFilter.java,stopRecording,Yes, because stopping audio or video recording typically requires permissions like RECORD_AUDIO or WRITE_EXTERNAL_STORAGE.
/android/preference/SeekBarVolumizer.java,start,Yes, this method likely requires permissions to access certain resources. It interacts with volume settings and content observers, which typically require permissions like `READ_VOLUME` or `WRITE_SETTINGS` in Android.
/android/preference/SeekBarVolumizer.java,revertVolume,Yes, this method likely requires permissions because it involves adjusting the stream volume, which typically requires the `MODIFY_AUDIO_SETTINGS` permission in Android.
/android/preference/SeekBarVolumizer.java,muteVolume,Yes, this method likely requires permissions, as it appears to manipulate volume settings, which typically requires permissions like `MODIFY_AUDIO_SETTINGS` in Android.
/android/preference/SeekBarVolumizer.java,setListening,Yes, the method involves registering a receiver for broadcast intents which typically requires permissions related to those intents, such as `RECEIVE_BOOT_COMPLETED` or others depending on the actions handled.
/android/preference/SeekBarVolumizer.java,onReceive,Yes, this method likely requires permissions related to audio management, such as modifying audio settings or accessing notification policy, which typically require `MODIFY_AUDIO_SETTINGS` permission in Android.
/android/preference/RingtonePreference.java,onClick,Yes, the method likely requires permissions because it is starting an activity to pick a ringtone, which typically needs the `READ_EXTERNAL_STORAGE` permission if accessing ringtones from external storage.
/android/preference/RingtonePreference.java,onPrepareRingtonePickerIntent,Yes, because using the ringtone picker typically requires permission to access the device's ringtones or audio files.
/android/preference/RingtonePreference.java,onSaveRingtone,Yes, saving a ringtone typically requires `WRITE_EXTERNAL_STORAGE` permission.
/android/permissionpresenterservice/RuntimePermissionPresenterService.java,onBind,Yes, because the method appears to deal with permissions, as indicated by the reference to a method named `getAppPermissions`.
/android/permissionpresenterservice/RuntimePermissionPresenterService.java,getAppPermissions,Yes, this method likely requires permissions because it involves accessing app permissions, which typically requires specific permissions in Android to ensure user privacy and security.
/android/telephony/MbmsStreamingSession.java,create,Yes, requires permissions for accessing streaming services.
/android/telephony/MbmsStreamingSession.java,requestUpdateStreamingServices,Yes, this method likely requires permissions related to accessing streaming media services, as it interacts with a service that is typically restricted for privacy and security reasons.
/android/telephony/MbmsStreamingSession.java,startStreaming,Yes, this method likely requires permissions related to accessing streaming services, as it deals with starting a streaming service and handling callbacks associated with it.
/android/telephony/MbmsStreamingSession.java,onServiceConnected,Yes, this method likely requires permissions because it involves connecting to a service (`onServiceConnected`) which usually accesses system-level resources that require specific permissions in Android.
/android/telephony/CellIdentityGsm.java,getMobileNetworkOperator,Yes, this method requires permissions. It accesses mobile network information, which typically requires the "READ_PHONE_STATE" permission in Android.
/android/telephony/CellBroadcastIntents.java,sendSmsCbReceivedBroadcast,Yes, the method requires permissions to broadcast SMS_CB_RECEIVED_ACTION.
/android/telephony/CallState.java,getNetworkType,Yes, this method requires permissions because accessing telephony information typically requires permissions related to phone state.
/android/telephony/NetworkRegistrationInfo.java,getCellIdentity,Yes, because it requires `ACCESS_FINE_LOCATION` permission to access cell information.
/android/telephony/MbmsGroupCallSession.java,create,Yes, this method likely requires permissions to access mobile broadcasting services.
/android/telephony/MbmsGroupCallSession.java,create,Yes, this method likely requires permissions related to accessing the mobile data subscription, as it involves creating a group call session using the system's default data subscription ID.
/android/telephony/MbmsGroupCallSession.java,startGroupCall,Yes, this method likely requires permissions related to initiating group calls, which may involve network and telecommunication capabilities.
/android/telephony/MbmsGroupCallSession.java,bindAndInitialize,Yes, this method likely requires permissions because it involves binding to a service (`bindAndInitialize`), which typically requires appropriate permissions to access system-level services in Android.
/android/telephony/NetworkScan.java,stopScan,Yes, this method likely requires permissions related to accessing telephony services to stop a network scan.
/android/telephony/PreciseCallState.java,getRingingCallState,Yes, the method likely requires permissions because it deals with sensitive information related to call states.
/android/telephony/PreciseCallState.java,getForegroundCallState,Yes, this method likely requires permissions related to accessing call states or telephony services, as it deals with retrieving the foreground call state which is sensitive information.
/android/telephony/NetworkService.java,requestNetworkRegistrationInfo,Yes, this method likely requires permissions because it involves accessing network registration information, which typically requires specific permissions in Android, such as accessing network state.
/android/telephony/CellIdentityLte.java,getMobileNetworkOperator,Yes, this method likely requires permissions to access mobile network information.
/android/telephony/CellIdentityTdscdma.java,getMobileNetworkOperator,Yes, this method requires permissions to access mobile network information.
/android/telephony/CellInfoCdma.java,setCellSignalStrength,Yes, because setting cell signal strength may require permissions to access cellular network information.
/android/telephony/PhoneNumberUtils.java,getNumberFromIntent,Yes, because it accesses contact data which requires permissions to read contacts.
/android/telephony/PhoneNumberUtils.java,isVoiceMailNumber,Yes, the method requires the READ_PHONE_STATE permission to access voicemail information.
/android/telephony/PhoneNumberUtils.java,isVoiceMailNumber,Yes, the method requires the READ_PHONE_STATE credential to check the voicemail number.
/android/telephony/PhoneNumberUtils.java,isVoiceMailNumber,Yes, because it requires the `READ_PHONE_STATE` permission to check the voicemail number against the provided number.
/android/telephony/UiccAccessRule.java,getCarrierPrivilegeStatus,Yes, this method requires permissions because it involves accessing carrier privilege statuses, which typically necessitates specific permissions related to telephony and package information.
/android/telephony/UiccAccessRule.java,getCarrierPrivilegeStatus,Yes, because it accesses carrier privileges, which typically requires specific permissions related to telephony services.
/android/telephony/VisualVoicemailService.java,onSmsReceived,Yes, this method likely requires permissions to receive SMS messages.
/android/telephony/VisualVoicemailService.java,setSmsFilterSettings,Yes, the method requires the `READ_PHONE_STATE` permission to function properly as it deals with telephony services.
/android/telephony/VisualVoicemailService.java,sendVisualVoicemailSms,Yes, because it requires the SEND_SMS permission to send SMS messages.
/android/telephony/CellIdentityCdma.java,asCellLocation,Yes, this method requires permissions. It deals with cellular location information, which typically requires location-related permissions in Android.
/android/telephony/CellIdentityWcdma.java,getMobileNetworkOperator,Yes, this method may require permissions related to accessing phone state or network information, as it deals with mobile network operator data.
/android/telephony/MmsManager.java,sendMultimediaMessage,Yes, because sending an MMS typically requires permissions related to sending messages and accessing the internet.
/android/telephony/MmsManager.java,downloadMultimediaMessage,Yes, it likely requires permissions to access network resources and manage multimedia messages (MMS).
/android/telephony/UiccCardInfo.java,getEid,Yes, because it mentions that the caller must have the correct permissions to access the EID of the eUICC.
/android/telephony/UiccCardInfo.java,getIccId,Yes, the method requires permissions to access the ICCID, as stated in the Javadoc: it may be omitted if the caller does not have the correct permissions.
/android/telephony/UiccCardInfo.java,getPorts,Yes, because it involves accessing telephony-related information, which typically requires telephony permissions.
/android/telephony/CellBroadcastService.java,onGsmCellBroadcastSms,Yes, this method likely requires permissions related to receiving SMS or handling cell broadcasts, as it deals with GSM cell broadcast SMS messages.
/android/telephony/CellBroadcastService.java,handleGsmCellBroadcastSms,Yes, this method likely requires permissions because handling SMS messages typically requires SMS-related permissions in Android.
/android/telephony/CellBroadcastService.java,handleCdmaCellBroadcastSms,Yes, it likely requires permissions to handle SMS messages in Android, particularly for receiving broadcast messages.
/android/telephony/CellBroadcastService.java,handleCdmaScpMessage,Yes, this method likely requires permissions due to handling cell broadcast messages, which typically involve SMS permissions to receive and process such messages in Android.
/android/telephony/CellBroadcastService.java,getCellBroadcastAreaInfo,Yes, it likely requires permissions to access broadcast area information.
/android/telephony/SubscriptionInfo.java,getIccId,Yes, requires permissions due to the need for `READ_PRIVILEGED_PHONE_STATE` or `READ_PHONE_STATE` for accessing ICC ID.
/android/telephony/SubscriptionInfo.java,getNumber,Yes, it requires permissions such as READ_PHONE_STATE or other specific permissions mentioned.
/android/telephony/SubscriptionInfo.java,getCardString,Yes, the method requires permissions to access sensitive information about the SIM card, specifically the `READ_PRIVILEGED_PHONE_STATE` permission or, in certain cases, `READ_PHONE_STATE`. It is also dependent on carrier privileges or device owner status.
/android/telephony/SubscriptionInfo.java,setDataRoaming,Yes, this method requires permissions to change data roaming settings.
/android/telephony/NumberVerificationCallback.java,onCallReceived,Yes, this method likely requires permissions to access phone call information.
/android/telephony/CarrierRestrictionRules.java,setCarrierRestrictionStatus,Yes, it likely requires permissions because it sets a device's carrier restriction status, which may involve altering system settings related to network access or carrier configurations.
/android/telephony/PreciseDataConnectionState.java,setState,Yes, this method likely requires permissions to modify the state of the data connection, which is typically a sensitive operation in Android.
/android/telephony/MbmsDownloadSession.java,create,Yes, this method likely requires permissions related to accessing the network or managing downloads.
/android/telephony/MbmsDownloadSession.java,create,Yes, requires permission to access the network or data subscription.
/android/telephony/MbmsDownloadSession.java,bindAndInitialize,Yes, it likely requires permissions because it deals with binding to a service (`MBMS_DOWNLOAD_SERVICE_ACTION`), which typically requires specific permissions defined in the Android manifest.
/android/telephony/MbmsDownloadSession.java,requestUpdateFileServices,Yes, this method likely requires permissions because it interacts with telephony services which are typically protected by permissions in Android, such as accessing file services through the telephony framework.
/android/telephony/MbmsDownloadSession.java,download,Yes, this method likely requires permissions related to downloading files. Specifically, it may need permissions for accessing external storage or internet access to download files.
/android/telephony/MbmsDownloadSession.java,addStatusListener,Yes, this method requires permissions because it involves managing downloads, which typically necessitates storage permissions in Android.
/android/telephony/MbmsDownloadSession.java,cancelDownload,Yes, this method requires permissions because it involves canceling a download request, which typically requires specific permissions related to downloading or managing files in Android.
/android/telephony/UiccSlotInfo.java,getCardId,Yes, for accessing ICCID or EID information, permissions related to telephony (like READ_PHONE_STATE) are required.
/android/telephony/UiccSlotInfo.java,getPorts,Yes, it likely requires permissions related to telephony services to access port, ICCID, and active status information.
/android/telephony/NeighboringCellInfo.java,getRssi,Yes, this method likely requires permissions to access signal strength information, which typically involves accessing sensitive telecommunications data.
/android/telephony/NeighboringCellInfo.java,getNetworkType,Yes, because accessing network type may require telephony permissions to access cell information.
/android/telephony/CallAttributes.java,getNetworkType,Yes, it likely requires permissions related to accessing telephony state or network information.
/android/telephony/LocationAccessPolicy.java,setCallingPackage,Yes, this method likely requires permissions because it performs permission checks as indicated by the Javadoc comment.
/android/telephony/LocationAccessPolicy.java,setCallingFeatureId,Yes, because it mentions "performing permission checks" in the Javadoc comment.
/android/telephony/LocationAccessPolicy.java,setMinSdkVersionForCoarse,Yes, because it checks for coarse location permission.
/android/telephony/LocationAccessPolicy.java,setMinSdkVersionForFine,Yes, the method requires fine location permission.
/android/telephony/LocationAccessPolicy.java,build,Yes, the method involves checking minimum SDK versions for location permissions, which require specific permissions to access location data.
/android/telephony/LocationAccessPolicy.java,getAppOpsString,Yes, it requires permissions for accessing location services (ACCESS_FINE_LOCATION, ACCESS_COARSE_LOCATION).
/android/telephony/LocationAccessPolicy.java,checkLocationPermission,Yes, the method checks for location permissions (ACCESS_FINE_LOCATION and ACCESS_COARSE_LOCATION) which require permissions to be granted in the Android system.
/android/telephony/LocationAccessPolicy.java,checkManifestPermission,Yes, because it checks for the permission status of a specific permission for a given context, which requires permission-related checks.
/android/telephony/LocationAccessPolicy.java,checkSystemLocationAccess,Yes, this method likely requires permissions because it checks for system-level location access, which typically involves permission checks for accessing location services in Android.
/android/telephony/LocationAccessPolicy.java,checkInteractAcrossUsersFull,Yes, it checks for the `INTERACT_ACROSS_USERS_FULL` permission.
/android/telephony/emergency/EmergencyNumber.java,getEmergencyNumberSources,Yes, this method likely requires permissions to access emergency number sources, as it deals with emergency information.
/android/telephony/emergency/EmergencyNumber.java,getEmergencyCallRouting,Yes, because it involves emergency call information that may require specific permissions to access.
/android/telephony/euicc/EuiccCardManager.java,getIEuiccCardController,Yes, this method likely requires permissions related to telephony services, as it involves accessing the `TelephonyServiceManager` and `EuiccCardControllerService`.
/android/telephony/euicc/EuiccCardManager.java,requestAllProfiles,Yes, this method likely requires permissions because it interacts with the eUICC (embedded Universal Integrated Circuit Card) and retrieves sensitive profile data, which usually requires specific permissions related to telephony and SIM management.
/android/telephony/euicc/EuiccCardManager.java,requestProfile,Yes, the method likely requires permissions to access device profiles or eUICC data.
/android/telephony/euicc/EuiccCardManager.java,requestEnabledProfileForPort,Yes, the method likely requires permissions to access the eUICC or perform operations related to SIM profiles.
/android/telephony/euicc/EuiccCardManager.java,disableProfile,Yes, this method likely requires permissions to disable a profile, as it interacts with eUICC (embedded Universal Integrated Circuit Card) functionalities which typically require specific permissions for security and privacy reasons.
/android/telephony/euicc/EuiccCardManager.java,switchToProfile,Yes, the method likely requires permissions related to telephony operations (e.g., switching profiles) on a device, as these actions can affect the device's network connectivity and user data.
/android/telephony/euicc/EuiccCardManager.java,switchToProfile,Yes, because switching profiles on an eUICC likely requires permissions related to managing connectivity and SIM profiles.
/android/telephony/euicc/EuiccCardManager.java,setNickname,Yes, this method likely requires permissions because it interacts with eUICC (embedded Universal Integrated Circuit Card) management, which typically involves sensitive operations related to communication networks and SIM profiles.
/android/telephony/euicc/EuiccCardManager.java,deleteProfile,Yes, this method likely requires permissions, as it involves deleting a profile from an eUICC, which typically requires specific security privileges in Android to execute.
/android/telephony/euicc/EuiccCardManager.java,requestDefaultSmdpAddress,Yes, this method likely requires permissions to access sensitive information related to eUICC (Embedded Universal Integrated Circuit Card), such as fetching the default SM-DP+ address.
/android/telephony/euicc/EuiccCardManager.java,requestSmdsAddress,Yes, this method likely requires permissions to access eUICC-related functionalities, which typically involve sensitive user data or network operations.
/android/telephony/euicc/EuiccCardManager.java,setDefaultSmdpAddress,Yes, this method likely requires permissions to access or modify certain system-level functionality related to eUICC (Embedded Universal Integrated Circuit Card) settings.
/android/telephony/euicc/EuiccCardManager.java,requestRulesAuthTable,Yes, the method likely requires permissions related to accessing secure resources or settings on the eUICC (embedded Universal Integrated Circuit Card).
/android/telephony/euicc/EuiccCardManager.java,requestEuiccChallenge,Yes, it likely requires permissions related to accessing SIM or eUICC information.
/android/telephony/euicc/EuiccCardManager.java,requestEuiccInfo1,Yes, because it likely interacts with eUICC (Embedded Universal Integrated Circuit Card) functions which require specific permissions for accessing SIM or eSIM related information.
/android/telephony/euicc/EuiccCardManager.java,requestEuiccInfo2,Yes, this method likely requires permissions because it deals with eUICC information retrieval, which typically involves sensitive user data and system-level access in Android.
/android/telephony/euicc/EuiccCardManager.java,loadBoundProfilePackage,Yes, it likely requires permissions to access hardware features of the eUICC.
/android/telephony/euicc/EuiccCardManager.java,listNotifications,Yes, it likely requires permissions related to notifications or telecommunication services, as it deals with listing notifications for eUICC (Embedded Universal Integrated Circuit Card).
/android/telephony/euicc/EuiccCardManager.java,retrieveNotificationList,Yes, this method likely requires permission because it deals with retrieving notifications, which can involve sensitive user data.
/android/telephony/euicc/EuiccCardManager.java,retrieveNotification,Yes, the method retrieves notification content which may require access to sensitive user information or notifications, likely needing permissions related to notification access or eUICC operations.
/android/telephony/ims/RcsConfig.java,updateConfigForSub,Yes, this method likely requires permissions to access and modify the SIM info database.
/android/telephony/ims/RcsConfig.java,loadRcsConfigForSub,Yes, because it accesses the SIM info database which typically requires permissions related to telephony and reading SIM card data.
/android/telephony/ims/ImsManager.java,getImsMmTelManager,Yes, this method likely requires permissions related to accessing telephony services, as it involves managing a telephony subscription.
/android/telephony/ims/ImsManager.java,getSipDelegateManager,Yes, the method likely requires permissions related to accessing IMS services and managing subscription information, which typically involve telephony permissions in Android.
/android/telephony/ims/ImsCallSession.java,setMute,Yes, this method likely requires permissions related to managing audio or modifying the state of a phone call (e.g., changing the mute state).
/android/telephony/ims/ImsCallSession.java,start,Yes, this method requires permissions to initiate a call, as it involves making an IMS call which typically necessitates appropriate permissions to access telephony services.
/android/telephony/ims/ImsCallSession.java,start,Yes, this method likely requires permissions related to managing calls, as it involves initiating an IMS conference call and interacting with call profiles.
/android/telephony/ims/ImsCallSession.java,accept,Yes, it requires permission to accept incoming calls or session updates.
/android/telephony/ims/ImsCallSession.java,deflect,Yes, deflecting an incoming call typically requires special permissions related to telephony services in Android.
/android/telephony/ims/ImsCallSession.java,reject,Yes, because rejecting an incoming call typically requires permission to access call functionalities, such as `READ_PHONE_STATE` or `MODIFY_PHONE_STATE`.
/android/telephony/ims/ImsCallSession.java,transfer,Yes, this method likely requires permissions to manage ongoing calls, such as a phone transfer, which typically requires permission to access phone state or manage calls.
/android/telephony/ims/ImsCallSession.java,transfer,Yes, this method likely requires permissions to handle calls and especially for transferring call sessions.
/android/telephony/ims/ImsCallSession.java,terminate,Yes, the method likely requires permissions related to call handling in order to terminate a call.
/android/telephony/ims/ImsCallSession.java,hold,Yes, because putting a call on hold typically requires permissions related to managing telephony services.
/android/telephony/ims/ImsCallSession.java,merge,Yes, it likely requires permissions to manage call sessions.
/android/telephony/ims/ImsCallSession.java,extendToConference,Yes, the method likely requires permissions related to managing calls, such as `CALL_PHONE` or `MODIFY_PHONE_STATE`, to extend conference calls.
/android/telephony/ims/ImsCallSession.java,removeParticipants,Yes, this method likely requires permissions to manage conference participants, such as `MODIFY_PHONE_STATE` or similar permissions to perform operations on a conference call.
/android/telephony/ims/ImsCallSession.java,sendDtmf,Yes, requires permission to send DTMF tones over telephony.
/android/telephony/ims/ImsCallSession.java,sendUssd,Yes, this method likely requires permissions because sending a USSD message typically involves communication with the mobile network, which usually necessitates specific permissions like "SEND_USSD".
/android/telephony/ims/ImsCallSession.java,sendRttMessage,Yes, this method likely requires permissions to send messages, as it interfaces with sessions and might involve user data.
/android/telephony/ims/ImsCallSession.java,callSessionUssdMessageReceived,Yes, the method likely requires permissions related to handling USSD messages in telephony, as it deals with incoming USSD communications, which typically require specific telephony permissions.
/android/telephony/ims/ImsSsInfo.java,setClirOutgoingState,Yes, this method likely requires permission to manage call states for outgoing calls.
/android/telephony/ims/SipDelegateConnection.java,sendMessage,Yes, this method may require permissions related to sending messages over the network.
/android/telephony/ims/ImsSsData.java,isTypeBarring,Yes, the method likely requires permissions as it interacts with service types that may pertain to telephony or network features.
/android/telephony/ims/ImsSsData.java,setCallForwardingInfo,Yes, because managing call forwarding typically requires permissions related to phone state or telephony.
/android/telephony/ims/compat/ImsService.java,createMMTelFeature,Yes, this method likely requires permissions related to telephony features due to its involvement with `IMsMMTelFeature`, which is generally associated with IMS (IP Multimedia Subsystem) functionalities.
/android/telephony/ims/compat/ImsService.java,removeImsFeature,Yes, this method likely requires permissions because it involves modifying telephony features, which typically requires specific permissions in Android.
/android/telephony/ims/compat/ImsService.java,createEmergencyMMTelFeatureInternal,Yes, it likely requires permissions related to emergency services and telephony features.
/android/telephony/ims/compat/stub/ImsCallSessionImplBase.java,setMute,Yes, the method likely requires permissions to access and modify call audio settings.
/android/telephony/ims/compat/stub/ImsCallSessionImplBase.java,start,Yes, this method likely requires permissions related to making calls, as it initiates an IMS call.
/android/telephony/ims/compat/stub/ImsCallSessionImplBase.java,startConference,Yes, because initiating a call requires permissions related to telephony and making calls.
/android/telephony/ims/compat/stub/ImsCallSessionImplBase.java,accept,Yes, this method requires permissions because it handles accepting incoming calls, which typically requires specific telephony permissions in Android.
/android/telephony/ims/compat/stub/ImsCallSessionImplBase.java,deflect,Yes, deflecting an incoming call likely requires permission to manage phone calls.
/android/telephony/ims/compat/stub/ImsCallSessionImplBase.java,transfer,Yes, this method likely requires permissions to modify call state and handle calls.
/android/telephony/ims/compat/stub/ImsCallSessionImplBase.java,consultativeTransfer,Yes, this method likely requires permissions as it involves transferring an active call, which typically requires specific telephony permissions in Android.
/android/telephony/ims/compat/stub/ImsCallSessionImplBase.java,reject,Yes, because rejecting an incoming call typically requires phone-related permissions.
/android/telephony/ims/compat/stub/ImsCallSessionImplBase.java,terminate,Yes, this method likely requires permissions related to managing calls, as it terminates a call session.
/android/telephony/ims/compat/stub/ImsCallSessionImplBase.java,hold,Yes, this method likely requires permissions related to managing calls, such as `CALL_PHONE` or `MODIFY_PHONE_STATE`, because it involves controlling the state of a call.
/android/telephony/ims/compat/stub/ImsCallSessionImplBase.java,resume,Yes, because resuming a call typically requires permissions related to phone call management.
/android/telephony/ims/compat/stub/ImsCallSessionImplBase.java,merge,Yes, because it involves merging calls, which typically requires telephony permissions.
/android/telephony/ims/compat/stub/ImsCallSessionImplBase.java,extendToConference,Yes, this method likely requires permissions to manage call participants in a conference call.
/android/telephony/ims/compat/stub/ImsCallSessionImplBase.java,inviteParticipants,Yes, this method likely requires permissions to manage calls and invite participants in a conference call.
/android/telephony/ims/compat/stub/ImsCallSessionImplBase.java,removeParticipants,Yes, this method likely requires permissions to manage conference participants in a call context, as it involves modifying an ongoing communication session.
/android/telephony/ims/compat/stub/ImsCallSessionImplBase.java,sendDtmf,Yes, this method likely requires permissions to access telephony features to send DTMF tones during a call.
/android/telephony/ims/compat/stub/ImsCallSessionImplBase.java,startDtmf,Yes, because sending DTMF tones typically requires permissions to access telephony features.
/android/telephony/ims/compat/stub/ImsCallSessionImplBase.java,sendUssd,Yes, this method requires permissions to send USSD messages, as sending USSD is a sensitive operation that can affect the device's communication capabilities.
/android/telephony/ims/compat/feature/MMTelFeature.java,createCallSession,Yes, this method likely requires permissions related to making calls or managing telephony features in Android.
/android/telephony/ims/compat/feature/MMTelFeature.java,turnOnIms,Yes, this method may require permissions to manage IMS (IP Multimedia Subsystem) settings.
/android/telephony/ims/compat/feature/MMTelFeature.java,startSession,Yes, because it interacts with IMS calls which typically require permissions for telephony and network access.
/android/telephony/ims/compat/feature/MMTelFeature.java,getPendingCallSession,Yes, because retrieving call sessions typically requires permissions related to phone calls.
/android/telephony/ims/stub/ImsSmsImplBase.java,registerSmsListener,Yes, this method likely requires permissions related to SMS handling, as it registers a listener for SMS messages.
/android/telephony/ims/stub/ImsSmsImplBase.java,sendSms,Yes, this method requires permissions because it involves sending an SMS, which typically requires `SEND_SMS` permission in Android.
/android/telephony/ims/stub/ImsSmsImplBase.java,onSmsStatusReportReceived,Yes, this method likely requires permissions related to sending and receiving SMS messages in Android, as it deals with status reports of SMS communications.
/android/telephony/ims/stub/ImsSmsImplBase.java,onSmsStatusReportReceived,Yes, this method likely requires permissions because it deals with SMS status reports, which typically require permissions such as `SEND_SMS` or `RECEIVE_SMS` in the Android SDK.
/android/telephony/ims/stub/ImsConfigImplBase.java,setConfigInt,Yes, the method likely requires permissions because it interacts with IMS (IP Multimedia Subsystem) service settings, which typically need system-level permissions to modify.
/android/telephony/ims/stub/ImsConfigImplBase.java,setConfigString,Yes, because it involves setting configuration values that may require permission to modify system settings related to IMS (IP Multimedia Subsystem).
/android/telephony/ims/stub/ImsCallSessionImplBase.java,sendUssd,Yes, this method likely requires permissions because sending USSD messages is typically a sensitive operation that involves network communication, which often requires specific permissions in the Android manifest (e.g., `SEND_USSD`).
/android/telephony/ims/stub/ImsCallSessionImplBase.java,setMute,Yes, because muting the microphone during a call typically requires microphone permissions.
/android/telephony/ims/stub/ImsCallSessionImplBase.java,start,Yes, this method requires permissions to initiate an IMS call.
/android/telephony/ims/stub/ImsCallSessionImplBase.java,startConference,Yes, it requires permission to initiate calls.
/android/telephony/ims/stub/ImsCallSessionImplBase.java,accept,Yes, it likely requires permissions to manage incoming calls.
/android/telephony/ims/stub/ImsCallSessionImplBase.java,deflect,Yes, because deflecting an incoming call typically requires permission to access phone state or manage calls.
/android/telephony/ims/stub/ImsCallSessionImplBase.java,reject,Yes, the method involves handling incoming calls, which requires the CALL_PHONE permission.
/android/telephony/ims/stub/ImsCallSessionImplBase.java,transfer,Yes, it likely requires permission to manage phone calls or modify call states.
/android/telephony/ims/stub/ImsCallSessionImplBase.java,terminate,Yes, because terminating a call typically requires permission to access phone call features.
/android/telephony/ims/stub/ImsCallSessionImplBase.java,hold,Yes, this method likely requires permissions related to managing calls, as it involves holding a call session.
/android/telephony/ims/stub/ImsCallSessionImplBase.java,resume,Yes, it may require permissions related to making or managing calls.
/android/telephony/ims/stub/ImsCallSessionImplBase.java,merge,Yes, merging calls generally requires permissions related to telephony services.
/android/telephony/ims/stub/ImsCallSessionImplBase.java,extendToConference,Yes, this method likely requires permissions to manage calls or modify conference calls in the Android system.
/android/telephony/ims/stub/ImsCallSessionImplBase.java,inviteParticipants,Yes, this method likely requires permissions to manage calls or access the conference server to invite participants.
/android/telephony/ims/stub/ImsCallSessionImplBase.java,removeParticipants,Yes, because removing participants from a conference call may require permissions related to managing calls.
/android/telephony/ims/stub/ImsCallSessionImplBase.java,sendDtmf,Yes, it likely requires permissions to send DTMF signals as it pertains to telephony operations.
/android/telephony/ims/stub/ImsCallSessionImplBase.java,sendUssd,Yes, this method likely requires permissions because sending USSD messages typically involves accessing telephony services, which require specific permissions in Android (such as SEND_USSD).
/android/telephony/ims/stub/ImsUtImplBase.java,updateCallForward,Yes, this method likely requires permissions related to modifying call forwarding settings on a device.
/android/telephony/ims/stub/ImsUtImplBase.java,updateCallWaiting,Yes, this method likely requires permissions related to modifying call settings.
/android/telephony/ims/stub/ImsUtImplBase.java,updateCallBarringWithPassword,Yes, this method likely requires permissions, as it deals with call barring functionality which typically involves access to telephony features, necessitating specific permissions such as modifying call settings.
/android/telephony/ims/stub/ImsUtImplBase.java,queryCallBarring,Yes, because accessing call barring configuration typically requires permissions related to telephony services.
/android/telephony/ims/stub/ImsUtImplBase.java,updateCallBarring,Yes, this method likely requires permissions related to modifying call settings, such as call barring.
/android/telephony/ims/stub/ImsUtImplBase.java,updateCallBarringForServiceClass,Yes, this method likely requires permissions because it updates call barring configuration, which typically involves sensitive settings that require user permissions to modify.
/android/telephony/ims/stub/ImsUtImplBase.java,updateCallBarringWithPassword,Yes, this method likely requires permissions due to its interaction with call barring settings, which typically involves sensitive telephony features that require user authorization.
/android/telephony/ims/stub/ImsUtImplBase.java,updateCallForward,Yes, this method likely requires permissions because it updates call forwarding settings, which typically involves modifying telephony-related configurations that are sensitive and protected by user privacy permissions.
/android/telephony/ims/stub/ImsUtImplBase.java,updateCallWaiting,Yes, this method likely requires permissions because it updates the configuration of call waiting, which typically involves modifying telephony settings that require user permissions.
/android/telephony/ims/stub/CapabilityExchangeEventListener.java,onRequestPublishCapabilities,Yes, it likely requires permissions to access network capabilities and presence features.
/android/telephony/ims/feature/RcsFeature.java,subscribeForCapabilities,Yes, likely requires permissions to access capabilities.
/android/telephony/ims/feature/MmTelFeature.java,sendSms,Yes, this method likely requires permissions, such as SEND_SMS, to send SMS messages.
/android/telephony/ims/feature/MmTelFeature.java,acknowledgeSms,Yes, the method likely requires permissions because it involves acknowledging SMS messages, which typically requires SMS-related permissions in Android.
/android/telephony/ims/feature/MmTelFeature.java,acknowledgeSmsWithPdu,Yes, because it involves acknowledging an SMS, which typically requires sending or receiving SMS permissions.
/android/telephony/ims/feature/MmTelFeature.java,setTerminalBasedCallWaitingStatus,Yes, this method likely requires permissions related to modifying call settings or telephony features.
/android/telephony/ims/feature/MmTelFeature.java,notifyIncomingCall,Yes, because it involves notifying the framework of an incoming call, which typically requires permissions related to phone state and capability.
/android/telephony/ims/feature/MmTelFeature.java,notifyIncomingCall,Yes, because it deals with incoming calls, which typically requires permissions related to phone state.
/android/telephony/ims/feature/MmTelFeature.java,startImsTrafficSession,Yes, this method requires permissions because it involves starting a traffic session with the IMS framework, which typically requires telecommunication-related permissions in Android.
/android/telephony/ims/feature/MmTelFeature.java,modifyImsTrafficSession,Yes, this method likely requires permissions related to modifying IMS traffic sessions, which typically involve managing network connectivity and service access.
/android/telephony/ims/feature/MmTelFeature.java,shouldProcessCall,Yes, it requires permissions because it deals with placing outgoing calls, which typically requires CALL_PHONE permission in Android.
/android/telephony/ims/feature/MmTelFeature.java,sendSms,Yes, because sending SMS typically requires the `SEND_SMS` permission in Android.
/android/telephony/gsm/SmsManager.java,sendTextMessage,Yes, this method requires permissions because it involves sending SMS messages, which generally requires `SEND_SMS` permission in Android.
/android/telephony/gsm/SmsManager.java,sendMultipartTextMessage,Yes, this method requires permissions to send SMS messages.
/android/telephony/gsm/SmsManager.java,sendDataMessage,Yes, requires SMS permission to send text messages.
/android/telephony/gsm/SmsManager.java,copyMessageToSim,Yes, this method requires permissions. It involves accessing the SIM card to copy SMS data, which necessitates relevant telephony permissions.
/android/telephony/gsm/SmsManager.java,deleteMessageFromSim,Yes, it requires permissions to access SIM data for deleting messages.
/android/telephony/gsm/SmsManager.java,updateMessageOnSim,Yes, because updating messages on the SIM typically requires permissions related to SMS management.
/android/telephony/gsm/SmsManager.java,getAllMessagesFromSim,Yes, because accessing SMS messages stored on the SIM card typically requires permissions related to SMS access.
/android/telephony/gsm/SmsMessage.java,getSubmitPdu,Yes, this method requires permissions to send SMS messages. It involves accessing and preparing SMS data, which requires the `SEND_SMS` permission in the Android manifest.
/android/telephony/gsm/SmsMessage.java,getSubmitPdu,Yes, the method requires permissions because it deals with SMS functionalities, which are regulated by the Android permissions model.
/android/telephony/gsm/SmsMessage.java,getSubmitPdu,Yes, because it involves sending SMS messages, which requires SMS permissions.
/android/telephony/gsm/SmsMessage.java,getOriginatingAddress,Yes, the method retrieves the sender's address of an SMS message, which requires SMS permissions to access due to privacy and security concerns.
/android/telephony/satellite/wrapper/SatelliteManagerWrapper.java,startSatelliteTransmissionUpdates,Yes, this method likely requires permissions related to accessing satellite data and transmission, which are critical for its functionality.
/android/telephony/satellite/wrapper/SatelliteManagerWrapper.java,provisionSatelliteService,Yes, this method likely requires permissions to provision the device with a satellite provider, as it involves interactions that could affect system settings or sensitive functionalities.
/android/telephony/satellite/wrapper/SatelliteManagerWrapper.java,registerForSatelliteDatagram,Yes, this method likely requires permissions because it deals with registering to receive incoming datagrams over satellite, which typically involves accessing network resources.
/android/telephony/satellite/wrapper/SatelliteManagerWrapper.java,sendSatelliteDatagram,Yes, it likely requires permissions to access satellite communication services and potentially location data.
/android/telephony/satellite/stub/SatelliteImplBase.java,provisionSatelliteService,Yes, this method likely requires permissions as it involves provisioning satellite services, which may involve accessing sensitive user data or device capabilities.
/android/telephony/satellite/stub/SatelliteImplBase.java,sendSatelliteDatagram,Yes, it likely requires permissions to access satellite communication features.
/android/telephony/data/DataService.java,setupDataCall,Yes, this method likely requires permissions related to data connectivity, such as modifying network settings or accessing cellular data.
/android/telephony/data/DataService.java,setupDataCall,Yes, this method likely requires permissions to access network states and manage data connections.
/android/telephony/data/DataService.java,setDataProfile,Yes, this method likely requires permissions because it involves manipulating the data profiles, which typically requires specific permissions related to network management and mobile data settings.
/android/telephony/data/DataService.java,requestDataCallList,Yes, because accessing the active data call list typically requires permissions related to network or telephony services.
/android/telephony/data/DataService.java,setupDataCall,Yes, this method likely requires permissions as it involves setting up a data call, which typically requires network-related permissions.
/android/telephony/data/DataService.java,deactivateDataCall,Yes, this method likely requires permissions to deactivate a data call, which is sensitive and typically controlled by system-level access permissions in Android.
/android/telephony/data/DataService.java,setDataProfile,Yes, this method likely requires permissions because it involves setting data profiles, which may affect mobile network configurations and user data.
/android/telephony/data/DataProfile.java,setApn,Yes, it likely requires permissions to modify network settings, which typically includes permissions related to data connections in Android.
/android/telephony/data/ApnSetting.java,makeApnSetting,Yes, this method likely requires permissions because it deals with APN settings and telephony configurations, which generally require `WRITE_APN_SETTINGS` or similar permissions in Android.
/android/telephony/mbms/MbmsTempFileProvider.java,insert,Yes, this method requires permissions because it involves inserting data, which typically requires write access to a content provider and may need permissions like `WRITE_EXTERNAL_STORAGE` or similar for database modifications.
/android/telephony/mbms/MbmsTempFileProvider.java,openFile,Yes, because accessing files through a URI may require storage permissions.
/android/telephony/mbms/MbmsTempFileProvider.java,attachInfo,Yes, because the method involves access to provider information and permissions related to URI grants.
/android/telephony/mbms/MbmsTempFileProvider.java,getUriForFile,Yes, this method requires permissions because it involves accessing and manipulating files, which typically necessitates storage-related permissions in Android.
/android/telephony/mbms/MbmsTempFileProvider.java,getFileForUri,Yes, this method requires permissions. It interacts with file system locations and URIs, which may require permissions like READ_EXTERNAL_STORAGE or WRITE_EXTERNAL_STORAGE depending on the content being accessed or modified.
/android/telephony/mbms/MbmsDownloadReceiver.java,onReceive,Yes, it likely requires permissions as it seems to interact with file storage and actions that may involve user data or system resources.
/android/telephony/mbms/MbmsDownloadReceiver.java,moveDownloadedFile,Yes, it requires permissions, likely related to file access and broadcasting intents.
/android/telephony/mbms/MbmsDownloadReceiver.java,cleanupPostMove,Yes, it likely requires permissions because it deals with file operations (deleting temp files), which generally require storage permissions in Android.
/android/telephony/mbms/MbmsDownloadReceiver.java,generateFreshTempFiles,Yes, because the method involves file generation which may require permissions like WRITE_EXTERNAL_STORAGE and READ_EXTERNAL_STORAGE depending on where the files are created and accessed.
/android/telephony/mbms/MbmsDownloadReceiver.java,verifyPermissionIntegrity,Yes, because it involves querying for resolved intents that may require specific permissions, particularly related to `MbmsDownloadReceiver` and the `SEND_EMBMS_INTENTS` permission.
/android/telephony/mbms/MbmsUtils.java,getMiddlewareServiceInfo,Yes, the method interacts with system services which may require specific permissions, such as querying installed applications or services.
/android/telephony/mbms/MbmsUtils.java,startBinding,Yes, requires permission to bind a service.
/android/telephony/mbms/vendor/MbmsDownloadServiceBase.java,requestUpdateFileServices,Yes, this method likely requires permissions related to accessing or managing subscription services or data streaming, as it deals with app-related service classes and subscription IDs which are typically controlled for security purposes in Android.
/android/telephony/mbms/vendor/MbmsDownloadServiceBase.java,download,Yes, the method likely requires permissions for internet access to download files.
/android/telephony/mbms/vendor/MbmsGroupCallServiceBase.java,stopGroupCall,Yes, this method likely requires permissions related to managing group calls in a telecommunication context.
/android/telephony/mbms/vendor/MbmsGroupCallServiceBase.java,startGroupCall,Yes, this method likely requires permissions related to making a group call, possibly involving telephony or communication features in Android.
/android/telephony/mbms/vendor/MbmsGroupCallServiceBase.java,startGroupCall,Yes, this method likely requires permissions to access telecommunication features and initiate calls, which may involve sensitive user data.
/android/telephony/mbms/vendor/MbmsStreamingServiceBase.java,initialize,Yes, it likely requires permissions as it involves initializing a streaming service, which generally requires specific permissions related to network access or service usage in Android.
/android/filterfw/core/GLEnvironment.java,registerSurfaceFromMediaRecorder,Yes, this method requires permissions because it interacts with the `MediaRecorder`, which is associated with recording audio or video and requires appropriate permissions such as `RECORD_AUDIO` or `CAMERA`.
/android/telecom/CallControl.java,setActive,Yes, the method likely requires permissions to manage call states in the telecom system, as it deals with active call control.
/android/telecom/CallControl.java,answer,Yes, this method likely requires permissions because it interacts with the Telecom service to answer incoming calls, which typically requires phone-related permissions.
/android/telecom/CallControl.java,setInactive,Yes, this method likely requires permissions to interact with the Telecom service and alter call states on a device.
/android/telecom/CallControl.java,disconnect,Yes, this method requires permissions as it interacts with Telecom functionalities which typically require user permissions to manage calls.
/android/telecom/CallControl.java,startCallStreaming,Yes, the method `startCallStreaming` likely requires permissions related to managing calls and streaming audio, as it interacts with `CallStreamingService` and telecom functionality.
/android/telecom/DefaultDialerManager.java,setDefaultDialerApplication,Yes, the method requires permissions to write to secure settings and manage users.
/android/telecom/DefaultDialerManager.java,setDefaultDialerApplication,Yes, the method requires permissions to write to secure settings and manage users on the device.
/android/telecom/DefaultDialerManager.java,getDefaultDialerApplication,Yes, the caller needs permission to manage users on the device.
/android/telecom/DefaultDialerManager.java,getDefaultDialerApplication,Yes, the method requires permission to manage users on the device.
/android/telecom/DefaultDialerManager.java,getInstalledDialerApplications,Yes, this method may require permission to access installed applications, specifically the permission to read package information or access dialer applications.
/android/telecom/DefaultDialerManager.java,getTelecomManager,Yes, this method requires permission to access the TELECOM_SERVICE, which typically requires permissions related to telephony services in Android.
/android/telecom/CallRedirectionService.java,onPlaceCall,Yes, this method involves handling phone calls which typically requires permissions related to phone call management in Android (like `CALL_PHONE`, `READ_PHONE_STATE`, etc.).
/android/telecom/CallRedirectionService.java,placeCall,Yes, this method likely requires permissions related to call handling (e.g., `CALL_PHONE`, `READ_PHONE_STATE`) as it interacts with phone call management and redirection services.
/android/telecom/RemoteConference.java,playDtmfTone,Yes, this method likely requires permissions related to telephony, as it involves playing DTMF tones, which is typically tied to phone functionalities.
/android/telecom/ConnectionServiceAdapter.java,setActive,Yes, this method likely requires permissions because it's related to managing call states, which typically necessitates telephony permissions in Android.
/android/telecom/ConnectionServiceAdapter.java,setRinging,Yes, this method likely requires permissions related to managing calls, as setting a call's state to "ringing" involves controlling telephony features.
/android/telecom/ConnectionServiceAdapter.java,setDialing,Yes, this method likely requires permissions because it involves changing the state of a call, which typically requires specific telephony permissions in the Android SDK.
/android/telecom/ConnectionServiceAdapter.java,setDisconnected,Yes, this method likely requires permissions because it deals with managing call states, which typically requires specific telephony permissions in Android.
/android/telecom/ConnectionServiceAdapter.java,setOnHold,Yes, this method likely requires permissions related to managing call states in Android, such as `MODIFY_PHONE_STATE`.
/android/telecom/ConnectionServiceAdapter.java,setRingbackRequested,Yes, this method likely requires permissions related to call management, as it interacts with a telecom service to handle call-related features (ringback tone).
/android/telecom/ConnectionServiceAdapter.java,queryRemoteConnectionServices,Yes, the method is likely related to remote connection services used to place calls, which typically requires permissions such as `CALL_PHONE` or related telephony permissions in Android.
/android/telecom/ConnectionServiceAdapter.java,requestCallEndpointChange,Yes, the method likely requires permissions to manage call endpoints, which typically involves telephony features that require user consent.
/android/telecom/ConnectionServiceAdapter.java,setCallDirection,Yes, this method likely requires permissions because it modifies the direction of a call, which typically involves telephony operations that are sensitive and require specific permissions for accessing or modifying call states in an Android application.
/android/telecom/ConnectionServiceAdapter.java,queryLocation,Yes, this method likely requires location permissions as it queries location information.
/android/telecom/DisconnectCause.java,getTelephonyPreciseDisconnectCause,Yes, because accessing telephony information may require specific permissions related to telephony services.
/android/telecom/RemoteConnectionService.java,createRemoteConference,Yes, the method `createRemoteConference` likely requires permissions related to managing phone accounts and making connections. This could include permissions like `BIND_telecom_service` or any specific telecom-related permissions necessary for creating network connections or handling phone accounts.
/android/telecom/AuthenticatorService.java,addAccount,Yes, because the method deals with account management, which typically requires permissions related to account access.
/android/telecom/AuthenticatorService.java,getAuthToken,Yes, this method may require permissions related to accessing user accounts or performing authentication tasks.
/android/telecom/Call.java,getContactPhotoUri,Yes, the method requires the `READ_CONTACTS` permission to access contact photo URI.
/android/telecom/Call.java,getContactDisplayName,Yes, because it requires the `READ_CONTACTS` permission to access the caller's contact name.
/android/telecom/Call.java,answer,Yes, this method likely requires permissions to manage calls, such as `ANSWER_PHONE_CALLS`, due to its involvement in answering a call.
/android/telecom/Call.java,deflect,Yes, because deflecting a call typically requires permissions related to managing calls.
/android/telecom/Call.java,reject,Yes, the method involves rejecting a call, which typically requires permissions related to managing phone calls.
/android/telecom/Call.java,transfer,Yes, this method likely requires permissions to handle telephony operations, such as transferring calls.
/android/telecom/Call.java,transfer,Yes, this method likely requires permissions related to handling calls, such as `CALL_PHONE` or `MODIFY_PHONE_STATE`, as it involves transferring a call.
/android/telecom/Call.java,enterBackgroundAudioProcessing,Yes, because it requires foreground service type for microphone usage, which needs the appropriate permissions.
/android/telecom/Call.java,playDtmfTone,Yes, this method likely requires permissions because it interacts with telecom services, which generally require specific permissions to access features like making calls or sending DTMF tones.
/android/telecom/Call.java,splitFromConference,Yes, this method likely requires permissions related to managing calls, such as `android.permission.CALL_PHONE` or similar, to perform actions on call states.
/android/telecom/Call.java,addConferenceParticipants,Yes, this method likely requires permissions related to managing calls, such as adding participants to a conference call.
/android/telecom/Call.java,pullExternalCall,Yes, the method involves managing calls, which typically requires permissions related to telephony and call management.
/android/telecom/Call.java,handoverTo,Yes, this method requires permissions related to call handling and telephony operations, as it involves initiating a handover of a call, which is sensitive and requires appropriate access to phone accounts and connection services.
/android/telecom/Call.java,getConferenceableCalls,Yes, this method requires permissions because it involves accessing confidential call information related to conferencing.
/android/telecom/CallerInfoAsyncQuery.java,startQuery,Yes, the method likely requires permissions to access contact data.
/android/telecom/CallerInfoAsyncQuery.java,startQuery,Yes, this method likely requires permissions as it involves querying information related to phone numbers and potentially SIP addresses, which typically requires permissions to access user data or phone state in Android.
/android/telecom/CallerInfoAsyncQuery.java,startQuery,Yes, this method likely requires permissions to access telephony information, particularly if it interacts with `TelephonyManager` and involves querying phone numbers.
/android/telecom/StreamingCallAdapter.java,setStreamingState,Yes, this method likely requires permissions as it involves changing the state of a call, which is typically restricted to protect user privacy and security.
/android/telecom/RemoteConnectionManager.java,createRemoteConnection,Yes, because it involves making a remote connection which typically requires specific permissions related to phone and network access in Android.
/android/telecom/ConnectionServiceAdapterServant.java,queryLocation,Yes, this method likely requires permissions related to location access, as it suggests querying location information.
/android/telecom/InCallAdapter.java,answerCall,Yes, this method likely requires permissions to manage phone calls as it involves answering a call.
/android/telecom/InCallAdapter.java,deflectCall,Yes, this method likely requires permissions to access and manipulate calls in the telecom framework.
/android/telecom/InCallAdapter.java,rejectCall,Yes, requires permissions: it interacts with the Telecom service to reject calls, which typically requires CALL_PHONE or other relevant permissions.
/android/telecom/InCallAdapter.java,rejectCall,Yes, because rejecting a call typically requires permissions related to telephony operations.
/android/telecom/InCallAdapter.java,transferCall,Yes, it likely requires permissions to interact with telecom services and transfer calls.
/android/telecom/InCallAdapter.java,transferCall,Yes, this method likely requires permissions related to managing calls in the telecom framework, as it involves transferring calls.
/android/telecom/InCallAdapter.java,disconnectCall,Yes, requires permissions. It interacts with Telecom services to disconnect a call, which typically requires system-level permissions for security.
/android/telecom/InCallAdapter.java,holdCall,Yes, this method likely requires permissions because it interacts with Telecom services to manage call state.
/android/telecom/InCallAdapter.java,mute,Yes, the method mutes the microphone, which typically requires permissions related to audio recording or microphone access in Android.
/android/telecom/InCallAdapter.java,enterBackgroundAudioProcessing,Yes, this method likely requires permissions to enter background audio processing for a call, which may involve managing phone audio states.
/android/telecom/InCallAdapter.java,requestBluetoothAudio,Yes, because it involves routing audio via Bluetooth, which typically requires Bluetooth permissions in Android.
/android/telecom/InCallAdapter.java,requestCallEndpointChange,Yes, this method likely requires permissions related to audio routing and calls.
/android/telecom/InCallAdapter.java,playDtmfTone,Yes, because it interacts with Telecom services which require specific permissions to manage calls.
/android/telecom/InCallAdapter.java,conference,Yes, this method likely requires permissions related to managing telephony or making calls, as it involves conferencing calls.
/android/telecom/InCallAdapter.java,addConferenceParticipants,Yes, because it involves managing call participants, which typically requires telecom-related permissions.
/android/telecom/InCallAdapter.java,mergeConference,Yes, this method likely requires permissions because it involves manipulating call states, which typically requires specific permissions related to phone and call management in Android.
/android/telecom/InCallAdapter.java,swapConference,Yes, it likely requires permissions because it interacts with Telecom services to manage calls.
/android/telecom/InCallAdapter.java,pullExternalCall,Yes, because interacting with Telecom services typically requires permissions related to phone calls.
/android/telecom/InCallAdapter.java,sendCallEvent,Yes, it likely requires permissions related to managing calls or telecom services.
/android/accounts/GrantCredentialsPermissionActivity.java,onClick,Yes, it requires permissions because it interacts with the AccountManager, which typically requires permissions related to accounts (e.g., `android.permission.GET_ACCOUNTS`, `android.permission.MANAGE_ACCOUNTS`).
/android/accounts/AccountManagerPerfTest.java,testGetAccounts,Yes, the method requires permissions because it checks for the "GET_ACCOUNTS" permission to access accounts.
/android/accounts/ChooseTypeAndAccountActivity.java,onCreate,Yes, it appears that the method interacts with user accounts, therefore it may require permissions related to account management such as `GET_ACCOUNTS` or `USE_CREDENTIALS`.
/android/accounts/ChooseTypeAndAccountActivity.java,runAddAccountForAuthenticator,Yes, this method likely requires permissions related to account management, specifically to add an account.
/android/accounts/ChooseTypeAndAccountActivity.java,setResultAndFinish,Yes, because it interacts with `AccountManager`, which typically requires permissions related to account management (e.g., `GET_ACCOUNTS` or similar permissions).
/android/accounts/ChooseTypeAndAccountActivity.java,getAcceptableAccountChoices,Yes, this method requires permissions because it deals with account management, which typically requires permissions to access the user's accounts.
/android/accounts/ChooseTypeAndAccountActivity.java,getAllowableAccountSet,Yes, this method likely requires permissions related to accessing account information, as it deals with allowable accounts specified by an intent.
/android/accounts/AccountManagerInternal.java,backupAccountAccessPermissions,Yes, because it involves backing up account access permissions, which typically requires user permission.
/android/accounts/AccountManagerInternal.java,restoreAccountAccessPermissions,Yes, it likely requires permissions to restore account access, as it involves user accounts which typically necessitate user consent or special privileges.
/android/accounts/ChooseAccountActivity.java,onListItemClick,Yes, because it interacts with AccountManager which requires permissions related to account management.
/android/appwidget/AppWidgetHost.java,bindService,Yes, because `bindService` typically requires the `BIND_APPWIDGET` permission to interact with the app widget service.
/android/appwidget/AppWidgetManagerInternal.java,unlockUser,Yes, this method likely requires permission to unlock a user, as it deals with user management actions that are sensitive in nature.
/android/gesture/GestureLibraries.java,fromFile,Yes, this method requires permissions because it accesses the file system to read from a specified file path, which typically requires storage permissions in Android.
/android/gesture/GestureLibraries.java,fromFile,Yes, the method involves accessing a file, which typically requires permissions related to file storage.
/android/gesture/GestureLibraries.java,fromPrivateFile,Yes, it likely requires permissions to access private files in the device's storage.
/android/gesture/GestureLibraries.java,save,Yes, the method likely requires permissions to write to storage since it involves creating and saving files.
/android/gesture/GestureLibraries.java,load,Yes, the method involves file operations (reading a file) which typically require permissions in Android, such as `READ_EXTERNAL_STORAGE`.
/android/window/TransitionInfo.java,setAllowEnterPip,Yes, this method likely requires permission related to managing Picture-in-Picture (PiP) mode, as it sets a flag that involves an AppOpsManager check for PiP permission.
/android/window/ScreenCapture.java,captureDisplay,Yes, because capturing a screenshot typically requires permission to access the device's display or screen.
/android/window/ScreenCapture.java,captureDisplay,Yes, this method likely requires permissions. It involves capturing screen content, which typically requires the `WRITE_EXTERNAL_STORAGE` or specific screen capture permissions for security and privacy reasons.
/android/window/ScreenCapture.java,captureLayers,Yes, because capturing screen content may require permissions related to screen recording or capturing, depending on the Android version and settings.
/android/window/ScreenCapture.java,captureLayers,Yes, this method requires permissions because it captures screen content, which typically requires the "SYSTEM_ALERT_WINDOW" or "READ_EXTERNAL_STORAGE" permissions, depending on the implementation context.
/android/window/ScreenCapture.java,captureLayers,Yes, this method likely requires permissions because it involves capturing a screenshot, which typically requires user consent or explicit permission in Android.
/android/window/ScreenCapture.java,createSyncCaptureListener,Yes, this method likely requires permissions related to screen capturing, as it implies accessing screen content.
/android/window/TaskFragmentOrganizer.java,onTransactionHandled,Yes, this method requires permissions as it references the enforcement of permissions for task fragment organizers.
/android/window/TaskFragmentOrganizer.java,applyTransaction,Yes, it requires permissions because it refers to enforcing permissions via the `enforceTaskFragmentOrganizerPermission` method.
/android/nfc/Tag.java,rediscover,Yes, the method may require permissions related to NFC (Near Field Communication) since it interacts with NFC tags, which typically necessitate the `android.permission.NFC` permission.
/android/nfc/Tag.java,getTagService,Yes, the method likely requires permissions related to NFC functionality, as it appears to handle NFC tag services which generally require specific permissions in Android (e.g., `android.permission.NFC`).
/android/nfc/NfcActivityManager.java,verifyNfcPermission,Yes, the method likely requires NFC permissions to verify NFC functionality.
/android/nfc/NfcActivityManager.java,onTagDiscovered,Yes, it requires permissions because the method is likely related to NFC (Near Field Communication) functionality, which typically requires permissions to access NFC tags.
/android/nfc/cardemulation/HostNfcFService.java,handleMessage,Yes, this method may require permissions. It interacts with `mNfcService`, which likely involves NFC operations that typically require permissions such as `android.permission.NFC`.
/android/nfc/cardemulation/HostNfcFService.java,processNfcFPacket,Yes, this method requires permissions because it interacts with NFC (Near Field Communication) functionality, which requires specific permissions to access NFC hardware on the device.
/android/nfc/cardemulation/NfcFCardEmulation.java,registerSystemCodeForService,Yes, the method requires permissions because it registers a System Code for a service, which typically needs access to specific system resources and services.
/android/nfc/cardemulation/NfcFCardEmulation.java,getNfcid2ForService,Yes, because accessing NFC functionality typically requires NFC-related permissions in the AndroidManifest.
/android/nfc/cardemulation/NfcFCardEmulation.java,setNfcid2ForService,Yes, the method requires permissions because it interacts with NFC services, which typically require specific NFC permissions in Android.
/android/nfc/cardemulation/NfcFCardEmulation.java,enableService,Yes, this method requires permissions because it interacts with NFC services, which generally require location permissions to access.
/android/nfc/cardemulation/NfcFCardEmulation.java,getNfcFServices,Yes, because it likely involves NFC services which require NFC permissions in Android.
/android/nfc/cardemulation/NfcFCardEmulation.java,recoverService,Yes, this method likely requires permissions related to NFC (Near Field Communication) functionality, potentially `android.permission.NFC` or similar, as it involves accessing NFC services.
/android/nfc/tech/NfcA.java,transceive,Yes, requires NFC permission to operate with NFC tags.
/android/nfc/tech/NfcA.java,setTimeout,Yes, setting the timeout requires the NFC permission.
/android/nfc/tech/NfcA.java,getTimeout,Yes, requires NFC permission to access the timeout feature.
/android/nfc/tech/BasicTagTechnology.java,connect,Yes, this method likely requires permissions, specifically for NFC operations, as it involves connecting to technologies using the NFC service.
/android/nfc/tech/BasicTagTechnology.java,transceive,Yes, this method likely requires permissions because it interacts with the NFC service, which typically requires the `android.permission.NFC` permission to function properly.
/android/nfc/tech/MifareUltralight.java,readPages,Yes, requires NFC permission to read from NFC tags.
/android/nfc/tech/MifareUltralight.java,writePage,Yes, requires NFC permission for I/O operation with NFC tags.
/android/nfc/tech/MifareUltralight.java,transceive,Yes, requires NFC permission to access NFC features.
/android/nfc/tech/MifareUltralight.java,setTimeout,Yes, it requires NFC permission.
/android/nfc/tech/MifareUltralight.java,getTimeout,Yes, requires NFC permission for accessing transceive timeout.
/android/nfc/tech/TagTechnology.java,connect,Yes, requires NFC permission for I/O operations with the tag.
/android/nfc/tech/TagTechnology.java,reconnect,Yes, requires NFC permission for RF activity.
/android/nfc/tech/TagTechnology.java,close,Yes, requires NFC permission.
/android/nfc/tech/NdefFormatable.java,format,Yes, requires NFC permission for I/O operations with tags.
/android/nfc/tech/NdefFormatable.java,formatReadOnly,Yes, requires NFC permission for reading/writing to NFC tags.
/android/nfc/tech/NdefFormatable.java,format,Yes, this method likely requires permissions because it interacts with NFC (Near Field Communication) services, which typically require specific permissions like `NFC` and potentially `NFC_ADMIN` in Android applications.
/android/nfc/tech/NfcF.java,transceive,Yes, requires NFC permission to access NFC functionalities.
/android/nfc/tech/NfcF.java,setTimeout,Yes, because it requires the NFC permission to operate on NFC tags.
/android/nfc/tech/NfcF.java,getTimeout,Yes, requires NFC permission for accessing the timeout related to NFC tags.
/android/nfc/tech/IsoDep.java,setTimeout,Yes, requires NFC permission for tag transactions.
/android/nfc/tech/IsoDep.java,getTimeout,Yes, requires the NFC permission.
/android/nfc/tech/IsoDep.java,transceive,Yes, requires NFC permission for communication with NFC tags.
/android/nfc/tech/Ndef.java,isWritable,Yes, requires NFC permission to check if the tag is writable.
/android/nfc/tech/Ndef.java,getNdefMessage,Yes, Requires NFC permission to read NDEF messages from tags.
/android/nfc/tech/Ndef.java,writeNdefMessage,Yes, requires NFC permission for writing to a tag.
/android/nfc/tech/Ndef.java,makeReadOnly,Yes, requires NFC permission to access NFC features.
/android/nfc/tech/NfcV.java,get,Yes, this method requires permissions because it interacts with NFC technology, which typically requires NFC-related permissions in Android.
/android/nfc/tech/NfcV.java,transceive,Yes, requires NFC permission for accessing NFC functionality.
/android/nfc/tech/NfcB.java,transceive,Yes, requires NFC permission to interact with NFC tags.
/android/nfc/tech/MifareClassic.java,authenticateSectorWithKeyA,Yes, requires NFC permission for authentication operations on NFC tags.
/android/nfc/tech/MifareClassic.java,authenticateSectorWithKeyB,Yes, requires NFC permission for authentication operations.
/android/nfc/tech/MifareClassic.java,readBlock,Yes, requires NFC permission to read data from NFC tags.
/android/nfc/tech/MifareClassic.java,writeBlock,Yes, requires NFC permission for I/O operation to write block.
/android/nfc/tech/MifareClassic.java,increment,Yes, requires NFC permission for I/O operation with tags.
/android/nfc/tech/MifareClassic.java,decrement,Yes, requires NFC permission for I/O operations with NFC tags.
/android/nfc/tech/MifareClassic.java,transfer,Yes, because it requires NFC permission for I/O operations.
/android/nfc/tech/MifareClassic.java,restore,Yes, the method requires the NFC permission for communication with NFC tags.
/android/nfc/tech/MifareClassic.java,transceive,Yes, requires NFC permission for communication with NFC tags.
/android/nfc/tech/MifareClassic.java,setTimeout,Yes, requires NFC permission for transceive operations.
/android/nfc/tech/MifareClassic.java,getTimeout,Yes, requires NFC permission to access the current transceive timeout.
/android/view/DragAndDropPermissions.java,take,Yes, this method requires permissions to handle drag and drop operations associated with an Activity.
/android/view/DragAndDropPermissions.java,release,Yes, it requires permissions to manage permissions.
/android/view/WindowlessWindowManager.java,setWallpaperPosition,Yes, this method likely requires permissions to change wallpaper settings or positions, as manipulating wallpaper typically involves user consent and system permissions.
/android/view/WindowlessWindowManager.java,setWallpaperDisplayOffset,Yes, setting a wallpaper typically requires `SET_WALLPAPER` permission.
/android/view/WindowlessWindowManager.java,sendWallpaperCommand,Yes, this method likely requires permissions to modify wallpaper settings.
/android/view/OnReceiveContentListener.java,onReceiveContent,Yes, because it handles content URIs which require read permissions.
/android/view/WindowCallbackWrapper.java,dispatchTouchEvent,Yes, this method likely requires permission to handle touch events as it deals with user input.
/android/view/OrientationEventListener.java,enable,Yes, because enabling the OrientationEventListener requires access to the device's sensors.
/android/view/OrientationEventListener.java,onSensorChanged,Yes, this method requires permissions. It involves listening to sensor changes, which may require permissions related to accessing device sensors, such as `android.permission.BODY_SENSORS` or others depending on the specific sensor being accessed.
/android/view/WindowManagerImpl.java,notifyScreenshotListeners,Yes, this method likely requires permissions related to system services (e.g., `android.permission.SYSTEM_ALERT_WINDOW`) due to its interaction with window manager services.
/android/view/inputmethod/BaseInputConnection.java,commitContent,Yes, this method may require permissions because it involves content insertion, which potentially includes accessing sensitive data or resources.
/android/view/inputmethod/InputContentInfo.java,requestPermission,Yes, this method requires permissions as it requests temporary access to a content URI.
/android/view/inputmethod/InputConnection.java,commitContent,Yes, it may require permissions. The method involves committing content that might involve URI permissions, as indicated by the mention of `INPUT_CONTENT_GRANT_READ_URI_PERMISSION` and granting permissions for the editor to read the content.
/android/view/contentcapture/AbstractContentCapturePerfTestCase.java,setService,Yes, this method likely requires permissions because it deals with setting a service and running shell commands, which typically require elevated privileges in an Android environment.
/android/view/contentcapture/AbstractContentCapturePerfTestCase.java,setStayAwake,Yes, this method requires permissions because it interacts with `Settings.Global`, which typically requires `WRITE_SETTINGS` permission to modify global settings like "Stay awake".
/android/view/contentcapture/AbstractContentCapturePerfTestCase.java,setStayOnWhilePluggedIn,Yes, it likely requires permissions related to modifying global settings.
/android/view/contentcapture/AbstractContentCapturePerfTestCase.java,prepareDevice,Yes, it requires permissions because it includes commands that interact with device status and UI (e.g., waking up the device, dismissing the keyguard, collapsing the status bar), which typically require certain permissions in Android.
/android/view/contentcapture/DataShareWriteAdapter.java,onWrite,Yes, because writing to a file typically requires filesystem permissions.
/android/view/textclassifier/TextClassificationManagerPerfTest.java,setUpClass,Yes, the method requires permissions because it calls `adoptShellPermissionIdentity`, which suggests it is handling certain permissions related to device configuration.
/android/view/autofill/AutofillTestWatcher.java,setAutofillService,Yes, this method likely requires permissions because it interacts with the device's settings to configure the autofill service.
/android/view/autofill/AutofillTestWatcher.java,resetAutofillService,Yes, it likely requires permissions because it interacts with system settings, specifically the autofill service, which typically requires appropriate permissions to modify.
/android/view/autofill/AutofillTestWatcher.java,prepareDevice,Yes, it requires permissions. The method commands actions that can control device wake-up, keyguard dismissal, and status bar behavior, which typically require certain permissions like `WAKE_LOCK` and `DISABLE_KEYGUARD`.
/android/view/autofill/AutofillTestWatcher.java,enableVerboseLog,Yes, this method likely requires permissions to execute shell commands.
/android/view/accessibility/DirectAccessibilityConnection.java,findAccessibilityNodeInfoByAccessibilityId,Yes, this method requires permissions related to accessibility features in Android, as it interacts with accessibility services to obtain information about UI elements.
/android/view/accessibility/DirectAccessibilityConnection.java,findAccessibilityNodeInfosByText,Yes, the method `findAccessibilityNodeInfosByText` requires permissions because it relates to accessing accessibility services, which generally require specific permissions to interact with or retrieve information from UI elements in Android.
/android/view/accessibility/DirectAccessibilityConnection.java,findAccessibilityNodeInfosByViewId,Yes, because accessing accessibility node information may require permissions related to accessibility services.
/android/view/accessibility/AccessibilityDisplayProxy.java,getWindows,Yes, this method requires permissions because it interacts with accessibility services, which typically require specific permissions to access information about the user's display and windows.
/android/view/accessibility/AccessibilityCache.java,getFocus,Yes, the method interacts with accessibility features which typically require specific permissions related to accessibility services in Android.
/android/accessibilityservice/TouchInteractionController.java,setServiceDetectsGestures,Yes, this method likely requires permissions related to accessibility services, as it deals with accessibility gestures and interactions.
/android/accessibilityservice/TouchInteractionController.java,requestTouchExploration,Yes, it requires permissions to access accessibility services and enable touch exploration features.
/android/accessibilityservice/TouchInteractionController.java,requestDragging,Yes, this method likely requires permissions due to its relation to accessibility services, which typically require specific permissions to interact with the user interface.
/android/accessibilityservice/TouchInteractionController.java,performClick,Yes, this method likely requires permissions because it interacts with accessibility services, which typically need user granted permissions to operate properly in an Android environment.
/android/os/RedactingFileDescriptor.java,open,Yes, it likely requires permissions to access the file system for reading or modifying files.
/android/os/SystemVibrator.java,getInfo,Yes, this method likely requires permissions to access the vibrator service, which is generally protected by permissions in Android (specifically `VIBRATE`).
/android/os/SystemVibrator.java,isVibrating,Yes, this method requires permissions because it interacts with the vibrator service, which necessitates the `VIBRATE` permission in Android.
/android/os/SystemVibrator.java,addVibratorStateListener,Yes, this method likely requires permissions because it interacts with the vibrator hardware, which necessitates specific permissions to access.
/android/os/SystemVibrator.java,setAlwaysOnEffect,Yes, this method likely requires permissions related to accessing vibrator functionality in Android.
/android/os/SystemVibrator.java,vibrate,Yes, the method requires permissions to access the device's vibrator.
/android/os/SystemVibrator.java,cancel,Yes, this method likely requires permissions because it interacts with the vibrator service, which generally requires the `VIBRATE` permission in Android.
/android/os/SystemVibrator.java,cancel,Yes, because it likely interacts with the vibrator hardware, which requires the `VIBRATE` permission in Android.
/android/os/BatterySaverPolicyConfig.java,setAdvertiseIsEnabled,Yes, this method likely requires permission to modify system settings, as it affects Battery Saver status visibility to other apps.
/android/os/BatterySaverPolicyConfig.java,setForceAllAppsStandby,Yes, it likely requires permissions related to battery management or app standby settings.
/android/os/BatterySaverPolicyConfig.java,setLocationMode,Yes, this method likely requires permissions related to location services in Android, such as `ACCESS_FINE_LOCATION` or `ACCESS_COARSE_LOCATION`, to modify location settings.
/android/os/IBinder.java,shellCommand,Yes, this method likely requires permissions because executing shell commands can interact with system-level operations and sensitive data.
/android/os/BatteryStatsInternal.java,getWifiIfaces,Yes, it requires permissions because accessing Wi-Fi interfaces typically requires permissions related to network access.
/android/os/BatteryStatsInternal.java,getBatteryUsageStats,Yes, this method likely requires permissions to access battery usage data.
/android/os/PowerSaveState.java,setBatterySaverEnabled,Yes, requires permission to modify battery saver settings.
/android/os/PowerSaveState.java,setGlobalBatterySaverEnabled,Yes, this method likely requires permissions because it controls a system-wide setting (global battery saver), which typically requires elevated permissions in Android.
/android/os/PowerSaveState.java,setLocationMode,Yes, this method likely requires location permissions because it involves setting a location mode, which typically necessitates access to location services.
/android/os/SELinux.java,setFileContext,Yes, because modifying file security contexts typically requires specific permissions.
/android/os/NullVibrator.java,vibrate,Yes, this method likely requires permissions related to device vibration, typically "android.permission.VIBRATE".
/android/os/GraphicsEnvironment.java,getGlobalSettingsString,Yes, the method interacts with `Settings.Global`, which typically requires permissions such as `READ_SETTINGS` for reading global settings.
/android/os/ShellCallback.java,openFile,Yes, the method requires permissions to access and modify files in the file system.
/android/os/PowerManagerInternal.java,setMaximumScreenOffTimeoutFromDeviceAdmin,Yes, this method requires permissions because it is intended to be called by the device administration policy manager, indicating a need for device admin privileges.
/android/os/PowerManagerInternal.java,setDeviceIdleWhitelist,Yes, this method likely requires permissions related to managing device idle states, which typically involves hardware or system-level controls.
/android/os/PowerManagerInternal.java,setLowPowerStandbyAllowlist,Yes, because it modifies system settings related to power management.
/android/os/PowerManagerInternal.java,setPowerMode,Yes, this method likely requires permissions as it involves changing power and performance settings, which could impact device behavior and user experience.
/android/os/PowerManagerInternal.java,getLastWakeup,Yes, because accessing wakeup event information typically requires permission to access system power or usage statistics.
/android/os/BinderProxy.java,shellCommand,Yes, this method likely requires permissions because it deals with shell commands and operations that may involve sensitive system-level access and resource management.
/android/os/HardwarePropertiesManager.java,getDeviceTemperatures,Yes, the method requires permissions because it throws a `SecurityException` if accessed by someone other than the device owner or current VR service.
/android/os/HardwarePropertiesManager.java,getCpuUsages,Yes, the method requires permissions because it throws a SecurityException if accessed by someone other than the device owner or the current VR service.
/android/os/HardwarePropertiesManager.java,getFanSpeeds,Yes, because the method throws a `SecurityException` if called by unauthorized entities, indicating it requires permissions related to device ownership or VR services.
/android/os/TelephonyServiceManager.java,getTelephonyRcsMessageServiceRegisterer,Yes, this method likely requires permissions because it interacts with the telephony RCS message service, which typically requires specific permissions to access.
/android/os/TelephonyServiceManager.java,getSmsServiceRegisterer,Yes, the method likely requires permissions to access SMS services on Android devices to ensure user privacy and security.
/android/os/CombinedVibration.java,createParallel,Yes, this method requires permissions because it controls the device’s vibration hardware, which typically necessitates the `VIBRATE` permission in Android.
/android/os/CombinedVibration.java,startParallel,Yes, this method may require permissions to access vibration hardware.
/android/os/CombinedVibration.java,startSequential,Yes, this method requires permissions because it interacts with the device's vibrators, which typically requires permissions related to vibration control.
/android/os/CombinedVibration.java,addVibrator,Yes, this method requires permissions because it interacts with the device's vibrator, which typically requires permissions related to hardware access in Android, such as `VIBRATE`.
/android/os/CombinedVibration.java,addNext,Yes, this method likely requires permissions to access the vibrator hardware.
/android/os/ServiceManagerNative.java,getService,Yes, this method likely requires permissions as it involves accessing a service, which generally requires appropriate permissions in Android.
/android/os/UpdateEngine.java,applyPayload,Yes, this method likely requires permissions for accessing files, especially if the URL is intended to point to a file on the device or network.
/android/os/TracePerfTest.java,startTracing,Yes, because it appears to run a shell command, which typically requires specific permissions in Android.
/android/os/TracePerfTest.java,endTracing,Yes, this method likely requires permissions because it invokes a shell command that may require elevated privileges or access to system resources.
/android/os/BatteryManagerInternal.java,setChargerAcOnline,Yes, this method likely requires permissions related to battery management or device settings, as it involves enabling/disabling the charger and freezing battery state.
/android/os/SomeProvider.java,query,Yes, this method requires permissions. It interacts with a database (Cursor), which typically requires permissions to access content providers.
/android/os/SomeProvider.java,insert,Yes, this method likely requires permissions because it involves inserting data into a URI, which typically requires write permissions for content providers in Android.
/android/os/SomeProvider.java,delete,Yes, this method likely requires permissions to access or modify data associated with the provided `Uri`.
/android/os/SomeProvider.java,update,Yes, this method requires permissions because it appears to interact with a content provider (indicated by the `Uri` parameter), which typically requires permissions to read or write data.
/android/os/SystemVibratorManager.java,getVibratorIds,Yes, this method likely requires permissions because it interacts with the vibrator manager service, which typically requires the "VIBRATE" permission.
/android/os/SystemVibratorManager.java,setAlwaysOnEffect,Yes, this method may require permissions because it interacts with system services related to vibration, which typically require specific permissions in Android, such as `VIBRATE`.
/android/os/SystemVibratorManager.java,vibrate,Yes, this method likely requires permission because it interacts with the device's vibrator service, which typically requires the `android.permission.VIBRATE` permission in Android.
/android/os/SystemVibratorManager.java,setAlwaysOnEffect,Yes, this method likely requires permissions because it deals with setting vibration effects, which typically necessitates specific permissions in the Android framework, such as `VIBRATE` or similar.
/android/os/SystemVibratorManager.java,vibrate,Yes, requires permission to access vibration features (e.g., `VIBRATE`).
/android/os/SystemVibratorManager.java,isVibrating,Yes, because accessing the vibrator service typically requires the `VIBRATE` permission in Android.
/android/os/SystemVibratorManager.java,addVibratorStateListener,Yes, this method requires permissions because it interacts with the vibrator service, which typically requires the `VIBRATE` permission in Android.
/android/os/VibratorPerfTest.java,testOneShot,Yes, because the method includes a call to `vibrate`, which typically requires the `VIBRATE` permission in Android.
/android/os/VibratorPerfTest.java,testCompose,Yes, this method requires permissions because it involves invoking vibration effects, which typically requires the `VIBRATE` permission in the Android SDK.
/android/os/StrictModeTest.java,causeVmViolations,Yes, the method requires permissions. It involves starting an activity with an Intent, which typically requires permissions depending on the action (like reading a content URI).
/android/os/FileBridge.java,run,Yes, the method requires permissions because it involves file operations such as writing and reading, which typically require storage permissions in Android.
/android/os/DisplayPerfTest.java,testBrightnessChanges,Yes, this method requires permissions because it modifies system settings related to screen brightness, which typically requires `WRITE_SETTINGS` permission in Android.
/android/os/UidBatteryConsumer.java,getBatteryStatsUid,Yes, this method likely requires permission because it deals with battery statistics, which typically involves accessing sensitive user data on Android devices.
/android/os/vibrator/VibrationEffectSegment.java,areVibrationFeaturesSupported,Yes, this method requires permission to access vibration features, as it interacts with the `Vibrator` class.
/android/os/incremental/IncrementalFileStorages.java,makeFile,Yes, because creating files in default storage typically requires WRITE_EXTERNAL_STORAGE permission.
/android/os/incremental/IncrementalFileStorages.java,makeLink,Yes, this method likely requires permissions to access the file system, such as READ_EXTERNAL_STORAGE or WRITE_EXTERNAL_STORAGE, due to its operations on file paths.
/android/os/incremental/IncrementalManager.java,createStorage,Yes, this method likely requires permissions related to file system access, as it involves opening or creating a mounted directory.
/android/os/incremental/IncrementalManager.java,openStorage,Yes, this method likely requires permissions to access the file system for the specified path.
/android/os/incremental/IncrementalManager.java,createStorage,Yes, this method likely requires permissions related to file storage and access.
/android/os/incremental/IncrementalStorage.java,bindPermanent,Yes, it likely requires permissions to access and modify storage directories.
/android/os/incremental/IncrementalStorage.java,bindPermanent,Yes, because the method involves binding directories which may require access to the device's storage.
/android/os/incremental/IncrementalStorage.java,makeDirectory,Yes, this method likely requires permissions related to file storage access, as it creates a sub-directory in the storage directory.
/android/os/incremental/IncrementalStorage.java,makeDirectories,Yes, because creating directories in storage requires WRITE_EXTERNAL_STORAGE permission.
/android/os/incremental/IncrementalStorage.java,makeFile,Yes, because creating a file typically requires permissions related to accessing the file system storage.
/android/os/incremental/IncrementalStorage.java,makeLink,Yes, this method requires permissions because it involves file operations that typically need read/write permissions on external storage.
/android/os/incremental/IncrementalStorage.java,unlink,Yes, this method likely requires permissions because it performs a file deletion operation, which typically requires storage permissions in Android.
/android/os/incremental/IncrementalStorage.java,moveFile,Yes, it requires permissions because it involves file manipulation (renaming files) in the storage directory.
/android/os/incremental/IncrementalStorage.java,moveDir,Yes, this method requires permissions because it involves file system operations that typically require read/write permissions, particularly when accessing and modifying directories.
/android/os/storage/StorageManagerInternal.java,hasExternalStorageAccess,Yes, because it checks for the MANAGE_EXTERNAL_STORAGE permission required for full external storage access.
/android/os/storage/StorageManagerInternal.java,resetUser,Yes, this method likely requires permissions because it deals with modifying the storage state for a user, which typically involves sensitive system operations that necessitate permissions for security and privacy reasons.
/android/os/storage/StorageManagerInternal.java,freeCache,Yes, it requires permission to manage external storage.
/android/mtp/MtpDevice.java,open,Yes, the method interacts with USB devices, which typically requires permissions such as `android.permission.USB_PERMISSION` to access USB functionalities in Android.
/android/mtp/MtpDevice.java,deleteObject,Yes, this method likely requires permissions to delete objects on the device, which typically involves modifying storage.
/android/mtp/MtpDevice.java,importFile,Yes, the method requires permissions because it interacts with external storage to copy data, which requires appropriate storage permissions in Android.
/android/mtp/MtpDatabase.java,getObjectPropertiesUri,Yes, because accessing media content likely requires permissions such as READ_EXTERNAL_STORAGE.
/android/mtp/MtpDatabase.java,onReceive,Yes, the method handles battery-related events which typically require the permission `android.permission.BATTERY_STATS` for accessing battery information.
/android/mtp/MtpDatabase.java,rescanFile,Yes, this method likely requires permissions to access or modify files in the device's storage, which typically involves READ_EXTERNAL_STORAGE or WRITE_EXTERNAL_STORAGE permissions in Android.
/android/mtp/MtpDatabase.java,renameFile,Yes, because renaming files typically requires storage permissions to access and modify file data.
/android/mtp/MtpDatabase.java,endMoveObject,Yes, this method likely requires permissions because it involves updating the media store, which typically requires storage permissions.
/android/mtp/MtpDatabase.java,updateMediaStore,Yes, this method likely requires permissions to access or modify the media store, such as `READ_EXTERNAL_STORAGE` or `WRITE_EXTERNAL_STORAGE`, depending on the operations performed on the file.
/android/mtp/MtpDatabase.java,openFilePath,Yes, this method likely requires permissions because it involves accessing the file system and potentially interacting with media content. Specific permissions (like `READ_EXTERNAL_STORAGE` or `WRITE_EXTERNAL_STORAGE`) are typically required for these operations in Android.
/android/mtp/MtpDatabase.java,getThumbnailData,Yes, this method likely requires permissions because it deals with accessing thumbnails from media storage, which typically requires permissions to read external storage or related media data in Android.
/android/mtp/MtpDatabase.java,deleteFromMedia,Yes, because the method involves deleting files from the media store, which requires appropriate permissions to modify media data on the device.
/android/text/style/ImageSpan.java,getDrawable,Yes, this method requires permissions because it accesses resources and potentially private user data through `getContentResolver()` and `openInputStream()`.
/android/text/style/URLSpan.java,onClick,Yes, this method may require permissions to start an activity that opens a URL, which can include internet access and possibly other specific permissions depending on the content being accessed.
/android/text/method/TextKeyListener.java,initPrefs,Yes, this method requires permissions because it interacts with `Settings.System`, which typically involves accessing system settings that may require specific permissions in Android.
/android/service/remotelockscreenvalidation/RemoteLockscreenValidationClientImpl.java,validateLockscreenGuess,Yes, because it interacts with remote services and might require permissions related to accessing secure features like the lock screen.
/android/service/remotelockscreenvalidation/RemoteLockscreenValidationClientImpl.java,connectInternal,Yes, this method likely requires permissions because it is using the `bindService` method, which typically requires the `BIND_SERVICE` permission.
/android/service/remotelockscreenvalidation/RemoteLockscreenValidationClientImpl.java,isServiceAvailable,Yes, this method checks for a specific service that may require permission (e.g., `Manifest.permission.BIND_REMOTE_LOCKSCREEN_VALIDATION_SERVICE`).
/android/service/remotelockscreenvalidation/RemoteLockscreenValidationClient.java,validateLockscreenGuess,Yes, this method likely requires permissions as it handles sensitive user data related to lockscreen security.
/android/service/remotelockscreenvalidation/RemoteLockscreenValidationService.java,onValidateLockscreenGuess,Yes, it requires permissions to validate the lockscreen guess, as it involves interacting with security features.
/android/service/wearable/WearableSensingService.java,onStartDetection,Yes, this method requires permissions because it involves access to ongoing ambient sensors (e.g., microphone) and sharing detection results, which typically necessitates user consent and corresponding permissions in Android.
/android/service/textclassifier/TextClassifierService.java,getServiceComponentName,Yes, it requires permission because it checks for the `Manifest.permission.BIND_TEXTCLASSIFIER_SERVICE` permission.
/android/service/notification/ZenPolicy.java,allowAllSounds,Yes, this method requires permissions because it allows all notifications to bypass Do Not Disturb (DND) settings, which typically requires specific user permissions to alter DND behavior.
/android/service/notification/ZenPolicy.java,disallowAllSounds,Yes, this method likely requires permissions related to managing Do Not Disturb (DND) settings in Android, as it intercepts notifications and mutes sound streams.
/android/service/notification/ZenPolicy.java,allowCalls,Yes, it requires permission to manage Do Not Disturb (DND) settings for notifications.
/android/service/notification/ZenModeConfig.java,writeZenPolicyXml,Yes, because writing zen policy may require permissions related to managing system notifications or call handling.
/android/service/notification/ZenModeConfig.java,applyNotificationPolicy,Yes, this method likely requires permissions related to managing notification policies (e.g., Do Not Disturb settings).
/android/service/notification/ZenModeConfig.java,getDescription,Yes, the method requires permissions related to accessing Do Not Disturb settings.
/android/service/notification/ZenModeConfig.java,getNextAlarm,Yes, this method likely requires permissions because it accesses the AlarmManager service to retrieve the next alarm information, which is related to accessing calendar or alarm data.
/android/service/notification/ConditionProviderService.java,requestRebind,Yes, because the method fails for providers not granted permission by the user.
/android/service/notification/ConditionProviderService.java,notifyCondition,Yes, this method requires permissions because it modifies the Do Not Disturb mode, which is a sensitive operation that typically requires the `ACCESS_NOTIFICATION_POLICY` permission.
/android/service/euicc/EuiccProfileInfo.java,setUiccAccessRule,Yes, this method likely requires permissions as it sets access rules for a subscription, which could involve sensitive operations related to user data or device security.
/android/service/euicc/EuiccProfileInfo.java,getIccid,Yes, it requires permissions to access SIM card information.
/android/service/euicc/EuiccService.java,onGetEid,Yes, this method likely requires permissions because it accesses sensitive information related to the eUICC (embedded Universal Integrated Circuit Card) which may involve user identification and SIM card details.
/android/service/euicc/EuiccService.java,onStartOtaIfNecessary,Yes, this method likely requires permissions because it involves performing an OTA (Over-The-Air) update, which typically needs permissions to access system-level functionalities.
/android/service/euicc/EuiccService.java,onGetDownloadableSubscriptionMetadata,Yes, it likely requires permissions related to SIM management and eUICC operations.
/android/service/euicc/EuiccService.java,onGetDefaultDownloadableSubscriptionList,Yes, because accessing SIM-related information typically requires telephony permissions in Android.
/android/service/euicc/EuiccService.java,onDownloadSubscription,Yes, because downloading subscriptions likely involves SIM card management, which typically requires appropriate permissions.
/android/service/euicc/EuiccService.java,onDownloadSubscription,Yes, the method involves downloading a subscription and managing SIM states, which typically requires permissions related to telephony and SIM management.
/android/service/euicc/EuiccService.java,onDownloadSubscription,Yes, this method likely requires permissions related to managing SIM subscriptions and possibly modifying SIM state, which typically involves telephony permissions in Android.
/android/service/euicc/EuiccService.java,onGetEuiccProfileInfoList,Yes, accessing SIM slot information may require permissions related to telephony services.
/android/service/euicc/EuiccService.java,onDeleteSubscription,Yes, because deleting a subscription likely requires permissions related to managing telecommunication services.
/android/service/euicc/EuiccService.java,onSwitchToSubscription,Yes, this method likely requires permissions to manage SIM subscriptions and eUICC, which typically involve sensitive user data or settings.
/android/service/euicc/EuiccService.java,onUpdateSubscriptionNickname,Yes, it requires permissions because it interacts with subscription information, which typically requires specific permissions to access or modify.
/android/service/euicc/EuiccService.java,onEraseSubscriptions,Yes, because it involves managing SIM subscriptions which typically requires special permissions related to telephony services.
/android/service/euicc/EuiccService.java,onEraseSubscriptions,Yes, because it deals with erasing subscriptions which affects device configuration and may require specific permissions related to telephony and SIM management.
/android/service/euicc/EuiccService.java,run,Yes, this method likely requires permissions due to its interaction with `EuiccService` and handling of `RemoteException`, which typically involves operations that can necessitate specific permissions in Android.
/android/service/euicc/EuiccService.java,deleteSubscription,Yes, the method likely requires permissions because it involves deleting a subscription, which typically requires elevated permissions related to modifying device or user settings.
/android/service/euicc/EuiccService.java,switchToSubscription,Yes, this method likely requires permissions because it involves switching subscription which generally requires specific SIM or network-related permissions to access and modify telephony services.
/android/service/euicc/EuiccService.java,updateSubscriptionNickname,Yes, this method likely requires permissions related to modifying subscription information, such as `MODIFY_PHONE_STATE`, as it deals with updating a subscription's nickname in an eUICC (Embedded Universal Integrated Circuit Card) context.
/android/service/euicc/EuiccService.java,run,Yes, this method likely requires permissions because it interacts with `EuiccService`, which typically involves operations related to eSIM management and may require specific permissions to access device features or modify subscriptions.
/android/service/ambientcontext/AmbientContextDetectionService.java,onStartDetection,Yes, this method requires permissions because it involves accessing ongoing ambient sensors (e.g., microphone) which usually require user consent and specific permissions to use in Android.
/android/service/autofill/AutofillServiceInfo.java,getAvailableServices,Yes, this method requires permissions because it queries available autofill services, which involves accessing user-specific data related to services.
/android/service/autofill/UserData.java,getInt,Yes, this method likely requires permissions to access system settings. Specifically, it interacts with `Settings.Secure`, which typically requires permissions such as `READ_SETTINGS`.
/android/service/autofill/FillResponse.java,setAuthentication,Yes, this method likely requires permissions related to autofill services and the ability to launch activities for authentication flows.
/android/service/autofill/augmented/AugmentedAutofillService.java,requestAutofill,Yes, because it interacts with the AutofillManager which typically requires permissions related to autofill services.
/android/service/restrictions/RestrictionsReceiver.java,onRequestPermission,Yes, the method involves making a permission request that requires authorization by a local or remote administrator.
/android/service/restrictions/RestrictionsReceiver.java,onReceive,Yes, this method involves intercepting permission requests, which typically requires permissions to respond to invoke actions related to app permissions.
/android/service/storage/ExternalStorageService.java,onStartSession,Yes, this method likely requires permissions. It involves handling filesystem I/O, which typically requires storage permissions to access files on the device.
/android/service/quicksettings/TileService.java,unlockAndRun,Yes, because the method involves device security and user authentication.
/android/service/quicksettings/TileService.java,requestListeningState,Yes, because calling this method requires appropriate permissions related to interacting with the TileService.
/android/service/controls/ControlsProviderService.java,createPublisherFor,Yes, it requires permissions because it mentions that controls require the device to be unlocked for user interaction.
/android/service/controls/ControlsProviderService.java,performControlAction,Yes, this method requires permissions because it specifies that invocations require the device to be unlocked, indicating security considerations and potential user data access.
/android/service/quickaccesswallet/QuickAccessWalletServiceInfo.java,tryCreate,Yes, the method requires permission because it interacts with `Manifest.permission.BIND_QUICK_ACCESS_WALLET_SERVICE`.
/android/service/quickaccesswallet/QuickAccessWalletServiceInfo.java,getDefaultPaymentApp,Yes, because it accesses `Settings.Secure`, which typically requires permission to read secure settings.
/android/service/voice/AbstractDetector.java,startRecognition,Yes, this method requires permissions because it involves accessing an audio stream, which typically requires audio recording permissions in Android (e.g., RECORD_AUDIO).
/android/service/wallpaper/EngineWindowPage.java,addWallpaperColors,Yes, this method likely requires permissions because it deals with wallpaper colors, which typically requires user consent or specific permissions to modify device settings.
/android/service/trust/TrustAgentService.java,onCreate,Yes, because it checks for the permission `Manifest.permission.BIND_TRUST_AGENT`.
/android/service/trust/TrustAgentService.java,onUserRequestedUnlock,Yes, because it involves user interaction with security features (keyguard) which typically require appropriate permissions to alter.
/android/service/trust/TrustAgentService.java,grantTrust,Yes, this method likely requires permissions related to trust management and device security since it involves granting trust on the device.
/android/service/trust/TrustAgentService.java,grantTrust,Yes, the method likely requires permissions related to managing device trust, which is typically sensitive and may involve security contexts (e.g., Device Policy Manager).
/android/service/trust/TrustAgentService.java,unlockUserWithToken,Yes, because it involves user unlocking, which typically requires permissions related to security and user management.
/android/service/trust/TrustAgentService.java,lockUser,Yes, this method likely requires permissions as it manipulates user authentication and security features (keyguard), which usually necessitates special permissions in Android.
/android/service/dreams/Sandman.java,startDream,Yes, the method likely requires permissions related to managing system services, particularly for waking up the device and handling dreams (screensavers).
/android/service/dreams/Sandman.java,isScreenSaverEnabled,Yes, this method likely requires permissions to access system settings, specifically to read secure settings like screen saver status.
/android/service/dreams/Sandman.java,isScreenSaverActivatedOnDock,Yes, the method interacts with system settings that may require permissions to access user settings or configurations. Specifically, it retrieves screen saver activation settings that could be restricted based on user privacy or security settings.
/android/service/carrier/CarrierMessagingServiceWrapper.java,bindToCarrierMessagingService,Yes, it requires permissions to bind to a carrier messaging service which may involve sensitive data or functionalities related to messaging.
/android/service/carrier/CarrierMessagingServiceWrapper.java,receiveSms,Yes, the method deals with processing SMS messages, which typically requires permissions related to SMS access (`android.permission.RECEIVE_SMS`, `android.permission.READ_SMS`).
/android/service/carrier/CarrierMessagingServiceWrapper.java,sendTextSms,Yes, this method requires permissions because it is sending SMS messages, which is a protected operation in Android that requires the appropriate permissions to be granted.
/android/service/carrier/CarrierMessagingServiceWrapper.java,sendDataSms,Yes, this method requires permissions because sending SMS typically requires the `SEND_SMS` permission in Android for accessing SMS features.
/android/service/carrier/CarrierMessagingServiceWrapper.java,sendMultipartTextSms,Yes, this method requires permissions because it is sending SMS messages, which typically requires the SEND_SMS permission in Android.
/android/service/carrier/CarrierMessagingServiceWrapper.java,sendMms,Yes, sending MMS generally requires permissions such as `SEND_SMS` and `WRITE_EXTERNAL_STORAGE` for accessing media and sending messages.
/android/service/carrier/CarrierMessagingServiceWrapper.java,downloadMms,Yes, this method likely requires permissions to access and download MMS messages, which usually involve permissions like `READ_SMS` or similar messaging-related permissions.
/android/service/carrier/CarrierMessagingService.java,onFilterSms,Yes, this method requires permissions to filter inbound SMS messages.
/android/service/carrier/CarrierMessagingService.java,onReceiveTextSms,Yes, this method requires permissions because it deals with incoming SMS messages, which require specific permissions to access in Android (e.g., `RECEIVE_SMS`).
/android/service/carrier/CarrierMessagingService.java,onSendTextSms,Yes, this method likely requires permissions because it involves sending SMS, which typically requires specific permissions (e.g., `SEND_SMS`) in Android.
/android/service/carrier/CarrierMessagingService.java,onSendTextSms,Yes, this method likely requires permissions because it intercepts and sends SMS messages, which typically requires SMS-related permissions in Android.
/android/service/carrier/CarrierMessagingService.java,onSendDataSms,Yes, this method likely requires SMS permissions to send data SMS messages.
/android/service/carrier/CarrierMessagingService.java,onSendMultipartTextSms,Yes, because sending SMS requires the SEND_SMS permission in Android.
/android/service/carrier/CarrierMessagingService.java,onSendMultipartTextSms,Yes, this method is related to sending SMS, which typically requires SMS permissions in Android.
/android/service/carrier/CarrierMessagingService.java,onSendMms,Yes, this method requires permissions because it deals with sending MMS messages, which typically requires specific permissions like `SEND_SMS` or `SEND_MMS` in Android.
/android/service/carrier/CarrierMessagingService.java,onDownloadMms,Yes, the method likely requires permissions to access the content provider URI and download MMS, as it interacts with the SMS/MMS system.
/android/service/carrier/CarrierMessagingService.java,filterSms,Yes, the method likely requires permissions related to SMS handling, such as sending or receiving SMS messages.
/android/service/carrier/CarrierMessagingService.java,sendTextSms,Yes, because sending SMS requires the "SEND_SMS" permission in Android.
/android/service/carrier/CarrierMessagingService.java,sendDataSms,Yes, the method likely requires permissions to send SMS messages.
/android/service/carrier/CarrierMessagingService.java,sendMultipartTextSms,Yes, the method requires permissions to send SMS messages.
/android/service/carrier/CarrierMessagingService.java,sendMms,Yes, this method likely requires permissions to send MMS messages, such as `SEND_SMS` or `SEND_MMS`, as it interacts with messaging components in the system.
/android/service/carrier/CarrierMessagingService.java,downloadMms,Yes, this method likely requires permissions related to downloading multimedia messages (MMS) as it handles network operations and callbacks.
/android/service/carrier/ApnService.java,getApns,Yes, the method retrieves APNs (Access Point Names) which typically requires permissions to access network settings or configuration.
/android/service/carrier/ApnService.java,onRestoreApns,Yes, requires permissions to access and modify APN settings.
/android/service/carrier/MessagePdu.java,getPdus,Yes, this method likely requires permissions related to SMS access, as it deals with the contents of SMS messages.
/android/service/carrier/CarrierIdentifier.java,getImsi,Yes, because accessing the International Mobile Subscriber Identity (IMSI) typically requires specific permissions related to telephony.
/android/service/credentials/CallingAppInfo.java,getOrigin,Yes, because it requires the permission `CREDENTIAL_MANAGER_SET_ORIGIN` to set the origin for Credential requests.
/android/service/credentials/CredentialProviderInfoFactory.java,create,Yes, it requires permissions for accessing service information and verifying provider validity, as indicated by the `SecurityException` mention in the documentation.
/android/service/credentials/CredentialProviderInfoFactory.java,verifyProviderPermission,Yes, the method checks for the `BIND_CREDENTIAL_PROVIDER_SERVICE` permission which is used during service binding.
/android/service/credentials/CredentialProviderInfoFactory.java,isSystemProviderWithValidPermission,Yes, the method checks for permissions related to a service, specifically if the context has permission to access a system provider.
/android/service/credentials/CredentialProviderInfoFactory.java,getServiceInfoOrThrow,Yes, this method likely requires permissions to access the service information from the PackageManager, which involves querying system services that may be protected.
/android/service/credentials/CredentialProviderInfoFactory.java,getAvailableSystemServiceInfos,Yes, this method likely requires permissions because it interacts with the PackageManager to retrieve service information, which may involve accessing resources that are protected by permissions.
/android/service/credentials/CredentialProviderInfoFactory.java,getDeviceManagerPolicy,Yes, because it involves accessing device policies, which typically requires permissions like `android.permission.BIND_DEVICE_ADMIN`.
/android/service/credentials/CredentialProviderInfoFactory.java,getUserProviders,Yes, this method may require permissions related to accessing services or querying information about installed apps.
/android/service/credentials/PermissionUtils.java,hasPermission,Yes, the method checks permissions related to a specified package, which typically requires permission checks in Android.
/android/service/media/MediaBrowserService.java,connect,Yes, this method likely requires permissions because it involves interacting with a `MediaBrowserService`, which typically requires declaring permissions related to media access in Android.
/android/service/media/MediaBrowserService.java,onGetRoot,Yes, it requires permissions because it specifically mentions verifying that the client package has permission to access browse media information.
/android/graphics/BitmapRegionDecoder.java,newInstance,Yes, because accessing a file descriptor may require storage permissions.
/android/graphics/BitmapRegionDecoder.java,newInstance,Yes, because it requires access to the file system to read the specified file path.
/android/graphics/BitmapRegionDecoder.java,newInstance,Yes, because it accesses a file, requiring file read permissions.
/android/graphics/HardwareRenderer.java,initSched,Yes, this method likely requires permissions related to accessing system services, such as `ActivityManager`, which usually require certain permissions in Android (e.g., `GET_TASKS` or `BIND_APPWIDGET`).
/android/graphics/pdf/PdfEditor.java,write,Yes, this method requires permissions because it involves writing to a file, which typically requires appropriate storage permissions in Android.
/android/graphics/fonts/SystemFonts.java,mmap,Yes, the method requires permissions because it involves file access operations (reading a file).
/android/renderscript/FileA3D.java,createFromFile,Yes, because it accesses a file stored on disk.
/android/renderscript/FileA3D.java,createFromFile,Yes, this method likely requires permissions to access the file system where the file is stored.
/android/renderscript/Allocation.java,createFromBitmap,Yes, the method involves creating an Allocation from a Bitmap, which typically requires permissions to access the device's storage where the Bitmap may be saved.
/android/renderscript/RenderScript.java,nFontCreateFromAsset,Yes, this method may require permissions to access assets through the AssetManager.
/android/permission/PermissionCheckerManager.java,checkPermission,Yes, the method checks permissions, which typically requires the app to have the appropriate permissions granted.
/android/permission/PermissionCheckerManager.java,checkOp,Yes, permissions are likely required because the method involves checking app operations, which typically requires specific permissions to access sensitive data or control actions related to app permissions.
/android/permission/PermissionUsageHelper.java,getGroupForOp,Yes, it appears to require permissions. The method references operations related to audio, camera, and location, which typically require corresponding permissions in Android (e.g., RECORD_AUDIO, CAMERA, ACCESS_FINE_LOCATION).
/android/permission/PermissionUsageHelper.java,getOpUsageData,Yes, this method requires permissions, specifically related to camera and microphone access as inferred from the usage of `CAMERA_OPS` and `MIC_OPS`.
/android/permission/PermissionUsageHelper.java,getSubattributionLabelsForPackage,Yes, the method likely requires permissions because it queries attribution labels from a package and may involve accessing sensitive information related to packages and their permissions.
/android/permission/PermissionUsageHelper.java,getOpUsages,Yes, this method likely requires permissions because it interacts with system-level operations regarding app usage and permissions, which typically necessitate specific app permissions to access such sensitive information in Android.
/android/permission/PermissionUsageHelper.java,getUniqueUsagesWithLabels,Yes, because it involves accessing usage details that may require permissions such as accessing package information or user-related contexts, particularly if it interacts with microphone usage.
/android/permission/PermissionManagerInternal.java,restoreRuntimePermissions,Yes, this method likely requires permissions because it deals with restoring a state of runtime permissions, which generally involves sensitive operations related to user data and privacy.
/android/debug/AdbManagerInternal.java,startAdbdForTransport,Yes, this method likely requires permissions because starting the Android Debug Bridge daemon (adbd) may involve elevated privileges related to debugging or system access.
/android/companion/AssociationInfo.java,getDeviceMacAddressAsString,Yes, this method likely requires permissions because it accesses the device's MAC address, which involves sensitive information.
/android/companion/AssociatedDevice.java,getBluetoothDevice,Yes, the method likely requires Bluetooth permissions to access Bluetooth device information.
/android/companion/AssociatedDevice.java,getBleDevice,Yes, this method likely requires permissions to access Bluetooth LE devices.
/android/companion/AssociatedDevice.java,getWifiDevice,Yes, requires permissions. Accessing Wi-Fi device info typically requires permissions like `ACCESS_WIFI_STATE`.
/android/companion/virtual/VirtualDeviceInternal.java,getDeviceId,Yes, because accessing the device ID typically requires permissions related to device information.
/android/companion/virtual/VirtualDeviceInternal.java,createContext,Yes, because the method involves retrieving the device ID which typically requires permissions related to accessing device identifiers.
/android/companion/virtual/VirtualDeviceInternal.java,createVirtualDisplay,Yes, the method likely requires permissions related to creating a virtual display, which may involve access to system-level resources or display management services.
/android/companion/virtual/VirtualDeviceInternal.java,createVirtualTouchscreen,Yes, this method likely requires permissions because it interacts with hardware input devices, which typically necessitates permissions for accessing or controlling system resources in Android.
/android/companion/virtual/audio/UserRestrictionsDetector.java,isUnmuteMicrophoneDisallowed,Yes, this method likely requires permissions because it interacts with user restrictions related to microphone access.
/android/companion/virtual/audio/AudioCapture.java,setAudioRecord,Yes, because capturing audio requires the `RECORD_AUDIO` permission in Android.
/android/companion/virtual/audio/AudioCapture.java,read,Yes, this method likely requires permissions to access audio input, typically `RECORD_AUDIO`, to read audio data.
/android/companion/virtual/audio/AudioCapture.java,read,Yes, this method requires permissions because it involves reading audio data, which typically requires microphone permissions in Android.
/android/companion/virtual/audio/AudioCapture.java,read,Yes, this method requires permissions because it involves audio recording, which requires the `RECORD_AUDIO` permission in Android.
/android/companion/virtual/audio/AudioCapture.java,read,Yes, this method likely requires permissions related to audio recording.
/android/companion/virtual/audio/AudioCapture.java,read,Yes, this method likely requires permissions because it interacts with audio recording, which typically requires microphone access permissions in Android (e.g., `RECORD_AUDIO`).
/android/companion/virtual/audio/AudioCapture.java,read,Yes, this method requires permissions because it deals with audio recording, which typically necessitates the `RECORD_AUDIO` permission in Android.
/android/companion/virtual/audio/AudioCapture.java,read,Yes, because reading audio data typically requires the `RECORD_AUDIO` permission.
/android/companion/virtual/audio/AudioCapture.java,startRecording,Yes, this method requires permissions because it deals with audio recording, which typically necessitates the "RECORD_AUDIO" permission in Android.
/android/media/ExifInterface.java,saveAttributes,Yes, the method requires permissions to read and write files, as it manipulates image files by saving attributes directly into them.
/android/media/MediaSync.java,run,Yes, the method appears to interact with audio resources, specifically using `AudioTrack`, which typically requires audio permissions in Android, such as `RECORD_AUDIO` or `MODIFY_AUDIO_SETTINGS`.
/android/media/RemoteController.java,sendMediaKeyEvent,Yes, this method requires permissions to simulate media key events and control media playback.
/android/media/AsyncPlayer.java,startSound,Yes, this method requires permissions because it interacts with audio playback, which typically requires `android.permission.READ_EXTERNAL_STORAGE` or similar permissions to access audio files.
/android/media/AsyncPlayer.java,play,Yes, the method requires permissions to access and play audio from a URI.
/android/media/AsyncPlayer.java,play,Yes, because the method involves playing audio, which typically requires `INTERNET` or `READ_EXTERNAL_STORAGE` permissions if the audio file is accessed via a URI.
/android/media/Utils.java,getUniqueExternalFile,Yes, it requires permissions because accessing external storage generally requires permissions in Android.
/android/media/Utils.java,getFileDisplayNameFromUri,Yes, the method requires permissions to access file data through URIs, particularly when using `ContentResolver` to query content.
/android/media/ToneGenerator.java,startTone,Yes, this method requires permissions because it plays audio tones, which may require audio permissions in the Android SDK.
/android/media/AudioPlaybackCaptureConfiguration.java,addMatchingUid,Yes, this method likely requires permissions related to audio recording or capturing, as it deals with capturing audio output from specific apps based on their UID.
/android/media/AudioPlaybackCaptureConfiguration.java,excludeUid,Yes, this method potentially requires permissions to capture audio output from other apps.
/android/media/MediaCas.java,create,Yes, the method likely requires permissions to access the IMediaCasService AIDL service which may involve accessing protected resources or services.
/android/media/MediaCas.java,create,Yes, this method likely requires permissions related to accessing the CAS (Conditional Access System) services, which are typically sensitive operations that require specific permissions to access hardware services in Android.
/android/media/MediaCas.java,registerClient,Yes, the method appears to interact with a system service related to TV tuning, which typically requires permissions to access such resources in Android.
/android/media/MediaCas.java,openSession,Yes, this method likely requires permissions related to accessing conditional access systems and handling media sessions, which are sensitive operations that typically require explicit user consent or permissions in Android.
/android/media/MediaCas.java,openSession,Yes, it likely requires permissions due to the involvement of conditional access systems which typically handle sensitive media content.
/android/media/PlayerBase.java,baseUpdateDeviceId,Yes, this method likely requires permissions related to audio services, as it interacts with the audio service and updates device IDs, which can have privacy implications.
/android/media/PlayerBase.java,baseRelease,Yes, this method likely requires permissions because it interacts with AppOps and possibly audio services, which typically require specific permissions in Android (e.g., for audio playback or service access).
/android/media/MediaRouter2Manager.java,setRouteVolume,Yes, because changing media routes and volumes may require permissions related to modifying system settings or media playback.
/android/media/MediaRoute2ProviderService.java,setRouteVolume,Yes, requires system permissions to ensure only system-level calls can modify route volume.
/android/media/AudioDevicePort.java,address,Yes, because retrieving Bluetooth device addresses requires Bluetooth permissions.
/android/media/MediaMetrics.java,setUid,Yes, this method requires permission because it allows setting the UID, which is sensitive data associated with application identity and can affect user security and application integrity.
/android/media/Ringtone.java,getTitle,Yes, this method may require permissions to access media content from the content provider.
/android/media/Ringtone.java,getTitle,Yes, it requires permissions. The method interacts with content providers and may access sensitive data, which usually requires specific permissions in Android.
/android/media/Ringtone.java,play,Yes, this method likely requires permissions to play a ringtone, as it interacts with audio resources.
/android/media/Ringtone.java,playFallbackRingtone,Yes, this method likely requires permissions because it deals with audio playback, which typically requires permissions such as `READ_EXTERNAL_STORAGE` or audio-related permissions in Android.
/android/media/MediaInserter.java,insert,Yes, this method likely requires permissions because it involves inserting data into a database or content provider, which typically requires specific permissions for data modification.
/android/media/MediaInserter.java,insertwithPriority,Yes, because it interacts with a content provider using a URI, which typically requires permissions to write to that content provider.
/android/media/MediaInserter.java,insert,Yes, the `insert` method likely requires permissions to access or modify data in a specified `Uri` (content provider) as indicated by the parameter `tableUri`. Depending on the specific `Uri`, permissions such as `WRITE_EXTERNAL_STORAGE` or other content provider-related permissions may be needed.
/android/media/MediaInserter.java,flush,Yes, requires permissions. The method involves database operations via `bulkInsert`, which typically requires storage permissions.
/android/media/MediaDrm.java,getKeyRequest,Yes, this method requires permissions. It interacts with a license server to handle key requests for encrypted content, which typically requires network access permissions.
/android/media/audiofx/AcousticEchoCanceler.java,create,Yes, the method requires permissions because it deals with audio recording, which typically requires permissions related to audio access.
/android/media/audiofx/NoiseSuppressor.java,create,Yes, because it processes audio data, which typically requires microphone access permissions in Android.
/android/media/audiofx/AutomaticGainControl.java,create,Yes, it likely requires permissions related to audio recording, such as `RECORD_AUDIO`, as it deals with audio session handling.
/android/media/audiofx/HapticGenerator.java,setEnabled,Yes, because it requires the `VIBRATE` permission to enable the effect.
/android/media/midi/MidiManager.java,openDevice,Yes, this method requires permissions because it involves opening a MIDI device, which typically requires specific permissions related to device access and communication within Android.
/android/media/midi/MidiManager.java,openBluetoothDevice,Yes, because opening a Bluetooth device requires permission to access Bluetooth features.
/android/media/midi/MidiManager.java,createDeviceServer,Yes, this method likely requires permissions related to MIDI device access, as it is dealing with direct device communication and server creation, which typically requires specific permissions in Android.
/android/media/midi/MidiDevice.java,openInputPort,Yes, this method likely requires permissions to access MIDI input ports, as interacting with hardware components typically requires specific permissions in Android.
/android/media/midi/MidiDevice.java,connectPorts,Yes, this method requires permissions because it interacts with the MIDI subsystem, which generally requires specific permissions to access MIDI devices on Android.
/android/media/midi/MidiDeviceServer.java,openInputPort,Yes, it requires permissions because it checks if the calling UID is different from the UID of the object, indicating access control.
/android/media/midi/MidiDeviceServer.java,connectPorts,Yes, the method likely requires permissions related to IPC (inter-process communication) and potentially accessing system resources like MIDI if it involves hardware.
/android/media/audiopolicy/AudioMixingRule.java,allowPrivilegedPlaybackCapture,Yes, the permissions `CAPTURE_AUDIO_OUTPUT` or `CAPTURE_MEDIA_OUTPUT` are needed to ignore the opt-out for audio playback capture.
/android/media/audiopolicy/AudioMixingRule.java,voiceCommunicationCaptureAllowed,Yes, the method requires the CAPTURE_VOICE_COMMUNICATION_OUTPUT permission for capturing voice communication output.
/android/media/tv/TvContract.java,requestChannelBrowsable,Yes, this method likely requires permissions to access TV input services and manage channels, as it involves modifying a channel's browsable status.
/android/media/tv/TvRecordingClient.java,tune,Yes, because tuning to a TV channel typically requires permissions related to accessing TV inputs and recording functionality.
/android/media/tv/TvRecordingClient.java,tune,Yes, it requires permissions to record TV programs and access TV input services.
/android/media/tv/TvRecordingClient.java,startRecording,Yes, because recording TV programs typically requires permissions related to accessing TV services and recording media.
/android/media/tv/TvRecordingClient.java,startRecording,Yes, this method likely requires permissions related to recording media or TV content, as it involves starting a recording session for TV programs.
/android/media/tv/TvRecordingClient.java,stopRecording,Yes, this method likely requires permissions to manage TV program recordings. Recording functionality typically involves accessing and modifying user data, which requires appropriate permissions in Android.
/android/media/tv/TvRecordingClient.java,pauseRecording,Yes, the method involves pausing a TV recording, which may require permissions related to accessing and controlling recording features in the device.
/android/media/tv/TvRecordingClient.java,pauseRecording,Yes, the method requires permissions as it involves managing TV program recordings, which typically necessitates specific permissions to record or pause recordings.
/android/media/tv/TvRecordingClient.java,resumeRecording,Yes, requires permission to access TV recording features.
/android/media/tv/TvRecordingClient.java,resumeRecording,Yes, the method likely requires permissions related to recording audio or video, as it involves resuming a TV program recording.
/android/media/tv/TvInputService.java,createSession,Yes, it likely requires permissions because creating a session involving TV input channels may need permissions related to accessing TV services or managing media.
/android/media/tv/TvInputService.java,notifyContentAllowed,Yes, requires permissions related to parental controls and content ratings management.
/android/media/tv/TvInputService.java,onTune,Yes, because tuning to a channel typically requires permissions related to accessing TV or media content.
/android/media/tv/TvInputService.java,setStreamVolume,Yes, this method likely requires permissions because it involves setting the stream volume, which typically requires `MODIFY_AUDIO_SETTINGS` permission in Android.
/android/media/tv/TvInputService.java,createOverlayView,Yes, this method requires permissions because it deals with creating an overlay view which typically requires the `SYSTEM_ALERTWindow` permission in Android to draw over other apps.
/android/media/tv/TvInputService.java,onStartRecording,Yes, because recording TV programs typically requires permissions to access and control recording capabilities on the device.
/android/media/tv/TvInputService.java,onStartRecording,Yes, because recording TV programs typically requires specific permissions related to storing and accessing media content.
/android/media/tv/TvInputService.java,onStopRecording,Yes, this method likely requires permissions to manage TV program recordings.
/android/media/tv/TvInputService.java,startRecording,Yes, this method likely requires permissions to access media or storage resources associated with the `Uri`.
/android/media/tv/ITvInputSessionWrapper.java,executeMessage,Yes, this method likely requires permissions because it appears to involve recording sessions, managing TV input, and handling broadcasting, which typically necessitate specific permissions in Android.
/android/media/tv/ITvInputSessionWrapper.java,setVolume,Yes, this method likely requires permission to change the device's audio volume.
/android/media/tv/ITvInputSessionWrapper.java,startRecording,Yes, this method likely requires permissions to access and record audio or video, depending on the context of the implementation.
/android/media/tv/ITvInputSessionWrapper.java,requestBroadcastInfo,Yes, this method likely requires permissions as it involves requesting broadcast information, which could imply accessing system resources or data that are typically protected.
/android/media/tv/TvInputHardwareInfo.java,getDeviceId,Yes, it may require permissions, as accessing a device identifier typically needs permissions related to device identity (e.g., READ_PHONE_STATE).
/android/media/tv/TunedInfo.java,getChannelUri,Yes, because it mentions that the permission is required to access the channel URI.
/android/media/tv/tuner/dvr/DvrPlayback.java,start,Yes, the method likely requires permissions to access data related to DVR playback and recording functionalities.
/android/media/tv/tuner/dvr/DvrRecorder.java,start,Yes, because starting DVR likely requires permissions related to audio or video recording.
/android/media/tv/interactive/TvInteractiveAppManager.java,onRequestStartRecording,Yes, because recording programs typically requires permissions related to recording audio or video on Android devices.
/android/media/tv/interactive/TvInteractiveAppManager.java,onRequestScheduleRecording,Yes, because it involves recording TV programs, which typically requires permissions related to recording and accessing media content.
/android/media/tv/interactive/TvInteractiveAppManager.java,onRequestScheduleRecording,Yes, this method likely requires permissions related to recording TV content and accessing channels.
/android/media/tv/interactive/TvInteractiveAppView.java,onRequestStartRecording,Yes, this method likely requires permissions to record a program, as it deals with starting a recording action for television content.
/android/media/tv/interactive/TvInteractiveAppView.java,onRequestScheduleRecording,Yes, this method likely requires permissions for accessing and recording TV content.
/android/media/tv/interactive/TvInteractiveAppView.java,onRequestScheduleRecording,Yes, the method involves scheduling a recording for a TV channel, which likely requires permissions related to accessing and controlling media functions on the device.
/android/media/tv/interactive/TvInteractiveAppService.java,onBind,Yes, it requires permissions to bind to a service, especially for accessing system resources or user data.
/android/media/tv/interactive/TvInteractiveAppService.java,sendTimeShiftCommandRequest,Yes, this method likely requires permissions related to TV input control, as it interacts with the TV input service.
/android/media/tv/interactive/TvInteractiveAppService.java,requestStartRecording,Yes, because recording TV programs typically requires permissions related to accessing media or TV services.
/android/media/tv/interactive/TvInteractiveAppService.java,requestStopRecording,Yes, this method likely requires permissions to stop a recording, as it interacts with TV recording functionality which typically needs specific permissions for privacy and security reasons.
/android/media/tv/interactive/TvInteractiveAppService.java,requestScheduleRecording,Yes, this method requires permissions. It involves scheduling a recording, which typically requires permissions related to accessing media and possibly recording capabilities in an Android application.
/android/media/tv/interactive/TvInteractiveAppService.java,requestScheduleRecording,Yes, because this method involves scheduling a recording, which typically requires permissions related to managing recordings and accessing TV inputs.
/android/media/browse/MediaBrowser.java,connect,Yes, this method requires permissions because it connects to a media browser service, which typically involves accessing media content and may require permissions related to audio, video, or media storage.
/android/media/permission/PermissionUtil.java,establishIdentityIndirect,Yes, the method requires permissions because it enforces a specific middleman permission to authenticate the originator and throws a SecurityException if the permission is not granted.
/android/media/permission/PermissionUtil.java,checkPermissionForDataDelivery,Yes, the method checks permissions related to data delivery, which typically requires permission checks in Android.
/android/media/permission/PermissionUtil.java,checkPermissionForPreflight,Yes, this method checks if a certain permission is granted, which typically requires the appropriate permissions to perform such checks in Android.
/android/media/projection/MediaProjectionManager.java,createScreenCaptureIntent,Yes, the method requires permissions because it involves initiating screen capture, which typically requires user consent and specific permissions to access screen content.
/android/media/projection/MediaProjectionManager.java,createScreenCaptureIntent,Yes, requires permission to capture the screen.
/android/media/projection/MediaProjectionManager.java,getMediaProjection,Yes, the method requires permissions. It involves screen capture, which requires `SYSTEM_ALERT_WINDOW` and foreground service permissions to operate correctly on devices running Android Q (API level 29) and above.
/android/media/projection/MediaProjectionManager.java,getActiveProjectionInfo,Yes, it likely requires permissions related to media projection access.
/android/media/projection/MediaProjectionManager.java,addCallback,Yes, because it must have the MANAGE_MEDIA_PROJECTION permission.
/android/media/projection/MediaProjection.java,createVirtualDisplay,Yes, this method likely requires permissions. It involves creating a virtual display, which typically necessitates specific permissions related to display management and security settings in Android.
/android/media/projection/MediaProjection.java,createVirtualDisplay,Yes, this method requires permissions. It creates a virtual display to capture the screen, which typically necessitates runtime permissions for media projection in Android.
/android/media/projection/MediaProjection.java,createVirtualDisplay,Yes, it likely requires permissions related to capturing screen content.
/android/media/session/MediaSessionLegacyHelper.java,onMediaButtonEvent,Yes, this method likely requires permissions to handle media button events, such as the `INJECT_EVENTS` permission, as it interacts with system-level media controls.
/android/media/session/MediaSessionLegacyHelper.java,onSkipToNext,Yes, because sending key events may require permissions related to controlling media playback.
/com/example/photoviewersample/SampleProvider.java,delete,Yes, this method requires permissions because it involves deleting data identified by a URI, which typically requires appropriate permissions in Android (e.g., WRITE_EXTERNAL_STORAGE or similar, depending on the data source).
/com/example/photoviewersample/SampleProvider.java,insert,Yes, this method likely requires permissions because it inserts data into a content provider identified by the Uri, which typically requires write permissions.
/com/example/photoviewersample/SampleProvider.java,query,Yes, because the method `query` interacts with a `Uri`, which may require permissions to read data from content providers.
/com/example/photoviewersample/SampleProvider.java,addRow,Yes, this method likely requires permissions. It references a content URI (`content://`), which typically involves accessing data that may contain user-sensitive information, such as photos. Accessing such data usually requires the appropriate permissions in Android.
/com/example/photoviewersample/SampleProvider.java,update,Yes, this method likely requires permission to modify content in a URI, typically requiring permissions like `WRITE_EXTERNAL_STORAGE` or specific content provider permissions.
/com/example/photoviewersample/SampleProvider.java,openAssetFile,Yes, because it involves accessing asset files, which typically requires storage permissions.
/com/android/uiautomator/testrunner/UiAutomatorTestCase.java,setStubIme,Yes, requires WRITE_SECURE_SETTINGS permission to modify secure settings.
/com/android/uiautomator/core/InteractionController.java,sendKeyAndWaitForEvent,Yes, this method requires permissions related to injecting key events, which typically necessitates special security permissions in Android.
/com/android/uiautomator/core/InteractionController.java,wakeDevice,Yes, because pressing the power button programmatically may require permissions related to device management or control.
/com/android/uiautomator/core/InteractionController.java,sleepDevice,Yes, this method requires permission to simulate key events, specifically the permission to control the device's power state.
/com/android/uiautomator/core/InteractionController.java,performMultiPointerGesture,Yes, this method requires permissions because it simulates user touch interactions, which typically requires specific permissions to ensure user privacy and security, such as 'INJECT_EVENTS'.
/com/android/uiautomator/core/InteractionController.java,toggleRecentApps,Yes, this method likely requires permissions to simulate system actions, specifically related to accessibility services.
/com/android/uiautomator/core/InteractionController.java,openQuickSettings,Yes, because opening the quick settings shade may require permission to modify system settings.
/com/android/uiautomator/core/QueryController.java,findAccessibilityNodeInfo,Yes, this method likely requires permissions related to accessibility features, as it interacts with `AccessibilityNodeInfo` and uses a `UiSelector`, which are generally tied to accessibility services that need explicit permissions to access UI elements.
/com/android/uiautomator/core/QueryController.java,getRootNode,Yes, it requires permissions because it interacts with accessibility services, which need specific permissions to access and manipulate accessibility-related data.
/com/android/uiautomator/core/ShellUiAutomatorBridge.java,getSystemLongPressTime,Yes, because it accesses system settings that require permissions to read.
/com/android/uiautomator/core/ShellUiAutomatorBridge.java,isScreenOn,Yes, the method `isScreenOn` requires permissions because it interacts with the power service to determine the screen status, which typically requires the `android.permission.WAKE_LOCK` permission on Android.
/com/android/uiautomator/core/UiDevice.java,pressHome,Yes, this method likely requires permission because it simulates pressing the HOME button, which involves interacting with system-level navigation controls.
/com/android/uiautomator/core/UiDevice.java,pressDPadDown,Yes, this method likely requires permissions to simulate key presses, as it interacts with device controls.
/com/android/uiautomator/core/UiDevice.java,pressKeyCode,Yes, this method likely requires permissions because it simulates key presses, which may affect system security and user experience.
/com/android/uiautomator/core/UiDevice.java,pressKeyCode,Yes, this method likely requires permissions because it simulates a key press, which can affect user input and device behavior.
/com/android/uiautomator/core/UiDevice.java,pressRecentApps,Yes, this method likely requires permissions because it interacts with system-level functionality (Recent Apps button) that typically requires special permissions to access or simulate user actions.
/com/android/uiautomator/core/UiDevice.java,openNotification,Yes, this method requires permission to access the notification shade, as it interacts with system UI elements.
/com/android/uiautomator/core/UiDevice.java,swipe,Yes, it requires permission to perform touch events on the device, which may involve the SYSTEM_ALERT_WINDOW permission or similar permissions depending on the context of use.
/com/android/uiautomator/core/UiDevice.java,setOrientationRight,Yes, this method may require permissions to modify device orientation settings.
/com/android/uiautomator/core/UiDevice.java,setOrientationNatural,Yes, this method likely requires permissions because it manipulates the device's orientation and involves sensors, which may need system-level access.
/com/android/uiautomator/core/UiDevice.java,wakeUp,Yes, it requires permission to simulate hardware button presses.
/com/android/uiautomator/core/UiDevice.java,sleep,Yes, because it interacts with the device's power state, which typically requires permissions to control power functions.
/com/android/uiautomator/core/UiDevice.java,dumpWindowHierarchy,Yes, this method likely requires permissions. It interacts with the window's layout hierarchy and involves file operations in a system directory, which typically requires specific permissions in Android for security reasons.
/com/android/uiautomator/core/UiDevice.java,takeScreenshot,Yes, because it requires permission to access and write to storage.
/com/android/uiautomator/core/UiDevice.java,takeScreenshot,Yes, this method likely requires permission to write to external storage due to saving a screenshot as a PNG file at the specified `storePath`.
/com/android/uiautomator/core/UiObject.java,pinchOut,Yes, this method requires permissions related to accessibility gestures, as it injects touch events which may require appropriate permissions to interact with the UI.
/com/android/uiautomator/core/UiObject.java,pinchIn,Yes, this method likely requires permissions. It performs touch and gesture injection which typically requires accessibility-related permissions to interact with UI elements on the screen.
/com/android/uiautomator/core/InstrumentationUiAutomatorBridge.java,isScreenOn,Yes, because accessing the screen state may require the `android.permission.READ_PHONE_STATE` or similar permissions in certain contexts.
/com/android/uiautomator/core/AccessibilityNodeInfoDumper.java,dumpWindowToFile,Yes, because it interacts with the filesystem to create and write to a file, which typically requires permissions like WRITE_EXTERNAL_STORAGE.
/com/android/uiautomator/core/UiAutomatorBridge.java,getRootInActiveWindow,Yes, it requires permissions because accessing the accessibility services may require `BIND_ACCESSIBILITY_SERVICE` permission.
/com/android/uiautomator/core/UiAutomatorBridge.java,injectInputEvent,Yes, the method likely requires permissions because it involves injecting input events, which can affect user input and security.
/com/android/uiautomator/core/UiAutomatorBridge.java,takeScreenshot,Yes, this method requires permissions. It likely needs permissions to access the device's storage where the screenshot will be saved.
/com/android/uiautomator/core/UiAutomationShellWrapper.java,setRunAsMonkey,Yes, because it manages "monkey test" mode which may affect application behavior, requiring appropriate permissions to ensure security and prevent misuse.
/com/android/startop/test/SystemServerBenchmarks.java,initializeBenchmarks,Yes, this method requires permissions because it involves accessing installed applications, checking permissions, and retrieving package information, which typically requires the appropriate user permissions in Android (e.g., `GET_INSTALLED_APPS`, `READ_EXTERNAL_STORAGE`).
/com/android/car/setupwizardlib/InitialLockSetupClient.java,startConnection,Yes, it likely requires permissions to bind to a service.
/com/android/car/setupwizardlib/InitialLockSetupClient.java,saveLockPassword,Yes, this method likely requires permissions to modify device security settings, such as setting a password.
/com/android/car/setupwizardlib/InitialLockSetupClient.java,saveLockPin,Yes, setting a device PIN typically requires permissions such as `SET_PASSWORD` or similar security-related permissions to ensure that only authorized applications can change the device's security settings.
/com/android/car/setupwizardlib/InitialLockSetupClient.java,saveLockPattern,Yes, this method likely requires permissions to modify device lock settings, which is a sensitive operation.
/com/android/car/setupwizardlib/InitialLockSetupClient.java,doInBackground,Yes, this method likely requires permissions, as it interacts with the `KeyguardManager` and performs operations related to setting locks, which typically require permissions related to device security (like `USE_FINGERPRINT` or `LOCK_SCREEN`).
/com/android/car/setupwizardlib/util/FeatureResolver.java,getFeatureBundle,Yes, this method requires permissions because it uses `ContentResolver`, which typically requires permissions to access certain content providers in Android.
/com/android/car/setupwizardlib/partner/PartnerConfigHelper.java,getPartnerConfigBundle,Yes, because it uses `ContentResolver`, which may require permissions to access certain types of data (e.g., READ_CONTACTS, etc.).
/com/android/car/setupwizardlib/partner/PartnerConfigHelper.java,getResourcesByPackageName,Yes, this method requires permissions. Accessing resources by package name may need the `GET_PACKAGE_SIZE` or `QUERY_ALL_PACKAGED` permissions, depending on the context and usage.
/com/android/car/setupwizardlib/summary/PartnerSummaryActionsCollector.java,getPartnerSummaryActions,Yes, the method likely requires permissions to access a content provider, as it attempts to query data from `mContentProviderUri`.
/com/android/car/setupwizardlib/summary/PartnerSummaryActionsCollector.java,getPartnerDeferredActions,Yes, requires permissions. The method interacts with a content provider (`mContentProviderUri`), which typically requires permissions to access, depending on the data it manages.
/com/android/car/setupwizardlib/summary/PartnerSummaryActionsCollector.java,getPartnerSummaryActionsFromContentProvider,Yes, this method likely requires permissions because it interacts with a content provider, which typically requires permission to access the data it manages.
/com/android/car/setupwizardlib/summary/PartnerSummaryActionsCollector.java,getActionCompletionStateFromContentProvider,Yes, the method likely requires permissions to access the content provider specified by `contentProviderUri`. Accessing content providers often requires specific permissions defined in the AndroidManifest.xml, especially if sensitive data is involved.
/com/android/car/setupwizardlib/summary/PartnerSummaryActionsCollector.java,getActionSummaryStateFromContentProvider,Yes, this method likely requires permissions to access a content provider, which typically involves reading data from external storage or specific app data.
/com/android/car/setupwizardlib/summary/PartnerSummaryActionsCollector.java,getDeferredActionStateFromContentProvider,Yes, this method likely requires permissions related to accessing a content provider. Specifically, it involves interacting with a `ContentResolver`, which typically requires the appropriate permissions defined in the AndroidManifest.xml to access data from the specified `contentProviderUri`.
/com/android/printservice/recommendation/util/DiscoveryListenerMultiplexer.java,addListener,Yes, this method requires permissions because it involves network service discovery, which typically requires access to network state and could necessitate specific permissions in Android (e.g., ACCESS_WIFI_STATE or ACCESS_NETWORK_STATE).
/com/android/printservice/recommendation/plugin/hp/ServiceListener.java,start,Yes, this method likely requires permissions related to network operations or service discovery, as it seems to involve network service actions (like starting service discovery) which typically require manifest declarations for access to network state and related functionality.
/com/android/egg/ComponentActivationActivity.java,onStart,Yes, the method interacts with components and settings in Android, requiring permissions such as `PACKAGE_USAGE_STATS` for accessing app usage stats and potentially `CHANGE_COMPONENT_ENABLED_SETTING` for changing component state.
/com/android/egg/neko/NekoLand.java,onBindViewHolder,Yes, this method requires permissions. It checks for `WRITE_EXTERNAL_STORAGE` permission before performing certain actions related to sharing data, which necessitates explicit permission from the user.
/com/android/egg/neko/NekoLand.java,onClick,Yes, the method checks for the `WRITE_EXTERNAL_STORAGE` permission and requests it if not granted.
/com/android/egg/neko/NekoLand.java,shareCat,Yes, requires permissions. It accesses external storage to save and share a file, which requires storage permissions.
/com/android/egg/neko/NekoLand.java,onRequestPermissionsResult,Yes, this method `onRequestPermissionsResult` handles the result of permission requests, which inherently requires permission management.
/com/android/egg/neko/NekoService.java,setupNotificationChannels,Yes, this method requires permission to create notification channels, which is related to managing notifications in Android.
/com/android/egg/neko/NekoService.java,registerJob,Yes, the method `registerJob` requires permissions related to scheduling jobs and potentially managing notifications. These actions typically involve permissions like `android.permission.ACCESS_NETWORK_STATE` or `android.permission.RECEIVE_BOOT_COMPLETED`, depending on how it's implemented.
/com/android/egg/neko/NekoLockedActivity.java,onCreate,Yes, because it manipulates window flags that may require user permissions related to showing on locked screens or modifying screen behavior.
/com/android/cameraextensions/CameraExtensionsProxyService.java,checkCameraPermission,Yes, this method checks for camera permission, which requires specific permissions to access the camera hardware on the device.
/com/android/cameraextensions/CameraExtensionsProxyService.java,initializeSession,Yes, Camera permission is required for initializing the capture session.
/com/android/cameraextensions/CameraExtensionsProxyService.java,releaseSession,Yes, the method requires permission because it includes a check for camera permission before executing the releaseSession method.
/com/android/cameraextensions/CameraExtensionsProxyService.java,initSession,Yes, this method likely requires permissions. It involves camera functionality, which typically requires permissions such as CAMERA in Android.
/com/android/cameraextensions/CameraExtensionsProxyService.java,init,Yes, this method likely requires camera permissions to access camera functionality.
/com/android/cameraextensions/CameraExtensionsProxyService.java,isExtensionAvailable,Yes, because accessing camera features usually requires camera permissions.
/com/android/cameraextensions/CameraExtensionsProxyService.java,init,Yes, the method likely requires permissions because it interacts with camera features, which typically require specific permissions in Android (e.g., CAMERA permission).
/com/android/keyguard/CarrierTextManager.java,getStatusForIccState,Yes, this method may require permissions related to Telephony, as it involves accessing SIM state information.
/com/android/keyguard/KeyguardSecurityContainer.java,updateSideSetting,Yes, likely requires permissions to modify system settings.
/com/android/keyguard/KeyguardEsimArea.java,onAttachedToWindow,Yes, because the method involves registering a receiver which typically requires permissions to access certain system features.
/com/android/keyguard/KeyguardEsimArea.java,isEsimLocked,Yes, this method likely requires permissions because it interacts with eSIM functionality and subscription management, which typically involves sensitive user data or device capabilities.
/com/android/keyguard/KeyguardEsimArea.java,onClick,Yes, this method likely requires permissions to access subscription information and manage eSIM functionality.
/com/android/keyguard/KeyguardUpdateMonitorCallback.java,onPhoneStateChanged,Yes, requires permissions to access phone state.
/com/android/keyguard/TrustGrantFlags.java,dismissKeyguardRequested,Yes, this method may require permission related to dismissing the keyguard for security reasons.
/com/android/keyguard/KeyguardSecurityContainerController.java,finish,Yes, this method likely requires permissions related to managing the keyguard or lock screen, as it is involved in the authentication and dismissal process of the keyguard.
/com/android/keyguard/KeyguardSecurityContainerController.java,dismiss,Yes, this method likely requires permissions to modify the keyguard state.
/com/android/keyguard/KeyguardSecurityContainerController.java,showNextSecurityScreenOrFinish,Yes, because it involves user authentication and security-related operations, which typically require specific permissions.
/com/android/keyguard/KeyguardSecurityContainerController.java,reportFailedUnlockAttempt,Yes, this method likely requires permissions because it interacts with user security features, such as reporting unlock attempts and managing password policies, which are typically restricted for security reasons in Android.
/com/android/keyguard/KeyguardSimPinViewController.java,verifyPasswordAndUnlock,Yes, the method likely requires permissions because it interacts with sensitive areas such as password verification and SIM card operations, which usually require permissions to ensure user security and privacy.
/com/android/keyguard/KeyguardSimPinViewController.java,run,Yes, this method likely requires permissions because it interacts with the `TelephonyManager` to supply an ICC lock pin, which typically requires permissions related to phone state or SIM card access in Android.
/com/android/keyguard/KeyguardSimPukViewController.java,onSimStateChanged,Yes, because it's related to SIM state changes which typically require telephony permissions.
/com/android/keyguard/KeyguardSimPukViewController.java,run,Yes, it requires permissions because it involves accessing telephony functions such as supplying a SIM unlock PUK, which mandates specific permissions in Android (e.g., `READ_PHONE_STATE`, `CHANGE_SIM_STATE`).
/com/android/keyguard/KeyguardSecurityCallback.java,dismiss,Yes, it likely requires permissions related to user security and authentication, as it handles user credentials and security modes.
/com/android/keyguard/KeyguardSecurityCallback.java,finish,Yes, this method requires permissions because it involves dismissing the keyguard, which typically requires specific security permissions to interact with device security settings.
/com/android/keyguard/clock/ClockOptionsProvider.java,insert,Yes, it likely requires permissions to insert data into a content provider.
/com/android/keyguard/clock/ClockOptionsProvider.java,delete,Yes, this method likely requires permissions because it deals with a `Uri`, which typically involves access to shared data (such as files, contacts, etc.), and operations like 'delete' often need explicit permissions to prevent unauthorized data manipulation.
/com/android/keyguard/clock/ClockOptionsProvider.java,update,Yes, this method likely requires permissions to access or modify data in the content provider identified by the `Uri`.
/com/android/keyguard/clock/ClockOptionsProvider.java,openFile,Yes, the `openFile` method requires permissions because it deals with file access through the `Uri` parameter, which may require read or write permissions depending on the Uri location.
/com/android/keyguard/clock/ClockOptionsProvider.java,writeDataToPipe,Yes, it requires permissions because it interacts with files (write operations) and may need to access external storage or shared resources.
/com/android/keyguard/clock/SettingsWrapper.java,getLockScreenCustomClockFace,Yes, this method likely requires permissions to access the user's settings.
/com/android/keyguard/clock/ClockManager.java,register,Yes, because it registers a content observer, which typically requires permission to access the corresponding content URI.
/com/android/wallpapercropper/WallpaperCropActivity.java,init,Yes, because it appears to be dealing with wallpapers and image URIs, which may require storage or external permissions.
/com/android/wallpapercropper/WallpaperCropActivity.java,setWallpaper,Yes, because setting a wallpaper typically requires the permission to write to system settings or the storage where the wallpaper images are located.
/com/android/wallpapercropper/WallpaperCropActivity.java,cropImageAndSetWallpaper,Yes, this method likely requires permissions to access system resources such as the user's wallpaper or image files for cropping, which typically involve READ_EXTERNAL_STORAGE or SET_wallpaper permissions in Android.
/com/android/wallpapercropper/WallpaperCropActivity.java,cropImageAndSetWallpaper,Yes, it requires permissions because it involves setting the wallpaper, which typically requires the `SET_WALLPAPER` permission in Android.
/com/android/wallpapercropper/WallpaperCropActivity.java,regenerateInputStream,Yes, this method may require permissions because it accesses resources and files (like `openRawResource`, `openFileInput`, and `openInputStream`), which typically require permissions such as reading external storage or accessing content providers in Android.
/com/android/wallpapercropper/WallpaperCropActivity.java,cropBitmap,Yes, the method involves manipulating the wallpaper and may require permissions such as `SET_WALLPAPER` to change the device's wallpaper.
/com/android/vts/istats/vendoratom/VtsVendorAtomJavaTest.java,setUp,Yes, the method likely requires permissions to access the IStats service and possibly interact with system services, as indicated by the use of ServiceManager and an attempt to connect to a declared service.
/com/android/net/module/util/DeviceConfigUtils.java,getPackageVersion,Yes, the method requires permissions to access package information on an Android device. Specifically, it likely requires the `GET_PACKAGE_SIZE` permission or related permissions to retrieve package details using `getPackageManager()` and `getPackageInfo()`.
/com/android/net/module/util/DeviceConfigUtils.java,resolveTetheringModuleVersion,Yes, because it involves retrieving package information which may require `PACKAGE_USAGE_STATS` or similar permissions depending on the context.
/com/android/net/module/util/DeviceConfigUtils.java,getTetheringModuleVersion,Yes, accessing the tethering module version typically requires permission related to network or tethering capabilities.
/com/android/net/module/util/ConnectivitySettingsUtils.java,setPrivateDnsMode,Yes, this method requires permissions because it modifies system settings (private DNS mode) which typically requires specific permissions, such as `WRITE_SETTINGS`.
/com/android/net/module/util/ConnectivitySettingsUtils.java,setPrivateDnsHostname,Yes, this method likely requires permission to modify system settings.
/com/android/net/module/util/LocationPermissionChecker.java,checkLocationPermission,Yes, because it checks for location permissions (ACCESS_COARSE_LOCATION or ACCESS_FINE_LOCATION).
/com/android/net/module/util/LocationPermissionChecker.java,checkLocationPermissionWithDetailInfo,Yes, because it checks for location permissions (ACCESS_COARSE_LOCATION or ACCESS_FINE_LOCATION) that require explicit user permission to access.
/com/android/net/module/util/LocationPermissionChecker.java,enforceLocationPermission,Yes, the method requires permissions because it enforces location permissions (ACCESS_COARSE_LOCATION or ACCESS_FINE_LOCATION) for the caller.
/com/android/net/module/util/LocationPermissionChecker.java,checkLocationPermissionInternal,Yes, because it checks location permissions, which typically require specific permissions in the Android manifest.
/com/android/net/module/util/LocationPermissionChecker.java,checkCallersLocationPermission,Yes, because it checks for location permissions (`ACCESS_FINE_LOCATION` or `ACCESS_COARSE_LOCATION`).
/com/android/net/module/util/LocationPermissionChecker.java,isLocationModeEnabled,Yes, because accessing location services usually requires location permissions in Android.
/com/android/net/module/util/LocationPermissionChecker.java,getUidPermission,Yes, the method likely requires permissions because it checks the permission associated with a specific UID.
/com/android/net/module/util/LocationPermissionChecker.java,checkNetworkSettingsPermission,Yes, because it checks if a UID has the NETWORK_SETTINGS permission, which requires permission to access.
/com/android/net/module/util/LocationPermissionChecker.java,checkNetworkSetupWizardPermission,Yes, this method checks for the NETWORK_SETUP_WIZARD permission, which requires the appropriate permission to access.
/com/android/net/module/util/LocationPermissionChecker.java,checkNetworkStackPermission,Yes, this method checks for the NETWORK_STACK permission, which requires the appropriate permission to access.
/com/android/net/module/util/LocationPermissionChecker.java,checkMainlineNetworkStackPermission,Yes, this method checks for the MAINLINE_NETWORK_STACK permission, which implies that specific permissions are required to utilize it.
/com/android/net/module/util/TcUtils.java,tcFilterDelDev,Yes, because deleting network filters typically requires network permissions.
/com/android/net/module/util/TcUtils.java,tcQdiscAddDevClsact,Yes, because modifying network configurations typically requires system-level permissions.
/com/android/net/module/util/InterfaceParams.java,getMacAddress,Yes, this method may require permissions to access network interfaces and hardware addresses on Android devices, typically needing network-related permissions such as `ACCESS_WIFI_STATE` or `INTERNET`.
/com/android/net/module/util/PermissionUtils.java,checkAnyPermissionOf,Yes, this method requires permissions because it checks if one or more specific permissions have been granted.
/com/android/net/module/util/PermissionUtils.java,checkAnyPermissionOf,Yes, this method requires permissions because it checks if the context has certain permissions granted to a process and user ID.
/com/android/net/module/util/PermissionUtils.java,enforceAnyPermissionOf,Yes, it requires permissions because it enforces a permission check on the provided context for specified permissions.
/com/android/net/module/util/PermissionUtils.java,enforceNetworkStackPermission,Yes, it requires permissions because it checks for security permissions related to network access.
/com/android/net/module/util/PermissionUtils.java,enforceNetworkStackPermissionOr,Yes, this method requires permissions because it involves checking or enforcing network stack permissions (`NETWORK_STACK` and `MAINLINE_NETWORK_STACK`).
/com/android/net/module/util/PermissionUtils.java,enforceRestrictedNetworkPermission,Yes, it checks for the permission CONNECTIVITY_USE_RESTRICTED_NETWORKS.
/com/android/net/module/util/PermissionUtils.java,enforceAccessNetworkStatePermission,Yes, it requires the `ACCESS_NETWORK_STATE` permission to check the network access state.
/com/android/net/module/util/PermissionUtils.java,checkDumpPermission,Yes, because it checks for the `android.permission.DUMP` permission.
/com/android/net/module/util/netlink/NetlinkUtils.java,sendOneShotKernelMessage,Yes, this method likely requires permissions to interact with the kernel via netlink sockets, which typically require elevated privileges.
/com/android/net/module/util/netlink/InetDiagMessage.java,getConnectionOwnerUid,Yes, this method likely requires permissions related to network access or socket operations, as it involves looking up UIDs based on network connections.
/com/android/net/module/util/ip/NetlinkMonitor.java,createFd,Yes, this method likely requires permissions because it involves creating a socket and potentially accessing network resources, which typically requires specific permissions in Android (e.g., `INTERNET`, `ACCESS_NETWORK_STATE`).
/com/android/net/module/util/ip/InterfaceController.java,setInterfaceConfiguration,Yes, this method likely requires permissions because it manipulates network interface configurations, which typically requires specific permissions related to network management in Android.
/com/android/net/module/util/ip/InterfaceController.java,setIPv6AddrGenModeIfSupported,Yes, it likely requires permissions related to modifying network settings.
/com/android/net/module/util/ip/InterfaceController.java,addAddress,Yes, this method likely requires permissions related to network access, as it involves adding an address to an interface, which typically requires elevated privileges in Android.
/com/android/net/module/util/ip/InterfaceController.java,removeAddress,Yes, this method likely requires permissions related to modifying network interfaces, such as `android.permission.CHANGE_NETWORK_STATE` or a similar permission.
/com/android/net/module/util/ip/IpNeighborMonitor.java,startKernelNeighborProbe,Yes, this method likely requires permissions to access network features in Android. It involves low-level network operations for reachability detection, which typically necessitates permissions related to network access.
/com/android/printspooler/ui/AddPrinterActivity.java,onCreateLoader,Yes, the method interacts with the PrintManager, which typically requires permissions related to printing services in Android (e.g., `Manifest.permission.INTERNET`).
/com/android/printspooler/ui/AddPrinterActivity.java,performAction,Yes, the method requires permissions because it involves starting an activity that may require permissions for accessing the market or handling URIs.
/com/android/printspooler/ui/PrintActivity.java,startAdvancedPrintOptionsActivity,Yes, this method likely requires permissions related to initiating activities and potentially accessing printing services, as it interacts with printing features and intents.
/com/android/printspooler/ui/PrintActivity.java,onCreateLoader,Yes, this method likely requires permissions related to accessing printing services in Android.
/com/android/printspooler/ui/PrintActivity.java,transform,Yes, the method likely requires permissions to bind a service, as it involves interacting with the `Context` and binding to `PdfManipulationService`. Binding to services generally requires appropriate permissions defined in the AndroidManifest.xml.
/com/android/printspooler/renderer/PdfManipulationService.java,openDocument,Yes, because accessing files typically requires permission to read or write external storage.
/com/android/printspooler/renderer/PdfManipulationService.java,write,Yes, this method likely requires permissions because it involves writing to a destination, potentially a file, which typically necessitates the appropriate storage permissions in Android.
/com/android/printspooler/util/BitmapSerializeUtils.java,readBitmapPixels,Yes, it likely requires permissions to access the file descriptor, which typically involves reading files.
/com/android/printspooler/model/RemotePrintDocument.java,doInBackground,Yes, this method likely requires permissions because it involves file operations (reading/writing to files), which typically require storage permissions in Android.
/com/android/printspooler/model/NotificationController.java,updateNotifications,Yes, because updating notifications may require permissions related to managing notifications or accessing print jobs.
/com/android/printspooler/model/NotificationController.java,handleCancelPrintJob,Yes, this method requires permissions because it involves handling print jobs, which typically requires specific permissions related to printing in Android, such as `WRITE_EXTERNAL_STORAGE` or `BIND_PRINT_SERVICE`.
/com/android/printspooler/model/NotificationController.java,doInBackground,Yes, this method likely requires permissions because it interacts with the print service, which generally necessitates permissions related to accessing print functionality on devices.
/com/android/printspooler/model/NotificationController.java,handleRestartPrintJob,Yes, this method requires permissions because it interacts with the `PowerManager` and `PrintManager`, which typically require appropriate permissions to modify power states and handle print jobs in Android.
/com/android/printspooler/model/NotificationController.java,doInBackground,Yes, requires permissions because it interacts with the print service, which typically requires the permission to access printing functionalities in Android.
/com/android/printspooler/model/PrintSpoolerService.java,onCreate,Yes, because it uses `PowerManager` to create a wake lock, which requires `WAKE_LOCK` permission.
/com/android/printspooler/model/PrintSpoolerService.java,getPrintJobInfo,Yes, this method requires permissions because it deals with print jobs, which typically require specific permissions to access print services and manage print tasks in Android.
/com/android/printspooler/model/PrintSpoolerService.java,writePrintJobData,Yes, because the method involves writing print job data, which typically requires permissions for accessing the print service and writing to files.
/com/android/printspooler/model/PrintSpoolerService.java,createPrintJob,Yes, this method likely requires permissions related to printing, as it involves creating a print job.
/com/android/printspooler/model/PageContentRepository.java,doInBackground,Yes, the method likely requires permissions because it interacts with resources that may involve reading/writing files or rendering content, which commonly requires permissions in Android (e.g., storage access).
/com/android/externalstorage/TestDocumentsProvider.java,queryRoots,Yes, because it interacts with content providers via the ContentResolver, which typically requires permissions (e.g., READ_EXTERNAL_STORAGE).
/com/android/externalstorage/TestDocumentsProvider.java,doInBackground,Yes, it likely requires permissions because it uses `getContentResolver` and `notifyChange` methods which may interact with content providers, typically requiring permission to access data.
/com/android/externalstorage/TestDocumentsProvider.java,queryChildDocuments,Yes, because it interacts with documents and requires access to content providers.
/com/android/externalstorage/TestDocumentsProvider.java,openDocument,Yes, the `openDocument` method likely requires permissions to access documents stored on the device. This includes reading or writing to files associated with documents, which typically needs appropriate permissions such as `READ_EXTERNAL_STORAGE` or `WRITE_EXTERNAL_STORAGE`.
/com/android/externalstorage/TestDocumentsProvider.java,openDocumentThumbnail,Yes, the method likely requires permissions to access documents and manage file descriptors.
/com/android/externalstorage/MountReceiver.java,onReceive,Yes, the method interacts with content providers, which typically requires permissions related to accessing external storage or content, depending on the context of use.
/com/android/localtransport/LocalTransport.java,performBackup,Yes, this method likely requires permissions related to backup/restore functionality.
/com/android/localtransport/LocalTransport.java,performFullBackup,Yes, requires permissions. It involves performing full backup operations which typically require permissions related to backup and data access.
/com/android/localtransport/LocalTransport.java,sendBackupData,Yes, this method likely requires permissions because it handles backup data, which generally necessitates specific permissions related to read/write storage or backup operations in Android.
/com/android/localtransport/LocalTransport.java,getRestoreData,Yes, this method likely requires permissions because it appears to handle backup and restore data, which typically necessitates specific permissions in Android to access and manage files or data in a device's storage.
/com/android/localtransport/LocalTransport.java,getNextFullRestoreDataChunk,Yes, because restoring data typically requires permissions related to accessing and modifying user data.
/com/android/localtransport/LocalTransport.java,getBackupQuota,Yes, this method likely requires permissions related to backup data on the device, as it deals with backup quotas.
/com/android/launcher3/util/NoLocaleSQLiteHelper.java,openOrCreateDatabase,Yes, this method requires permissions because accessing or creating a database typically requires storage permissions in Android.
/com/android/launcher3/util/SQLiteCacheHelper.java,insertOrReplace,Yes, it requires permissions to access the database on the device.
/com/android/launcher3/icons/SimpleIconCache.java,getSerialNumberForUser,Yes, this method likely requires permissions because it involves accessing user-specific data (serial number) which may be restricted for privacy and security reasons.
/com/android/launcher3/icons/cache/BaseIconCache.java,addIconToDB,Yes, this method likely requires permissions to access and modify the database, especially for inserting or updating data.
/com/android/perftests/blob/AtraceUtils.java,runShellCommand,Yes, it likely requires permissions because executing shell commands on an Android device typically requires system-level permissions, which are restricted for security reasons.
/com/android/companiondevicemanager/CompanionDeviceDiscoveryService.java,stop,Yes, this method likely requires permissions because it involves starting a service related to device discovery, which typically requires specific permissions related to location or network access in Android.
/com/android/companiondevicemanager/CompanionDeviceDiscoveryService.java,onCreate,Yes, this method likely requires permissions related to Bluetooth and Wi-Fi services, as it interacts with `BluetoothManager` and `WifiManager`.
/com/android/companiondevicemanager/CompanionDeviceDiscoveryService.java,startDiscovery,Yes, this method likely requires permissions related to Bluetooth and Wi-Fi for discovery operations.
/com/android/companiondevicemanager/CompanionDeviceDiscoveryService.java,checkBoundDevicesIfNeeded,Yes, the method likely requires permissions because it interacts with Bluetooth devices and obtains bonded and connected device information, which typically requires Bluetooth-related permissions in Android (e.g., LOCATION and BLUETOOTH permissions).
/com/android/companiondevicemanager/CompanionDeviceDiscoveryService.java,findAndReportMatches,Yes, this method requires permissions. It appears to involve Bluetooth devices, which typically require Bluetooth-related permissions in Android (e.g., `BLUETOOTH`, `BLUETOOTH_ADMIN`).
/com/android/companiondevicemanager/CompanionDeviceDiscoveryService.java,startBtScanningIfNeeded,Yes, this method requires permissions because it involves Bluetooth operations like registering a BroadcastReceiver for Bluetooth actions and starting Bluetooth discovery, which typically require BLUETOOTH and possibly BLUETOOTH_ADMIN permissions in Android.
/com/android/companiondevicemanager/CompanionDeviceDiscoveryService.java,startWifiScanningIfNeeded,Yes, because this method involves scanning for Wi-Fi networks, which typically requires the `ACCESS_WIFI_STATE` and `CHANGE_WIFI_STATE` permissions in Android.
/com/android/companiondevicemanager/CompanionDeviceDiscoveryService.java,onReceive,Yes, this method seems to involve Bluetooth actions that typically require permissions related to Bluetooth access, such as `BLUETOOTH` or `BLUETOOTH_ADMIN`.
/com/android/companiondevicemanager/CompanionDeviceDiscoveryService.java,onReceive,Yes, it requires permissions. The method handles Wi-Fi scan results, which typically requires the `ACCESS_WIFI_STATE` and `CHANGE_WIFI_STATE` permissions in Android.
/com/android/companiondevicemanager/DeviceFilterPair.java,getMacAddress,Yes, this method likely requires permissions, specifically for accessing device information like the MAC address, which is considered sensitive data.
/com/android/encryptedlocaltransport/EncryptedLocalTransport.java,performBackup,Yes, this method requires permissions, likely for accessing file storage and performing backup operations, which typically require specific permissions in Android.
/com/android/bitmap/DecodeTask.java,decode,Yes, the method likely requires permission to access files or storage, as it uses a `ParcelFileDescriptor` and `InputStream` which can deal with file data.
/com/android/bitmap/ResourceRequestKey.java,createInputStream,Yes, it typically requires permissions to read resources, especially if accessing application assets or raw resources.
/com/android/clockwork/ThermalObserver.java,dump,Yes, the method checks for a specific permission (`DUMP`) using `checkCallingOrSelfPermission`, which implies that it requires the caller to have the appropriate permission.
/com/android/clockwork/power/PowerTracker.java,onBootCompleted,Yes, this method requires permissions because it registers broadcast receivers, which typically necessitate permissions to receive certain system intents.
/com/android/clockwork/power/PowerTracker.java,fetchInitialChargingState,Yes, the method checks the battery state, which typically requires permissions like `BIND_BATTERY_STATS` or `ACCESS_BATTERY_STATS` to access battery-related information.
/com/android/clockwork/power/WearTouchMediator.java,onBootCompleted,Yes, this method requires permissions because it registers receivers for various actions, including the permission for touch events (`PERMISSION_TOUCH`).
/com/android/clockwork/power/WearCoreControlMediator.java,onBootCompleted,Yes, this method likely requires permissions because it registers a broadcast receiver which typically needs the appropriate permissions to receive system broadcasts like ACTION_SCREEN_ON and ACTION_SCREEN_OFF.
/com/android/clockwork/power/AmbientConfig.java,isTouchToWake,Yes, this method requires permissions because it accesses system settings related to global configuration (specifically "AMBIENT_TOUCH_TO_WAKE"), which usually necessitates permissions to read system settings on an Android device.
/com/android/clockwork/power/AmbientConfig.java,isTiltToWake,Yes, the method accesses a system setting (AMBIENT_TILT_TO_WAKE) which typically requires permissions to read.
/com/android/clockwork/power/AmbientConfig.java,isUserTiltToBright,Yes, this method likely requires permissions to access system settings, specifically for reading 'Settings.Global' values, which may include permissions related to device settings.
/com/android/clockwork/power/AmbientConfig.java,isWatchfaceDecomposable,Yes, the method requires permissions to access system settings. It checks a global setting from the `Settings.Global` class.
/com/android/clockwork/power/AmbientConfig.java,setTiltToWake,Yes, it requires permissions to modify system settings.
/com/android/clockwork/power/AmbientConfig.java,register,Yes, it requires permissions because it involves registering a `ContentObserver`, which typically requires permissions to access specific settings or data in Android.
/com/android/clockwork/power/WearPowerService.java,onReceive,Yes, this method likely requires permissions related to power management and screen state changes, such as the "DEVICE_POWER" permission.
/com/android/clockwork/power/WearPowerService.java,onStart,Yes, permissions are required. The method interacts with system services such as registering a receiver, which typically requires specific permissions to access or manipulate system resources.
/com/android/clockwork/power/WearPowerService.java,registerContentObserver,Yes, it likely requires permissions because it deals with content observers and accessing global settings, which typically need specific permissions in Android.
/com/android/clockwork/wifi/WearWifiMediatorSettingsTest.java,testGetAndPutWifiSetting,Yes, because accessing and modifying Wi-Fi settings requires permissions in Android.
/com/android/clockwork/wifi/WearWifiMediatorSettingsTest.java,testAirplaneModeChangesWifiSettings,Yes, this method requires permissions because it interacts with system settings related to airplane mode and WiFi configurations, which typically need special permissions for modification.
/com/android/clockwork/wifi/WearWifiMediatorSettingsTest.java,testWifiChangesWhileInAirplaneMode,Yes, this method likely requires permissions. It interacts with system settings related to Wi-Fi and airplane mode, which generally require specific permissions in Android (e.g., `CHANGE_WIFI_STATE`, `WRITE_SETTINGS`, etc.).
/com/android/clockwork/wifi/WearWifiMediatorTest.java,testWifiSettingsChanges,Yes, this method likely requires permissions because it interacts with Wi-Fi settings and broadcasts intents, which typically necessitate network-related permissions in Android.
/com/android/clockwork/wifi/WearWifiMediatorTest.java,testHardwareLowPowerMode,Yes, this method likely requires permissions related to network access and possibly broadcasting intents, as it interacts with Wi-Fi settings and might change system state.
/com/android/clockwork/wifi/WearWifiMediatorTest.java,testWifiEmergencyCall_wifiTurnsOnForEmergencyCall,Yes, this method likely requires permissions because it interacts with telephony components (making a call) and possibly network state (Wi-Fi).
/com/android/clockwork/wifi/SimpleTimerWifiBackoff.java,cancelBackoff,Yes, this method likely requires permissions because it interacts with the AlarmManager, which typically requires the permission to set or cancel alarms in Android.
/com/android/clockwork/wifi/SimpleTimerWifiBackoff.java,onReceive,Yes, because the method interacts with system alarms and network states, which typically requires permissions related to alarms and network access in the Android environment.
/com/android/clockwork/wifi/WifiLogger.java,recordWifiState,Yes, this method likely requires permissions as it deals with recording the state of the Wi-Fi, which typically requires access to network state and tracking information.
/com/android/clockwork/wifi/WearWifiMediatorSettings.java,getObservedUris,Yes, it requires permissions. The method interacts with system settings (like Wi-Fi configurations), which typically requires appropriate permissions to access or modify.
/com/android/clockwork/wifi/WearWifiMediatorSettings.java,getWifiOnWhenProxyDisconnected,Yes, this method likely requires permissions because it accesses system settings related to Wi-Fi, which typically require the "ACCESS_WIFI_STATE" or similar permissions in Android.
/com/android/clockwork/wifi/WearWifiMediatorSettings.java,getIsInAirplaneMode,Yes, this method requires permissions because it accesses system settings related to airplane mode, which typically requires the `READ_SETTINGS` permission.
/com/android/clockwork/wifi/WearWifiMediatorSettings.java,getWifiSetting,Yes, this method requires permissions because it accesses system settings related to Wi-Fi, which typically necessitate the `ACCESS_WIFI_STATE` or `CHANGE_WIFI_STATE` permissions to read Wi-Fi configurations.
/com/android/clockwork/wifi/WearWifiMediatorSettings.java,putWifiSetting,Yes, this method requires permissions because it interacts with system settings, specifically modifying Wi-Fi settings, which typically requires `WRITE_SETTINGS` permission in Android.
/com/android/clockwork/wifi/WearWifiMediatorSettings.java,getInWifiSettings,Yes, because accessing settings through `Settings.System` may require permissions like `READ_SETTINGS`.
/com/android/clockwork/wifi/WearWifiMediatorSettings.java,getEnableWifiWhileCharging,Yes, this method requires permissions because it accesses system settings, which typically require the `READ_SETTINGS` permission in Android.
/com/android/clockwork/wifi/WearWifiMediatorSettings.java,getHardwareLowPowerMode,Yes, because it accesses `Settings.Global`, which typically requires permissions related to system settings.
/com/android/clockwork/wifi/WearWifiMediatorSettings.java,updateWifiSettingOnAirplaneModeChange,Yes, this method likely requires permissions because it deals with changing Wi-Fi settings, which typically requires specific permissions like `CHANGE_WIFI_STATE`.
/com/android/clockwork/wifi/WearWifiMediatorSettings.java,onChange,Yes, because it interacts with system settings such as Wi-Fi, airplane mode, and requires permissions to access system-level settings on Android.
/com/android/clockwork/wifi/WifiBackoffSettings.java,registerSettingsObserver,Yes, because it interacts with system settings that may require permissions related to accessing or modifying system settings.
/com/android/clockwork/wifi/WifiBackoffSettings.java,loadWifiBackoffSettings,Yes, this method requires permissions because it accesses system settings, which typically requires permissions related to accessing system configurations (like `ACCESS_WIFI_STATE` or `WRITE_SETTINGS`).
/com/android/clockwork/wifi/WearWifiMediator.java,onReceive,Yes, the method `onReceive` may require permissions due to its involvement with network configurations and telephony actions, which often require specific permissions in Android (e.g., `ACCESS_WIFI_STATE`, `CHANGE_WIFI_STATE`, and `CALL_PHONE`).
/com/android/clockwork/wifi/WearWifiMediator.java,onCallStateChanged,Yes, this method likely requires permissions because it involves monitoring call state changes, which typically requires the READ_PHONE_STATE permission in Android.
/com/android/clockwork/wifi/WearWifiMediator.java,onBootCompleted,Yes, this method likely requires permissions related to Wi-Fi state and possibly other system settings changes.
/com/android/clockwork/wifi/WearWifiMediator.java,updateWifiState,Yes, it likely requires permissions because it deals with toggling Wi-Fi state, which typically requires specific permissions (e.g., `CHANGE_WIFI_STATE`).
/com/android/clockwork/wifi/WearWifiMediator.java,getBroadcastReceiverIntentFilter,Yes, because it involves actions related to the Wi-Fi state and network changes, which typically require permissions like `ACCESS_WIFI_STATE` and `CHANGE_WIFI_STATE`.
/com/android/clockwork/settings/WearSettingsServiceTest.java,bootComplete_setDefaultValueForCombinedLocationEnabledIfNeeded,Yes, because it interacts with location settings, which generally require location permissions in Android.
/com/android/clockwork/settings/CombinedLocationSettingObserverTest.java,testOnChange,Yes, the method requires permissions related to accessing location and settings data.
/com/android/clockwork/settings/WearSettingsService.java,setDefaultValueForCombinedLocationEnabledIfNeeded,Yes, it requires permissions because it uses location services and settings which typically require location permissions in Android.
/com/android/clockwork/settings/CombinedLocationSettingObserver.java,onChange,Yes, it requires permissions. The method interacts with `Settings` related to location services, which typically requires location permissions.
/com/android/clockwork/mediarouting/AudioSystemWrapper.java,setDevicesRoleForStrategy,Yes, because managing audio device roles typically requires permissions to access audio settings or device information.
/com/android/clockwork/mediarouting/AudioApiProvider.java,disableSpeaker,Yes, this method likely requires permissions related to audio settings or device management to interact with the audio system and disable the speaker.
/com/android/clockwork/mediarouting/WearAudioPlaybackCallback.java,startWearMediaOutputSwitcher,Yes, this method likely requires permissions related to starting activities. It involves interacting with package managers and components, which generally require appropriate permissions in Android.
/com/android/clockwork/flags/FeatureFlagsObserver.java,register,Yes, it likely requires permissions related to accessing system settings or content observers.
/com/android/clockwork/flags/FeatureFlagsObserver.java,getGlobalSettingsInt,Yes, it likely requires permissions because it accesses global settings via the `ContentResolver`, which typically requires specific permissions to read settings in Android.
/com/android/clockwork/flags/FeatureFlagsObserver.java,getGlobalSettingsLong,Yes, this method likely requires permissions because it accesses global settings, which typically require permissions like `READ_SETTINGS` in Android.
/com/android/clockwork/connectivity/WearConnectivityControllerTest.java,wifiNetworkConnectedChange,Yes, this method likely requires permissions related to accessing network state, specifically "ACCESS_NETWORK_STATE" or other connectivity related permissions in Android.
/com/android/clockwork/connectivity/WearWifiNetworkAgent.java,register,Yes, requires permission to access network state and connectivity services.
/com/android/clockwork/connectivity/WearConnectivityPackageManagerTest.java,sendBroadcastAsUser,Yes, because sending a broadcast typically requires the `SEND_BROADCAST` permission.
/com/android/clockwork/connectivity/WearConnectivityPackageManagerTest.java,installPackages,Yes, this method likely requires permissions because it involves installing packages, which typically necessitates specific permissions to access and modify system packages in Android.
/com/android/clockwork/connectivity/WearConnectivityPackageManager.java,setPackageState,Yes, this method requires permissions because it modifies the state of an application (enable/disable), which typically requires specific permissions to ensure that only authorized entities can make such changes.
/com/android/clockwork/connectivity/WearConnectivityPackageManager.java,disableApp,Yes, it requires permissions. The method interacts with the `PackageManager` to modify app settings, which typically requires the `REQUEST_PACKAGE_USAGE_STATS` or `CHANGE_COMPONENT_ENABLED_STATE` permission in Android.
/com/android/clockwork/connectivity/WearConnectivityPackageManager.java,enableApp,Yes, this method requires permissions because it manipulates application settings and sends broadcasts, which typically require specific permissions related to managing app states (e.g., `CHANGE_COMPONENT_ENABLED_STATE`).
/com/android/clockwork/connectivity/WearConnectivityController.java,onBootCompleted,Yes, the method `onBootCompleted` may require permissions related to receiving system events and potentially modifying network policies, depending on its implementation and context.
/com/android/clockwork/shell/WearDebugShellCommand.java,setWatchFace,Yes, the method likely requires permission to send broadcast intents, which may involve permissions like `SEND_BROADCAST` depending on how it interacts with the components and receivers involved.
/com/android/clockwork/displayoffload/DisplayOffloadShellCommand.java,onCommand,Yes, this method requires permissions because it checks if the calling UID is not root (via `getCallingUid`), indicating it must be executed with specific privileges.
/com/android/clockwork/displayoffload/DisplayOffloadShellCommand.java,handleFontDebugOptions,Yes, it requires permissions because it checks for root access by comparing the calling UID with ROOT_UID, which typically requires specific permissions related to system-level access.
/com/android/clockwork/displayoffload/BrightnessOffloadController.java,loadBrightnessLocked,Yes, this method requires permissions. It interacts with system settings like screen brightness which usually require the `WRITE_SETTINGS` permission in Android.
/com/android/clockwork/displayoffload/BrightnessOffloadController.java,findLightSensor,Yes, the method requires permissions to access sensor information, specifically the light sensor. Accessing hardware sensors typically necessitates permissions in Android.
/com/android/clockwork/displayoffload/BrightnessOffloadController.java,registerForBrightnessConfigChanges,Yes, the method involves accessing system settings related to screen brightness, which typically requires permission (e.g., `android.permission.WRITE_SETTINGS`).
/com/android/clockwork/displayoffload/DebugUtils.java,dumpAsFile,Yes, this method likely requires permissions because it involves writing data to a file, which typically requires filesystem write permissions in an Android context.
/com/android/clockwork/displayoffload/SystemFontHelper.java,mmap,Yes, this method requires permission to read files since it utilizes `FileInputStream` and `FileChannel`, which involve accessing the filesystem.
/com/android/clockwork/displayoffload/AmbientModeTrackerTest.java,testIsTheaterMode_theaterModeIsOn,Yes, because it accesses `Settings.Global`, which typically requires permissions related to modifying settings.
/com/android/clockwork/displayoffload/AmbientModeTracker.java,isTheaterMode,Yes, accessing settings could require permissions, specifically related to reading system settings.
/com/android/clockwork/setup/PostSetupPackageHelper.java,updateLauncherIfExists,Yes, it requires permission to access package information and change component settings.
/com/android/clockwork/setup/PostSetupPackageHelperTest.java,setPairedDeviceOsType,Yes, it likely requires permission to modify settings (e.g., WRITE_SETTINGS) as it involves accessing and modifying global settings.
/com/android/clockwork/systemstatedisplay/PssProvider.java,getSystemState,Yes, this method interacts with system processes and memory, which typically requires permissions such as `GET_TASKS` or `READ_EXTERNAL_STORAGE` in Android to access process information.
/com/android/clockwork/systemstatedisplay/FreeMemoryProvider.java,getPopulatedMemoryInfo,Yes, this method likely requires permissions because it involves accessing memory information, which typically requires specific permissions in Android to ensure user privacy and system security.
/com/android/clockwork/systemstatedisplay/SystemStateDisplayService.java,onBootPhase,Yes, this method likely requires permissions, as it involves accessing system settings and registering a content observer, which typically requires `READ_SETTINGS` or similar permissions in an Android context.
/com/android/clockwork/globalactions/BugReportActionTest.java,onPress_forWearOpen_startsWearServicesBugReportActivityIntent,Yes, because starting a new activity usually requires the permission to access the activity or service being invoked.
/com/android/clockwork/globalactions/ScreenRecordActionTest.java,onPress_startsScreenRecordServiceIntent,Yes, this method likely requires permissions to start a screen recording service.
/com/android/clockwork/globalactions/GlobalActionsProviderImpl.java,maybeAddEmergencyDialAction,Yes, it requires permissions because it checks for telephony availability and creates an emergency dial intent, which typically requires permissions related to making calls and accessing telephony services.
/com/android/clockwork/globalactions/GlobalActionsProviderImpl.java,hasTelephony,Yes, it requires permissions because it accesses the `TelephonyManager`, which typically requires the `READ_PHONE_STATE` permission to obtain telephony-related information.
/com/android/clockwork/globalactions/GlobalActionsProviderImpl.java,onPress,Yes, this method likely requires permissions because it involves starting an activity using an `Intent`, which may require certain permissions based on the action being performed (e.g., launching emergency actions).
/com/android/clockwork/globalactions/GlobalActionsProviderImpl.java,onPress,Yes, this method likely requires permissions because it involves starting an activity, which typically necessitates permissions related to foreground user actions in Android.
/com/android/clockwork/globalactions/GlobalActionsProviderImpl.java,isEnabled,Yes, the method accesses user-related functionality which typically requires permissions related to user management or security.
/com/android/clockwork/globalactions/GlobalActionsProviderImpl.java,bindWearRecordingService,Yes, it likely requires permissions to bind a service, especially if it's related to recording or accessing system resources.
/com/android/clockwork/globalactions/GlobalActionsProviderImpl.java,onPress,Yes, this method likely requires permissions to start a new activity, especially if the activity being launched requires specific permissions (e.g., for accessing system services or user data).
/com/android/clockwork/globalactions/GlobalActionsProviderImpl.java,onPress,Yes, because starting an activity requires `START_ACTIVITY` permission.
/com/android/clockwork/time/TimeState.java,init,Yes, the method may require permissions related to file system access, specifically creating directories and setting permissions.
/com/android/clockwork/time/TimeState.java,set12HourMode,Yes, it requires permissions because it involves setting file permissions (`setPermissions`) which typically requires file system access permissions.
/com/android/clockwork/time/TimeState.java,set24HourMode,Yes, the method attempts to delete a file, which may require file system permissions.
/com/android/clockwork/time/TimeState.java,updateLastChangeValue,Yes, because it interacts with file I/O, which requires storage permissions.
/com/android/clockwork/time/TimeStateRecorder.java,isSetupCompleted,Yes, the method accesses system settings, which typically requires permissions to read system settings (e.g., `android.permission.READ_SETTINGS`).
/com/android/clockwork/time/TimeStateRecorder.java,observeSetupWizard,Yes, this method likely requires permissions to access system settings (e.g., checking the setup wizard status) and register a content observer.
/com/android/clockwork/common/DeviceEnableSetting.java,updateDeviceEnabledFromSettings,Yes, because it involves accessing and modifying secure settings which typically require specific permissions in Android.
/com/android/clockwork/common/DeviceEnableSettingTest.java,testNotifyListeners,Yes, it likely requires permissions due to interactions with `Settings.Secure`, which typically involves reading or modifying secure system settings.
/com/android/clockwork/common/ActivityModeTracker.java,fetchActivityModeEnabled,Yes, this method likely requires permissions because it accesses system settings, specifically `Settings.System`. Accessing such settings may require appropriate permissions in Android.
/com/android/clockwork/common/CellOnlyMode.java,onBootCompleted,Yes, it likely requires permissions because it involves registering a receiver and managing system state after a device power cycle, which generally requires appropriate permissions to modify system settings or react to system events.
/com/android/clockwork/common/CellOnlyMode.java,resetCellOnlyMode,Yes, it likely requires permissions. The method interacts with `Settings.System`, which typically requires appropriate permissions to access system settings in Android.
/com/android/clockwork/common/CellOnlyMode.java,fetchCellOnlyModeEnabled,Yes, the method interacts with system settings, which typically requires permissions.
/com/android/clockwork/common/WearBluetoothSettings.java,putString,Yes, this method requires permissions because it interacts with Bluetooth settings, which typically require appropriate permissions to access and modify.
/com/android/clockwork/common/WearBluetoothSettings.java,getString,Yes, because accessing Bluetooth settings typically requires Bluetooth permissions in Android.
/com/android/clockwork/common/WearBluetoothSettings.java,putInt,Yes, the method likely requires permissions to modify Bluetooth settings.
/com/android/clockwork/common/CellOnlyModeTest.java,test_cellOnlyDurationCalculation,Yes, because it interacts with `Settings.System` which typically requires permissions to access system settings.
/com/android/clockwork/telecom/CompanionTelecomService.java,setEmergencyNumbers,Yes, this method likely requires permissions. It involves setting emergency number data, which typically needs explicit permissions related to handling emergency services or sensitive data in Android.
/com/android/clockwork/telecom/EmergencyNumberDbHelper.java,updateEmergencyNumbers,Yes, the method requires permissions to write to a database, as it involves modifying emergency number data which is sensitive information.
/com/android/clockwork/healthservices/HealthService.java,onStart,Yes, requires permissions. The `onStart` method in an Android context can often involve registering receivers or accessing system services, which typically requires specific permissions declared in the AndroidManifest.xml, such as `RECEIVE_BOOT_COMPLETED` or others related to interactions with broadcast actions.
/com/android/clockwork/healthservices/HandlerBindingAgent.java,handleMessage,Yes, because the method involves binding a service which typically requires permissions in Android.
/com/android/clockwork/healthservices/HalAdapter.java,maybeGetAidlHalService,Yes, this method likely requires permissions as it interacts with HAL (Hardware Abstraction Layer) services, which typically necessitate specific system permissions for access.
/com/android/clockwork/healthservices/HalAdapter.java,resumeTracking,Yes, this method likely requires permissions because it involves tracking health data, which typically requires user permissions to access sensitive information in Android.
/com/android/clockwork/healthservices/HalAdapter.java,removeGoal,Yes, this method requires permissions because it interacts with health services, which typically requires specific permissions to access or modify health-related data in Android.
/com/android/clockwork/healthservices/HalAdapter.java,setProfile,Yes, the method likely requires permissions related to health data access, as it interacts with health services.
/com/android/clockwork/healthservices/HalAdapter.java,setHeartRateAlertParams,Yes, because the method interacts with health services which typically require permissions related to health data access in Android.
/com/android/clockwork/healthservices/HalAdapter.java,setOemCustomConfiguration,Yes, this method likely requires permissions due to its interaction with OEM (Original Equipment Manufacturer) specific configurations, which typically involves sensitive settings on a device.
/com/android/clockwork/healthservices/HalCallbackReceiverV1Test.java,getLocationDataUpdate,Yes, this method involves location data, which typically requires permissions such as `ACCESS_FINE_LOCATION` or `ACCESS_COARSE_LOCATION` in Android.
/com/android/clockwork/healthservices/HalCallbackReceiverHidlTest.java,getLocationDataUpdate,Yes, this method likely requires permissions because it deals with location data (latitude and longitude). Accessing location information typically requires permissions in Android.
/com/android/clockwork/bluetooth/CompanionProxyShard.java,connectSysproxyInBackground,Yes, this method likely requires Bluetooth permissions. It interacts with Bluetooth services, which typically require appropriate permissions in Android (e.g., `BLUETOOTH`, `BLUETOOTH_ADMIN`).
/com/android/clockwork/bluetooth/CompanionProxyShard.java,doInBackgroundDefaultPriority,Yes, this method likely requires Bluetooth permissions. It interacts with Bluetooth services, which typically necessitate the `BLUETOOTH` and possibly `BLUETOOTH_ADMIN` permissions in Android.
/com/android/clockwork/bluetooth/CompanionProxyShard.java,onPostExecute,Yes, this method involves Bluetooth connections and retrieving a Bluetooth network socket, which typically requires Bluetooth permissions in Android.
/com/android/clockwork/bluetooth/CompanionProxyShard.java,doInBackground,Yes, the method likely requires permissions to access the file descriptor from `ParcelFileDescriptor`. Accessing files may require specific storage permissions in Android.
/com/android/clockwork/bluetooth/CompanionProxyShardTest.java,connectNetworkWithWifiInternet,Yes, it likely requires permissions related to accessing network state or managing Wi-Fi networks.
/com/android/clockwork/bluetooth/CompanionProxyShardTest.java,connectNetworkWithCellInternet,Yes, this method likely requires permissions because it involves connecting to the mobile network, which typically requires access to network state and possibly permissions related to modifying network settings.
/com/android/clockwork/bluetooth/BluetoothSocketMonitor.java,start,Yes, this method requires permission to access Bluetooth features.
/com/android/clockwork/bluetooth/BluetoothSocketMonitor.java,transfer,Yes, this method likely requires permissions to access file descriptors, which typically involves reading from or writing to files.
/com/android/clockwork/bluetooth/DeviceInformationGattServer.java,start,Yes, because starting a Gatt server typically requires Bluetooth-related permissions to operate correctly, such as `BLUETOOTH` and `BLUETOOTH_ADMIN`.
/com/android/clockwork/bluetooth/DeviceInformationGattServer.java,onConnectionStateChange,Yes, this method requires permissions because it deals with Bluetooth connections, which typically require location and Bluetooth permissions in Android.
/com/android/clockwork/bluetooth/DeviceInformationGattServer.java,registerService,Yes, this method requires permissions because it involves Bluetooth operations, specifically registering a GATT service, which typically necessitates Bluetooth permissions in Android (e.g., `BLUETOOTH` and `BLUETOOTH_ADMIN`).
/com/android/clockwork/bluetooth/CompanionTracker.java,getCompanion,Yes, because accessing Bluetooth devices typically requires Bluetooth permissions in Android.
/com/android/clockwork/bluetooth/CompanionTracker.java,onBluetoothAdapterReady,Yes, it likely requires permissions because it interacts with Bluetooth functionality, which typically requires permissions such as `BLUETOOTH` and `BLUETOOTH_ADMIN` in Android.
/com/android/clockwork/bluetooth/CompanionTracker.java,updateCompanionDevice,Yes, this method likely requires Bluetooth permissions to access bonded devices.
/com/android/clockwork/bluetooth/CompanionTracker.java,getIntValueForKey,Yes, requires permission to access content from `ContentResolver`.
/com/android/clockwork/bluetooth/WearBluetoothMediatorSettingsTest.java,testNotifyListeners,Yes, it requires permissions to access and modify system settings such as Bluetooth settings and airplane mode.
/com/android/clockwork/bluetooth/WearBluetoothMediatorSettingsTest.java,testAirplaneMode,Yes, because it interacts with `Settings.Global.AIRPLANE_MODE_ON`, which typically requires `WRITE_SETTINGS` permission.
/com/android/clockwork/bluetooth/BluetoothScanModeEnforcer.java,onReceive,Yes, because it involves handling Bluetooth actions which typically require Bluetooth permissions in Android such as `BLUETOOTH` and `BLUETOOTH_ADMIN`.
/com/android/clockwork/bluetooth/BluetoothScanModeEnforcer.java,getBondedClassicPeripheralCount,Yes, because it interacts with Bluetooth devices, which typically requires Bluetooth permissions in Android (like BLUETOOTH and BLUETOOTH_ADMIN).
/com/android/clockwork/bluetooth/ShadowOs.java,read,Yes, this method requires permissions because it reads from a `FileDescriptor`, which typically requires filesystem access permissions in Android.
/com/android/clockwork/bluetooth/ShadowOs.java,write,Yes, because writing to a file descriptor may require WRITE_EXTERNAL_STORAGE permission depending on the file's location.
/com/android/clockwork/bluetooth/BluetoothShardRunner.java,startHfcShard,Yes, because this method interacts with Bluetooth devices, which typically requires Bluetooth permissions in Android.
/com/android/clockwork/bluetooth/WearBluetoothMediatorTest.java,testAttemptEnablingBluetoothAfterEnablingHfp,Yes, it requires permission to enable Bluetooth and send broadcasts related to Bluetooth state changes.
/com/android/clockwork/bluetooth/WearBluetoothMediatorTest.java,testActivityModeDisablesBluetooth,Yes, the method appears to involve Bluetooth functionality, which typically requires the `BLUETOOTH` and possibly `BLUETOOTH_ADMIN` permissions in Android.
/com/android/clockwork/bluetooth/WearBluetoothMediatorTest.java,testBcastBluetoothStateChange_StateOffToTurningOn,Yes, this method likely requires permissions because it involves operations related to Bluetooth state changes, which typically require permissions such as `BLUETOOTH` and `BLUETOOTH_ADMIN` in an Android environment.
/com/android/clockwork/bluetooth/WearBluetoothMediatorTest.java,testBcastBluetoothStateChange_StateTurningOffToOff,Yes, this method likely requires permissions because it involves broadcasting Bluetooth state changes, which typically necessitates specific permissions in Android, such as `BLUETOOTH` and `BLUETOOTH_ADMIN`.
/com/android/clockwork/bluetooth/WearBluetoothMediatorTest.java,testBcastBluetoothStateChange_StateUnknown,Yes, because the method interacts with Bluetooth components and sends a broadcast, which typically requires Bluetooth permissions (e.g., `BLUETOOTH`, `BLUETOOTH_ADMIN`).
/com/android/clockwork/bluetooth/WearBluetoothMediatorTest.java,sendBluetoothAdapterOnIntents,Yes, this method likely requires permissions related to Bluetooth operations, as it deals with sending broadcasts about Bluetooth adapter state changes.
/com/android/clockwork/bluetooth/WearBluetoothMediatorTest.java,sendBluetoothAdapterOffIntents,Yes, because it deals with Bluetooth functionality which typically requires Bluetooth permissions in Android.
/com/android/clockwork/bluetooth/WearBluetoothMediatorTest.java,toggleHfp,Yes, this method requires the `BLUETOOTH_ADMIN` permission as indicated by the inclusion of permission checks in the code.
/com/android/clockwork/bluetooth/WearBluetoothMediatorTest.java,isHfpEnabled,Yes, this method requires permissions because it accesses Bluetooth settings which typically require specific permissions to access (e.g., `BLUETOOTH` and/or `BLUETOOTH_ADMIN`).
/com/android/clockwork/bluetooth/WearBluetoothMediatorTest.java,getUserHfpClientSetting,Yes, requires permission to access settings.
/com/android/clockwork/bluetooth/WearBluetoothMediatorTest.java,getAdapter,Yes, accessing the Bluetooth adapter may require Bluetooth permissions.
/com/android/clockwork/bluetooth/WearBluetoothMediatorTest.java,openGattServer,Yes, because opening a GATT server typically requires Bluetooth permissions.
/com/android/clockwork/bluetooth/HandsFreeClientShard.java,close,Yes, this method likely requires permissions because it involves unregistering a receiver, disconnecting Bluetooth profiles, and managing content observers, all of which typically need specific permissions in Android.
/com/android/clockwork/bluetooth/HandsFreeClientShard.java,onReceive,Yes, this method likely requires Bluetooth permissions, as it deals with Bluetooth connection states.
/com/android/clockwork/bluetooth/HandsFreeClientShard.java,isHandsFreeProfileEnabled,Yes, requires Bluetooth permissions to access Bluetooth profiles.
/com/android/clockwork/bluetooth/WearBluetoothMediator.java,onReceive,Yes, this method requires permissions because it deals with Bluetooth device bonding and actions related to Bluetooth connections, which generally require the BLUETOOTH and possibly BLUETOOTH_ADMIN permissions to function properly on Android.
/com/android/clockwork/bluetooth/WearBluetoothMediator.java,onReceive,Yes, this method requires permissions because it deals with Bluetooth state changes, which typically requires Bluetooth-related permissions in Android (e.g., `BLUETOOTH`, `BLUETOOTH_ADMIN`).
/com/android/clockwork/bluetooth/WearBluetoothMediator.java,onReceive,Yes, because it handles Bluetooth connection state changes, which typically requires Bluetooth permissions in the Android manifest.
/com/android/clockwork/bluetooth/WearBluetoothMediator.java,onReceive,Yes, this method requires permissions because it interacts with Bluetooth devices (e.g., actions related to ACL connection and disconnection), which typically requires Bluetooth permissions in Android (e.g., `BLUETOOTH` and `BLUETOOTH_ADMIN`).
/com/android/clockwork/bluetooth/WearBluetoothMediator.java,onBootCompleted,Yes, this method requires permissions, specifically for handling Bluetooth actions (`BLUETOOTH_ADMIN`).
/com/android/clockwork/bluetooth/WearBluetoothMediator.java,changeRadioPower,Yes, the method likely requires permissions to change radio power settings in Android, as altering radio state (like enabling/disabling Bluetooth or mobile data) typically necessitates specific permissions due to its impact on device connectivity.
/com/android/clockwork/bluetooth/WearBluetoothMediator.java,onAdapterEnabled,Yes, because the method interacts with Bluetooth functionalities which generally require permissions such as `BLUETOOTH` or `BLUETOOTH_ADMIN`.
/com/android/clockwork/bluetooth/WearBluetoothMediator.java,toggleHfpClientProfile,Yes, this method likely requires permissions related to Bluetooth settings, such as modifying Bluetooth profiles or accessing global Bluetooth states.
/com/android/clockwork/bluetooth/BluetoothScanModeEnforcerTest.java,testIosWithHeadsetScanModeRemainsEnabled,Yes, it likely requires permissions because it involves Bluetooth operations, such as getting bonded devices and setting scan modes, which typically require Bluetooth permissions in Android.
/com/android/clockwork/bluetooth/WearBluetoothMediatorSettings.java,getObservedUris,Yes, this method likely requires permissions because it accesses system settings, which typically require specific permissions in Android (e.g., `ACCESS_SETTINGS`).
/com/android/clockwork/bluetooth/WearBluetoothMediatorSettings.java,getIsSettingsPreferenceBluetoothOn,Yes, because it accesses system settings which typically require permissions.
/com/android/clockwork/bluetooth/WearBluetoothMediatorSettings.java,setSettingsPreferenceBluetoothOn,Yes, this method likely requires permissions because it interacts with system settings related to Bluetooth, which typically requires explicit permissions in Android.
/com/android/clockwork/bluetooth/WearBluetoothMediatorSettings.java,getIsInAirplaneMode,Yes, it requires permissions. Specifically, it accesses the system settings which may require the `android.permission.ACCESS_NETWORK_STATE` permission to determine the airplane mode status.
/com/android/clockwork/bluetooth/WearBluetoothMediatorSettings.java,onChange,Yes, this method likely requires permissions to access system settings like airplane mode and DNS settings on an Android device.
/com/android/clockwork/bluetooth/proxy/ProxyServiceDetector.java,fetchUuidsWithSdp,Yes, this method likely requires permissions related to Bluetooth operations, such as accessing Bluetooth device information and performing UUID fetch operations.
/com/android/clockwork/bluetooth/proxy/ProxyConnectionV2.java,connect,Yes, it likely requires permissions because it interacts with network resources and device interfaces, which typically necessitate specific permissions in Android (like `ACCESS_NETWORK_STATE`, `INTERNET`, etc.).
/com/android/clockwork/bluetooth/proxy/ProxyGattService.java,createGattService,Yes, because it involves adding characteristics and descriptors that may require permissions for reading or writing Bluetooth GATT services.
/com/android/clockwork/bluetooth/proxy/ProxyGattServer.java,setCompanionDevice,Yes, because it involves communication with Bluetooth devices, which typically requires Bluetooth permissions in Android.
/com/android/clockwork/bluetooth/proxy/ProxyGattServer.java,start,Yes, this method requires permissions related to Bluetooth functionality, specifically the "BLUETOOTH" and "BLUETOOTH_ADMIN" permissions.
/com/android/clockwork/bluetooth/proxy/ProxyGattServer.java,sendPing,Yes, because it involves Bluetooth operations which generally require Bluetooth permissions.
/com/android/clockwork/bluetooth/proxy/ProxyGattServer.java,onConnectionStateChange,Yes, this method likely requires permissions related to Bluetooth because it involves a Bluetooth device and its connection state.
/com/android/clockwork/bluetooth/proxy/ProxyGattServer.java,onCharacteristicWriteRequest,Yes, because it deals with Bluetooth communication, which requires Bluetooth permissions in Android (e.g., `BLUETOOTH` and `BLUETOOTH_ADMIN`).
/com/android/clockwork/bluetooth/proxy/ProxyGattServer.java,onDescriptorWriteRequest,Yes, this method likely requires permissions to access Bluetooth features, as it interacts with Bluetooth devices, GATT descriptors, and requires proper handling of responses related to Bluetooth operations.
/com/android/clockwork/bluetooth/proxy/ProxyGattServer.java,sendSuccessResponse,Yes, this method likely requires permissions because it involves Bluetooth communication, which usually requires `BLUETOOTH` and `BLUETOOTH_ADMIN` permissions in Android.
/com/android/clockwork/bluetooth/proxy/ProxyServiceHelper.java,setNetworkScore,Yes, this method likely requires permissions because it interacts with network scoring, which usually involves managing network resources.
/com/android/clockwork/bluetooth/proxy/ProxyServiceHelper.java,setDnsServers,Yes, changing DNS servers may require specific network permissions.
/com/android/clockwork/bluetooth/proxy/ShadowConnectivityManager.java,registerNetworkAgent,Yes, this method likely requires permissions related to network management, as it involves registering a network agent which usually requires system-level permissions.
/com/android/clockwork/cellular/WearCellularMediatorSettings.java,getCellAutoSetting,Yes, this method likely requires permissions to read system settings.
/com/android/clockwork/cellular/WearCellularMediatorSettings.java,setCellAutoSetting,Yes, because it manipulates system settings, which typically requires permissions like `WRITE_SETTINGS`.
/com/android/clockwork/cellular/WearCellularMediatorSettings.java,initializeTwinningSettings,Yes, because it interacts with `Settings.Global`, which typically requires modification permissions to write settings.
/com/android/clockwork/cellular/WearCellularMediatorSettings.java,isVoiceTwinningEnabled,Yes, because it accesses global settings which typically require permission to read.
/com/android/clockwork/cellular/WearCellularMediatorSettings.java,isTextTwinningEnabled,Yes, it requires permission to access `Settings.Global`, which may involve reading system settings.
/com/android/clockwork/cellular/WearCellularMediatorSettings.java,getRadioOnState,Yes, the method likely requires permissions as it interacts with telephony services to check the radio state, which typically necessitates the `READ_PHONE_STATE` permission.
/com/android/clockwork/cellular/WearCellularMediatorTest.java,testEnforceCellularOnBoot,Yes, because it accesses `Settings.Global` which typically requires permissions related to modifying system settings.
/com/android/clockwork/cellular/WearCellularMediatorTest.java,testInPhoneCall,Yes, this method may require permissions to send broadcasts related to phone state changes, which typically involves using the `SEND_BROADCAST` permission in Android.
/com/android/clockwork/cellular/WearCellularMediatorTest.java,testProxyDisconnect_EsimDevice_EsimInstalledButNoPsim,Yes, because it involves sending broadcasts and interacting with telephony states, which typically require permissions.
/com/android/clockwork/cellular/WearCellularMediatorTest.java,testTurnCellStateOff,Yes, this method likely requires permissions related to network access and possibly broadcasting intents, as it seems to manipulate cellular state and involves telephony features.
/com/android/clockwork/cellular/WearCellularMediatorTest.java,testInPowerSave,Yes, this method likely requires permissions. It involves sending a broadcast and checking power state, which may require `RECEIVE_BOOT_COMPLETED` or similar permissions related to telephony and power management.
/com/android/clockwork/cellular/WearCellularMediatorTest.java,testSimCardAbsent,Yes, because it involves sending broadcasts related to SIM card state changes, which typically requires permissions related to accessing phone state or modifying broadcast settings.
/com/android/clockwork/cellular/WearCellularMediator.java,onReceive,Yes, this method likely requires permissions. It's handling multiple intent actions related to telephony (e.g., phone state changes, SIM state changes) which typically require specific permissions, such as `READ_PHONE_STATE` or `CALL_PHONE`.
/com/android/clockwork/cellular/WearCellularMediator.java,onCallStateChanged,Yes, this method likely requires permissions related to telephony (e.g., `READ_PHONE_STATE`), as it involves monitoring call state changes, including emergency calls.
/com/android/clockwork/cellular/WearCellularMediator.java,onBootCompleted,Yes, this method may require permissions related to receiving boot completed actions and potentially accessing phone state or managing subscriptions.
/com/android/clockwork/cellular/WearCellularMediator.java,handleMessage,Yes, this method requires permissions due to its operations related to modifying radio states, accessing telephony, and logging, which typically involve sensitive user data and functionality.
/com/android/clockwork/cellular/TwinnedNumberBlocker.java,onActiveSubscriptionChanged,Yes, this method likely requires permissions related to telephony services. Specifically, it interacts with the `TelephonyManager` and may involve accessing subscription information, which typically requires permissions such as `READ_PHONE_STATE` or `ACCESS_FINE_LOCATION`.
/com/android/clockwork/cellular/TwinnedNumberBlocker.java,setFiSpamBlockingEnabled,Yes, because it interacts with the Telecom component's spam number database, which typically requires specific permissions related to blocking or managing calls.
/com/android/clockwork/display/TheaterModeTest.java,setUp,Yes, the method appears to interact with system services and resources (ContentResolver, SharedPreferences, AlarmManager) which typically require permissions.
/com/android/clockwork/display/TheaterModeTest.java,triggerTheaterModeChange,Yes, it likely requires permission to modify system settings.
/com/android/clockwork/display/TheaterModeTest.java,initialize_theaterModeOnFromSettings_startsTheaterMode,Yes, the method involves sending broadcast intents, which requires permissions such as `android.permission.BROADCAST_STICKY` or related permissions depending on the specific actions being triggered.
/com/android/clockwork/display/TheaterModeTest.java,turnOff_theaterModeOnFromSettings_endsTheaterMode,Yes, this method likely requires permissions because it involves sending broadcasts related to screen actions, which typically requires specific permissions in the Android framework (e.g., for turning off the screen or controlling theater mode).
/com/android/clockwork/display/TheaterModeTest.java,activate_enabledTheaterModeOnReboot,Yes, because it interacts with `Settings.Global`, which requires specific permissions to modify system settings.
/com/android/clockwork/display/TheaterModeTest.java,turnOff_expiredTheaterModeOnReboot,Yes, this method likely requires permissions because it modifies global settings (`Settings.Global`) and accesses shared preferences.
/com/android/clockwork/display/TheaterMode.java,showNotification,Yes, because showing notifications typically requires notifications permission in Android.
/com/android/clockwork/display/TheaterMode.java,onReceive,Yes, this method may require permissions to access `Settings.Global` and modify it, as well as to show notifications.
/com/android/clockwork/display/WearDisplayServiceTest.java,setUp,Yes, because it involves accessing the wallpaper manager and content resolver, which typically requires permissions in Android.
/com/android/clockwork/display/WearDisplayServiceTest.java,testDisplayOffsetPermission,Yes, this method likely requires permissions due to the handling of a `SecurityException` when calling `setDisplayOffsets`, which suggests it operates in a context where specific permissions are needed to modify display settings.
/com/android/clockwork/display/WearDisplayServiceTest.java,testDoze_ambientEnabled_isPlugged_disableAodWhilePluggedEnabled,Yes, because it interacts with system settings and broadcasts that may require permission (e.g., modifying settings, sending broadcasts).
/com/android/clockwork/display/WearDisplayServiceTest.java,testDoze_ambientDisabled_TTBDisabled_decomposableWF,Yes, because it involves reading and writing settings related to device features like ambient mode and doze, which generally require specific permissions in Android.
/com/android/clockwork/display/WearDisplayServiceTest.java,testCheckWatchface_forceEnableTTW,Yes, because it writes to settings related to wearable features that may require permissions for modifying system settings.
/com/android/clockwork/display/WearDisplayServiceTest.java,testCheckWatchface_forceDisableTTW,Yes, because the method interacts with global settings (`Settings.Global.Wearable`), which typically requires permission to modify.
/com/android/clockwork/display/WearDisplayServiceTest.java,readAmbietSetting,Yes, this method likely requires permissions because it accesses system settings (via `Settings.Global`), which typically require certain permissions in Android, such as `READ_SETTINGS`.
/com/android/clockwork/display/burninprotection/BrightnessObserver.java,observe,Yes, this method requires permissions because it interacts with system settings related to display brightness, which typically requires the `WRITE_SETTINGS` permission in Android.
/com/android/clockwork/display/burninprotection/BrightnessObserverTest.java,autoBrightnessOff_screenSettingValueHigher_false,Yes, this method likely requires permissions because it interacts with screen brightness settings, which typically require system permissions.
/com/android/clockwork/display/burninprotection/BrightnessObserverTest.java,setScreenBrightnessMode,Yes, because it interacts with system settings, potentially requiring permission to modify system settings.
/com/android/clockwork/display/burninprotection/BrightnessObserverTest.java,setScreenBrightness,Yes, because changing screen brightness typically requires the `WRITE_SETTINGS` permission in Android to modify system settings.
/com/android/clockwork/modemanager/WetModeController.java,startWetMode,Yes, the method sends a broadcast that requires the permission `PERMISSION_TOUCH`.
/com/android/clockwork/modemanager/WetModeController.java,endWetMode,Yes, because it sends a broadcast related to "ACTION_WET_MODE_ENDED" and may require permissions for that broadcast.
/com/android/clockwork/modemanager/ModeManagerService.java,onStart,Yes, this method requires permissions because it registers a content observer, which typically requires permission to access the relevant content provider.
/com/android/clockwork/modemanager/WetModeControllerTest.java,wetModeEnabled_sendsDeviceToSleep,Yes, because the method interacts with device power management, which typically requires permissions related to device sleep or wake states.
/com/android/clockwork/modemanager/ModeManagerServiceTest.java,configureIntGlobalSetting,Yes, the method interacts with `Settings.Global`, which typically requires permissions related to system settings access.
/com/android/shell/BugreportStorageProvider.java,queryChildDocuments,Yes, this method likely requires permissions to access child documents, which typically involves reading data from a database or content provider.
/com/android/shell/BugreportStorageProvider.java,openDocument,Yes, this method likely requires permissions to access documents, as it involves opening a document for reading.
/com/android/shell/BugreportStorageProvider.java,getFileForDocId,Yes, this method requires permissions to access files on the device.
/com/android/shell/HeapDumpProvider.java,query,Yes, this method likely requires permissions because it queries data from a content provider, which typically requires permissions such as `READ_EXTERNAL_STORAGE` or specific content provider permissions.
/com/android/shell/HeapDumpProvider.java,insert,Yes, the `insert` method typically interacts with content providers, which usually require permissions to access the underlying data storage.
/com/android/shell/HeapDumpProvider.java,delete,Yes, this method likely requires permissions because it interacts with storage (deleting data associated with a URI).
/com/android/shell/HeapDumpProvider.java,openFile,Yes, this method requires permissions because it involves opening a file via a Uri, which typically requires read or write permissions in Android.
/com/android/shell/HeapDumpReceiver.java,onReceive,Yes, this method requires permissions. The `onReceive` method processes intent actions such as `ACTION_BOOT_COMPLETED`, which typically needs the `RECEIVE_BOOT_COMPLETED` permission. Additionally, actions like `ACTION_DELETE_HEAP_DUMP` may require specific permissions depending on the context of use.
/com/android/shell/HeapDumpReceiver.java,deleteHeapDump,Yes, because it interacts with the content resolver and performs a delete operation that may require permissions to access the specific content URI.
/com/android/shell/HeapDumpReceiver.java,doInBackground,Yes, because the method interacts with content providers, which typically require permissions to access and modify data.
/com/android/shell/HeapDumpReceiver.java,showDumpNotification,Yes, it likely requires permission. The method involves creating and showing notifications, which generally requires `POST_NOTIFICATIONS` permission in Android.
/com/android/shell/HeapDumpActivity.java,onCreate,Yes, because this method involves starting an activity and potentially accessing or sending user data, which typically requires permissions in Android.
/com/android/shell/Screenshooter.java,takeScreenshot,Yes, this method likely requires permissions because taking a screenshot may involve accessing sensitive user data and system resources.
/com/android/shell/ProfcollectUploadReceiver.java,onReceive,Yes, this method likely requires permissions because it handles intents and URIs, which typically require managing broadcast permissions and file access, especially with respect to `FLAG_GRANT_READ_URI_PERMISSION` and other sensitive operations.
/com/android/location/provider/GeocodeProvider.java,getFromLocation,Yes, this method likely requires location permissions because it processes geographical coordinates (latitude and longitude) that usually need permissions like "ACCESS_FINE_LOCATION" or "ACCESS_COARSE_LOCATION" in Android.
/com/android/location/provider/GeocodeProvider.java,getFromLocationName,Yes, because the method is likely accessing location data.
/com/android/location/provider/GeocodeProvider.java,onGetFromLocation,Yes, Geocoding requires location permissions.
/com/android/location/provider/GeocodeProvider.java,onGetFromLocationName,Yes, because it involves geocoding which may require location permissions to access location data.
/com/android/location/provider/ActivityChangedEvent.java,getActivityRecognitionEvents,Yes, it likely requires permission to access activity recognition data.
/com/android/providers/settings/SettingsBackupAgentTest.java,query,Yes, the `query` method requires permissions as it operates on a `Uri`, typically involving access to data from a content provider, which usually necessitates specific permissions like `READ_EXTERNAL_STORAGE` or `WRITE_EXTERNAL_STORAGE`.
/com/android/providers/settings/SettingsService.java,dump,Yes, this method requires permission. It checks for the `DUMP` permission before performing its operations.
/com/android/providers/settings/SettingsService.java,listForUser,Yes, this method likely requires permissions because it interacts with a content provider (IContentProvider), which often requires permissions to access data securely in Android.
/com/android/providers/settings/SettingsService.java,getForUser,Yes, because accessing content providers often requires specific permissions depending on the type of data being accessed (e.g., settings or secure data).
/com/android/providers/settings/SettingsService.java,putForUser,Yes, this method requires permissions because it involves accessing system settings, which typically requires explicit permissions in Android for operations affecting user data.
/com/android/providers/settings/SettingsService.java,deleteForUser,Yes, this method likely requires permissions because it involves deleting user-specific data in a database or content provider, which typically necessitates specific permissions to ensure security and user privacy on Android.
/com/android/providers/settings/SettingsHelperRestoreTest.java,testRestoreAccessibilityDisplayMagnificationScale_notAlreadyConfigured_restoresValue,Yes, the method accesses settings related to accessibility display magnification scale, which typically requires permissions to access secure settings in Android.
/com/android/providers/settings/SettingsHelperRestoreTest.java,testRestoreAccessibilityDisplayMagnificationNavbarEnabled_notAlreadyConfigured_restoresValue,Yes, this method interacts with `Settings.Secure` and `ContentResolver`, which typically require permission to access system settings on Android devices.
/com/android/providers/settings/SettingsStateTest.java,checkWriteSingleSetting,Yes, this method likely requires permissions related to writing settings, as it interacts with a functionality that modifies state settings.
/com/android/providers/settings/SettingsStateTest.java,testReadWrite,Yes, it requires permissions. This method involves writing to and reading from a file, which typically requires storage permissions in Android.
/com/android/providers/settings/SettingsStateTest.java,testModifySetting_preserveFlagSet,Yes, this method likely requires permissions to modify settings and persist data, which are sensitive operations in Android.
/com/android/providers/settings/SettingsStateTest.java,testModifySettingBySystemPackage_newValue_preserveFlagSet,Yes, it likely requires permissions because it appears to modify system settings, which typically necessitates specific permissions in Android.
/com/android/providers/settings/SettingsProviderTest.java,testSelectAllSystemViaProviderApi,Yes, this method likely requires permissions because it interacts with system settings via a provider API, which generally requires specific permissions to access or modify system-level settings.
/com/android/providers/settings/SettingsProviderTest.java,testAppCannotRunsSystemOutOfMemoryWritingSystemSettings,Yes, this method likely requires permissions. It manipulates system settings, which typically requires specific permissions in Android to access or modify sensitive data.
/com/android/providers/settings/SettingsProviderTest.java,testQueryStringWithAppendedNameToUriViaProviderApi,Yes, the method interacts with system settings via a content provider, which typically requires permissions to access and modify system settings in an Android application.
/com/android/providers/settings/SettingsProviderTest.java,testResetModePackageDefaultsCommon,Yes, because it involves setting and resetting system settings, which typically requires permissions like WRITE_SETTINGS or similar elevated permissions.
/com/android/providers/settings/SettingsProviderTest.java,testResetModePackageDefaultsWithTokensCommon,Yes, because it involves changing system settings and requires permissions to interact with shell commands.
/com/android/providers/settings/SettingsProviderTest.java,testResetModeUntrustedDefaultsCommon,Yes, because this method interacts with system settings, likely requiring permissions related to settings access or modification.
/com/android/providers/settings/SettingsProviderTest.java,testResetModeUntrustedClearCommon,Yes, this method likely requires permissions because it involves accessing or modifying system settings and executing shell commands, which generally necessitates elevated privileges in Android.
/com/android/providers/settings/SettingsProviderTest.java,performSetAndGetSettingTestViaProviderApi,Yes, likely requires permissions due to interactions with settings or provider APIs that typically involve sensitive data or functionality.
/com/android/providers/settings/SettingsProviderTest.java,setSettingViaProviderApiAndAssertSuccessfulChange,Yes, because the method appears to modify settings, which typically requires specific permissions in Android.
/com/android/providers/settings/SettingsProviderTest.java,setSettingAndAssertSuccessfulChange,Yes, because it interacts with the content resolver, which typically requires permissions related to accessing or modifying settings.
/com/android/providers/settings/SettingsProviderTest.java,queryAllSettingsViaProviderApiSettingAndAssertSettingPresent,Yes, because it interacts with content providers and queries settings, which typically require permissions in Android.
/com/android/providers/settings/InstallNonMarketAppsDeprecationTest.java,getSecureSettingForUserViaShell,Yes, this method likely requires permissions because it involves accessing secure settings and executing shell commands, which typically need elevated permissions in Android.
/com/android/providers/settings/InstallNonMarketAppsDeprecationTest.java,setUp,Yes, this method appears to interact with the `UserManager` and checks user restrictions (`DISALLOW_INSTALL_UNKNOWN_SOURCES`), which typically require permissions related to user management.
/com/android/providers/settings/InstallNonMarketAppsDeprecationTest.java,testValueDefaults,Yes, it requires permissions because it involves accessing and modifying secure settings related to installing non-market apps, which typically requires special permissions in Android.
/com/android/providers/settings/InstallNonMarketAppsDeprecationTest.java,testValueRespectsUserRestriction,Yes, this method requires permissions because it accesses user restrictions, which typically involve permissions related to user management or security settings in the Android system.
/com/android/providers/settings/InstallNonMarketAppsDeprecationTest.java,tearDown,Yes, the method involves user restrictions and modifying user settings, which typically requires permissions such as `CHANGE_APP_SETTINGS` or `MANAGE_USERS`.
/com/android/providers/settings/SettingsHelper.java,lookup,Yes, this method requires permissions because it interacts with `Settings.System`, which typically requires `READ_SETTINGS` or similar permissions to access system settings in Android.
/com/android/providers/settings/SettingsHelper.java,lookup,Yes, this method likely requires permissions because it interacts with `Settings.Secure`, which typically involves accessing user settings that may be restricted by permissions in Android.
/com/android/providers/settings/SettingsHelper.java,lookup,Yes, this method likely requires permissions related to accessing system settings or user data, given its involvement with `Settings.Global`.
/com/android/providers/settings/SettingsHelper.java,restoreValue,Yes, because this method interacts with system settings and broadcasts changes, which typically require permissions such as modifying system settings and broadcasting intents.
/com/android/providers/settings/SettingsHelper.java,setRingtone,Yes, this method requires permissions because it interacts with system settings for ringtones, which typically requires the `WRITE_SETTINGS` permission in Android.
/com/android/providers/settings/SettingsHelper.java,getCanonicalRingtoneValue,Yes, this method likely requires permissions related to accessing ringtones or media, as it involves querying the content resolver for a ringtone URI.
/com/android/providers/settings/SettingsHelper.java,isAlreadyConfiguredCriticalAccessibilitySetting,Yes, this method requires permissions because it accesses system settings related to accessibility configuration, which typically requires specific permissions in Android to read.
/com/android/providers/settings/SettingsHelper.java,setAutoRestore,Yes, this method likely requires permission because it involves interacting with the BackupManager service, which typically requires specific permissions like `android.permission.BACKUP` to manage backup and restore operations.
/com/android/providers/settings/SettingsHelper.java,setLongPressPowerBehavior,Yes, this method requires permissions to modify system settings, such as the behavior of the power button.
/com/android/providers/settings/DatabaseHelper.java,dropDatabase,Yes, it may require permissions because it involves accessing and possibly deleting a database, which typically requires filesystem permissions.
/com/android/providers/settings/DatabaseHelper.java,onCreate,Yes, this method requires permissions to access and modify the SQLite database.
/com/android/providers/settings/DatabaseHelper.java,upgradeLockPatternLocation,Yes, because it modifies the lock pattern, which typically requires permissions related to security and device administration.
/com/android/providers/settings/DatabaseHelper.java,upgradeAutoBrightness,Yes, this method requires permissions because it interacts with system settings, specifically modifying screen brightness settings, which typically requires `WRITE_SETTINGS` permission in Android.
/com/android/providers/settings/DatabaseHelper.java,loadSystemSettings,Yes, the method interacts with system settings which typically require permissions like `WRITE_SETTINGS` in Android.
/com/android/providers/settings/DatabaseHelper.java,loadGlobalSettings,Yes, because the method interacts with global settings, which typically requires permissions such as `WRITE_SETTINGS` or `READ_SETTINGS` in Android.
/com/android/providers/settings/DatabaseHelper.java,getTelephonyManager,Yes, this method requires permission. It accesses the TelephonyManager, which typically requires permissions like `READ_PHONE_STATE` or similar to function properly.
/com/android/providers/settings/BaseSettingsProviderTest.java,setStringViaFrontEndApiSetting,Yes, because this method interacts with Android settings, which typically requires permissions like `WRITE_SETTINGS`.
/com/android/providers/settings/BaseSettingsProviderTest.java,getStringViaFrontEndApiSetting,Yes, it requires permissions because it accesses system settings, which may require `READ_SETTINGS` or similar permissions to retrieve the string from `Settings.Global`, `Settings.Secure`, or `Settings.System`.
/com/android/providers/settings/BaseSettingsProviderTest.java,insertStringViaProviderApi,Yes, this method likely requires permissions to access and modify data through a provider (like `ContentResolver`).
/com/android/providers/settings/BaseSettingsProviderTest.java,deleteStringViaProviderApi,Yes, because it likely interacts with a content provider, which typically requires permissions like `WRITE_EXTERNAL_STORAGE` or specific content provider permissions.
/com/android/providers/settings/BaseSettingsProviderTest.java,updateStringViaProviderApiSetting,Yes, because it interacts with `ContentResolver` to update settings, which typically requires appropriate permissions to access shared data.
/com/android/providers/settings/BaseSettingsProviderTest.java,queryStringViaProviderApi,Yes, this method likely requires permissions because it interacts with a `ContentResolver` to query data, which generally requires specific permissions to access content providers in Android.
/com/android/providers/settings/BaseSettingsProviderTest.java,resetSettingsViaShell,Yes, the method likely requires permissions as it involves resetting settings, which typically requires `WRITE_SETTINGS` permission or similar system-level privileges.
/com/android/providers/settings/BaseSettingsProviderTest.java,resetToDefaultsViaShell,Yes, this method requires permissions because it involves executing shell commands to reset system, secure, or global settings, which typically require elevated permissions like `android.permission.WRITE_SETTINGS`.
/com/android/providers/settings/BaseSettingsProviderTest.java,getSetting,Yes, this method requires permissions. It accesses global, secure, and system settings, which typically require permissions like `READ_SETTINGS`.
/com/android/providers/settings/BaseSettingsProviderTest.java,putSetting,Yes, it requires permissions because it modifies system settings, which typically requires permissions like `WRITE_SETTINGS`.
/com/android/providers/settings/BaseSettingsProviderTest.java,setSettingViaShell,Yes, the method likely requires permissions to modify system settings or configurations.
/com/android/providers/settings/BaseSettingsProviderTest.java,setSettingViaShell,Yes, this method likely requires permissions because it involves modifying system settings via shell commands, which generally necessitates elevated privileges and specific permissions like `WRITE_SETTINGS`.
/com/android/providers/settings/BaseSettingsProviderTest.java,getSecondaryUserId,Yes, it likely requires permissions related to user management or accessing the user service, as it interacts with the UserManager and UserInfo classes.
/com/android/providers/settings/BaseSettingsProviderTest.java,executeShellCommand,Yes, executing shell commands may require permissions, particularly if it involves accessing system resources or performing privileged operations.
/com/android/providers/settings/DeviceConfigServiceTest.java,testDelete,Yes, it requires permissions. The method interacts with a `ContentResolver`, which typically requires permissions for accessing shared data (like reading and writing content).
/com/android/providers/settings/DeviceConfigServiceTest.java,testReset,Yes, because it involves executing shell commands and accessing content providers, which typically require permissions in the Android environment.
/com/android/providers/settings/DeviceConfigServiceTest.java,executeShellCommand,Yes, this method likely requires permissions because it appears to execute shell commands, which can involve access to sensitive system operations that typically require elevated privileges, such as `android.permission.INTERNET` or specific shell-related permissions.
/com/android/providers/settings/DeviceConfigServiceTest.java,putWithContentProvider,Yes, this method requires permissions to access the `ContentResolver`, which is typically protected.
/com/android/providers/settings/DeviceConfigServiceTest.java,putWithContentProvider,Yes, this method likely requires permissions to access or modify settings or data through a `ContentResolver`.
/com/android/providers/settings/DeviceConfigServiceTest.java,getFromContentProvider,Yes, this method requires permissions because it accesses a ContentProvider, which typically requires appropriate permissions to read or write data.
/com/android/providers/settings/DeviceConfigServiceTest.java,deleteFromContentProvider,Yes, the method likely requires permissions because it is interacting with a content provider, which typically requires read or write permissions in Android.
/com/android/providers/settings/SettingsProviderPerformanceTest.java,testSetAndGetPerformanceForGlobalViaProviderApi,Yes, this method requires permissions because it accesses and modifies user settings, which typically requires the appropriate permissions in Android to ensure user privacy and security.
/com/android/providers/settings/SettingsHelperTest.java,testRestoreValue_lppForAssistantNotEnabledDefaultConfig_updatesValue,Yes, requires permission because it involves accessing and modifying global settings (Settings.Global), which generally requires permissions in Android.
/com/android/providers/settings/SettingsHelperTest.java,getAutoRotationSettingValue,Yes, this method accesses system settings, which typically requires permissions related to accessing system configuration or settings.
/com/android/providers/settings/SettingsHelperTest.java,setAutoRotationSettingValue,Yes, this method likely requires permissions because it modifies system settings (specifically the auto-rotation setting), which typically requires the `WRITE_SETTINGS` permission in Android.
/com/android/providers/settings/SettingsHelperTest.java,restoreAutoRotationSetting,Yes, this method likely requires permission to modify system settings, specifically `WRITE_SETTINGS`, as it seems to be changing the auto-rotation setting in the device's system settings.
/com/android/providers/settings/SettingsHelperTest.java,clearLongPressPowerValues,Yes, it requires permissions because it interacts with `Settings.Global`, which typically requires specific permissions to modify system settings.
/com/android/providers/settings/WifiSoftApConfigChangedNotifier.java,notifyUserOfConfigConversion,Yes, requires permission to send notifications.
/com/android/providers/settings/WifiSoftApConfigChangedNotifier.java,getPendingActivity,Yes, this method requires permissions because it accesses settings related to Wi-Fi tethering, which typically requires appropriate permissions in the Android manifest, such as `CHANGE_NETWORK_STATE` or `ACCESS_WIFI_STATE`.
/com/android/providers/settings/SettingsBackupAgent.java,onCreate,Yes, because the method interacts with system services (e.g., WiFi) which may require permissions like ACCESS_WIFI_STATE.
/com/android/providers/settings/SettingsBackupAgent.java,onRestoreFile,Yes, this method likely requires permissions as it deals with restoring settings and data, which typically requires specific permissions related to accessing or modifying system settings.
/com/android/providers/settings/SettingsBackupAgent.java,getSystemSettings,Yes, because accessing system settings typically requires specific permissions, such as `READ_SETTINGS`.
/com/android/providers/settings/SettingsBackupAgent.java,getGlobalSettings,Yes, this method likely requires permissions. It interacts with `Settings.Global`, which typically requires permissions to read global settings on an Android device.
/com/android/providers/settings/SettingsBackupAgent.java,getSettingsToPreserveInRestore,Yes, this method requires permissions because it involves querying settings data from a content provider, which typically requires specific permissions, such as `READ_SETTINGS`.
/com/android/providers/settings/SettingsBackupAgent.java,getBackupWhitelist,Yes, this method likely requires permissions because it interacts with system settings, specifically backup settings, which usually necessitate specific permissions to access or modify.
/com/android/providers/settings/SettingsBackupAgent.java,restoreLockSettings,Yes, because it interacts with lock settings which typically requires permissions related to security and device administration.
/com/android/providers/settings/SettingsBackupAgent.java,getSoftAPConfiguration,Yes, this method likely requires permissions to access Wi-Fi settings or configurations.
/com/android/providers/settings/SettingsBackupAgent.java,getDeviceSpecificSettings,Yes, this method requires permissions because it accesses device-specific settings through a ContentResolver, which typically requires permissions related to accessing settings or secure data on the device.
/com/android/providers/settings/SettingsBackupAgent.java,restoreDeviceSpecificConfig,Yes, this method likely requires permissions because it deals with restoring device-specific settings, which typically involves modifying system-level configurations that may require elevated privileges or specific permissions in Android.
/com/android/ex/editstyledtext/EditStyledText.java,pasteFromClipboard,Yes, this method requires permissions. It accesses the clipboard, which typically requires the `READ_EXTERNAL_STORAGE` or `WRITE_EXTERNAL_STORAGE` permission depending on the context of usage in Android.
/com/android/ex/editstyledtext/EditStyledText.java,SetHtml,Yes, the method `SetHtml` requires permissions because it appears to access content from a URI with `getContentResolver` and `openInputStream`, which typically requires permissions to access external content or files.
/com/android/ex/editstyledtext/EditStyledText.java,getDrawable,Yes, it may require permissions to read content from a URI (e.g., `content://`) which could be related to external resources.
/com/android/ex/editstyledtext/EditStyledText.java,getDrawable,Yes, this method requires permissions because it uses `getContentResolver` and `openInputStream`, which may require permissions related to reading from content providers or external storage.
/com/android/ex/chips/DefaultPhotoManager.java,doInBackground,Yes, this method likely requires permissions. The use of `mContentResolver` and operations involving `photoThumbnailUri` suggest that it may access content such as photos or media, which typically requires permissions in Android (e.g. `READ_EXTERNAL_STORAGE`).
/com/android/ex/chips/BaseRecipientAdapter.java,performFiltering,Yes, this method requires permissions because it checks for contacts permission before performing operations related to filtering contacts.
/com/android/ex/chips/BaseRecipientAdapter.java,searchOtherDirectories,Yes, method requires permissions as it checks for permissions before executing directory search operations.
/com/android/ex/chips/BaseRecipientAdapter.java,getMatchingRecipients,Yes, requires permissions to access contact information from ContactsProvider.
/com/android/ex/chips/BaseRecipientAdapter.java,getRequiredPermissions,Yes, the method returns the permissions required by the adapter to function properly.
/com/android/ex/chips/BaseRecipientAdapter.java,doQuery,Yes, this method appears to require permissions since it checks for required permissions before proceeding with a query using a content resolver.
/com/android/ex/chips/RecipientAlternatesAdapter.java,getMatchingRecipients,Yes, this method requires permissions because it involves accessing contact information, which typically requires user permissions in Android (like READ_CONTACTS).
/com/android/ex/chips/RecipientAlternatesAdapter.java,getMatchingRecipientsFromDirectoryQueries,Yes, the method likely requires permissions because it interacts with the device's directories and possibly queries content from a content resolver, which typically requires READ_CONTACTS or similar permissions in Android.
/com/android/ex/chips/RecipientAlternatesAdapter.java,processContactEntries,Yes, because the method processes contact entries which typically requires permissions related to accessing contacts.
/com/android/ex/chips/RecipientAlternatesAdapter.java,doQuery,Yes, the method requires permissions because it checks for permissions before proceeding with the query operation.
/com/android/ex/chips/RecipientAlternatesAdapter.java,getCursorForConstruction,Yes, the method likely requires permissions. It interacts with contacts data, which typically requires permissions such as `READ_CONTACTS` in Android.
/com/android/ex/chips/RecipientAlternatesAdapter.java,getRecipientEntry,Yes, this method requires permissions because it accesses contacts data, which typically requires permissions to read contacts in Android.
/com/android/ex/chips/ChipsUtil.java,checkPermission,Yes, the method checks if a specified permission is granted, which requires permissions to access the state of other permissions.
/com/android/ex/chips/ChipsUtil.java,hasPermissions,Yes, it checks if specific permissions are granted.
/com/android/ex/chips/RecipientEntry.java,getPermissions,Yes, because it indicates the permissions needed to be requested from the user.
/com/android/ex/chips/sample/MainActivity.java,onPermissionsRequestItemClicked,Yes, this method likely requires permissions to request permissions from the user, which is a common practice in Android when handling permission-related functionalities.
/com/android/ex/photo/fragments/PhotoViewFragment.java,onResume,Yes, the method requires permissions because it utilizes network information (checking active network info) and registers a receiver for connectivity changes, which generally requires permission to access network state and change connectivity.
/com/android/ex/photo/fragments/PhotoViewFragment.java,onReceive,Yes, because the method accesses network information which requires the `ACCESS_NETWORK_STATE` permission.
/com/android/ex/photo/util/ImageUtils.java,createLocalBitmap,Yes, because accessing a local URI for reading data typically requires permission (like READ_EXTERNAL_STORAGE).
/com/android/ex/photo/util/ImageUtils.java,createInputStreamFactory,Yes, the method likely requires permissions to access content through a `ContentResolver` and a `Uri`.
/com/android/ex/photo/util/ImageUtils.java,createInputStream,Yes, because accessing an `InputStream` typically requires permission to read data from storage or the network.
/com/android/ex/photo/adapters/PhotoPagerAdapter.java,getItem,Yes, the method likely requires permissions to access data from the cursor, which typically involves querying a database or content provider that may be restricted.
/com/android/ex/photo/loaders/PhotoPagerLoader.java,loadInBackground,Yes, because it involves loading data from a content provider (e.g., accessing images), which typically requires permissions such as `READ_EXTERNAL_STORAGE`.
/com/android/ex/camera2/blocking/BlockingCameraManager.java,openCamera,Yes, it requires permissions to access the camera hardware.
/com/android/ex/camera2/blocking/BlockingCameraManager.java,blockUntilOpen,Yes, because accessing the camera device typically requires camera permissions in Android.
/com/android/ex/camera2/pos/AutoFocusStateMachine.java,onCaptureCompleted,Yes, this method likely requires permissions as it deals with camera functionalities (specifically capturing results) which generally require camera access permissions in Android.
/com/android/ex/camera2/pos/AutoFocusStateMachine.java,lockAutoFocus,Yes, it requires permissions to access the camera hardware for autofocus functionality.
/com/android/ex/camera2/pos/AutoFocusStateMachine.java,setActiveAutoFocus,Yes, because it involves camera operations which typically require camera permissions.
/com/android/ex/camera2/pos/AutoFocusStateMachine.java,setPassiveAutoFocus,Yes, because manipulating camera settings typically requires camera permissions in Android.
/com/android/ex/camera2/portability/CameraAgentFactory.java,getAndroidCameraAgent,Yes, this method likely requires permissions because accessing the camera generally necessitates permissions to use the device's camera functionality.
/com/android/ex/camera2/portability/AndroidCamera2Settings.java,getRequestSettings,Yes, this method likely requires permissions related to camera access, as it deals with camera settings such as exposure, focus, and stabilization.
/com/android/ex/camera2/portability/AndroidCamera2Settings.java,updateRequestGpsData,Yes, this method likely requires permissions related to location access to update GPS data.
/com/android/ex/camera2/portability/AndroidCameraCapabilities.java,buildFlashModes,Yes, the method likely requires camera permissions to access and manipulate camera flash modes.
/com/android/dynsystem/BootCompletedReceiver.java,onReceive,Yes, this method likely requires permissions because it deals with system events (e.g., ACTION_BOOT_COMPLETED) and starting a service, which usually requires specific permissions to operate correctly in Android.
/com/android/dynsystem/DynamicSystemInstallationService.java,executeRebootToDynSystemCommand,Yes, because the method appears to invoke system-level actions such as rebooting the device, which typically requires elevated permissions (e.g., `REBOOT`).
/com/android/dynsystem/DynamicSystemInstallationService.java,executeRebootToNormalCommand,Yes, this method likely requires permissions because it interacts with the PowerManager to execute a reboot command, which typically requires administrative privileges or specific permissions in Android.
/com/android/dynsystem/KeyRevocationList.java,fromUrl,Yes, because fetching from a URL may require network access permissions.
/com/android/dynsystem/InstallationAsyncTask.java,installWritablePartition,Yes, this method likely requires permissions related to modifying system partitions or storage management, which typically necessitates elevated permissions in Android.
/com/android/dynsystem/InstallationAsyncTask.java,installImage,Yes, this method likely requires permissions because it deals with installing an image to a partition, which typically involves modifying system-level storage and might require elevated permissions or special access rights to perform such operations.
/com/android/dynsystem/VerificationActivity.java,onCreate,Yes, this method requires permissions. It interacts with `KeyguardManager`, which typically requires permissions related to device security (like `USE_BIOMETRIC` or `USE_FINGERPRINT`).
/com/android/dynsystem/VerificationActivity.java,createConfirmDeviceCredentialIntent,Yes, this method likely requires permissions because it involves confirming device credentials, which typically requires system-level access to secure credential-related features.
/com/android/wm/shell/ShellTaskOrganizer.java,createRootTask,Yes, because creating a root task typically requires permissions related to managing tasks and windows in the Android system.
/com/android/wm/shell/ShellTaskOrganizer.java,screenshotTask,Yes, this method likely requires permissions because taking a screenshot can involve sensitive user data and privacy concerns, which typically require explicit user consent through permissions.
/com/android/wm/shell/ShellTaskOrganizer.java,getRunningTasks,Yes, it requires permissions. The method retrieves information about currently running tasks, which could include sensitive user data and require the appropriate permissions to access.
/com/android/wm/shell/transition/Tracer.java,writeTraceToFileLocked,Yes, this method likely requires permissions because it interacts with file writing operations, which generally necessitate permissions such as WRITE_EXTERNAL_STORAGE in Android.
/com/android/wm/shell/transition/Transitions.java,registerRemote,Yes, the method involves executing a remote call that likely requires permissions related to network or remote service access.
/com/android/wm/shell/transition/Transitions.java,unregisterRemote,Yes, this method indirectly requires permissions because it calls `executeRemoteCallWithTaskPermission`, which suggests it involves remote operations that typically require permission handling in Android.
/com/android/wm/shell/transition/DefaultTransitionHandler.java,onInit,Yes, it likely requires permissions because it involves registering a broadcast receiver, which usually requires permissions in Android.
/com/android/wm/shell/draganddrop/DragAndDropPolicy.java,getLatestRunningTask,Yes, this method requires permissions. Accessing information about running tasks typically requires system-level permissions, like `android.permission.GET_TASKS`.
/com/android/wm/shell/draganddrop/DragAndDropPolicy.java,startTask,Yes, likely requires permissions because it involves starting activities, which typically require appropriate permissions for user privacy and security.
/com/android/wm/shell/draganddrop/DragAndDropPolicy.java,startShortcut,Yes, this method requires permissions because it interacts with system services and manages shortcuts, which typically require appropriate permissions in Android.
/com/android/wm/shell/draganddrop/DragAndDropPolicy.java,startIntent,Yes, this method may require permissions to start activities or services in the context of Android, depending on the intent being launched.
/com/android/wm/shell/back/BackAnimationController.java,setupAnimationDeveloperSettingsObserver,Yes, the method requires permissions because it interacts with `ContentResolver`, which typically requires permissions to access shared data, such as settings or user preferences.
/com/android/wm/shell/back/BackAnimationController.java,clearBackToLauncherCallback,Yes, this method requires permissions because it invokes `executeRemoteCallWithTaskPermission`, which typically handles operations that involve permissions in the Android SDK.
/com/android/wm/shell/back/BackAnimationController.java,customizeStatusBarAppearance,Yes, the method calls `executeRemoteCallWithTaskPermission`, which implies a need for certain permissions related to task execution in the Android environment.
/com/android/wm/shell/back/BackAnimationController.java,sendBackEvent,Yes, the method likely requires permissions because it involves injecting input events, which typically requires special permissions to interact with input devices.
/com/android/wm/shell/util/GroupedRecentTaskInfo.java,getTaskInfo1,Yes, because accessing recent task information may require permission to retrieve activity-related data from the system.
/com/android/wm/shell/util/GroupedRecentTaskInfo.java,getTaskInfo2,Yes, it likely requires permissions because it deals with retrieving task information, which typically requires permission to access running tasks in Android.
/com/android/wm/shell/util/GroupedRecentTaskInfo.java,getTaskInfoList,Yes, this method likely requires permission because it deals with retrieving recent task information, which typically necessitates the `GET_TASKS` permission to access tasks on Android.
/com/android/wm/shell/kidsmode/KidsModeSettingsObserver.java,register,Yes, the method requires permissions because it registers content observers, which typically requires permissions to access certain content providers.
/com/android/wm/shell/desktopmode/DesktopModeController.java,moveTaskToFront,Yes, because moving tasks is a sensitive operation that may require permission to manage tasks and activities within the Android system.
/com/android/wm/shell/desktopmode/DesktopModeController.java,setDesktopModeActive,Yes, because modifying system settings typically requires the appropriate permissions in Android, such as WRITE_SETTINGS.
/com/android/wm/shell/desktopmode/DesktopModeController.java,observe,Yes, because it involves registering a content observer, which typically requires permissions related to accessing content (e.g., READ or WRITE permissions).
/com/android/wm/shell/splitscreen/StageCoordinator.java,startShortcut,Yes, this method requires permissions because it involves launching shortcuts, which typically requires permissions related to accessing apps and shortcuts.
/com/android/wm/shell/splitscreen/SplitScreenController.java,getTaskInfo,Yes, this method likely requires permissions because it interacts with tasks running on the device, which typically necessitates permissions related to accessing running applications or system services in Android.
/com/android/wm/shell/splitscreen/SplitScreenController.java,registerSplitScreenListener,Yes, this method appears to require permissions because it involves a remote call with a task permission.
/com/android/wm/shell/splitscreen/SplitScreenController.java,unregisterSplitScreenListener,Yes, this method requires permissions because it involves executing a remote call that likely interacts with system components, which typically necessitates appropriate permissions.
/com/android/wm/shell/splitscreen/SplitScreenController.java,exitSplitScreen,Yes, it likely requires permissions due to its name and the context of managing screen states, which typically involves user interface interactions that may need permissions.
/com/android/wm/shell/splitscreen/SplitScreenController.java,exitSplitScreenOnHide,Yes, this method likely requires permissions because it involves executing a remote call, which typically involves inter-process communication that is often protected by permissions in Android.
/com/android/wm/shell/splitscreen/SplitScreenController.java,removeFromSideStage,Yes, this method likely requires permissions because it involves a remote call that may affect system resources or user data.
/com/android/wm/shell/splitscreen/SplitScreenController.java,startTask,Yes, this method requires permissions because it involves executing a remote call with task permissions, which typically requires explicit user permissions in an Android application.
/com/android/wm/shell/splitscreen/SplitScreenController.java,startTasksWithLegacyTransition,Yes, because the method involves executing remote calls that may require task-related permissions.
/com/android/wm/shell/splitscreen/SplitScreenController.java,startIntentAndTaskWithLegacyTransition,Yes, this method likely requires permissions because it involves starting intents and managing tasks, which usually require specific permissions to ensure security and proper usage in Android applications.
/com/android/wm/shell/splitscreen/SplitScreenController.java,startShortcutAndTaskWithLegacyTransition,Yes, this method likely requires permissions related to starting shortcuts or tasks as it involves remote calls and transitions that may affect user experience or application state.
/com/android/wm/shell/splitscreen/SplitScreenController.java,startTasks,Yes, the method involves executing a remote call which typically requires permissions to access resources or services associated with that action.
/com/android/wm/shell/splitscreen/SplitScreenController.java,startIntentAndTask,Yes, the method likely requires permissions to start intents and tasks remotely, which usually involves inter-process communication.
/com/android/wm/shell/splitscreen/SplitScreenController.java,startShortcutAndTask,Yes, it likely requires permissions to start a shortcut and task, as indicated by the method name and the invocation of `executeRemoteCallWithTaskPermission`.
/com/android/wm/shell/splitscreen/SplitScreenController.java,startIntents,Yes, this method likely requires permissions since it involves starting intents and may interact with user data or system resources.
/com/android/wm/shell/splitscreen/SplitScreenController.java,startShortcut,Yes, it likely requires permissions because it involves starting a shortcut, which usually requires user interaction or permission to invoke actions related to other apps.
/com/android/wm/shell/splitscreen/SplitScreenController.java,startIntent,Yes, it likely requires permissions as it involves starting an intent, which often requires specific permissions based on what the intent is intended to do.
/com/android/wm/shell/splitscreen/SplitScreenController.java,onGoingToRecentsLegacy,Yes, it requires permissions because it calls `executeRemoteCallWithTaskPermission`, which indicates the need for task-related permissions.
/com/android/wm/shell/splitscreen/SplitScreenController.java,onStartingSplitLegacy,Yes, because it involves executing a remote call which typically requires permission to access specific tasks or services.
/com/android/wm/shell/splitscreen/tv/TvSplitMenuController.java,register,Yes, because it involves registering a receiver for system UI events, which typically requires specific permissions.
/com/android/wm/shell/pip/PipAppOpsListener.java,onOpChanged,Yes, this method likely requires permissions because it interacts with application information and operations, which typically necessitate specific permissions in the Android SDK.
/com/android/wm/shell/pip/PipUiEventLogger.java,getUid,Yes, this method likely requires permissions because it involves accessing application information using `getApplicationInfoAsUser`, which typically requires permissions related to package management (e.g., `PACKAGE_USAGE_STATS`, `GET_PACKAGE_SIZE`, etc.).
/com/android/wm/shell/pip/PinnedStackListenerForwarder.java,register,Yes, it likely requires permissions because it involves registering a listener with the WindowManagerService, which may require access permissions to manage window layout or application tasks.
/com/android/wm/shell/pip/tv/TvPipController.java,create,Yes, the method likely requires permissions related to displaying overlays or managing system UI, particularly because it involves creating a Picture-in-Picture (PIP) controller.
/com/android/wm/shell/pip/tv/TvPipController.java,register,Yes, the method likely requires permissions due to the mention of `SYSTEMUI_PERMISSION` and the use of `registerReceiverForAllUsers`, which typically involves broadcasting intents that may need specific permissions in Android.
/com/android/wm/shell/pip/tv/TvPipNotificationController.java,getApplicationLabel,Yes, this method requires permission to access application information, typically requiring the `PACKAGE_USAGE_STATS` or `GET_PACKAGE_SIZE` permissions depending on the context within which it's called.
/com/android/wm/shell/pip/tv/TvPipNotificationController.java,createPendingIntent,Yes, this method may require permissions related to broadcasting intents, depending on the action being performed.
/com/android/wm/shell/pip/phone/PipController.java,startSwipePipToHome,Yes, this method likely requires permissions because it involves starting a Picture-in-Picture mode, which typically needs specific system permissions related to activity management.
/com/android/wm/shell/pip/phone/PipController.java,stopSwipePipToHome,Yes, this method requires permissions to execute remote calls with a specific task.
/com/android/wm/shell/pip/phone/PipController.java,setShelfHeight,Yes, this method involves a remote call which typically requires appropriate permissions in Android to access specific features or resources.
/com/android/wm/shell/pip/phone/PipController.java,setLauncherAppIconSize,Yes, it requires permission to execute a remote call, which typically involves accessing system resources or modifying app settings.
/com/android/wm/shell/pip/phone/PipController.java,setPipAnimationTypeToAlpha,Yes, this method requires permissions because it involves a method call (`executeRemoteCallWithTaskPermission`) that typically relates to remote procedure calls which may necessitate specific app permissions to access certain features or functionalities.
/com/android/wm/shell/pip/phone/PipAccessibilityInteractionConnection.java,findAccessibilityNodeInfoByAccessibilityId,Yes, it likely requires permissions related to accessibility services, as it interacts with accessibility node information.
/com/android/wm/shell/pip/phone/PipAccessibilityInteractionConnection.java,findAccessibilityNodeInfoByAccessibilityId,Yes, this method likely requires permissions related to accessibility services, as it deals with accessing and interacting with accessibility node information.
/com/android/wm/shell/pip/phone/PipAccessibilityInteractionConnection.java,findAccessibilityNodeInfosByViewId,Yes, because this method involves accessibility features that may require permissions to access certain user interface elements and interactions on the device.
/com/android/wm/shell/pip/phone/PipAccessibilityInteractionConnection.java,findAccessibilityNodeInfosByText,Yes, this method interacts with accessibility services, which generally require the `BIND_ACCESSIBILITY_SERVICE` permission in Android.
/com/android/wm/shell/common/ExecutorUtils.java,executeRemoteCallWithTaskPermission,Yes, the method checks for the MANAGE_ACTIVITY_TASKS permission, which indicates that it requires this permission to execute correctly.
/com/android/wm/shell/common/ExecutorUtils.java,executeRemoteCallWithTaskPermission,Yes, MANAGE_ACTIVITY_TASKS permission is required to enforce calling permission.
/com/android/wm/shell/common/ScreenshotUtils.java,captureLayer,Yes, because capturing a screenshot can involve sensitive user information and may require permissions related to screen capture.
/com/android/wm/shell/common/ScreenshotUtils.java,takeScreenshot,Yes, it requires permissions to take a screenshot.
/com/android/wm/shell/common/ScreenshotUtils.java,takeScreenshot,Yes, the method requires permissions related to taking screenshots, as it interacts with SurfaceControl which can be sensitive to privacy and security considerations.
/com/android/wm/shell/common/split/SplitScreenUtils.java,getPackageName,Yes, because it retrieves information about running tasks, which typically requires permissions like `GET_TASKS` or similar.
/com/android/wm/shell/common/split/SplitDecorManager.java,screenshotIfNeeded,Yes, the method likely requires permissions because taking screenshots typically involves sensitive user data, potentially needing permissions like `WRITE_EXTERNAL_STORAGE` or similar depending on the Android version.
/com/android/wm/shell/taskview/TaskViewTaskController.java,startShortcutActivity,Yes, the method requires permissions because the owner must have permission to access the shortcut information, as defined in `LauncherApps#hasShortcutHostPermission()`.
/com/android/wm/shell/taskview/TaskViewTaskController.java,startActivity,Yes, this method requires permissions because it involves starting a new activity, which typically requires the `android.permission.START_ACTIVITIES` permission in the Android SDK.
/com/android/wm/shell/taskview/TaskView.java,startShortcutActivity,Yes, the method requires permissions to access shortcut information as specified in the documentation.
/com/android/wm/shell/startingsurface/SplashscreenWindowCreator.java,addWindow,Yes, this method likely requires permissions because it deals with window management and UI manipulation, which typically require specific permissions in Android.
/com/android/wm/shell/recents/RecentTasksController.java,getTopRunningTask,Yes, this method requires permissions because accessing the top running task may involve sensitive information about other running applications, which typically requires the `GET_TASKS` permission in Android.
/com/android/wm/shell/recents/RecentTasksController.java,findTaskInBackground,Yes, this method requires permissions. Accessing background tasks may involve permissions related to app visibility and activity management in Android.
/com/android/wm/shell/recents/RecentTasksController.java,getRecentTasks,Yes, because retrieving recent tasks may require permissions related to accessing task information in the Android system.
/com/android/wm/shell/recents/RecentTasksController.java,registerRecentTasksListener,Yes, this method likely requires task-related permissions as it registers a recent tasks listener, which may involve accessing sensitive information about recent tasks in the application.
/com/android/wm/shell/recents/RecentTasksController.java,unregisterRecentTasksListener,Yes, this method likely requires permissions because it involves unregistering a listener, which may interact with system tasks or application components that require explicit permissions to manage for security and privacy reasons.
/com/android/wm/shell/recents/RecentTasksController.java,getRecentTasks,Yes, this method likely requires permissions to access recent tasks or task-related information, which is typically protected in Android.
/com/android/wm/shell/recents/RecentTasksController.java,getRunningTasks,Yes, this method requires permissions because it involves accessing running tasks, which typically requires the "android.permission.GET_TASKS" permission on Android devices.
/com/android/wm/shell/recents/RecentTasks.java,getRecentTasks,Yes, because accessing recent tasks may require permissions related to app visibility or background processing.
/com/android/wm/shell/freeform/FreeformTaskListener.java,reparentChildSurfaceToTask,Yes, this method likely requires permissions because it appears to manipulate surface controls and tasks, which typically involve managing system resources that need specific permissions on Android.
/com/android/wm/shell/onehanded/OneHandedSettingsUtil.java,registerSettingsKeyObserver,Yes, the method likely requires permissions to access settings and observe changes, as it interacts with `ContentResolver` and settings related to user preferences.
/com/android/wm/shell/onehanded/OneHandedSettingsUtil.java,setOneHandedModeEnabled,Yes, because it modifies settings in the system, which typically requires permissions.
/com/android/wm/shell/onehanded/OneHandedSettingsUtil.java,getSettingsOneHandedModeTimeout,Yes, requires permissions to access settings from the `Settings` provider.
/com/android/wm/shell/onehanded/OneHandedSettingsUtil.java,setTutorialShownCounts,Yes, it requires permissions because it accesses and modifies settings in the `Settings.Secure` database, which typically requires WRITE_SETTINGS permission in Android.
/com/android/wm/shell/onehanded/OneHandedSettingsUtil.java,setOneHandedModeActivated,Yes, it requires permissions. This method interacts with `Settings.Secure`, which typically requires permissions to modify secure settings.
/com/android/wm/shell/onehanded/OneHandedController.java,registerSettingObservers,Yes, because it interacts with `Settings.Secure`, which typically requires permissions to access system settings.
/com/android/wm/shell/onehanded/OneHandedController.java,startOneHanded,Yes, this method requires permissions because it invokes `executeRemoteCallWithTaskPermission`, which typically implies that it needs to check for specific permissions to perform its actions securely.
/com/android/wm/shell/onehanded/OneHandedController.java,stopOneHanded,Yes, this method appears to involve executing a remote call which may require specific permissions to perform such actions.
/com/android/wm/shell/bubbles/BubbleController.java,hideCurrentInputMethod,Yes, this method likely requires permissions related to managing input methods, as it interacts with `InputMethodManagerInternal`.
/com/android/wm/shell/bubbles/BubbleController.java,addToWindowManagerMaybe,Yes, this method likely requires permissions as it involves manipulating the WindowManager, which typically requires specific permissions like `SYSTEM_ALERT_WINDOW` for overlays.
/com/android/wm/shell/bubbles/BubbleController.java,registerBroadcastReceiver,Yes, it requires permissions because it registers a broadcast receiver, which may require permission based on the actions it listens for (e.g., `ACTION_SCREEN_OFF`).
/com/android/wm/shell/bubbles/BubbleController.java,getScreenshotExcludingBubble,Yes, this method likely requires permissions to capture screenshots.
/com/android/wm/shell/bubbles/BubbleViewInfoTask.java,populateForBubbleBar,Yes, because it interacts with the `PackageManager` and retrieves application information, which may require permissions such as `PACKAGE_USAGE_STATS` or other package-related permissions depending on the specific context in which it is called.
/com/android/wm/shell/bubbles/BubbleViewInfoTask.java,loadSenderAvatar,Yes, the method requires permissions because it involves granting URI permissions with `grantUriPermission`, which necessitates the appropriate read permissions for accessing content.
/com/android/wm/shell/bubbles/Bubbles.java,getScreenshotExcludingBubble,Yes, this method likely requires permissions because it deals with screenshots, which typically require permissions to access user data and display contents.
/com/android/wm/shell/bubbles/animation/StackAnimationController.java,getSpringForce,Yes, the method requires permissions because it accesses `Settings.Secure`, which may need specific permissions to read secure system settings.
/com/android/wm/shell/windowdecor/DesktopModeWindowDecoration.java,loadAppInfo,Yes, this method requires permissions because it interacts with the `PackageManager`, which may involve accessing information about applications, potentially requiring permissions like `GET_PACKAGE_SIZE` or `QUERY_ALL_PACKAGES` to retrieve app details.
/com/android/wm/shell/windowdecor/TaskOperations.java,sendBackEvent,Yes, because it uses `InputManager` and injects input events, which typically requires permissions such as `INJECT_EVENTS`.
/com/android/wm/shell/activityembedding/ActivityEmbeddingAnimationRunner.java,getOrCreateScreenshot,Yes, this method likely requires permissions because it involves taking a screenshot, which typically needs user permission due to privacy concerns.
/com/android/setupwizardlib/view/IllustrationVideoView.java,createMediaPlayer,Yes, the method likely requires permissions to access media content. Specifically, permissions related to accessing audio and video files may be necessary, as it involves creating a media player for URI resources.
/com/android/internal/car/CarServiceHelperService.java,startUserInBackgroundVisibleOnDisplay,Yes, this method likely requires permissions related to managing user sessions in the background, specifically for interacting with `ActivityManager`.
/com/android/internal/car/CarServiceHelperService.java,getProcessCmdLine,Yes, the method likely requires permissions because it accesses the filesystem to read the command line of a process, which generally requires permissions in the Android environment to access `/proc` files.
/com/android/internal/car/CarServiceHelperService.java,createUserEvenWhenDisallowed,Yes, this method likely requires permissions to create a user, which typically involves system-level privileges in Android.
/com/android/internal/car/CarServiceHelperService.java,requestTerminateProcess,Yes, this method likely requires permissions because it involves terminating processes, which typically requires specific system permissions in Android for security and stability reasons.
/com/android/internal/car/test/CarServiceCrashDumpTest.java,executeCommand,Yes, this method likely requires permissions because executing shell commands on Android can involve system-level commands that need specific privileges, such as access to sensitive data or system resources.
/com/android/internal/car/updatable/CarServiceHelperServiceUpdatableImpl.java,onStart,Yes, requires permissions. The method involves binding to a service, which typically requires specific permissions defined in the Android manifest.
/com/android/internal/car/updatable/CarServiceHelperServiceUpdatableImpl.java,setDisplayAllowlistForUser,Yes, this method likely requires specific permissions to modify display settings for a user, which generally involves security-sensitive operations in Android.
/com/android/internal/car/updatable/CarServiceHelperServiceUpdatableImpl.java,createUserEvenWhenDisallowed,Yes, this method likely requires permissions because it involves creating a user, which typically necessitates elevated privileges due to the potential impact on device security and user data.
/com/android/internal/car/updatable/CarServiceHelperServiceUpdatableImpl.java,setProcessGroup,Yes, this method likely requires permissions because it involves setting a process group, which typically requires system-level access.
/com/android/internal/car/updatable/CarServiceHelperServiceUpdatableImpl.java,setProcessProfile,Yes, it likely requires permissions because it seems to interact with system processes (e.g., setting a process profile with a defined PID and UID), which often require special permissions in Android for security reasons.
/com/android/internal/inputmethod/InputMethodPrivilegedOperations.java,setImeWindowStatusAsync,Yes, the method interacts with input method services and likely requires permissions related to input method operations for security and privacy.
/com/android/internal/inputmethod/InputMethodPrivilegedOperations.java,createInputContentUriToken,Yes, because it grants temporary read permission for a content URI.
/com/android/internal/inputmethod/InputMethodPrivilegedOperations.java,setInputMethod,Yes, this method likely requires permissions because it involves switching input methods, which typically requires specific permissions related to modifying input settings.
/com/android/internal/inputmethod/InputMethodPrivilegedOperations.java,setInputMethodAndSubtype,Yes, this method likely requires permissions because it switches the input method in the Android system, which typically requires user permissions to change system settings.
/com/android/internal/inputmethod/InputMethodPrivilegedOperations.java,switchToNextInputMethod,Yes, this method requires permissions because it involves switching input methods, which typically requires permission to manage input methods on the device.
/com/android/internal/inputmethod/InputMethodPrivilegedOperations.java,applyImeVisibilityAsync,Yes, this method likely requires permissions related to managing input methods, as it involves interacting with the Input Method Manager and making the IME visible or hidden.
/com/android/internal/app/AssistUtils.java,getAssistComponentForUser,Yes, this method likely requires permissions related to accessing assistive features or user settings.
/com/android/internal/app/AssistUtils.java,isDisclosureEnabled,Yes, because accessing `Settings.Secure` may require permissions related to secure settings read access.
/com/android/internal/app/ChooserTargetActionsDialogFragment.java,getPinnedShortcutsFromPackageAsUser,Yes, the method likely requires permissions to access the ShortcutManager and its shortcuts, which can be sensitive information.
/com/android/internal/app/ShutdownActivity.java,onCreate,Yes, this method requires permissions because it involves rebooting the device, which typically requires the `REBOOT` permission in Android.
/com/android/internal/app/ShutdownActivity.java,run,Yes, it likely requires permissions because it interacts with power management services (e.g., rebooting), which generally need specific permissions in Android (like `REBOOT` or `MODIFY_PHONE_STATE`).
/com/android/internal/app/ResolverRankerServiceResolverComparator.java,initRanker,Yes, the method likely requires permissions because it involves binding to a service (bindServiceAsUser) which typically requires permission in Android.
/com/android/internal/app/HeavyWeightSwitcherActivity.java,setIconAndText,Yes, this method may require permissions as it interacts with the PackageManager to access application information, which typically requires `GET_PACKAGE_SIZE` or similar permissions depending on the use case.
/com/android/internal/app/HeavyWeightSwitcherActivity.java,onClick,Yes, the method likely requires permissions because it interacts with system services and starts activities, which may require specific permissions defined in the Android manifest.
/com/android/internal/app/ChooserActivity.java,isWorkProfile,Yes, this method likely requires permission as it interacts with user profiles, which often involves sensitive user data.
/com/android/internal/app/ChooserActivity.java,displayImageContentPreview,Yes, it requires permissions because accessing content (like images) typically requires READ_EXTERNAL_STORAGE permission.
/com/android/internal/app/ChooserActivity.java,queryResolver,Yes, this method likely requires permissions because it deals with a `ContentResolver` and `Uri`, which typically involve accessing content from other applications or system resources, such as contacts or media.
/com/android/internal/app/ChooserActivity.java,extractFileInfo,Yes, this method requires permissions. It accesses files through a `Uri` and a `ContentResolver`, which typically require the permission to read from external storage or other relevant content providers.
/com/android/internal/app/ChooserActivity.java,loadThumbnail,Yes, the method likely requires permissions to access content through the provided URI.
/com/android/internal/app/ChooserActivity.java,isUserRunning,Yes, this method likely requires permissions because it interacts with the `UserManager` class, which typically involves user-specific information and may require user-related permissions to access.
/com/android/internal/app/LaunchAfterAuthenticationActivity.java,requestDismissKeyguardIfNeeded,Yes, because it interacts with the device's keyguard, which typically requires user authentication permissions.
/com/android/internal/app/IntentForwarderActivity.java,getAppIcon,Yes, this method may require permissions related to accessing the default dialer and loading application icons, especially if it interacts with the TelecomManager and PackageManager.
/com/android/internal/app/IntentForwarderActivity.java,getWorkTelephonyInfoSectionMessage,Yes, because it involves checking telephony information, which typically requires permissions like `READ_PHONE_STATE` or similar.
/com/android/internal/app/IntentForwarderActivity.java,getForwardToWorkMessage,Yes, the method likely requires permissions as it interacts with the `DevicePolicyManager`, which typically requires specific permissions related to device administration and management (e.g., `android.permission.BIND_DEVICE_ADMIN`).
/com/android/internal/app/IntentForwarderActivity.java,isDialerIntent,Yes, this method involves intents related to dialing, which typically requires suitable permissions like `CALL_PHONE` or `CALL_PRIVILEGED` in Android.
/com/android/internal/app/IntentForwarderActivity.java,resolveActivityAsUser,Yes, this method likely requires permissions because it deals with resolving activity for an `Intent`, which generally requires certain permissions related to package management and potentially user data.
/com/android/internal/app/HarmfulAppWarningActivity.java,onClick,Yes, this method requires permissions because it interacts with the package manager and potentially modifies application state, which usually requires specific permissions to prevent unauthorized actions.
/com/android/internal/app/HarmfulAppWarningActivity.java,createHarmfulAppWarningIntent,Yes, the method may require permissions to access certain information about apps and their intents.
/com/android/internal/app/SuspendedAppActivity.java,onReceive,Yes, the method `onReceive` indicates it is related to receiving broadcast intents, which may require permissions to listen for certain actions, such as `ACTION_PACKAGES_SUSPENSION_CHANGED`.
/com/android/internal/app/SuspendedAppActivity.java,getMoreDetailsActivity,Yes, required permission is specified in the method with `SEND_SHOW_SUSPENDED_APP_DETAILS`.
/com/android/internal/app/SuspendedAppActivity.java,onCreate,Yes, this method requires permissions because it interacts with system services and processes user-related data, which may involve sensitive information that requires permissions.
/com/android/internal/app/SuspendedAppActivity.java,requestDismissKeyguardIfNeeded,Yes, this method likely requires permission because it interacts with the keyguard, which typically needs permissions related to modifying system security settings or displaying overlays.
/com/android/internal/app/SuspendedAppActivity.java,onClick,Yes, the method appears to require permissions because it involves actions like sending broadcasts and starting activities that typically require specific permissions in Android.
/com/android/internal/app/SuspendedAppActivity.java,createSuspendedAppInterceptIntent,Yes, this method likely requires permissions as it involves creating an Intent related to a suspended app, which generally deals with sensitive operations and interactions with other apps.
/com/android/internal/app/LocaleStore.java,getSimCountries,Yes, this method requires permissions because it accesses the device's TelephonyManager to retrieve SIM country information, which typically requires phone-related permissions.
/com/android/internal/app/ChooserStackedAppDialogFragment.java,getItemLabel,Yes, it likely requires permissions because it interacts with `PackageManager` and may access app-related information that requires specific permissions in Android.
/com/android/internal/app/ResolverListAdapter.java,doInBackground,Yes, the method requires permissions because it checks for the `RECORD_AUDIO` permission, which is necessary to record audio in Android.
/com/android/internal/app/ResolverListAdapter.java,getIconSubstituteInternal,Yes, this method involves accessing app resources, which typically requires the appropriate permissions, such as accessing application icons or resources.
/com/android/internal/app/ResolverListAdapter.java,getIconBitmap,Yes, likely requires permissions. The method interacts with user handles, which may necessitate permissions related to accessing user-specific data or managing user profiles.
/com/android/internal/app/ResolverListAdapter.java,getLabel,Yes, the method checks for a permission (`mHasSubstitutePermission`) before executing certain logic, indicating it requires permissions to access or modify some data.
/com/android/internal/app/UnlaunchableAppActivity.java,launchEmergencyDialer,Yes, this method likely requires permissions to launch the emergency dialer functionality, which typically involves accessing telephony services.
/com/android/internal/app/ResolverListController.java,getResolversForIntentAsUser,Yes, this method likely requires permissions. It accesses system-level information regarding intent resolution and user accounts, which typically necessitates appropriate permissions in Android for privacy and security reasons.
/com/android/internal/app/ResolverListController.java,filterIneligibleActivities,Yes, the method checks component permissions, which typically requires appropriate permissions to access.
/com/android/internal/app/PlatLogoActivity.java,launchNextStage,Yes, it likely requires permissions due to the use of `getContentResolver()` and settings modifications, which typically require `WRITE_SETTINGS` permission in Android.
/com/android/internal/app/PlatLogoActivity.java,syncTouchPressure,Yes, it likely requires permissions because it interacts with system settings (Settings.System) and touch statistics, which typically require specific permissions in the Android manifest, such as WRITE_SETTINGS.
/com/android/internal/app/chooser/SelectableTargetInfo.java,startAsCaller,Yes, this method likely requires permissions because it involves starting an activity as a caller, which may need permissions related to inter-app communication or launching activities that belong to different user profiles.
/com/android/internal/app/chooser/TargetInfo.java,prepareIntentForCrossProfileLaunch,Yes, it likely requires permissions related to cross-profile access.
/com/android/internal/app/chooser/DisplayResolveInfo.java,start,Yes, this method likely requires permissions. It involves starting an activity, which may require permissions depending on the content or features being accessed within the activity.
/com/android/internal/app/chooser/DisplayResolveInfo.java,startAsUser,Yes, this method likely requires permissions related to starting activities for different user profiles.
/com/android/internal/widget/ImageResolver.java,loadImage,Yes, because accessing an image from a specified URI may require storage or network permissions depending on the URI source.
/com/android/internal/widget/LockSettingsInternal.java,createNewUser,Yes, this method likely requires permissions because it involves creating a new user and managing sensitive user data.
/com/android/internal/widget/LockSettingsInternal.java,removeUser,Yes, this method likely requires permissions because it involves removing user security settings and managing user accounts, which typically requires elevated privileges in Android.
/com/android/internal/widget/LockSettingsInternal.java,addEscrowToken,Yes, this method likely requires permissions related to user authentication and security, as it deals with escrow tokens for lockscreen passwords.
/com/android/internal/widget/LockSettingsInternal.java,setLockCredentialWithToken,Yes, this method likely requires permissions because it involves setting lock credentials, which is a sensitive operation that typically requires special permissions to protect user security.
/com/android/internal/widget/LockSettingsInternal.java,getUserPasswordMetrics,Yes, this method likely requires permissions related to accessing user lock screen security information, such as `USE_FULL_SCREEN_INTENT` or similar security-related permissions.
/com/android/internal/widget/SlidingTab.java,vibrate,Yes, the method requires permissions because it is related to triggering haptic feedback, which typically requires the `VIBRATE` permission in Android.
/com/android/internal/widget/SlidingTab.java,dispatchTriggerEvent,Yes, it likely requires permissions because it involves a trigger event that could interact with device features or services.
/com/android/internal/widget/LocalImageResolver.java,resolveImage,Yes, the method may require permissions to access the image from the provided `Uri` and use the system resources through the `Context`.
/com/android/internal/widget/LocalImageResolver.java,resolveImage,Yes, this method requires permissions. It involves accessing a resource identified by a `Uri`, which typically requires permissions related to storage or media access in Android.
/com/android/internal/widget/LocalImageResolver.java,resolveResourcesForIcon,Yes, because it interacts with resources and package manager, which may require permissions to access other applications' resources.
/com/android/internal/widget/LockPatternChecker.java,verifyCredential,Yes, this method likely requires permissions because it deals with verifying lockscreen credentials, which typically involves sensitive user data and security features requiring system-level permissions.
/com/android/internal/widget/LockPatternChecker.java,checkCredential,Yes, the method likely requires permissions because it deals with checking lockscreen credentials, which involves sensitive user authentication data.
/com/android/internal/widget/LockPatternChecker.java,verifyTiedProfileChallenge,Yes, because this method deals with user credentials and verification, which typically requires permissions related to security and user data handling.
/com/android/internal/util/LatencyTracker.java,startListeningForLatencyTrackerConfigChanges,Yes, because it checks for the `READ_DEVICE_CONFIG` permission before starting to listen for config changes.
/com/android/internal/util/ScreenshotHelper.java,takeScreenshot,Yes, because taking a screenshot usually requires specific permissions related to accessing and capturing the device's screen.
/com/android/internal/util/ScreenshotHelper.java,takeScreenshot,Yes, because taking a screenshot typically requires permissions to access the device's storage or media files.
/com/android/internal/util/ScreenshotHelper.java,takeScreenshotInternal,Yes, because taking a screenshot may require permissions related to media storage or screen capture, especially when saving the screenshot.
/com/android/internal/util/ScreenshotHelper.java,onServiceConnected,Yes, the method likely requires permissions because it involves taking screenshots, which in Android requires the "WRITE_EXTERNAL_STORAGE" permission or "READ_MEDIA_IMAGES" permission starting from Android 13 for accessing media files.
/com/android/internal/util/ScreenshotHelper.java,notifyScreenshotError,Yes, because it involves sending a broadcast intent which may require permission to access system services.
/com/android/internal/util/FileRotator.java,rewriteSingle,Yes, because it involves file operations that require permissions to read and write data to the filesystem.
/com/android/internal/util/FileRotator.java,maybeRotate,Yes, because renaming or deleting files typically requires file access permissions.
/com/android/internal/util/FileRotator.java,writeFile,Yes, it likely requires permissions because writing files in Android typically requires storage permissions.
/com/android/internal/util/TraceBuffer.java,writeTraceToFile,Yes, this method likely requires permissions because it writes data to a file, which typically requires file system write permissions in Android.
/com/android/internal/util/DumpUtils.java,checkDumpPermission,Yes, because it verifies if the caller holds the `android.permission.DUMP` permission.
/com/android/internal/util/DumpUtils.java,checkUsageStatsPermission,Yes, it requires permissions. Specifically, it checks for `PACKAGE_USAGE_STATS` permission and `OP_GET_USAGE_STATS` access.
/com/android/internal/util/DumpUtils.java,checkDumpAndUsageStatsPermission,Yes, because it requires both `DUMP` and `PACKAGE_USAGE_STATS` permissions as well as `OP_GET_USAGE_STATS` access.
/com/android/internal/util/ObservableServiceConnection.java,bind,Yes, this method likely requires permissions because it initiates binding to a service, which typically requires app-level permissions to interact with services in Android.
/com/android/internal/util/ImageUtils.java,loadThumbnail,Yes, the method requires permissions to access content from the specified URI using `ContentResolver`.
/com/android/internal/util/EmergencyAffordanceManager.java,performEmergencyCall,Yes, because making an emergency call typically requires the `CALL_EMERGENCY_SERVICES` permission in Android.
/com/android/internal/util/EmergencyAffordanceManager.java,performEmergencyCall,Yes, because performing an emergency call typically requires permissions related to making phone calls.
/com/android/internal/util/EmergencyAffordanceManager.java,forceShowing,Yes, because it accesses `Settings.Global`, which may require permissions to read system settings.
/com/android/internal/protolog/BaseProtoLogImpl.java,writeProtoLogToFileLocked,Yes, this method requires permissions because it appears to involve writing to a file, which typically requires file writing permissions in Android.
/com/android/internal/notification/SystemNotificationChannels.java,createAll,Yes, this method requires permissions because it interacts with the `NotificationManager`, which typically requires permission to send notifications.
/com/android/internal/statusbar/AppClipsServiceConnector.java,connectToServiceAndProcessRequest,Yes, because binding to a service may require permissions, such as accessing foreground services or specific app-related functionalities.
/com/android/internal/content/SelectionBuilder.java,update,Yes, because updating a database typically requires WRITE permissions.
/com/android/internal/content/SelectionBuilder.java,delete,Yes, because deleting data from a database may require permissions related to data access, such as WRITE_EXTERNAL_STORAGE or certain database-related permissions.
/com/android/internal/content/F2fsUtils.java,getFilesRecursive,Yes, this method requires permissions. Accessing files and directories typically requires permissions for reading storage in Android.
/com/android/internal/content/F2fsUtils.java,getFilesToRelease,Yes, because accessing files requires storage permissions in Android.
/com/android/internal/content/NativeLibraryHelper.java,copyNativeBinaries,Yes, this method likely requires permissions because it involves accessing and modifying the file system to copy native binaries to a shared library directory.
/com/android/internal/content/PackageMonitor.java,register,Yes, because it involves registering receivers which typically requires permissions related to broadcast and potentially external storage access.
/com/android/internal/content/FileSystemProvider.java,createDocument,Yes, because it likely interacts with file storage, which requires permissions like `WRITE_EXTERNAL_STORAGE`.
/com/android/internal/content/FileSystemProvider.java,renameDocument,Yes, because it involves renaming a document which may require permissions to access and modify files.
/com/android/internal/content/FileSystemProvider.java,moveDocument,Yes, because this method appears to deal with file operations, which typically require permissions to read or write files in the Android environment.
/com/android/internal/content/FileSystemProvider.java,deleteDocument,Yes, because it involves file deletion which typically requires storage permissions in Android.
/com/android/internal/content/FileSystemProvider.java,queryChildDocumentsShowAll,Yes, this method may require permissions because it can access and show privacy-sensitive data within "Android/data" style directories, which are restricted for privacy reasons.
/com/android/internal/content/FileSystemProvider.java,queryChildDocuments,Yes, this method may require permissions related to file access, such as reading from or writing to external storage, depending on its implementation and the context in which it's used.
/com/android/internal/content/FileSystemProvider.java,querySearchDocuments,Yes, this method likely requires permissions to access files or documents, which are considered sensitive data in Android.
/com/android/internal/content/FileSystemProvider.java,openDocument,Yes, the method likely requires permissions because it involves accessing document files, which generally requires storage permissions.
/com/android/internal/content/FileSystemProvider.java,openFileForRead,Yes, this method requires permissions because it interacts with media files and potentially accesses external storage, which typically requires READ_EXTERNAL_STORAGE permission in Android.
/com/android/internal/content/FileSystemProvider.java,scanFile,Yes, it likely requires permissions because it involves scanning a file, which may need storage permissions to access files on the device.
/com/android/internal/content/FileSystemProvider.java,openDocumentThumbnail,Yes, requires permission to access documents/files.
/com/android/internal/content/FileSystemProvider.java,shouldHide,Yes, because it deals with access to "Android/data" directories, which may require storage permissions for privacy reasons.
/com/android/internal/content/InstallLocationUtils.java,getForceAllowOnExternalSetting,Yes, because it accesses `Settings.Global`, which typically requires permissions related to system settings.
/com/android/internal/content/InstallLocationUtils.java,getExistingAppInfo,Yes, this method requires permissions because it accesses application information through the `PackageManager`, which typically requires the `QUERY_ALL_PACKAGES` or equivalent permissions depending on the level of detail accessed or device policies.
/com/android/internal/colorextraction/ColorExtractor.java,initExtractColors,Yes, it requires permissions because the method interacts with `WallpaperManager`, which typically requires permissions to access wallpaper resources.
/com/android/internal/colorextraction/ColorExtractor.java,getColors,Yes, it likely requires permissions related to accessing wallpaper settings or system features.
/com/android/internal/usb/DumpUtils.java,writeAccessory,Yes, this method likely requires permissions to access USB accessories.
/com/android/internal/telephony/NetworkScanRequestTracker.java,getAllowedMccMncsForLocationRestrictedScan,Yes, because it interacts with subscription information, which typically requires permissions related to network state or telephony.
/com/android/internal/telephony/NetworkScanRequestTracker.java,doStartScan,Yes, the method appears to handle network scanning operations, which typically require permissions related to network access or telephony services in Android.
/com/android/internal/telephony/NetworkScanRequestTracker.java,startNetworkScan,Yes, this method likely requires permissions related to network scans and potentially location access.
/com/android/internal/telephony/CarrierSmsUtils.java,getImsRcsPackageForIntent,Yes, it requires permissions to access package information and possibly to interact with telephony services.
/com/android/internal/telephony/SettingsObserver.java,observe,Yes, because observing content changes typically requires permissions to access the content provider associated with the URI.
/com/android/internal/telephony/IccPhoneBookInterfaceManager.java,generateAdnRecordWithOldTagByContentValues,Yes, this method requires permissions because it operates on `ContentValues` that might contain sensitive user data such as phone numbers or email addresses, which typically requires permissions related to contacts or phone services.
/com/android/internal/telephony/IccPhoneBookInterfaceManager.java,updateAdnRecordsInEfBySearchForSubscriber,Yes, throws SecurityException if no WRITE_CONTACTS permission.
/com/android/internal/telephony/IccPhoneBookInterfaceManager.java,updateAdnRecordsInEfByIndex,Yes, the method requires the `WRITE_CONTACTS` permission to update ADN-like EF records.
/com/android/internal/telephony/IccPhoneBookInterfaceManager.java,getAdnRecordsSize,Yes, because it likely interacts with ICC (Integrated Circuit Card) data, which typically requires permissions related to accessing SIM or phone-related information.
/com/android/internal/telephony/IccPhoneBookInterfaceManager.java,getAdnRecordsInEf,Yes, requires READ_CONTACTS permission to access contact records.
/com/android/internal/telephony/IccPhoneBookInterfaceManager.java,getAdnRecordsCapacity,Yes, requires `android.permission.READ_CONTACTS` permission to access ADN records capacity.
/com/android/internal/telephony/RadioBugDetector.java,init,Yes, because it uses `getContentResolver` which requires permission to access certain settings or data.
/com/android/internal/telephony/SignalStrengthController.java,getSignalStrength,Yes, this method likely requires permissions because accessing signal strength typically involves reading information that may be restricted, such as device network performance metrics.
/com/android/internal/telephony/SignalStrengthController.java,shouldRefreshSignalStrength,Yes, this method requires permissions. It involves accessing subscription information and telephony services, which generally requires specific permissions like `READ_PHONE_STATE`.
/com/android/internal/telephony/AsyncEmergencyContactNotifier.java,doInBackground,Yes, because it calls `notifyEmergencyContact`, which usually requires permissions related to emergency contacts.
/com/android/internal/telephony/CarrierServicesSmsFilter.java,getSystemAppForIntent,Yes, this method requires permissions because it checks for "android.permission.CARRIER_FILTER_SMS" using the PackageManager.
/com/android/internal/telephony/CarrierServicesSmsFilter.java,filterSms,Yes, requires permission to access SMS services.
/com/android/internal/telephony/CarrierServicesSmsFilter.java,onServiceReady,Yes, because it involves SMS filtering, which typically requires related permissions in Android (e.g., `RECEIVE_SMS`).
/com/android/internal/telephony/CellBroadcastServiceManager.java,sendCdmaMessageToHandler,Yes, because sending a CDMA CB message likely requires permissions related to SMS or notifications.
/com/android/internal/telephony/MultiSimSettingController.java,onDataEnabledChanged,Yes, it likely requires permissions related to telephony, such as `READ_PHONE_STATE` or `CHANGE_NETWORK_STATE`, as it involves checking and notifying changes in data enabled states.
/com/android/internal/telephony/MultiSimSettingController.java,onRoamingDataEnabled,Yes, this method likely requires permissions related to modifying data roaming settings.
/com/android/internal/telephony/MultiSimSettingController.java,onSubscriptionGroupChanged,Yes, this method requires permissions because it deals with subscription groups and potentially sensitive data related to mobile subscriptions, which typically requires specific permissions to access in the Android SDK.
/com/android/internal/telephony/MultiSimSettingController.java,sendDefaultSubConfirmedNotification,Yes, this method likely requires permission to send broadcasts, particularly regarding the `sendBroadcast` method, which often requires permissions to notify other components or apps.
/com/android/internal/telephony/MultiSimSettingController.java,disableDataForNonDefaultNonOpportunisticSubscriptions,Yes, this method likely requires permissions because it interacts with subscription data and mobile network settings, which typically require manifest permissions such as `android.permission.MODIFY_PHONE_STATE` or related telephony permissions.
/com/android/internal/telephony/MultiSimSettingController.java,areSubscriptionsInSameGroup,Yes, because the method interacts with subscription information, it likely requires permissions related to accessing subscription data, such as `READ_PHONE_STATE` or similar.
/com/android/internal/telephony/MultiSimSettingController.java,setUserDataEnabledForGroup,Yes, the method likely requires permissions to manipulate mobile data settings, which typically need appropriate system permissions in Android (e.g., `CHANGE_NETWORK_STATE`).
/com/android/internal/telephony/MultiSimSettingController.java,setRoamingDataEnabledForGroup,Yes, this method may require permissions to modify data roaming settings on a subscription, typically needing "WRITE_SETTINGS" or related permissions.
/com/android/internal/telephony/MultiSimSettingController.java,deactivateSubscription,Yes, this method likely requires permissions because it interacts with `EuiccManager`, which is associated with eSIM functionality that typically mandates specific permissions to access or modify subscription data on the device.
/com/android/internal/telephony/MultiSimSettingController.java,updateUserPreferences,Yes, the method likely requires permissions to access or modify user preferences related to subscriptions and messaging services.
/com/android/internal/telephony/CarrierPrivilegesTracker.java,onReceive,Yes, this method involves handling actions related to SIM card states and package changes, which typically require permissions such as `READ_PHONE_STATE` and `PACKAGE_MANAGER`.
/com/android/internal/telephony/CarrierPrivilegesTracker.java,getSimRules,Yes, this method likely requires permissions because it involves accessing SIM card information and UICC profiles, which typically require specific permissions like `READ_PHONE_STATE` or `READ_PRIVILEGED_PHONE_STATE` in Android.
/com/android/internal/telephony/CarrierPrivilegesTracker.java,setTestOverrideCarrierPrivilegeRules,Yes, this method likely requires permissions related to modifying carrier privileges, as it deals with overriding actual rules on Carrier Config and SIM.
/com/android/internal/telephony/CarrierPrivilegesTracker.java,setTestOverrideCarrierServicePackage,Yes, this method requires permissions because it involves overriding the carrier provisioning package, which requires carrier privileges.
/com/android/internal/telephony/CarrierPrivilegesTracker.java,getCarrierPrivilegeStatusForPackage,Yes, this method requires permissions because it checks carrier privileges, which typically involves sensitive data related to telephony operations that can require specific permissions in Android.
/com/android/internal/telephony/CarrierPrivilegesTracker.java,getPackagesWithCarrierPrivileges,Yes, this method likely requires permissions because it deals with retrieving packages with carrier privileges, which typically involves accessing sensitive information about applications that can interact with telephony services.
/com/android/internal/telephony/CarrierPrivilegesTracker.java,getCarrierPrivilegeStatusForUid,Yes, this method likely requires permissions to access carrier privileges. Accessing Telephony features generally requires specific permissions.
/com/android/internal/telephony/CarrierPrivilegesTracker.java,getCarrierServicePackageName,Yes, this method likely requires permissions because it involves accessing carrier service information, which typically requires specific telephony permissions in Android.
/com/android/internal/telephony/CarrierPrivilegesTracker.java,getCarrierPackageNamesForIntent,Yes, this method requires permissions because it interacts with telephony functionalities and retrieves carrier package information, which typically requires specific permissions to access user-sensitive data in Android.
/com/android/internal/telephony/TelephonyComponentFactory.java,makeInboundSmsTracker,Yes, this method likely requires permissions related to SMS handling, such as `RECEIVE_SMS` or `READ_SMS`, to track incoming SMS messages accurately.
/com/android/internal/telephony/TelephonyComponentFactory.java,makeInboundSmsTracker,Yes, because it involves creating a tracker for incoming SMS messages, which typically requires permission to receive SMS.
/com/android/internal/telephony/PhoneInternalInterface.java,acceptCall,Yes, this method likely requires permissions to access and control call states.
/com/android/internal/telephony/PhoneInternalInterface.java,rejectCall,Yes, this method likely requires permissions related to managing phone calls, such as `READ_PHONE_STATE` or `CALL_PHONE`, since it interacts with call states.
/com/android/internal/telephony/PhoneInternalInterface.java,switchHoldingAndActive,Yes, because managing calls typically requires permissions related to phone state or call management.
/com/android/internal/telephony/PhoneInternalInterface.java,getRingingCall,Yes, because accessing the ringing call may require phone call permissions.
/com/android/internal/telephony/PhoneInternalInterface.java,dial,Yes, requires permissions to initiate voice connections.
/com/android/internal/telephony/PhoneInternalInterface.java,dial,Yes, this method likely requires permissions to manage voice connections, such as placing calls.
/com/android/internal/telephony/PhoneInternalInterface.java,startConference,Yes, this method likely requires permissions, such as making calls, since it initiates a new conference connection.
/com/android/internal/telephony/PhoneInternalInterface.java,handlePinMmi,Yes, it likely requires permissions related to SIM operations, like managing PINs.
/com/android/internal/telephony/PhoneInternalInterface.java,handleUssdRequest,Yes, handling USSD commands typically requires permission to access phone state and possibly additional permissions related to managing calls or network access.
/com/android/internal/telephony/PhoneInternalInterface.java,handleInCallMmiCommands,Yes, it requires permissions to handle in-call actions and MMI commands.
/com/android/internal/telephony/PhoneInternalInterface.java,sendDtmf,Yes, requires permission to manage calls.
/com/android/internal/telephony/PhoneInternalInterface.java,startDtmf,Yes, because it involves interacting with an active call, which typically requires phone permissions.
/com/android/internal/telephony/PhoneInternalInterface.java,setRadioPower,Yes, this method likely requires permissions to control radio power state, which is sensitive and affects connectivity (e.g., airplane mode).
/com/android/internal/telephony/PhoneInternalInterface.java,setRadioPowerOnForTestEmergencyCall,Yes, because this method likely interacts with telephony features which may require specific permissions related to making emergency calls.
/com/android/internal/telephony/PhoneInternalInterface.java,setRadioPower,Yes, this method requires permissions because it controls the radio power state, which involves sensitive operations related to telephony and network connectivity.
/com/android/internal/telephony/PhoneInternalInterface.java,setRadioPowerForReason,Yes, because changing radio power state (including airplane mode) requires appropriate permissions to modify system settings.
/com/android/internal/telephony/PhoneInternalInterface.java,setRadioPowerForReason,Yes, it requires permissions because it deals with setting radio power, which typically requires specific permissions related to telephony and network access in Android.
/com/android/internal/telephony/PhoneInternalInterface.java,getLine1Number,Yes, because accessing the phone number typically requires the `READ_PHONE_STATE` permission.
/com/android/internal/telephony/PhoneInternalInterface.java,setLine1Number,Yes, it requires permissions because it manipulates SIM card data (setting MSISDN phone number).
/com/android/internal/telephony/PhoneInternalInterface.java,getVoiceMailNumber,Yes, access to the voicemail number typically requires permission to access phone state or telephony services.
/com/android/internal/telephony/PhoneInternalInterface.java,setVoiceMailNumber,Yes, requires permission to modify SIM card settings (typically `WRITE_VOICEMAIL`).
/com/android/internal/telephony/PhoneInternalInterface.java,getCallForwardingOption,Yes, it requires permissions because it deals with call forwarding options which require access to telephony features.
/com/android/internal/telephony/PhoneInternalInterface.java,getCallForwardingOption,Yes, it likely requires permissions related to telephony, such as changing call forwarding settings or accessing call state information.
/com/android/internal/telephony/PhoneInternalInterface.java,setCallForwardingOption,Yes, it requires permissions because it involves managing call forwarding, which requires telephony permissions.
/com/android/internal/telephony/PhoneInternalInterface.java,setCallForwardingOption,Yes, requires permissions to modify call forwarding settings.
/com/android/internal/telephony/PhoneInternalInterface.java,getCallBarring,Yes, this method likely requires permissions related to managing call barring options, as it deals with telephony-related functionality.
/com/android/internal/telephony/PhoneInternalInterface.java,setCallBarring,Yes, this method likely requires permissions related to managing call settings or modifying telephony services.
/com/android/internal/telephony/PhoneInternalInterface.java,setOutgoingCallerIdDisplay,Yes, it likely requires permissions related to managing call settings or telephony features.
/com/android/internal/telephony/PhoneInternalInterface.java,getCallWaiting,Yes, because it interacts with call management features that typically require permissions to access.
/com/android/internal/telephony/PhoneInternalInterface.java,setCallWaiting,Yes, because this method involves modifying call settings, which typically requires specific permissions related to telephony.
/com/android/internal/telephony/PhoneInternalInterface.java,getAvailableNetworks,Yes, this method likely requires permissions to access network information.
/com/android/internal/telephony/PhoneInternalInterface.java,startNetworkScan,Yes, this method likely requires permissions to access network features for the scan.
/com/android/internal/telephony/PhoneInternalInterface.java,setMute,Yes, because muting or unmuting the microphone during a call typically requires permissions related to managing phone calls and audio settings.
/com/android/internal/telephony/PhoneInternalInterface.java,enableLocationUpdates,Yes, because enabling location updates typically requires location permissions.
/com/android/internal/telephony/PhoneInternalInterface.java,setDataRoamingEnabled,Yes, because enabling data roaming typically requires permissions related to modifying network settings.
/com/android/internal/telephony/PhoneInternalInterface.java,getDeviceId,Yes, because retrieving the unique device ID (like IMEI) requires permissions related to accessing phone state.
/com/android/internal/telephony/PhoneInternalInterface.java,getDeviceSvn,Yes, because retrieving the software version number may involve access to sensitive device information that requires specific permissions.
/com/android/internal/telephony/PhoneInternalInterface.java,getSubscriberId,Yes, because retrieving the unique subscriber ID requires access to sensitive user information, which necessitates permissions.
/com/android/internal/telephony/PhoneInternalInterface.java,getImeiType,Yes, because retrieving the IMEI requires permissions related to identifying the device.
/com/android/internal/telephony/PhoneInternalInterface.java,activateCellBroadcastSms,Yes, this method likely requires permissions because it involves changing settings related to SMS functionality.
/com/android/internal/telephony/CellBroadcastUtils.java,getDefaultCellBroadcastReceiverPackageName,Yes, the method requires permissions because it checks for the `READ_CELL_BROADCASTS` permission.
/com/android/internal/telephony/SmsDispatchersController.java,onReceive,Yes, because it listens for broadcasts which may require permissions depending on the broadcast type.
/com/android/internal/telephony/SmsDispatchersController.java,getSmscAddressFromUSIMWithPhoneIdentity,Yes, this method likely requires permissions because it interacts with the SMS interface of the device, accessing sensitive information related to the SIM card (i.e., the SMSC address). Accessing SMS-related data typically necessitates permissions such as `READ_SMS` or similar.
/com/android/internal/telephony/SmsDispatchersController.java,injectSmsPdu,Yes, it likely requires permissions to send or inject SMS messages into the Android telephony layer.
/com/android/internal/telephony/SmsDispatchersController.java,injectSmsPdu,Yes, this method likely requires permissions because it involves injecting an SMS PDU into the Android telephony layer, which typically requires SMS-related permissions.
/com/android/internal/telephony/SmsDispatchersController.java,sendRetrySms,Yes, this method likely requires permissions to send SMS messages.
/com/android/internal/telephony/SmsDispatchersController.java,sendRetrySms,Yes, the method `sendRetrySms` requires permissions because it deals with sending SMS messages, which typically requires `SEND_SMS` permission in Android.
/com/android/internal/telephony/SmsDispatchersController.java,sendSmsUsingDomainSelection,Yes, this method requires permissions to send SMS.
/com/android/internal/telephony/SmsDispatchersController.java,sendData,Yes, because sending SMS typically requires appropriate permissions to access SMS features on Android devices.
/com/android/internal/telephony/SmsDispatchersController.java,sendText,Yes, it likely requires permissions to send SMS messages.
/com/android/internal/telephony/SmsDispatchersController.java,sendMultipartText,Yes, this method requires permissions because it sends SMS, which typically requires permission to send SMS messages in Android.
/com/android/internal/telephony/SmsDispatchersController.java,sendData,Yes, this method requires permissions because it involves sending SMS messages.
/com/android/internal/telephony/SmsDispatchersController.java,sendText,Yes, this method requires permissions because it sends SMS messages, which typically requires SMS-related permissions in Android (e.g., `SEND_SMS`).
/com/android/internal/telephony/SmsDispatchersController.java,sendText,Yes, the method `sendText` requires permissions because it involves sending SMS messages, which typically necessitates the `SEND_SMS` permission in Android.
/com/android/internal/telephony/SmsDispatchersController.java,sendMultipartText,Yes, this method requires permissions. It involves sending SMS messages, which requires the appropriate SMS permissions in Android.
/com/android/internal/telephony/SmsDispatchersController.java,setPremiumSmsPermission,Yes, this method likely requires permissions because it sets the premium SMS permission for a package, which involves modifying security-sensitive settings.
/com/android/internal/telephony/SmsDispatchersController.java,handleSmsStatusReport,Yes, this method handles SMS status reports, which typically requires SMS-related permissions in Android (e.g., `SEND_SMS`, `RECEIVE_SMS`).
/com/android/internal/telephony/SmsDispatchersController.java,triggerDeliveryIntent,Yes, it likely requires permissions to send SMS messages.
/com/android/internal/telephony/SmsDispatchersController.java,logi,Yes, this method likely requires permission to access the phone state, as it retrieves the phone ID with `getPhoneId`.
/com/android/internal/telephony/NetworkTypeController.java,registerForAllEvents,Yes, this method likely requires permissions. It interacts with phone state and possibly telephony services, which typically necessitate permissions such as `READ_PHONE_STATE` or `ACCESS_NETWORK_STATE`.
/com/android/internal/telephony/NetworkTypeController.java,getNrDisplayType,Yes, the method likely requires permissions because it interacts with network state APIs, which typically require specific telephony permissions in Android.
/com/android/internal/telephony/RadioConfig.java,isMobileDataCapable,Yes, it requires permission to access telephony services, specifically to check if mobile data is capable, which typically requires the `ACCESS_NETWORK_STATE` permission.
/com/android/internal/telephony/RadioConfig.java,getRadioConfigProxy,Yes, because this method interacts with the radio configuration, which typically requires permissions related to accessing network state or telephony services.
/com/android/internal/telephony/RadioConfig.java,getSimSlotsStatus,Yes, because accessing SIM slot status typically requires permissions related to telephony or SIM management in the Android SDK.
/com/android/internal/telephony/RadioConfig.java,setPreferredDataModem,Yes, this method likely requires permissions because it interacts with modem configurations, which usually require specific system-level permissions in Android, such as MODIFY_PHONE_STATE.
/com/android/internal/telephony/RadioConfig.java,setSimSlotsMapping,Yes, this method likely requires permissions related to modifying SIM card settings or configurations, as it involves setting SIM slot mappings.
/com/android/internal/telephony/RadioConfig.java,setNumOfLiveModems,Yes, it likely requires permissions because it interacts with radio configurations, which generally need specific permissions related to telephony operations.
/com/android/internal/telephony/RadioConfig.java,getHalDeviceCapabilities,Yes, it may require permissions related to accessing hardware capabilities or telecommunication features, depending on the implementation of the underlying `getHalDeviceCapabilities` method and the access to `RadioConfigProxy`.
/com/android/internal/telephony/CellularNetworkService.java,getNetworkRegistrationInfo,Yes, this method likely requires permissions as it accesses network registration information which typically involves sensitive data and requires the appropriate network-related permissions in Android.
/com/android/internal/telephony/CellularNetworkService.java,getNetworkRegistrationInfoAidl,Yes, this method likely requires permissions because it interacts with network registration information, which typically requires telephony permissions in Android, such as `READ_PHONE_STATE`.
/com/android/internal/telephony/BaseCommands.java,setRadioState,Yes, because handling radio state changes typically requires permissions related to modifying or reading telephony state (like `READ_PHONE_STATE` or `CHANGE_NETWORK_STATE`).
/com/android/internal/telephony/BaseCommands.java,setUiccSubscription,Yes, because it appears to interact with UICC (SIM) subscriptions, which typically requires certain permissions in Android.
/com/android/internal/telephony/BaseCommands.java,getSimPhonebookCapacity,Yes, because it likely accesses SIM card-related information, which typically requires telephony permissions.
/com/android/internal/telephony/BaseCommands.java,updateSimPhonebookRecord,Yes, because interacting with SIM phonebook records typically requires permissions related to reading and writing to the SIM.
/com/android/internal/telephony/TelephonyAdminReceiver.java,onReceive,Yes, this method likely requires permissions related to user restrictions and possibly network settings, as it deals with user manager checks and network type updates.
/com/android/internal/telephony/RadioSimProxy.java,changeIccPin2ForApp,Yes, it requires permissions. It's involved in changing the SIM PIN, which typically requires specific permissions related to SIM management.
/com/android/internal/telephony/RadioSimProxy.java,changeIccPinForApp,Yes, this method likely requires permissions related to SIM card operations, such as changing the PIN, which usually requires specific security permissions in Android.
/com/android/internal/telephony/RadioSimProxy.java,enableUiccApplications,Yes, this method likely requires permissions related to modifying or interacting with SIM card applications, as it deals with enabling UICC applications on the SIM.
/com/android/internal/telephony/RadioSimProxy.java,getCdmaSubscription,Yes, this method likely requires permissions related to accessing phone state or telephony services, as it involves querying subscription information.
/com/android/internal/telephony/RadioSimProxy.java,getFacilityLockForApp,Yes, because accessing SIM-related functionalities often requires permissions like `READ_PHONE_STATE` or `MODIFY_PHONE_STATE`.
/com/android/internal/telephony/RadioSimProxy.java,getIccCardStatus,Yes, this method likely requires permissions related to accessing SIM card information.
/com/android/internal/telephony/RadioSimProxy.java,getImsiForApp,Yes, because the method deals with obtaining IMSI which typically requires permissions related to accessing telephony information.
/com/android/internal/telephony/RadioSimProxy.java,getSimPhonebookCapacity,Yes, this method likely requires permissions related to accessing SIM card data, as it deals with retrieving the capacity of the SIM phonebook.
/com/android/internal/telephony/RadioSimProxy.java,getSimPhonebookRecords,Yes, this method likely requires permissions to access SIM card data, as it retrieves phonebook records and such data typically requires permissions in Android.
/com/android/internal/telephony/RadioSimProxy.java,iccCloseLogicalChannel,Yes, this method interacts with the SIM card, which typically requires permissions related to telephony or SIM management on Android.
/com/android/internal/telephony/RadioSimProxy.java,iccIoForApp,Yes, it requires permissions related to accessing SIM card data or performing operations with the SIM, which typically require permissions like `READ_PHONE_STATE` or `ACCESS_SIM`.
/com/android/internal/telephony/RadioSimProxy.java,iccOpenLogicalChannel,Yes, it likely requires permissions to access SIM card features.
/com/android/internal/telephony/RadioSimProxy.java,iccTransmitApduBasicChannel,Yes, this method likely requires permissions related to SIM card operations, as it deals with APDU (Application Protocol Data Unit) commands typically used for communication with the SIM card.
/com/android/internal/telephony/RadioSimProxy.java,iccTransmitApduLogicalChannel,Yes, this method likely requires permissions related to SIM card access. It interacts with the IRadioSim interface, which typically requires permissions for accessing SIM-related functionalities.
/com/android/internal/telephony/RadioSimProxy.java,iccTransmitApduLogicalChannel,Yes, it likely requires permissions related to SIM card access to transmit APDU commands.
/com/android/internal/telephony/RadioSimProxy.java,requestIccSimAuthentication,Yes, because this method interacts with SIM authentication which typically requires specific permissions to access sensitive user data.
/com/android/internal/telephony/RadioSimProxy.java,sendEnvelope,Yes, it likely requires permissions because it interacts with radio and SIM functionalities, which are generally protected by permissions in the Android SDK.
/com/android/internal/telephony/RadioSimProxy.java,setAllowedCarriers,Yes, this method likely requires permissions related to modifying carrier settings or SIM card configurations, which are sensitive operations in Android.
/com/android/internal/telephony/RadioSimProxy.java,setCarrierInfoForImsiEncryption,Yes, the method likely requires permissions to access SIM card data or modify carrier information related to IMSI encryption.
/com/android/internal/telephony/RadioSimProxy.java,setCdmaSubscriptionSource,Yes, the method likely requires permissions because it involves modifying subscription information, which typically requires specific permissions in Android to ensure security and user privacy.
/com/android/internal/telephony/RadioSimProxy.java,setFacilityLockForApp,Yes, this method likely requires permissions related to SIM card management, as it deals with locking and unlocking facilities on a SIM card.
/com/android/internal/telephony/RadioSimProxy.java,setSimCardPower,Yes, because modifying SIM card power usually requires specific telephony permissions.
/com/android/internal/telephony/RadioSimProxy.java,setUiccSubscription,Yes, the method likely requires permissions because it interacts with SIM card subscription settings, which generally require specific permissions related to SIM operations in Android.
/com/android/internal/telephony/RadioSimProxy.java,supplyIccPin2ForApp,Yes, because it involves modifying SIM card state (PIN operations), which requires certain permissions.
/com/android/internal/telephony/RadioSimProxy.java,supplyIccPinForApp,Yes, the method deals with SIM card operations, which typically require permissions related to phone state and SIM management (e.g., `android.permission.WRITE_SMS`).
/com/android/internal/telephony/RadioSimProxy.java,supplyIccPuk2ForApp,Yes, this method interacts with SIM card security features (PUK and PIN), which typically require permissions related to phone state and SIM card access.
/com/android/internal/telephony/RadioSimProxy.java,supplyIccPukForApp,Yes, because accessing SIM card operations generally requires specific permissions related to telephony or SIM management.
/com/android/internal/telephony/RadioSimProxy.java,supplySimDepersonalization,Yes, this method likely requires permissions as it deals with SIM card personalization, which typically involves sensitive operations related to mobile device security and user identity.
/com/android/internal/telephony/SmsNumberUtils.java,getAllCountryCodes,Yes, this method requires permissions because it accesses the content resolver via `getContentResolver()` and queries a database (presumably related to country codes), which typically requires permissions related to reading data from it.
/com/android/internal/telephony/SmsNumberUtils.java,filterDestAddr,Yes, the method requires permissions because it interacts with telephony services, which typically require the `READ_PHONE_STATE` and/or `CALL_PHONE` permissions in Android.
/com/android/internal/telephony/SmsNumberUtils.java,getNetworkType,Yes, this method requires permissions. It accesses the telephony information, which typically needs `READ_PHONE_STATE` permission.
/com/android/internal/telephony/SmsNumberUtils.java,isInternationalRoaming,Yes, this method requires permissions because it accesses the `TelephonyManager` to get country information related to SIM and network, which typically requires permissions like `READ_PHONE_STATE`.
/com/android/internal/telephony/SmsNumberUtils.java,needToConvert,Yes, this method requires permissions because it accesses the `CarrierConfigManager` system service, which typically requires specific permissions related to telephony services.
/com/android/internal/telephony/BtSmsInterfaceManager.java,sendText,Yes, because sending text through Bluetooth typically requires Bluetooth permissions (like `BLUETOOTH` and `BLUETOOTH_ADMIN`).
/com/android/internal/telephony/BtSmsInterfaceManager.java,onServiceConnected,Yes, this method requires permissions because it involves Bluetooth operations, which typically require Bluetooth-related permissions in Android (e.g., BLUETOOTH, BLUETOOTH_ADMIN).
/com/android/internal/telephony/CallWaitingController.java,setCallWaiting,Yes, this method likely requires permissions related to modifying call settings or managing telephony services.
/com/android/internal/telephony/CallWaitingController.java,updateCarrierConfig,Yes, it likely requires permissions as it deals with carrier configuration, which typically requires special permissions in Android (e.g., `READ_PHONE_STATE`, `WRITE_SETTINGS`).
/com/android/internal/telephony/ISmsImplBase.java,copyMessageToIccEfForSubscriber,Yes, this method potentially requires permissions to access and manipulate SIM card data for the specified subscriber.
/com/android/internal/telephony/ISmsImplBase.java,sendDataForSubscriber,Yes, it likely requires permissions for sending data and managing intents.
/com/android/internal/telephony/ISmsImplBase.java,sendTextForSubscriber,Yes, this method likely requires permissions to send SMS messages, which typically involves the `SEND_SMS` permission.
/com/android/internal/telephony/ISmsImplBase.java,injectSmsPduForSubscriber,Yes, this method likely requires permissions to access and manipulate SMS data, as it deals with injecting SMS PDU (Protocol Data Units) for a subscriber.
/com/android/internal/telephony/ISmsImplBase.java,sendMultipartTextForSubscriber,Yes, because sending messages generally requires SMS permissions.
/com/android/internal/telephony/ISmsImplBase.java,sendMultipartTextForSubscriberWithOptions,Yes, this method likely requires permissions related to sending SMS messages.
/com/android/internal/telephony/ISmsImplBase.java,setPremiumSmsPermission,Yes, it likely requires permissions related to SMS or premium SMS, as it deals with setting permissions for a package.
/com/android/internal/telephony/ISmsImplBase.java,setPremiumSmsPermissionForSubscriber,Yes, it likely requires permissions related to managing SMS settings or permissions.
/com/android/internal/telephony/MockModem.java,onServiceConnected,Yes, because it potentially interacts with various system services that may require permissions based on the service being connected.
/com/android/internal/telephony/MockModem.java,bindModuleToMockModemService,Yes, this method likely requires permissions because it binds a service using `bindService`, which typically requires permissions in Android, especially if the service interacts with system resources or other apps.
/com/android/internal/telephony/MockModem.java,bindToMockModemService,Yes, it appears that this method involves bindings related to various services (like modem, network, voice, etc.), which typically require permissions in the Android system to access these functionalities.
/com/android/internal/telephony/CarrierKeyDownloadManager.java,onReceive,Yes, the method may require permissions related to telephony or handling intents related to SIM card operations.
/com/android/internal/telephony/CarrierKeyDownloadManager.java,resetRenewalAlarm,Yes, because it involves setting alarms which typically requires the `SET_ALARM` permission in Android.
/com/android/internal/telephony/CarrierKeyDownloadManager.java,getSimOperator,Yes, this method requires permissions because accessing SIM operator information typically requires telephony permissions in Android.
/com/android/internal/telephony/CarrierKeyDownloadManager.java,getSimCarrierId,Yes, because accessing SIM card information typically requires permissions such as `READ_PHONE_STATE`.
/com/android/internal/telephony/CarrierKeyDownloadManager.java,onDownloadComplete,Yes, because persisting data in a database generally requires permission to access storage.
/com/android/internal/telephony/CarrierKeyDownloadManager.java,convertToStringNoGZip,Yes, it likely requires permissions because it interacts with `DownloadManager`, which typically requires permission to access downloaded files and manage downloads (e.g., `WRITE_EXTERNAL_STORAGE`, `READ_EXTERNAL_STORAGE`).
/com/android/internal/telephony/CarrierKeyDownloadManager.java,convertToString,Yes, this method requires permissions. It uses `DownloadManager` to access downloaded files, which typically requires the permission to read from external storage.
/com/android/internal/telephony/PackageBasedTokenUtil.java,generateToken,Yes, it requires permissions. This method interacts with the PackageManager to retrieve installed packages, which typically requires the `QUERY_ALL_PACKAGED` or related package-related permissions in the Android SDK.
/com/android/internal/telephony/PackageBasedTokenUtil.java,generatePackageBasedToken,Yes, the method `generatePackageBasedToken` requires permissions because it interacts with `PackageManager` to retrieve package information, which usually requires specific permissions like `GET_PACKAGE_SIZE` or `QUERY_ALL_PACKAGES` depending on the Android version.
/com/android/internal/telephony/DefaultPhoneNotifier.java,notifyPhoneState,Yes, this method likely requires permissions related to telephony, such as receiving phone state changes, because it interacts with phone call states and information.
/com/android/internal/telephony/DefaultPhoneNotifier.java,notifyPreciseCallState,Yes, this method likely requires permissions related to phone state and possibly telephony services, as it deals with call states and IMS (IP Multimedia Subsystem) functionalities.
/com/android/internal/telephony/DefaultPhoneNotifier.java,notifyOutgoingEmergencySms,Yes, this method likely requires permissions related to telephony, as it involves sending emergency SMS notifications.
/com/android/internal/telephony/NetworkResponse.java,getAvailableNetworksResponse,Yes, the method likely requires permissions as it deals with network operator information, which typically involves sensitive data and may require specific permissions like `ACCESS_NETWORK_STATE` or `ACCESS_FINE_LOCATION` in Android.
/com/android/internal/telephony/TelephonyTester.java,handleTestConferenceEventPackage,Yes, this method likely requires permissions because it handles telephony features like IMS calls, which typically involve sensitive user data and operations that would require appropriate permissions (e.g., accessing phone state or managing calls).
/com/android/internal/telephony/TelephonyTester.java,overrideServiceState,Yes, this method requires permissions because it modifies the service state and interacts with various telephony-related features, which typically requires specific permissions in Android, such as modifying phone state or accessing network information.
/com/android/internal/telephony/TelephonyTester.java,testChangeNumber,Yes, it requires permissions because it interacts with phone functionalities (e.g., changing phone number, accessing phone states).
/com/android/internal/telephony/SimIndication.java,stkProactiveCommand,Yes, the method likely requires permissions related to SIM operations and radio access, as it deals with STK (SIM Tool Kit) proactive commands, which typically require specific permissions to interact with SIM services.
/com/android/internal/telephony/HardwareConfig.java,assignSim,Yes, it likely requires permissions related to SIM card management or device state modification.
/com/android/internal/telephony/RadioConfigResponseAidl.java,getHalDeviceCapabilitiesResponse,Yes, this method involves radio configurations, which typically require permissions related to modifying or accessing radio settings in Android (e.g., `MODIFY_PHONE_STATE`).
/com/android/internal/telephony/RadioModemProxy.java,enableModem,Yes, this method likely requires permissions as it involves enabling or disabling the modem, which typically requires specific system-level permissions due to its potential impact on device functionality and connectivity.
/com/android/internal/telephony/RadioModemProxy.java,getBasebandVersion,Yes, because it likely interacts with modem functionalities that may require appropriate permissions due to sensitive nature and hardware access.
/com/android/internal/telephony/RadioModemProxy.java,getImei,Yes, this method requires permissions because accessing the IMEI typically requires the READ_PHONE_STATE permission in Android to retrieve device identifiers.
/com/android/internal/telephony/RadioModemProxy.java,getModemActivityInfo,Yes, accessing modem activity information typically requires permissions related to telephony or the modem hardware.
/com/android/internal/telephony/RadioModemProxy.java,nvReadItem,Yes, this method likely requires permissions as it involves reading from a modem, which may necessitate specific permissions related to telephony or hardware access.
/com/android/internal/telephony/RadioModemProxy.java,nvResetConfig,Yes, this method likely requires permissions because it involves resetting configuration settings, which typically require system-level access in Android.
/com/android/internal/telephony/RadioModemProxy.java,nvWriteItem,Yes, this method likely requires permissions because it involves writing to the modem's non-volatile memory (nvWriteItem), which usually requires elevated permissions to modify hardware settings or configurations.
/com/android/internal/telephony/RadioModemProxy.java,setRadioCapability,Yes, this method likely requires permissions because it involves modifying radio capabilities, which is sensitive and typically requires specific system-level permissions in Android to protect user privacy and system integrity.
/com/android/internal/telephony/RadioModemProxy.java,setRadioPower,Yes, this method likely requires permissions to modify radio power settings, as it directly interacts with the device's modem functionalities that are sensitive and typically protected.
/com/android/internal/telephony/LocaleTracker.java,onReceive,Yes, this method requires permissions because it handles actions related to telephony (like SIM card state changes) that typically require specific permissions (e.g., accessing phone state).
/com/android/internal/telephony/LocaleTracker.java,getMccFromCellInfo,Yes, this method requires permissions because it accesses cell tower information, which typically requires location permissions in Android.
/com/android/internal/telephony/LocaleTracker.java,getMccMncFromCellInfo,Yes, this method requires permissions because it involves accessing cell tower information, which typically requires location-related permissions (e.g., ACCESS_COARSE_LOCATION or ACCESS_FINE_LOCATION) in Android.
/com/android/internal/telephony/LocaleTracker.java,requestNextCellInfo,Yes, this method likely requires permissions because it involves accessing cell information, which typically requires specific permissions like `ACCESS_FINE_LOCATION` or `ACCESS_COARSE_LOCATION` in Android.
/com/android/internal/telephony/RadioConfigProxy.java,setPreferredDataModem,Yes, this method likely requires permissions related to modifying modem settings, which are sensitive operations in Android.
/com/android/internal/telephony/RadioConfigProxy.java,setSimSlotsMapping,Yes, this method likely requires permissions related to SIM card management, as it involves mapping SIM slots which typically necessitates access to telephony features.
/com/android/internal/telephony/PackageChangeReceiver.java,onReceive,Yes, this method handles package-related broadcasts such as added, removed, or changed packages, which typically requires permissions like `PACKAGE_ADDED`, `PACKAGE_REMOVED`, etc.
/com/android/internal/telephony/NetworkIndication.java,cellInfoList,Yes, this method likely requires permissions related to accessing cellular network information, such as `ACCESS_FINE_LOCATION` or `ACCESS_COARSE_LOCATION`, due to its functionality involving cell info reporting.
/com/android/internal/telephony/NetworkIndication.java,imsNetworkStateChanged,Yes, this method likely requires permissions related to reading network state or IMS (IP Multimedia Subsystem) information in Android.
/com/android/internal/telephony/NetworkIndication.java,emergencyNetworkScanResult,Yes, the method likely requires permissions related to accessing network information or performing emergency network scans.
/com/android/internal/telephony/CarrierSignalAgent.java,handleMessage,Yes, because it involves accessing network state and managing network callbacks, which requires permissions like `ACCESS_NETWORK_STATE` and potentially `CHANGE_NETWORK_STATE`.
/com/android/internal/telephony/CarrierSignalAgent.java,broadcast,Yes, this method requires permissions. It involves broadcasting intents which often necessitates `SEND_BROADCAST` permission in Android.
/com/android/internal/telephony/MessagingResponse.java,deleteSmsOnSimResponse,Yes, because it likely interacts with SMS functions on the SIM card, which would require SMS-related permissions.
/com/android/internal/telephony/MessagingResponse.java,sendCdmaSmsExpectMoreResponse,Yes, this method likely requires permissions related to sending SMS messages, as it deals with SMS responses.
/com/android/internal/telephony/MessagingResponse.java,sendSmsExpectMoreResponse,Yes, this method likely requires permissions for sending SMS messages, which typically involves the `SEND_SMS` permission in Android.
/com/android/internal/telephony/MessagingResponse.java,writeSmsToSimResponse,Yes, this method likely requires permissions because it is related to writing SMS messages to the SIM card, which typically requires specific permissions to access SMS features on Android devices.
/com/android/internal/telephony/NetworkRegistrationManager.java,requestNetworkRegistrationInfo,Yes, this method likely requires permissions related to network operations in an Android environment, as it seems to involve requesting network registration info, which typically necessitates specific permissions to access network state or system services.
/com/android/internal/telephony/NetworkRegistrationManager.java,bindService,Yes, this method requires permissions because it involves binding a service, which typically requires the appropriate permissions in Android, such as `BIND_SERVICE`.
/com/android/internal/telephony/NetworkRegistrationManager.java,rebindService,Yes, it involves service binding which requires proper permissions in Android.
/com/android/internal/telephony/RadioInterfaceCapabilityController.java,getCapabilities,Yes, because it interacts with radio capabilities, which typically requires permission to access radio state or related settings in Android.
/com/android/internal/telephony/RadioDataProxy.java,deactivateDataCall,Yes, the method likely requires permissions related to manipulating data calls in radio hardware.
/com/android/internal/telephony/RadioDataProxy.java,setDataAllowed,Yes, this method likely requires permissions because it involves controlling data calls, which typically entails modifying network connectivity and requires appropriate permission to access or change data settings in Android.
/com/android/internal/telephony/RadioDataProxy.java,setDataProfile,Yes, the method `setDataProfile` likely requires permissions because it interacts with radio data profiles, which usually involves sensitive system-level operations that require specific permissions to access or modify.
/com/android/internal/telephony/RadioDataProxy.java,setInitialAttachApn,Yes, this method likely requires permissions related to modifying APN settings, which typically require system-level permissions in Android.
/com/android/internal/telephony/RadioDataProxy.java,setupDataCall,Yes, this method likely requires permissions related to network access, specifically for setting up data calls which typically involves modifying network states or accessing network resources.
/com/android/internal/telephony/RadioDataProxy.java,startKeepalive,Yes, this method likely requires permissions because it interacts with network resources, which typically requires proper permissions to ensure security and privacy in Android.
/com/android/internal/telephony/MessagingIndication.java,cdmaNewSms,Yes, the method likely requires permissions related to SMS handling, specifically for receiving SMS messages.
/com/android/internal/telephony/MessagingIndication.java,newBroadcastSms,Yes, this method likely requires permissions because it handles SMS broadcasts, which typically require specific permissions to access SMS functionalities in Android.
/com/android/internal/telephony/MessagingIndication.java,newSms,Yes, it requires permissions. It involves handling incoming SMS messages, which typically requires the `RECEIVE_SMS` permission in Android.
/com/android/internal/telephony/MessagingIndication.java,newSmsStatusReport,Yes, the method handles SMS Status Reports which generally requires permissions such as `SEND_SMS` and `RECEIVE_SMS` to function properly within the Android framework.
/com/android/internal/telephony/TelephonyDevController.java,getAllSimsForModem,Yes, because accessing SIM-related data typically requires phone state permissions in Android.
/com/android/internal/telephony/PhoneConfigurationManager.java,enablePhone,Yes, this method likely requires permissions to enable or disable phone functionality, as it directly interacts with phone hardware.
/com/android/internal/telephony/PhoneConfigurationManager.java,getPhoneStatusFromModem,Yes, because it interacts with phone hardware and modem status, which typically requires specific permissions (e.g., `READ_PHONE_STATE`).
/com/android/internal/telephony/PhoneConfigurationManager.java,switchMultiSimConfig,Yes, this method likely requires permissions related to modifying SIM configurations in a device, as it involves switching between multi-SIM and single-SIM modes.
/com/android/internal/telephony/PhoneConfigurationManager.java,setMultiSimProperties,Yes, requires permissions to modify system properties and reboot the phone.
/com/android/internal/telephony/PhoneConfigurationManager.java,broadcastMultiSimConfigChange,Yes, because it sends a broadcast, which may require permissions depending on the intent being broadcasted.
/com/android/internal/telephony/CarrierAppUtils.java,disableCarrierAppsUntilPrivileged,Yes, this method requires permissions because it interacts with system services and settings, specifically involving package management and telephony, which typically require elevated permissions in Android.
/com/android/internal/telephony/CarrierAppUtils.java,getDefaultCarrierApps,Yes, the method likely requires permissions since it deals with carrier privileges, which typically necessitate specific telephony permissions in the Android system.
/com/android/internal/telephony/PhoneNotifier.java,notifyPreciseCallState,Yes, because it likely involves handling telephony services which typically requires specific permissions.
/com/android/internal/telephony/CarrierActionAgent.java,onReceive,Yes, this method likely requires permissions because it handles SIM state changes and accesses telephony information, which typically requires permissions like `READ_PHONE_STATE` in Android.
/com/android/internal/telephony/CarrierActionAgent.java,carrierActionSetRadioEnabled,Yes, this method likely requires permissions as it involves enabling/disabling the radio, which may affect network connectivity and generally requires special permissions in Android.
/com/android/internal/telephony/CarrierActionAgent.java,carrierActionSetMeteredApnsEnabled,Yes, this method likely requires permissions because it modifies network settings (metered APNs), which could impact data usage.
/com/android/internal/telephony/CarrierActionAgent.java,carrierActionReportDefaultNetworkStatus,Yes, because it involves network status reporting which may require permissions to access network information.
/com/android/internal/telephony/AppSmsManager.java,createAppSpecificSmsToken,Yes, because the method relates to handling incoming SMS, which typically requires permissions to access SMS data.
/com/android/internal/telephony/AppSmsManager.java,createAppSpecificSmsTokenWithPackageInfo,Yes, the method creates an app-specific SMS request, which relates to SMS functionality that typically requires permissions to receive SMS messages.
/com/android/internal/telephony/AppSmsManager.java,handleSmsReceivedIntent,Yes, this method likely requires permissions because it handles incoming SMS messages, which typically requires the SMS permission in Android (`SEND_SMS`, `RECEIVE_SMS`).
/com/android/internal/telephony/AppSmsManager.java,extractMessage,Yes, this method likely requires permissions because it deals with SMS messages, which are protected by permissions in Android (specifically, `READ_SMS` permission).
/com/android/internal/telephony/SmsBroadcastUndelivered.java,run,Yes, the method likely requires permissions related to accessing system time and SMS-related functionalities.
/com/android/internal/telephony/SmsBroadcastUndelivered.java,initialize,Yes, this method likely requires permissions to receive SMS messages, which is a sensitive operation in Android.
/com/android/internal/telephony/SmsBroadcastUndelivered.java,scanRawTable,Yes, because it deals with SMS messages, which typically require permissions like SEND_SMS or READ_SMS in Android.
/com/android/internal/telephony/SmsBroadcastUndelivered.java,broadcastSms,Yes, the method likely requires permissions to send SMS messages or interact with SMS handling components in the Android system, which typically requires permissions in the AndroidManifest.xml file (like SEND_SMS or RECEIVE_SMS).
/com/android/internal/telephony/CarrierResolver.java,onReceive,Yes, because accessing phone-related identifiers likely requires permissions related to telephony (e.g., READ_PHONE_STATE).
/com/android/internal/telephony/CarrierResolver.java,loadCarrierMatchingRulesOnMccMnc,Yes, this method likely requires permissions to access telephony-related data, which typically involves permissions like `READ_PHONE_STATE` or `ACCESS_NETWORK_STATE`.
/com/android/internal/telephony/CarrierResolver.java,getCarrierNameFromId,Yes, this method likely requires permissions. It interacts with the content provider to query carrier information, which typically requires permissions such as `READ_PHONE_STATE`.
/com/android/internal/telephony/CarrierResolver.java,getCarrierMatchingRulesFromMccMnc,Yes, because it queries the content resolver, which typically requires permissions to access certain data, such as network or carrier information.
/com/android/internal/telephony/CarrierResolver.java,getPreferApn,Yes, because the method accesses the content resolver to query the telephony database, which requires specific permissions related to reading APN (Access Point Name) settings.
/com/android/internal/telephony/CarrierResolver.java,isPreferApnUserEdited,Yes, because it accesses the telephony carrier data which typically requires permissions related to accessing phone state or carrier settings.
/com/android/internal/telephony/CarrierResolver.java,updateCarrierIdAndName,Yes, this method requires permissions as it involves modifying carrier ID and name, which typically requires special telephony permissions in Android (e.g., `WRITE_SETTINGS`, `WRITE_APN_SETTINGS`).
/com/android/internal/telephony/CarrierResolver.java,makeCarrierMatchingRule,Yes, because it appears to access privileged carrier-related data through the `Cursor` provided as a parameter, which typically requires specific permissions in Android.
/com/android/internal/telephony/CarrierResolver.java,getSubscriptionMatchingRule,Yes, this method likely requires permissions because it accesses telephony-related information such as ICCID, IMSI, and subscriber IDs, which typically need appropriate permissions like `READ_PHONE_STATE`.
/com/android/internal/telephony/CarrierResolver.java,getCarrierListVersion,Yes, because it involves querying a content resolver which typically requires permissions to access specific data.
/com/android/internal/telephony/CarrierResolver.java,getCarrierIdFromMccMnc,Yes, requires permission to access telephony information like carrier ID.
/com/android/internal/telephony/CarrierResolver.java,getCursorForMccMnc,Yes, because it uses `getContentResolver` to access data that may require permissions.
/com/android/internal/telephony/DeviceStateMonitor.java,setAlwaysReportSignalStrength,Yes, this method likely requires permissions related to telephony services as it affects signal strength reporting.
/com/android/internal/telephony/ModemResponse.java,getDeviceIdentityResponse,Yes, this method likely requires permissions because it deals with sensitive device identifiers such as IMEI, ESN, and MEID, which typically require appropriate permissions to access in Android.
/com/android/internal/telephony/ModemResponse.java,getImeiResponse,Yes, this method likely requires permissions because it deals with IMEI information, which is sensitive data and typically protected by permissions in Android (e.g., READ_PHONE_STATE).
/com/android/internal/telephony/ModemResponse.java,setRadioCapabilityResponse,Yes, this method likely requires permissions related to modifying radio capabilities, which could involve sensitive operations in telephony services.
/com/android/internal/telephony/IntentBroadcaster.java,onReceive,Yes, the method likely requires permissions related to broadcasting intents and possibly user unlock events.
/com/android/internal/telephony/CellBroadcastConfigTracker.java,setCellBroadcastIdRanges,Yes, this method likely requires permissions as it deals with receiving cell broadcast messages, which typically involves sensitive data and network access.
/com/android/internal/telephony/MissedIncomingCallSmsFilter.java,createMissedIncomingCallEvent,Yes, the method deals with telecom services which typically require permissions like `CALL_PHONE` or `READ_PHONE_STATE`.
/com/android/internal/telephony/MissedIncomingCallSmsFilter.java,makePstnPhoneAccountHandle,Yes, this method likely requires permissions related to telephony services, specifically to access the user's subscription information or phone details.
/com/android/internal/telephony/VoiceIndication.java,callRing,Yes, because it interacts with telephony services which generally require permissions such as `READ_PHONE_STATE`.
/com/android/internal/telephony/VoiceIndication.java,cdmaInfoRec,Yes, this method likely requires permissions because it deals with CDMA radio information, which typically involves accessing sensitive telephony data.
/com/android/internal/telephony/VoiceIndication.java,currentEmergencyNumberList,Yes, this method requires permissions because it involves accessing and processing emergency number lists, which may require specific privileges related to sensitive user data and telephony services.
/com/android/internal/telephony/VoiceIndication.java,onUssd,Yes, because processing USSD messages typically requires access to telephony services.
/com/android/internal/telephony/VoiceIndication.java,stkCallControlAlphaNotify,Yes, this method likely requires permissions because it involves call control and could access sensitive data related to telephony services.
/com/android/internal/telephony/VoiceIndication.java,stkCallSetup,Yes, this method likely requires permissions because it involves setting up a voice call, which typically requires specific telephony permissions in the Android SDK.
/com/android/internal/telephony/RadioImsProxy.java,startImsTraffic,Yes, this method likely requires permissions related to phone and network access to manage IMS (IP Multimedia Subsystem) traffic, such as voice and SMS.
/com/android/internal/telephony/VisualVoicemailSmsFilter.java,fromSubId,Yes, because it involves accessing subscription details and telephony services.
/com/android/internal/telephony/VisualVoicemailSmsFilter.java,filter,Yes, the method requires permissions because it interacts with SMS messages, which typically requires permissions like `SEND_SMS` or `READ_SMS` in Android.
/com/android/internal/telephony/VisualVoicemailSmsFilter.java,sendVvmSmsBroadcast,Yes, this method requires permissions related to sending broadcasts in Android. Sending a broadcast might require `SEND_SMS` or other relevant permissions depending on the SMS functionality.
/com/android/internal/telephony/VisualVoicemailSmsFilter.java,getFullMessage,Yes, this method requires permissions because it involves handling SMS messages, which typically requires SMS-related permissions (e.g., `READ_SMS`, `RECEIVE_SMS`) in Android.
/com/android/internal/telephony/VisualVoicemailSmsFilter.java,isSmsFromNumbers,Yes, this method likely requires permissions to access SMS messages on Android, as it deals with the `SmsMessage` class, which involves reading SMS data that requires appropriate permissions (e.g., `READ_SMS`).
/com/android/internal/telephony/ImsSmsDispatcher.java,onSendSmsResult,Yes, the method involves sending SMS messages, which typically requires `SEND_SMS` permission in Android.
/com/android/internal/telephony/ImsSmsDispatcher.java,onSmsStatusReportReceived,Yes, this method likely requires permission to access SMS-related functionalities in Android, as it deals with receiving SMS status reports.
/com/android/internal/telephony/ImsSmsDispatcher.java,onSmsReceived,Yes, this method likely requires permissions because it appears to handle incoming SMS messages, which typically necessitate the `RECEIVE_SMS` permission in Android.
/com/android/internal/telephony/ImsSmsDispatcher.java,setListeners,Yes, it appears to interact with iMS (IP Multimedia Subsystem) functionalities, which typically require permissions related to telecommunications or messaging services.
/com/android/internal/telephony/ImsSmsDispatcher.java,isEmergencySmsSupport,Yes, this method likely requires permissions because it interacts with telephony services and configurations, which typically necessitate specific permissions to access or modify.
/com/android/internal/telephony/ImsSmsDispatcher.java,getSubmitPdu,Yes, the method handles SMS operations, which typically require specific permissions in Android, such as `SEND_SMS` or `RECEIVE_SMS`.
/com/android/internal/telephony/ImsSmsDispatcher.java,getSubmitPdu,Yes, this method likely requires permissions because it deals with sending SMS messages, which typically requires `SEND_SMS` permission in Android.
/com/android/internal/telephony/ImsSmsDispatcher.java,getSubmitPdu,Yes, this method likely requires permissions because it involves sending SMS messages, which typically requires the "SEND_SMS" permission in Android.
/com/android/internal/telephony/ImsSmsDispatcher.java,sendSms,Yes, the `sendSms` method likely requires permissions, as sending SMS messages generally requires specific permissions in Android, such as `SEND_SMS`.
/com/android/internal/telephony/ImsSmsDispatcher.java,logi,Yes, it may require permissions because it accesses device information (phone ID) which typically requires permissions in Android (e.g., `READ_PHONE_STATE`).
/com/android/internal/telephony/SimResponse.java,getAllowedCarriersResponse,Yes, requires permissions related to SIM and carrier information access.
/com/android/internal/telephony/SimResponse.java,getCdmaSubscriptionResponse,Yes, this method likely requires permissions related to accessing CDMA subscription information, such as telephony permissions.
/com/android/internal/telephony/SimResponse.java,getImsiForAppResponse,Yes, the method likely requires permissions to access sensitive information like IMSI (International Mobile Subscriber Identity).
/com/android/internal/telephony/SimResponse.java,requestIccSimAuthenticationResponse,Yes, this method likely requires permissions related to SIM and radio services.
/com/android/internal/telephony/FdnUtils.java,isNumberBlockedByFDN,Yes, the method likely requires permissions related to accessing phone state or subscriber information to check FDN (Fixed Dialing Number) settings.
/com/android/internal/telephony/FdnUtils.java,getFdnList,Yes, this method likely requires permissions related to accessing SIM card information, such as reading contacts or phone state, as it interacts with `UiccCardApplication` and `IccRecords`.
/com/android/internal/telephony/SimActivationTracker.java,onReceive,Yes, this method likely requires permissions related to telephony or SIM state changes.
/com/android/internal/telephony/RadioResponse.java,sendSMSExpectMoreResponse,Yes, the method likely requires permissions related to sending SMS messages.
/com/android/internal/telephony/RadioResponse.java,writeSmsToSimResponse,Yes, this method likely requires SMS permissions because it involves writing SMS data to the SIM card, which typically requires specific permissions related to SMS handling in Android.
/com/android/internal/telephony/RadioResponse.java,sendCdmaSmsExpectMoreResponse,Yes, sending SMS typically requires SMS permissions in Android for security reasons.
/com/android/internal/telephony/RadioResponse.java,getDeviceIdentityResponse,Yes, this method appears to deal with device identity information, which typically requires permissions related to accessing device identifiers (like IMEI, MEID, etc.) in Android.
/com/android/internal/telephony/CarrierInfoManager.java,getCarrierInfoForImsiEncryption,Yes, this method likely requires permissions to access carrier-specific information, as it interacts with telephony and carrier configuration which often involves sensitive data.
/com/android/internal/telephony/CarrierInfoManager.java,updateOrInsertCarrierKey,Yes, this method requires permissions. It accesses and modifies the database, which typically requires `WRITE_EXTERNAL_STORAGE` or specific carrier-related permissions in Android.
/com/android/internal/telephony/CarrierInfoManager.java,setCarrierInfoForImsiEncryption,Yes, this method likely requires permissions because it involves managing sensitive information related to mobile identity (IMSI and IMPI) and may interact with system-level security features such as the device keystore.
/com/android/internal/telephony/CarrierInfoManager.java,resetCarrierKeysForImsiEncryption,Yes, this method requires permissions because it interacts with carrier keys and broadcasts intents related to telephony services, which typically require specific permissions in Android, such as managing telephony and sending broadcasts.
/com/android/internal/telephony/CarrierInfoManager.java,deleteCarrierInfoForImsiEncryption,Yes, this method likely requires permissions, specifically for accessing and modifying the device keystore and possibly interacting with telephony services.
/com/android/internal/telephony/CarrierInfoManager.java,deleteAllCarrierKeysForImsiEncryption,Yes, this method requires permissions because it interacts with the device's keystore and modifies carrier keys, which typically requires specific permissions related to telephony data access and security.
/com/android/internal/telephony/GlobalSettingsHelper.java,getBoolean,Yes, the method likely requires permissions to access settings, as it involves retrieving a value from `Settings.Global`, which typically requires appropriate permissions in Android.
/com/android/internal/telephony/GlobalSettingsHelper.java,getBoolean,Yes, the method likely requires permissions to access system settings.
/com/android/internal/telephony/GlobalSettingsHelper.java,setInt,Yes, this method likely requires permissions because it interacts with the settings (specifically `Settings.Global.putInt`) that typically require the `WRITE_SETTINGS` permission in Android.
/com/android/internal/telephony/GlobalSettingsHelper.java,getSettingName,Yes, because it interacts with TelephonyManager and SubscriptionManager, which typically require permissions like `READ_PHONE_STATE`.
/com/android/internal/telephony/SmsStorageMonitor.java,createWakelock,Yes, this method requires permissions. It is creating a WakeLock, which requires the `WAKE_LOCK` permission in Android.
/com/android/internal/telephony/SmsStorageMonitor.java,handleIccFull,Yes, this method requires permissions because it sends a broadcast that includes the `RECEIVE_SMS` permission.
/com/android/internal/telephony/SmsStorageMonitor.java,onReceive,Yes, this method likely requires permissions related to storage, as it handles actions indicative of storage availability (e.g., ACTION_DEVICE_STORAGE_FULL, ACTION_DEVICE_STORAGE_NOT_FULL).
/com/android/internal/telephony/RadioIndication.java,newSms,Yes, this method likely requires permissions because it is related to handling SMS messages, which typically requires specific permissions (such as `SEND_SMS` or `RECEIVE_SMS`) in the Android SDK.
/com/android/internal/telephony/RadioIndication.java,newSmsStatusReport,Yes, this method likely requires permissions related to SMS operations, as it processes SMS status reports.
/com/android/internal/telephony/RadioIndication.java,newSmsOnSim,Yes, this method likely requires permissions to access SMS functionalities on the SIM card, as it deals with new SMS indications.
/com/android/internal/telephony/RadioIndication.java,onUssd,Yes, this method likely requires permissions related to handling USSD (Unstructured Supplementary Service Data) communications, which are typically restricted for security and privacy reasons in Android.
/com/android/internal/telephony/RadioIndication.java,currentSignalStrength,Yes, the method likely requires permissions related to accessing signal strength information, which typically requires specific permissions in Android (like `ACCESS_FINE_LOCATION` or `ACCESS_COARSE_LOCATION`).
/com/android/internal/telephony/RadioIndication.java,currentSignalStrength_1_4,Yes, the method requires permissions related to accessing signal strength in Android devices.
/com/android/internal/telephony/RadioIndication.java,stkProactiveCommand,Yes, this method likely requires permissions because it interacts with the radio interface layer (RIL) and handles SIM Toolkit commands, which typically require specific permissions related to telephony functionality in Android.
/com/android/internal/telephony/RadioIndication.java,callRing,Yes, this method likely requires permissions as it interacts with radio signaling and call handling, which are sensitive operations that require specific permissions in Android, such as `MODIFY_PHONE_STATE` or `READ_PHONE_STATE`.
/com/android/internal/telephony/RadioIndication.java,cdmaNewSms,Yes, this method likely requires permissions because it deals with SMS messages, which generally require permissions in Android (e.g., `SEND_SMS` or `RECEIVE_SMS`).
/com/android/internal/telephony/RadioIndication.java,newBroadcastSms,Yes, the method appears to handle SMS broadcasts, which typically requires SMS permissions in Android.
/com/android/internal/telephony/RadioIndication.java,enterEmergencyCallbackMode,Yes, this method likely requires permissions as it involves entering emergency callback mode, which can affect phone functionalities and may handle sensitive operations relating to telephony services.
/com/android/internal/telephony/RadioIndication.java,cdmaCallWaiting,Yes, it likely requires permissions since it deals with call-related information, which usually involves permissions for accessing telephony services.
/com/android/internal/telephony/RadioIndication.java,rilConnected,Yes, this method interacts with the radio interface layer and handles indications related to RIL (Radio Interface Layer), which typically requires permissions related to modifying or accessing phone state.
/com/android/internal/telephony/RadioIndication.java,cellInfoList_1_4,Yes, this method likely requires permissions to access cell information.
/com/android/internal/telephony/RadioIndication.java,cellInfoList_1_6,Yes, this method likely requires permissions related to accessing cellular information, such as `READ_PHONE_STATE`, as it deals with obtaining unsolicited messages for cell information.
/com/android/internal/telephony/RadioIndication.java,lceData,Yes, this method likely requires permissions because it interacts with radio services, which typically require specific permissions in Android (e.g., accessing telephony or radio state).
/com/android/internal/telephony/RadioIndication.java,modemReset,Yes, the method likely requires permissions related to modifying system settings or hardware, such as "MODIFY_PHONE_STATE" or similar permissions, due to its operation involving modem resets.
/com/android/internal/telephony/RadioIndication.java,carrierInfoForImsiEncryption,Yes, it likely requires permissions related to accessing carrier information or modifying telephony data.
/com/android/internal/telephony/RadioIndication.java,simPhonebookRecordsReceived,Yes, this method likely requires permissions to access the SIM phonebook records, which are sensitive user data.
/com/android/internal/telephony/metrics/AirplaneModeStats.java,isAirplaneModeOn,Yes, because accessing the airplane mode status may require `ACCESS_NETWORK_STATE` permission.
/com/android/internal/telephony/metrics/ServiceStateStats.java,getVoiceRat,Yes, this method requires permissions because it accesses telephony features, which typically require permissions like `READ_PHONE_STATE` or `ACCESS_FINE_LOCATION` in Android.
/com/android/internal/telephony/metrics/ServiceStateStats.java,getRat,Yes, this method likely requires permissions related to accessing telephony services, specifically to retrieve network registration information.
/com/android/internal/telephony/metrics/SimSlotState.java,getCurrentState,Yes, because accessing SIM state may require READ_PHONE_STATE permission.
/com/android/internal/telephony/metrics/MetricsCollector.java,pullSimSlotState,Yes, this method likely requires permissions related to accessing SIM card state information in an Android context.
/com/android/internal/telephony/metrics/MetricsCollector.java,pullSupportedRadioAccessFamily,Yes, because it involves telephony functions that may require permissions related to accessing phone state or network information.
/com/android/internal/telephony/metrics/MetricsCollector.java,pullIncomingSms,Yes, the method likely requires permissions to access SMS data. Handling incoming SMS typically requires permissions like `READ_SMS` or `RECEIVE_SMS`.
/com/android/internal/telephony/metrics/MetricsCollector.java,pullOutgoingSms,Yes, this method likely requires permissions related to reading outgoing SMS messages, as it appears to interact with SMS data.
/com/android/internal/telephony/metrics/MetricsCollector.java,pullDeviceTelephonyProperties,Yes, this method requires permissions because it involves accessing telephony properties, which typically requires permissions related to phone state and network access in Android.
/com/android/internal/telephony/metrics/MetricsCollector.java,pullEmergencyNumbersInfo,Yes, this method likely requires permission to access emergency numbers or phone state as it involves retrieving emergency number information and requires interaction with phone-related data.
/com/android/internal/telephony/metrics/TelephonyEventBuilder.java,setRadioState,Yes, this method likely requires permissions related to modifying radio state, which may impact network operations.
/com/android/internal/telephony/metrics/ImsStats.java,getDefaultImsRegistrationStats,Yes, it likely requires permissions because it involves accessing phone-related information, such as carrier ID and phone ID.
/com/android/internal/telephony/metrics/VoiceCallSessionStats.java,acceptCall,Yes, the method likely requires permissions to handle telephone calls, specifically to accept incoming calls.
/com/android/internal/telephony/metrics/VoiceCallSessionStats.java,getSignalStrength,Yes, because accessing signal strength typically requires permissions related to network state or telephony services in Android.
/com/android/internal/telephony/metrics/VoiceCallSessionStats.java,getSignalStrengthWifi,Yes, this method requires permission to access WiFi state, as it retrieves the signal strength of WiFi, which involves accessing WiFi information.
/com/android/internal/telephony/metrics/VoiceCallSessionStats.java,getSignalStrengthCellular,Yes, this method likely requires permissions to access cellular signal strength information.
/com/android/internal/telephony/metrics/SmsStats.java,onIncomingSmsVoicemail,Yes, because handling SMS requires appropriate permissions such as `SEND_SMS` or `RECEIVE_SMS`.
/com/android/internal/telephony/metrics/SmsStats.java,onIncomingSmsTypeZero,Yes, this method likely requires permissions because it deals with incoming SMS messages. Accessing SMS messages generally necessitates specific permissions in Android.
/com/android/internal/telephony/metrics/SmsStats.java,onIncomingSmsPP,Yes, this method likely requires permissions because it handles incoming SMS messages, which typically require permission (`RECEIVE_SMS`) in Android.
/com/android/internal/telephony/metrics/SmsStats.java,onIncomingSmsSuccess,Yes, it likely requires permissions related to SMS handling, such as receiving SMS.
/com/android/internal/telephony/metrics/SmsStats.java,onIncomingSmsWapPush,Yes, this method requires permissions because it handles incoming SMS messages, which typically requires the "RECEIVE_WAP_PUSH" permission in Android.
/com/android/internal/telephony/metrics/SmsStats.java,onOutgoingSms,Yes, it likely requires permissions related to sending SMS messages, such as `SEND_SMS` or `RECEIVE_SMS`, depending on the implementation details of the system that triggers this method.
/com/android/internal/telephony/metrics/SmsStats.java,getServiceState,Yes, the `getServiceState` method likely requires permissions related to accessing phone state or service information.
/com/android/internal/telephony/metrics/SmsStats.java,getRat,Yes, this method likely requires permissions related to network state access, as it interacts with telephony and network service states.
/com/android/internal/telephony/metrics/PerSimStatus.java,getCurrentState,Yes, it requires permissions. This method involves accessing SIM and phone information, which typically requires permissions like `READ_PHONE_STATE` in Android.
/com/android/internal/telephony/metrics/PerSimStatus.java,getNumberIds,Yes, this method likely requires permission to access phone state or similar information, as it retrieves phone numbers from the `SubscriptionManagerService`.
/com/android/internal/telephony/metrics/PerSimStatus.java,getUserModifiedApnTypes,Yes, because the method interacts with the Content Resolver to query APN settings, which typically requires permissions like `READ_APN_SETTINGS`.
/com/android/internal/telephony/metrics/CallQualityMetrics.java,getLteSnr,Yes, because accessing signal strength may require permissions related to phone state or accessing cellular information.
/com/android/internal/telephony/metrics/NetworkRequestsStats.java,getCarrierId,Yes, this method likely requires permissions because it accesses telephony information, which typically requires `READ_PHONE_STATE` or similar permissions in Android.
/com/android/internal/telephony/metrics/PersistAtomsStorage.java,addIncomingSms,Yes, this method requires permissions because it involves adding an incoming SMS to storage, which typically requires the SMS permission in Android (READ_SMS or WRITE_SMS).
/com/android/internal/telephony/metrics/PersistAtomsStorage.java,addOutgoingSms,Yes, this method likely requires permissions because it adds an outgoing SMS to storage, which involves accessing SMS functionalities and potentially user data.
/com/android/internal/telephony/metrics/PersistAtomsStorage.java,addOutgoingShortCodeSms,Yes, it likely requires permissions for sending SMS or writing to storage, as it deals with outgoing SMS short codes.
/com/android/internal/telephony/metrics/PersistAtomsStorage.java,getVoiceCallSessions,Yes, this method likely requires permissions related to accessing voice call data or call logs, as it involves pulling voice call sessions.
/com/android/internal/telephony/metrics/PersistAtomsStorage.java,getIncomingSms,Yes, this method requires permissions because it deals with incoming SMS functionality, which typically requires SMS-related permissions in Android (e.g., `READ_SMS`).
/com/android/internal/telephony/metrics/PersistAtomsStorage.java,getOutgoingSms,Yes, this method likely requires permissions. It involves handling outgoing SMS, which typically necessitates SMS-related permissions in an Android environment (e.g., `SEND_SMS`, `READ_SMS`).
/com/android/internal/telephony/metrics/PersistAtomsStorage.java,getDataCallSessions,Yes, it likely requires permissions as it deals with data call sessions, which may involve sensitive data or network operations.
/com/android/internal/telephony/metrics/PersistAtomsStorage.java,getImsRegistrationTerminations,Yes, this method likely requires permissions related to accessing IMS (IP Multimedia Subsystem) features and registration information, which are sensitive in nature.
/com/android/internal/telephony/metrics/PersistAtomsStorage.java,saveAtomsToFileNow,Yes, because it saves data to private storage which may require WRITE_EXTERNAL_STORAGE permission depending on the storage location and application context.
/com/android/internal/telephony/metrics/RcsStats.java,getCarrierId,Yes, this method requires permissions to access telephony services and information about the carrier ID.
/com/android/internal/telephony/d2d/DtmfTransport.java,handleDtmfSend,Yes, this method likely requires permissions to send DTMF tones, which may involve interacting with telephony services.
/com/android/internal/telephony/nitz/NitzSignalInputFilterPredicateFactory.java,createBogusElapsedRealtimeCheck,Yes, the method requires permissions because it involves acquiring a `WakeLock`, which necessitates the `WAKE_LOCK` permission in the Android Manifest.
/com/android/internal/telephony/cdma/EriManager.java,getEriDisplayInformation,Yes, the method `getEriDisplayInformation` likely requires permissions related to accessing the ERI (Enhanced Roaming Indicator) data, which is typically sensitive information related to mobile network operations.
/com/android/internal/telephony/cdma/CdmaInboundSmsHandler.java,dispatchMessageRadioSpecific,Yes, this method likely requires permissions related to SMS and telephony, as it processes SMS messages and may interact with cellular network features.
/com/android/internal/telephony/cdma/CdmaInboundSmsHandler.java,processCdmaWapPdu,Yes, this method likely requires permissions because it processes inbound SMS messages, which typically requires the `RECEIVE_SMS` and/or `READ_SMS` permissions in Android.
/com/android/internal/telephony/cdma/CdmaInboundSmsHandler.java,addVoicemailSmsToMetrics,Yes, this method likely requires permissions related to SMS or telephony, as it deals with processing voicemail indication SMS and metrics associated with it.
/com/android/internal/telephony/cdma/CdmaInboundSmsHandler.java,handleTestAction,Yes, this method likely requires permissions related to sending and receiving SMS messages, as it interacts with SMS data structures such as `SmsEnvelope` and `SmsMessage`.
/com/android/internal/telephony/util/TelephonyUtils.java,checkDumpPermission,Yes, because it verifies the caller holds the `android.Manifest.permission.DUMP` permission.
/com/android/internal/telephony/util/TelephonyUtils.java,getSubscriptionUserHandle,Yes, this method requires permissions because it throws a `SecurityException` if the caller doesn't have the required permissions.
/com/android/internal/telephony/util/NotificationChannelController.java,getChannel,Yes, because accessing notification channels may require permissions related to notifications.
/com/android/internal/telephony/util/NotificationChannelController.java,onReceive,Yes, this method likely requires permissions due to its handling of actions related to locale and SIM state changes, which typically involve accessing user data or system settings.
/com/android/internal/telephony/util/SMSDispatcherUtil.java,getSubmitPdu,Yes, this method likely requires permissions. It involves sending SMS messages, which typically necessitates `SEND_SMS` permission in Android.
/com/android/internal/telephony/util/SMSDispatcherUtil.java,getSubmitPdu,Yes, this method likely requires permissions to send SMS messages, as it involves constructing a submit PDU for sending text messages.
/com/android/internal/telephony/util/SMSDispatcherUtil.java,getSubmitPdu,Yes, this method requires permissions because it involves sending SMS messages, which typically requires SMS permissions in Android.
/com/android/internal/telephony/util/SMSDispatcherUtil.java,getSubmitPduGsm,Yes, it likely requires permissions because sending SMS messages typically necessitates SMS permissions in Android (like `SEND_SMS`).
/com/android/internal/telephony/util/SMSDispatcherUtil.java,getSubmitPduGsm,Yes, because sending SMS requires permission to access SMS features in Android (`SEND_SMS`).
/com/android/internal/telephony/util/SMSDispatcherUtil.java,getSubmitPduGsm,Yes, this method likely requires SMS-related permissions to send messages.
/com/android/internal/telephony/util/SMSDispatcherUtil.java,getSubmitPduCdma,Yes, this method requires permissions related to sending SMS messages.
/com/android/internal/telephony/util/SMSDispatcherUtil.java,getSubmitPduCdma,Yes, this method likely requires permissions to send SMS messages, typically SMS sending permissions in Android (`SEND_SMS`), due to its involvement in generating a PDU for sending an SMS.
/com/android/internal/telephony/util/SMSDispatcherUtil.java,getSubmitPdu,Yes, this method likely requires SMS permissions as it deals with sending SMS messages.
/com/android/internal/telephony/util/SMSDispatcherUtil.java,getSubmitPdu,Yes, because sending SMS messages typically requires appropriate permissions such as `SEND_SMS`.
/com/android/internal/telephony/util/SMSDispatcherUtil.java,getSubmitPduCdma,Yes, it requires permissions because it involves sending SMS messages, which typically requires the `SEND_SMS` permission in Android.
/com/android/internal/telephony/util/SMSDispatcherUtil.java,getSubmitPduGsm,Yes, this method requires permissions because it involves sending SMS messages, which typically requires the `SEND_SMS` permission in Android.
/com/android/internal/telephony/util/SMSDispatcherUtil.java,getSubmitPduGsm,Yes, because sending SMS messages requires SEND_SMS permission.
/com/android/internal/telephony/cdnr/CarrierDisplayNameResolver.java,updateEfForEri,Yes, the method likely requires permissions related to network or system configurations, as it involves updating configuration data based on network type (CDMA or CdmaLte) and other constraints.
/com/android/internal/telephony/domainselection/DomainSelectionController.java,registerForStateChange,Yes, requires permissions. The method registers for service state changes and barring information, which typically involves accessing telephony services that require specific permissions.
/com/android/internal/telephony/domainselection/EmergencyCallDomainSelectionConnection.java,onWwanSelected,Yes, this method likely requires permissions related to emergency call handling and networking, as it interacts with emergency state tracking.
/com/android/internal/telephony/domainselection/EmergencyCallDomainSelectionConnection.java,createEmergencyConnection,Yes, this method likely requires permissions to access emergency call features in Android.
/com/android/internal/telephony/emergency/EmergencyNumberTracker.java,onReceive,Yes, the method onReceive likely requires permissions related to telephony services, such as accessing phone state or network information.
/com/android/internal/telephony/emergency/EmergencyNumberTracker.java,updateEmergencyCountryIsoAllPhones,Yes, the method `updateEmergencyCountryIsoAllPhones` likely requires permissions due to its involvement with updating emergency contact information, which typically falls under sensitive data handling in Android, thus necessitating appropriate permissions for privacy and security reasons.
/com/android/internal/telephony/emergency/EmergencyNumberTracker.java,updateOtaEmergencyNumberDatabase,Yes, this method likely requires permissions to update emergency number databases, which could involve sensitive information and system-level access.
/com/android/internal/telephony/emergency/EmergencyNumberTracker.java,executeEmergencyNumberTestModeCommand,Yes, this method likely requires permissions as it deals with emergency numbers, which are sensitive data and typically require specific permissions to access or modify.
/com/android/internal/telephony/emergency/RadioOnHelper.java,powerOnRadio,Yes, because modifying airplane mode requires permission to access system settings related to airplane mode.
/com/android/internal/telephony/emergency/RadioOnStateListener.java,startSequenceInternal,Yes, the method likely requires permissions related to telephony services, as it interacts with phones and possibly radio states.
/com/android/internal/telephony/emergency/EmergencyStateTracker.java,startEmergencyCall,Yes, this method requires permissions because it involves initiating an emergency call, which typically requires special permissions to ensure that sensitive actions related to telephony and emergency services are safeguarded.
/com/android/internal/telephony/emergency/EmergencyStateTracker.java,endCall,Yes, this method likely requires permissions related to managing calls, especially emergency calls.
/com/android/internal/telephony/emergency/EmergencyStateTracker.java,setEmergencyMode,Yes, because it interacts with the modem to set an emergency mode, which typically requires special permissions related to telephony and emergency services in Android.
/com/android/internal/telephony/emergency/EmergencyStateTracker.java,completeEmergencyMode,Yes, this method handles emergency calls and SMS, which typically require permissions to access telephony functions in Android.
/com/android/internal/telephony/emergency/EmergencyStateTracker.java,onEmergencyTransportChanged,Yes, this method likely requires permissions related to emergency calls or SMS functionalities.
/com/android/internal/telephony/emergency/EmergencyStateTracker.java,startEmergencySms,Yes, this method likely requires permissions because it involves sending an emergency SMS, which typically requires specific permissions such as SMS-related permissions in Android.
/com/android/internal/telephony/emergency/EmergencyStateTracker.java,endSms,Yes, this method likely requires permissions related to sending and managing SMS messages, specifically for handling emergency communications.
/com/android/internal/telephony/emergency/EmergencyStateTracker.java,isRadioOn,Yes, this method may require permissions to access phone state information.
/com/android/internal/telephony/emergency/EmergencyStateTracker.java,turnOnRadioAndSwitchDds,Yes, because the method involves handling emergency calls and controlling the radio state, which typically requires specific permissions like accessing phone state and making calls.
/com/android/internal/telephony/emergency/EmergencyStateTracker.java,possiblyOverrideDefaultDataForEmergencyCall,Yes, this method likely requires permissions related to telephony and managing network connections, as it involves switching the default data subscription for emergency calls.
/com/android/internal/telephony/euicc/EuiccOperation.java,forDownloadDeactivateSim,Yes, this method requires permissions because it is intended for privileged callers only.
/com/android/internal/telephony/euicc/EuiccOperation.java,forDownloadNoPrivileges,Yes, the method's documentation indicates that it fails if the calling app does not have permission to manage the current active subscription, implying a required permission.
/com/android/internal/telephony/euicc/EuiccOperation.java,forSwitchDeactivateSim,Yes, this method likely requires permissions related to SIM card management, such as the ability to switch or deactivate a SIM card.
/com/android/internal/telephony/euicc/EuiccOperation.java,continueOperation,Yes, the method may require permissions related to telephony operations, as it deals with SIM card operations and resolutions that typically need user consent and system permissions in Android.
/com/android/internal/telephony/euicc/EuiccOperation.java,resolvedDownloadNoPrivilegesOrDeactivateSimCheckMetadata,Yes, this method likely requires permissions related to managing SIM or subscription data, as indicated by references to `EuiccController` and terms like "downloadSubscriptionPrivilegedCheckMetadata," which typically involves sensitive operations.
/com/android/internal/telephony/euicc/EuiccOperation.java,resolvedSwitchNoPrivileges,Yes, because the method involves operations that likely require permissions related to modifying subscriptions or accessing sensitive data in the device's eSIM functionality.
/com/android/internal/telephony/subscription/SubscriptionInfoInternal.java,getIccId,Yes, this method may require permissions to access telephony information, specifically the ICC ID associated with the SIM card.
/com/android/internal/telephony/subscription/SubscriptionInfoInternal.java,getCardString,Yes, this method likely requires permissions related to accessing SIM card information, such as reading the ICCID or EID, which can be sensitive data.
/com/android/internal/telephony/subscription/SubscriptionInfoInternal.java,getImsi,Yes, the method requires permissions because accessing the IMSI value generally involves accessing sensitive telephony information.
/com/android/internal/telephony/subscription/SubscriptionInfoInternal.java,getNumberFromIms,Yes, retrieving a phone number typically requires permission to access phone state or user data.
/com/android/internal/telephony/subscription/SubscriptionInfoInternal.java,setDataRoaming,Yes, because modifying data roaming settings typically requires `WRITE_SETTINGS` or similar permissions in Android.
/com/android/internal/telephony/subscription/SubscriptionInfoInternal.java,setCellBroadcastSevereThreatAlertEnabled,Yes, it likely requires permissions related to accessing or modifying cell broadcast settings.
/com/android/internal/telephony/subscription/SubscriptionInfoInternal.java,setCellBroadcastAmberAlertEnabled,Yes, because modifying system settings related to cell broadcast alerts may require specific permissions to access or change.
/com/android/internal/telephony/subscription/SubscriptionInfoInternal.java,setWifiCallingEnabledForRoaming,Yes, because modifying Wi-Fi calling settings typically requires specific permissions related to network management.
/com/android/internal/telephony/subscription/SubscriptionDatabaseManager.java,getSubscriptionProperty,Yes, this method requires permissions because it accesses the subscription database, which typically requires specific permissions in Android (e.g., READ_PHONE_STATE or READ_SUBSCRIBER_ID).
/com/android/internal/telephony/subscription/SubscriptionDatabaseManager.java,setSubscriptionProperty,Yes, this method likely requires permissions because it interacts with subscription data, which is sensitive and typically protected by permissions in the Android framework (e.g., READ_SMS, WRITE_SMS).
/com/android/internal/telephony/subscription/SubscriptionDatabaseManager.java,insertNewRecordIntoDatabaseSync,Yes, this method requires permissions because it performs a database insertion operation, which typically requires the appropriate permissions to access and modify data in the database.
/com/android/internal/telephony/subscription/SubscriptionDatabaseManager.java,insertSubscriptionInfo,Yes, it requires permissions. The method interacts with subscription information, which typically requires specific permissions related to accessing telephony services on Android devices.
/com/android/internal/telephony/subscription/SubscriptionDatabaseManager.java,updateDatabase,Yes, this method requires permissions because it interacts with the database, which typically requires permissions to read/write data on user devices in Android.
/com/android/internal/telephony/subscription/SubscriptionDatabaseManager.java,writeDatabaseAndCacheHelper,Yes, this method likely requires permissions to access and modify the subscription data in the database, which is typically protected by Android permissions.
/com/android/internal/telephony/subscription/SubscriptionDatabaseManager.java,updateSubscription,Yes, this method likely requires permissions related to accessing and modifying subscription information in the database, as it involves updating subscription data.
/com/android/internal/telephony/subscription/SubscriptionDatabaseManager.java,setIccId,Yes, this method likely requires permissions related to accessing and modifying SIM card information, such as `READ_PHONE_STATE` or `WRITE_SETTINGS`, to handle the ICCID of the SIM.
/com/android/internal/telephony/subscription/SubscriptionDatabaseManager.java,setCarrierName,Yes, because it modifies subscription-related information that may require permissions to access or change.
/com/android/internal/telephony/subscription/SubscriptionDatabaseManager.java,setDataRoaming,Yes, this method requires permissions. It modifies network settings related to data roaming, which typically require special permissions in Android, such as `CHANGE_NETWORK_STATE` or `MODIFY_PHONE_STATE`.
/com/android/internal/telephony/subscription/SubscriptionDatabaseManager.java,setMcc,Yes, this method likely requires permissions to write to subscription-related data.
/com/android/internal/telephony/subscription/SubscriptionDatabaseManager.java,setMnc,Yes, because modifying mobile network code may require access to telephony features.
/com/android/internal/telephony/subscription/SubscriptionDatabaseManager.java,setEhplmns,Yes, it likely requires permissions to modify subscription-related data in the system.
/com/android/internal/telephony/subscription/SubscriptionDatabaseManager.java,setCardString,Yes, this method likely requires permissions to access and modify SIM card information, which is sensitive data.
/com/android/internal/telephony/subscription/SubscriptionDatabaseManager.java,setCarrierConfigAccessRules,Yes, this method involves altering configurations related to carrier settings, which typically requires specific permissions to ensure that only authorized applications can make such changes.
/com/android/internal/telephony/subscription/SubscriptionDatabaseManager.java,setCarrierConfigAccessRules,Yes, this method likely requires permissions because it interacts with carrier configurations and databases associated with subscriptions, which usually necessitates specific privileges related to telephony services in Android.
/com/android/internal/telephony/subscription/SubscriptionDatabaseManager.java,setRemovableEmbedded,Yes, the method likely requires permissions to access subscription information and modify it.
/com/android/internal/telephony/subscription/SubscriptionDatabaseManager.java,setCellBroadcastExtremeThreatAlertEnabled,Yes, because it likely involves modifying system settings related to cell broadcast alerts, which typically requires specific permissions.
/com/android/internal/telephony/subscription/SubscriptionDatabaseManager.java,setCellBroadcastSevereThreatAlertEnabled,Yes, because setting cell broadcast alerts may require modifying system settings related to telephony, which typically needs permissions such as `WRITE_SETTINGS` or specific telephony permissions.
/com/android/internal/telephony/subscription/SubscriptionDatabaseManager.java,setCellBroadcastAmberAlertEnabled,Yes, this method likely requires permissions related to modifying system settings or configurations, particularly for cell broadcasts.
/com/android/internal/telephony/subscription/SubscriptionDatabaseManager.java,setCellBroadcastEmergencyAlertEnabled,Yes, this method likely requires permissions to modify system settings related to emergency alerts.
/com/android/internal/telephony/subscription/SubscriptionDatabaseManager.java,setCellBroadcastAlertSpeechEnabled,Yes, this method likely requires permissions related to modifying system settings or subscription information.
/com/android/internal/telephony/subscription/SubscriptionDatabaseManager.java,setVideoTelephonyEnabled,Yes, because it involves modifying user settings which may require permissions related to user privacy or configuration changes.
/com/android/internal/telephony/subscription/SubscriptionDatabaseManager.java,setWifiCallingEnabled,Yes, this method likely requires permissions related to modifying network settings, specifically for Wi-Fi calling functionality.
/com/android/internal/telephony/subscription/SubscriptionDatabaseManager.java,setWifiCallingMode,Yes, requires permissions to modify Wi-Fi calling settings.
/com/android/internal/telephony/subscription/SubscriptionDatabaseManager.java,setWifiCallingModeForRoaming,Yes, this method likely requires permissions related to managing Wi-Fi calling settings, especially when dealing with roaming.
/com/android/internal/telephony/subscription/SubscriptionDatabaseManager.java,setWifiCallingEnabledForRoaming,Yes, because modifying Wi-Fi calling settings typically requires specific permissions related to telephony and network management.
/com/android/internal/telephony/subscription/SubscriptionDatabaseManager.java,setOpportunistic,Yes, this method likely requires permissions related to modifying subscription data.
/com/android/internal/telephony/subscription/SubscriptionDatabaseManager.java,setGroupUuid,Yes, it likely requires permissions to modify subscription information in the database.
/com/android/internal/telephony/subscription/SubscriptionDatabaseManager.java,setCarrierId,Yes, this method likely requires permissions related to modifying subscription data, which typically involves accessing telephony or carrier information.
/com/android/internal/telephony/subscription/SubscriptionDatabaseManager.java,setEnabledMobileDataPolicies,Yes, this method likely requires permissions related to modifying mobile data settings.
/com/android/internal/telephony/subscription/SubscriptionDatabaseManager.java,setImsi,Yes, it likely requires permissions because it modifies sensitive subscriber data (IMSI) related to the subscription.
/com/android/internal/telephony/subscription/SubscriptionDatabaseManager.java,setUiccApplicationsEnabled,Yes, requires permissions to access and modify Uicc applications configuration associated with the subscription ID.
/com/android/internal/telephony/subscription/SubscriptionDatabaseManager.java,setRcsUceEnabled,Yes, this method likely requires permissions to modify subscription settings in the Android system.
/com/android/internal/telephony/subscription/SubscriptionDatabaseManager.java,setAllowedNetworkTypesForReasons,Yes, this method likely requires permissions related to modifying network settings. It deals with subscription IDs and allowed network types, which usually require specific permissions to access or modify network configurations in Android.
/com/android/internal/telephony/subscription/SubscriptionDatabaseManager.java,setNumberFromCarrier,Yes, the method modifies carrier-related phone number information, which typically requires permissions to access or modify telephony data.
/com/android/internal/telephony/subscription/SubscriptionDatabaseManager.java,setNumberFromIms,Yes, it likely requires permissions to access phone numbers and modify SIM information.
/com/android/internal/telephony/subscription/SubscriptionDatabaseManager.java,setSatelliteEnabled,Yes, this method likely requires permissions related to modifying subscription settings.
/com/android/internal/telephony/subscription/SubscriptionDatabaseManager.java,setGroupDisabled,Yes, this method likely requires permissions related to modifying subscription settings in the Android SDK.
/com/android/internal/telephony/subscription/SubscriptionDatabaseManager.java,loadDatabaseInternal,Yes, the method likely requires permissions because it involves loading a database from a content provider, which typically requires permissions related to accessing that data in Android.
/com/android/internal/telephony/subscription/SubscriptionDatabaseManager.java,getSubscriptionInfoInternal,Yes, this method likely requires permissions to access subscription information, as it deals with subscription IDs, which are sensitive data.
/com/android/internal/telephony/subscription/SubscriptionDatabaseManager.java,getSubscriptionInfoInternalByIccId,Yes, this method likely requires permissions to access subscription information related to SIM cards.
/com/android/internal/telephony/ims/ImsResolver.java,onReceive,Yes, this method requires permissions. It interacts with telephony-related data, which typically requires permissions such as `READ_PHONE_STATE` or similar, depending on the specific information being accessed.
/com/android/internal/telephony/ims/ImsResolver.java,onReceive,Yes, because the `onReceive` method is typically used to handle broadcast intents, and receiving the `BOOT_COMPLETED` broadcast requires the `RECEIVE_BOOT_COMPLETED` permission.
/com/android/internal/telephony/ims/ImsResolver.java,getSimState,Yes, because accessing SIM state typically requires permissions related to telephony, such as `READ_PHONE_STATE`.
/com/android/internal/telephony/ims/ImsResolver.java,create,Yes, this method may require permissions related to accessing ImsServiceController, which typically involves handling telecommunication services.
/com/android/internal/telephony/ims/ImsResolver.java,create,Yes, this method likely requires permissions to access specific services or components in the Android system, but the exact permissions depend on the implementation and use of `ImsServiceController` and `ComponentName`.
/com/android/internal/telephony/ims/ImsResolver.java,searchForImsServices,Yes, the method requires permissions because it interacts with services which may need the BIND_IMS_SERVICE permission based on its implementation details regarding serviceInfo and permission checks.
/com/android/internal/telephony/ims/MmTelFeatureCompatAdapter.java,onReceive,Yes, the method handles incoming calls, which typically requires permissions such as `READ_PHONE_STATE` or `ANSWER_PHONE_CALLS`.
/com/android/internal/telephony/ims/ImsServiceController.java,bind,Yes, this method likely requires permissions because it involves binding to a service, which typically requires specific permissions in Android for access to system resources or functionalities.
/com/android/internal/telephony/ims/ImsServiceController.java,grantPermissionsToService,Yes, because it involves granting runtime permissions to services, which require specific permissions to be declared in the Android manifest.
/com/android/internal/telephony/ims/ImsServiceController.java,createImsFeature,Yes, this method likely requires permissions related to telephony or IMS features, as it involves creatingIMS features based on subscription IDs and capabilities.
/com/android/internal/telephony/ims/ImsServiceControllerCompat.java,enableIms,Yes, because enabling IMS (IP Multimedia Subsystem) typically requires specific network or telephony permissions in Android.
/com/android/internal/telephony/ims/ImsServiceControllerCompat.java,createImsFeature,Yes, this method likely requires permissions related to IMS (IP Multimedia Subsystem) features, as it deals with creating IMS features based on slot and subscription IDs.
/com/android/internal/telephony/ims/ImsServiceControllerCompat.java,removeImsFeature,Yes, it likely requires permissions to modify IMS features on the device, as it involves system-level operations.
/com/android/internal/telephony/ims/ImsServiceFeatureQueryManager.java,start,Yes, this method requires permissions because it binds to a service, which typically requires the appropriate permissions defined in the Android Manifest.
/com/android/internal/telephony/ims/ImsEnablementTracker.java,enableIms,Yes, it likely requires permissions because it interacts with IMS (IP Multimedia Subsystem) functionality, which generally requires telephony permissions.
/com/android/internal/telephony/ims/ImsEnablementTracker.java,resetIms,Yes, this method likely requires permissions because it interacts with the ImsService, which typically requires specific permissions to modify or reset IMS-related settings in Android.
/com/android/internal/telephony/gsm/UsimDataDownloadHandler.java,handleUsimDataDownload,Yes, this method may require permissions related to handling SMS messages, such as sending and receiving SMS, and accessing USIM data.
/com/android/internal/telephony/gsm/UsimDataDownloadHandler.java,startDataDownload,Yes, because SMS-related operations typically require permissions for sending and receiving SMS messages in Android.
/com/android/internal/telephony/gsm/UsimDataDownloadHandler.java,handleDataDownload,Yes, this method likely requires permissions because it involves handling SMS messages and potentially interacting with network operations, which typically require permissions in Android.
/com/android/internal/telephony/gsm/UsimDataDownloadHandler.java,acknowledgeSmsWithError,Yes, the method likely requires permissions to handle SMS-related operations, such as acknowledging SMS messages.
/com/android/internal/telephony/gsm/UsimDataDownloadHandler.java,acknowledgeImsSms,Yes, this method likely requires permissions related to handling SMS, as it involves acknowledging SMS messages.
/com/android/internal/telephony/gsm/UsimPhoneBookManager.java,loadEfFilesFromUsim,Yes, this method likely requires permissions because it deals with phonebook records and may access sensitive user data (like contacts).
/com/android/internal/telephony/gsm/UsimPhoneBookManager.java,readEmailRecord,Yes, this method likely requires permissions because it interacts with email records, which are sensitive data and typically require user permissions to access in Android.
/com/android/internal/telephony/satellite/PointingAppController.java,registerForSatelliteTransmissionUpdates,Yes, requires permission to access satellite data and phone functionality.
/com/android/internal/telephony/satellite/PointingAppController.java,startSatelliteTransmissionUpdates,Yes, the method likely requires permissions to access satellite transmission updates, as it involves receiving updates related to satellite positioning, which usually necessitates certain telephony or location-related permissions in Android.
/com/android/internal/telephony/satellite/SatelliteServiceUtils.java,getValidSatelliteSubId,Yes, the method interacts with subscription management, which typically requires permissions related to reading phone state or accessing subscription information in Android.
/com/android/internal/telephony/satellite/SatelliteSOSMessageRecommender.java,onEmergencyCallStarted,Yes, it requires permissions because it deals with emergency calls, which typically requires permissions related to telephony services.
/com/android/internal/telephony/satellite/metrics/ControllerMetricsStats.java,onReceive,Yes, the method retrieves battery status, which requires permissions related to accessing battery information.
/com/android/internal/telephony/imsphone/ImsPullCall.java,pullExternalCall,Yes, requires permission to access phone-related features.
/com/android/internal/telephony/imsphone/ImsExternalCallTracker.java,createExternalConnection,Yes, the method involves managing calls, which typically requires permissions related to telephony operations, such as `READ_PHONE_STATE` or `CALL_PHONE`.
/com/android/internal/telephony/imsphone/ImsCallInfo.java,update,Yes, it likely requires permissions related to managing and interacting with telecom services, such as `READ_PHONE_STATE` or similar, to update the state of an IMS call.
/com/android/internal/telephony/imsphone/ImsCallInfo.java,update,Yes, this method likely requires permissions related to managing calls in an Android application. It involves updating the state of an IMS (IP Multimedia Subsystem) call, which typically requires permissions such as `CALL_PHONE` or related telephony permissions for modifying call states.
/com/android/internal/telephony/imsphone/ImsNrSaModeHandler.java,registerForPreciseCallStateChanges,Yes, this method likely requires permissions to access call state changes in order to function properly, as this involves monitoring phone state.
/com/android/internal/telephony/imsphone/ImsPhoneBase.java,startRingbackTone,Yes, this method likely requires permissions related to audio or telephony functionalities if it is managing ringback tones.
/com/android/internal/telephony/imsphone/ImsPhoneBase.java,canDial,Yes, likely requires permissions related to telephony or calling, as it involves checking if dialing is possible based on service state and call status.
/com/android/internal/telephony/imsphone/ImsPhoneBase.java,sendUssdResponse,Yes, it requires permissions to send USSD responses, as this action involves network communication and may be restricted for security reasons.
/com/android/internal/telephony/imsphone/ImsPhoneBase.java,setRadioPower,Yes, this method likely requires permissions to change the radio power state of the device, as it involves modifying system-level settings.
/com/android/internal/telephony/imsphone/ImsPhoneBase.java,getDeviceId,Yes, retrieval of the device ID typically requires permissions, such as `READ_PRIVILEGED_PHONE_STATE` or `READ_PHONE_STATE`.
/com/android/internal/telephony/imsphone/ImsPhoneBase.java,getImei,Yes, it requires permissions because accessing the IMEI requires `READ_PHONE_STATE` permission in Android.
/com/android/internal/telephony/imsphone/ImsPhoneBase.java,setVoiceMailNumber,Yes, this method likely requires permissions related to modifying voicemail settings, such as the `WRITE_VOICEMAIL` permission.
/com/android/internal/telephony/imsphone/ImsPhoneBase.java,getCallForwardingOption,Yes, because it involves call forwarding options, which typically require permissions related to telephony.
/com/android/internal/telephony/imsphone/ImsPhoneBase.java,setCallForwardingOption,Yes, the method likely requires permissions because it involves modifying call forwarding settings, which usually requires specific permissions related to telephony in Android.
/com/android/internal/telephony/imsphone/ImsPhoneBase.java,setCallForwardingOption,Yes, this method likely requires permissions related to managing call forwarding features.
/com/android/internal/telephony/imsphone/ImsPhoneBase.java,setCallWaiting,Yes, this method likely requires permissions related to phone state or call management, as it involves setting call waiting functionality.
/com/android/internal/telephony/imsphone/ImsPhoneBase.java,startNetworkScan,Yes, the method likely requires permissions to access network information or perform network scans.
/com/android/internal/telephony/imsphone/ImsPhoneBase.java,setDataRoamingEnabled,Yes, because enabling data roaming typically requires appropriate permissions related to network access.
/com/android/internal/telephony/imsphone/ImsPhoneBase.java,getIccPhoneBookInterfaceManager,Yes, this method likely requires permissions related to accessing the SIM card, as it interacts with the IccPhoneBookInterfaceManager.
/com/android/internal/telephony/imsphone/ImsPhoneBase.java,getCallBarring,Yes, requires permissions related to call barring functionality.
/com/android/internal/telephony/imsphone/ImsPhoneBase.java,setCallBarring,Yes, this method likely requires permissions to manage call barring, which typically involves modifying telephony settings.
/com/android/internal/telephony/imsphone/ImsPhoneCommandInterface.java,supplyIccPin,Yes, this method likely requires permissions related to SIM card operations, such as the "SEND_SMS" or "READ_PHONE_STATE" permissions, depending on the context of its use in managing ICC PINs.
/com/android/internal/telephony/imsphone/ImsPhoneCommandInterface.java,supplyIccPin2,Yes, because interacting with the SIM card (like supplying a PIN) typically requires specific permissions related to telephony.
/com/android/internal/telephony/imsphone/ImsPhoneCommandInterface.java,supplyIccPuk2,Yes, this method likely requires permissions related to handling SIM cards and sensitive user data.
/com/android/internal/telephony/imsphone/ImsPhoneCommandInterface.java,changeIccPin,Yes, it requires permissions because changing the ICC PIN involves sensitive operations related to the SIM card, which typically require specific permissions (e.g., `CHANGE_SIM_PIN`).
/com/android/internal/telephony/imsphone/ImsPhoneCommandInterface.java,changeIccPin2,Yes, because changing the ICC PIN2 typically requires relevant permissions to handle SIM security settings.
/com/android/internal/telephony/imsphone/ImsPhoneCommandInterface.java,changeBarringPassword,Yes, because changing barring passwords typically involves sensitive operations that may require special permissions for security.
/com/android/internal/telephony/imsphone/ImsPhoneCommandInterface.java,dial,Yes, this method likely requires permissions to initiate a phone call.
/com/android/internal/telephony/imsphone/ImsPhoneCommandInterface.java,getIMEI,Yes, because accessing the IMEI requires the READ_PHONE_STATE permission.
/com/android/internal/telephony/imsphone/ImsPhoneCommandInterface.java,sendSMS,Yes, the method likely requires permissions to send SMS messages.
/com/android/internal/telephony/imsphone/ImsPhoneCommandInterface.java,sendSMSExpectMore,Yes, because sending SMS typically requires SMS permissions in Android.
/com/android/internal/telephony/imsphone/ImsPhoneCommandInterface.java,sendCdmaSms,Yes, because sending SMS typically requires permissions related to SMS functionality.
/com/android/internal/telephony/imsphone/ImsPhoneCommandInterface.java,sendCdmaSMSExpectMore,Yes, sending SMS typically requires permissions related to sending messages.
/com/android/internal/telephony/imsphone/ImsPhoneCommandInterface.java,sendImsGsmSms,Yes, this method likely requires SMS-related permissions to send messages using the IMS (IP Multimedia Subsystem) framework.
/com/android/internal/telephony/imsphone/ImsPhoneCommandInterface.java,sendImsCdmaSms,Yes, this method likely requires permissions because it involves sending SMS messages which typically requires SMS-related permissions in Android.
/com/android/internal/telephony/imsphone/ImsPhoneCommandInterface.java,deleteSmsOnSim,Yes, it requires permissions because deleting SMS from the SIM card typically requires specific permissions related to SMS management.
/com/android/internal/telephony/imsphone/ImsPhoneCommandInterface.java,writeSmsToSim,Yes, writing SMS to SIM cards typically requires permissions related to SMS management.
/com/android/internal/telephony/imsphone/ImsPhoneCommandInterface.java,acknowledgeLastIncomingGsmSms,Yes, this method likely requires permissions since it deals with acknowledging incoming SMS messages.
/com/android/internal/telephony/imsphone/ImsPhoneCommandInterface.java,iccIOForApp,Yes, this method likely requires permissions related to accessing the SIM card or ICC (Integrated Circuit Card) data, as it deals with low-level commands interacting with the SIM.
/com/android/internal/telephony/imsphone/ImsPhoneCommandInterface.java,queryCallWaiting,Yes, because the method name implies it interacts with call settings, which typically requires permissions related to telephony.
/com/android/internal/telephony/imsphone/ImsPhoneCommandInterface.java,setCallWaiting,Yes, the method likely requires permissions related to modifying call settings or telephony features.
/com/android/internal/telephony/imsphone/ImsPhoneCommandInterface.java,setNetworkSelectionModeManual,Yes, it likely requires permissions related to modifying network settings or managing connectivity.
/com/android/internal/telephony/imsphone/ImsPhoneCommandInterface.java,setCallForward,Yes, because it likely manipulates call settings, which usually requires telephony permissions.
/com/android/internal/telephony/imsphone/ImsPhoneCommandInterface.java,queryCallForwardStatus,Yes, this method likely requires permissions related to querying the call status or forwarding status in the telephony context.
/com/android/internal/telephony/imsphone/ImsPhoneCommandInterface.java,setFacilityLock,Yes, it likely requires permissions as it involves setting a facility lock, which is typically related to security and requires appropriate permissions.
/com/android/internal/telephony/imsphone/ImsPhoneCommandInterface.java,setFacilityLockForApp,Yes, because it likely modifies security settings related to app facilities, which typically require permissions.
/com/android/internal/telephony/imsphone/ImsPhoneCommandInterface.java,sendUSSD,Yes, because sending USSD requests typically requires permission to access phone state and may involve communication with the telephony services.
/com/android/internal/telephony/imsphone/ImsPhoneCommandInterface.java,invokeOemRilRequestRaw,Yes, this method requires permissions because it likely interacts with OEM (Original Equipment Manufacturer) RIL (Radio Interface Layer) functions, which typically require special permissions for security and access control.
/com/android/internal/telephony/imsphone/ImsPhoneCommandInterface.java,setPreferredNetworkType,Yes, because setting the preferred network type typically requires permissions related to network management.
/com/android/internal/telephony/imsphone/ImsPhoneCommandInterface.java,setSmscAddress,Yes, it likely requires permissions as it deals with SMS service configuration, which typically needs specific permissions in Android.
/com/android/internal/telephony/imsphone/ImsPhoneCommandInterface.java,setGsmBroadcastConfig,Yes, it likely requires permissions related to SMS management, as it involves configuring GSM broadcast settings.
/com/android/internal/telephony/imsphone/ImsPhoneCommandInterface.java,getImei,Yes, because accessing the IMEI requires the `READ_PHONE_STATE` permission.
/com/android/internal/telephony/imsphone/ImsPhoneCommandInterface.java,supplyIccPinForApp,Yes, this method likely requires permissions related to SIM card access, such as `READ_PHONE_STATE` or similar, to manage ICC (Integrated Circuit Card) PINs.
/com/android/internal/telephony/imsphone/ImsPhoneCommandInterface.java,supplyIccPin2ForApp,Yes, because it involves supplying a PIN for the SIM card, which typically requires telephony permissions.
/com/android/internal/telephony/imsphone/ImsPhoneCommandInterface.java,supplyIccPuk2ForApp,Yes, it likely requires permissions as it deals with sensitive operations related to SIM card security (PUK and PIN management).
/com/android/internal/telephony/imsphone/ImsPhoneCommandInterface.java,changeIccPinForApp,Yes, it likely requires permissions related to SIM card operations.
/com/android/internal/telephony/imsphone/ImsPhoneCommandInterface.java,changeIccPin2ForApp,Yes, this method likely requires permissions to modify ICC PINs, as it involves sensitive operations related to SIM card security.
/com/android/internal/telephony/imsphone/ImsPhoneCommandInterface.java,requestIccSimAuthentication,Yes, because it interacts with the SIM card authentication process, which usually requires specific permissions.
/com/android/internal/telephony/imsphone/ImsPhoneCommandInterface.java,iccTransmitApduLogicalChannel,Yes, it interacts with the ICC (Integrated Circuit Card) which typically requires permissions related to communication with SIM cards or secure elements.
/com/android/internal/telephony/imsphone/ImsPhoneCommandInterface.java,iccTransmitApduBasicChannel,Yes, because it interacts with the SIM card, which requires specific permissions.
/com/android/internal/telephony/imsphone/ImsPhoneCommandInterface.java,nvWriteCdmaPrl,Yes, this method likely requires permissions related to modifying network settings or accessing network information, as it pertains to the CDMA preferred roaming list.
/com/android/internal/telephony/imsphone/ImsRttTextHandler.java,sendToInCall,Yes, this method likely requires permissions as it seems to interact with in-call messaging, which typically necessitates permissions related to telephony.
/com/android/internal/telephony/uicc/UiccSlot.java,nullifyUiccCard,Yes, this method likely requires permissions related to modifying or disposing of UICC card resources, which are sensitive operations.
/com/android/internal/telephony/uicc/UiccSlot.java,onClick,Yes, this method likely requires permission to reboot the device, as it appears to involve a `PowerManager` and the action of rebooting, which typically requires specific permissions such as `REBOOT`.
/com/android/internal/telephony/uicc/PinStorage.java,onReceive,Yes, because it handles intents related to SIM card state changes, which require permissions related to telephony and SIM management (e.g., `READ_PHONE_STATE`).
/com/android/internal/telephony/uicc/PinStorage.java,getPin,Yes, this method likely requires permissions because it deals with sensitive information related to the SIM card, specifically retrieving a PIN. Accessing such data typically necessitates specific permissions related to telephony and security in Android.
/com/android/internal/telephony/uicc/PinStorage.java,prepareUnattendedReboot,Yes, this method likely requires permissions related to managing device security (PINs) and potentially rebooting the device.
/com/android/internal/telephony/uicc/PinStorage.java,onSimStatusChange,Yes, because handling SIM card state changes typically requires permissions related to accessing telephony services on Android devices.
/com/android/internal/telephony/uicc/PinStorage.java,isDeviceSecure,Yes, this method requires permissions because it checks the device's security state, which typically involves accessing sensitive user information (like whether a PIN is set).
/com/android/internal/telephony/uicc/PinStorage.java,isDeviceLocked,Yes, it requires permission to access KeyguardManager, which handles security features related to device locking.
/com/android/internal/telephony/uicc/PinStorage.java,loadPinInformation,Yes, this method likely requires permissions to access stored PIN information for SIM slots, as it deals with sensitive data related to SIM security.
/com/android/internal/telephony/uicc/PinStorage.java,savePinInformation,Yes, the method involves storing sensitive information (PIN data), which typically requires permissions related to storage access and possibly security.
/com/android/internal/telephony/uicc/PinStorage.java,verifyPendingPin,Yes, accessing or verifying a SIM card's PIN typically requires permissions related to telephony and SIM management in Android.
/com/android/internal/telephony/uicc/PinStorage.java,getIccid,Yes, this method requires permissions because it accesses the ICCID of the SIM card, which is sensitive information that typically requires specific permissions related to telephony operations.
/com/android/internal/telephony/uicc/PinStorage.java,isPinState,Yes, this method likely requires permissions related to accessing SIM card status or PIN state, as it interacts with the UICC (Universal Integrated Circuit Card) profile and applications, which typically involve sensitive operations that require declare permissions in Android.
/com/android/internal/telephony/uicc/PinStorage.java,isCacheAllowedByCarrier,Yes, the method likely requires permissions because it interacts with the `CarrierConfigManager` and phone-related functionalities, which typically require telephony permissions in Android.
/com/android/internal/telephony/uicc/PinStorage.java,getSecretKey,Yes, it requires permissions because accessing the `KeyStore` typically requires `USE_FINGERPRINT` or similar permissions to manage sensitive cryptographic keys.
/com/android/internal/telephony/uicc/PinStorage.java,createSecretKey,Yes, this method requires permissions because it generates a new secret key in the KeyStore, which may involve sensitive operations related to security and encryption.
/com/android/internal/telephony/uicc/CarrierAppInstallReceiver.java,onReceive,Yes, it requires permissions related to package install notifications.
/com/android/internal/telephony/uicc/InstallCarrierAppUtils.java,showNotification,Yes, because showing notifications typically requires `POST_NOTIFICATIONS` permission (starting from Android 13).
/com/android/internal/telephony/uicc/InstallCarrierAppUtils.java,hideAllNotifications,Yes, because this method interacts with notifications, which typically requires the permission to manage notifications in Android.
/com/android/internal/telephony/uicc/InstallCarrierAppUtils.java,hideNotification,Yes, because it interacts with the notification system, which generally requires the appropriate permissions to modify notifications.
/com/android/internal/telephony/uicc/InstallCarrierAppUtils.java,showNotificationIfNotInstalledDelayed,Yes, the method involves setting an alarm using the AlarmManager, which requires the permission `SET_ALARM`.
/com/android/internal/telephony/uicc/InstallCarrierAppUtils.java,registerPackageInstallReceiver,Yes, this method requires permissions because it involves registering a broadcast receiver for package installation events, which typically requires the `RECEIVE_BOOT_COMPLETED` or other related permissions in Android.
/com/android/internal/telephony/uicc/SimPhonebookRecordCache.java,updateSimPbAdnByRecordId,Yes, this method seems to involve updating SIM phonebook records, which typically requires permissions related to accessing and modifying contacts on the SIM card.
/com/android/internal/telephony/uicc/SimPhonebookRecordCache.java,updateSimPhonebook,Yes, this method likely requires permissions because it deals with updating the SIM phonebook, which typically involves accessing sensitive user data stored on the SIM card.
/com/android/internal/telephony/uicc/SimPhonebookRecordCache.java,deleteSimPbRecord,Yes, it likely requires permissions related to accessing SIM contacts or records, as it involves modifying SIM data.
/com/android/internal/telephony/uicc/IccRecords.java,setCarrierTestOverride,Yes, this method likely requires permissions related to telephony operations, such as accessing carrier information and modifying SIM-related settings.
/com/android/internal/telephony/uicc/IccRecords.java,getFullIccId,Yes, it likely requires permissions because accessing the ICC ID may involve sensitive information related to SIM card details.
/com/android/internal/telephony/uicc/IccRecords.java,getIMSI,Yes, the method `getIMSI` requires permission to access the IMSI as it deals with sensitive user information related to telephony (SIM card information).
/com/android/internal/telephony/uicc/IccRecords.java,updateOperatorPlmn,Yes, requires permissions because it involves accessing the IMSI (International Mobile Subscriber Identity), which typically needs appropriate permissions to ensure privacy and security in Android.
/com/android/internal/telephony/uicc/IccRecords.java,getMsisdnNumber,Yes, accessing the MSISDN number typically requires permission for accessing phone state or similar user data in Android.
/com/android/internal/telephony/uicc/IccRecords.java,getGid2,Yes, because accessing SIM information typically requires permissions related to telephony (e.g., READ_PHONE_STATE or similar).
/com/android/internal/telephony/uicc/IccRecords.java,getVoiceMailNumber,Yes, this method likely requires permissions, as accessing voicemail numbers typically needs specific permissions in Android (e.g., `READ_VOICEMAIL`).
/com/android/internal/telephony/uicc/IccRecords.java,getServiceProviderName,Yes, because accessing the Service Provider Name typically requires permissions related to accessing SIM card information.
/com/android/internal/telephony/uicc/IccRecords.java,setVoiceMailNumber,Yes, it likely requires permissions to access SIM records for storing the voice mail number.
/com/android/internal/telephony/uicc/IccRecords.java,setVoiceMessageWaiting,Yes, because it involves modifying SIM records, which typically requires permissions related to telephony services.
/com/android/internal/telephony/uicc/IccRecords.java,getOperatorNumeric,Yes, it may require permissions related to accessing phone state or SIM information.
/com/android/internal/telephony/uicc/IccRecords.java,getVoiceCallForwardingFlag,Yes, it requires permissions because accessing call forwarding status typically requires permissions related to telephony or call management in Android.
/com/android/internal/telephony/uicc/IccRecords.java,setVoiceCallForwardingFlag,Yes, setting voice call forwarding typically requires permissions related to telephony services.
/com/android/internal/telephony/uicc/IccRecords.java,getIccSimChallengeResponse,Yes, this method requires permissions related to SIM card access for performing authentication operations.
/com/android/internal/telephony/uicc/IccRecords.java,loadFdnRecords,Yes, this method likely requires permissions related to reading FDN (Fixed Dialing Numbers) records, which typically involves accessing sensitive user data.
/com/android/internal/telephony/uicc/ShowInstallAppNotificationReceiver.java,onReceive,Yes, this method likely requires permissions because it interacts with the Android system components like notifications and package management, which typically need explicit user permissions.
/com/android/internal/telephony/uicc/UiccPort.java,getApplicationByType,Yes, this method likely requires permissions related to accessing SIM card information.
/com/android/internal/telephony/uicc/UiccPort.java,getUiccProfile,Yes, it may require permissions related to telephony or accessing the SIM card.
/com/android/internal/telephony/uicc/VoiceMailConstants.java,getVoiceMailNumber,Yes, the method may require permissions to access voicemail information on the device.
/com/android/internal/telephony/uicc/VoiceMailConstants.java,loadVoiceMail,Yes, because it involves accessing voicemail data, which typically requires permissions to read or write to a specific data area.
/com/android/internal/telephony/uicc/CarrierTestOverride.java,override,Yes, this method likely requires permissions because it deals with sensitive telecommunication parameters like IMSI and ICCID, which typically require specific permissions (e.g., READ_PHONE_STATE) in Android.
/com/android/internal/telephony/uicc/CarrierTestOverride.java,loadCarrierTestOverrides,Yes, this method likely requires permissions to read file storage, given that it accesses a file system through `FileReader` and operates with a specific file path that can contain sensitive or important configuration data.
/com/android/internal/telephony/uicc/UiccCarrierPrivilegeRules.java,getCarrierPrivilegeStatus,Yes, this method requires permissions because it deals with carrier privileges, which typically involves accessing sensitive information related to telephony and requires specific permissions like `Manifest.permission.READ_PHONE_STATE`.
/com/android/internal/telephony/uicc/UiccCarrierPrivilegeRules.java,getCarrierPrivilegeStatus,Yes, this method likely requires permissions as it involves accessing carrier privileges, which are typically sensitive and may require specific permissions to check or utilize.
/com/android/internal/telephony/uicc/SimPhonebookRecord.java,toPhonebookRecordInfoAidl,Yes, the method interacts with phonebook records, which generally require permissions related to accessing contacts, such as `READ_CONTACTS` or similar.
/com/android/internal/telephony/uicc/InstallCarrierAppTrampolineActivity.java,onCreate,Yes, this method requires permissions because it accesses system settings (e.g., `Settings.Global.getLong`), which typically require the appropriate permissions to read system settings or to interact with the content resolver.
/com/android/internal/telephony/data/DataNetworkController.java,onReceive,Yes, this method involves handling SIM card state changes, which generally requires permissions related to telephony such as `READ_PHONE_STATE`.
/com/android/internal/telephony/data/DataNetworkController.java,onRegisterAllEvents,Yes, this method requires permissions because it involves registering for events that may relate to telephony and network state changes, which typically require specific permissions in Android (such as accessing telephony state).
/com/android/internal/telephony/data/DataNetworkController.java,findCompatibleDataNetworkAndAttach,Yes, because managing network requests typically requires specific permissions related to network access.
/com/android/internal/telephony/data/DataNetworkController.java,findCompatibleDataNetworkAndAttach,Yes, because it involves attaching network requests, which typically requires network-related permissions.
/com/android/internal/telephony/data/DataNetworkController.java,isInternetDataAllowed,Yes, the method likely requires permissions related to telephony services to evaluate network capabilities and access cellular data settings.
/com/android/internal/telephony/data/DataNetworkController.java,getInternetDataDisallowedReasons,Yes, because it likely evaluates network capabilities which may require INTERNET or NETWORK state permissions.
/com/android/internal/telephony/data/DataNetworkController.java,evaluateNetworkRequest,Yes, this method requires permissions because it evaluates network requests, which typically involves accessing telephony services and network capabilities that require appropriate permissions in Android (e.g., `ACCESS_NETWORK_STATE`, `READ_PHONE_STATE`).
/com/android/internal/telephony/data/DataNetworkController.java,registerImsStateCallback,Yes, because registering an IMS state callback typically requires permissions related to telephony and IMS features.
/com/android/internal/telephony/data/DataNetworkController.java,setupDataNetwork,Yes, the method likely requires permissions to modify network settings, as it involves setting up data networks which typically requires specific permissions related to network management in Android.
/com/android/internal/telephony/data/DataNetworkController.java,onSimStateChanged,Yes, because it involves changes to SIM state, which typically requires permissions related to phone state or telephony features.
/com/android/internal/telephony/data/DataNetworkController.java,tearDownAllDataNetworks,Yes, this method likely requires permissions because it affects network connectivity.
/com/android/internal/telephony/data/CellularNetworkValidator.java,getValidationNetworkIdentity,Yes, this method likely requires permissions. It deals with network and phone identity information, which typically necessitates permissions such as `READ_PHONE_STATE` in Android to access telephony data and network state.
/com/android/internal/telephony/data/CellularNetworkValidator.java,createNetworkRequest,Yes, this method likely requires permissions because it interacts with network capabilities, which usually involve permissions such as `ACCESS_NETWORK_STATE` or similar to handle network requests appropriately.
/com/android/internal/telephony/data/DataProfileManager.java,getEnterpriseDataProfile,Yes, because accessing the APN (Access Point Name) database typically requires permission to read phone state or telephony data in Android.
/com/android/internal/telephony/data/DataProfileManager.java,updateDataProfiles,Yes, the method likely requires permissions related to accessing the APN (Access Point Name) database, as it interacts with the telephony provider to update data profiles.
/com/android/internal/telephony/data/DataProfileManager.java,getPreferredDataProfileSetId,Yes, this method may require permissions because it involves querying telephony content related to data profiles, which typically requires specific permissions to access sensitive data on Android devices.
/com/android/internal/telephony/data/DataProfileManager.java,getPreferredDataProfileFromDb,Yes, the method requires permissions because it accesses telephony information, which usually requires specific permissions like `READ_PHONE_STATE` or `READ_APN_SETTINGS`.
/com/android/internal/telephony/data/DataProfileManager.java,setPreferredDataProfile,Yes, this method likely requires permissions because it interacts with a database (inserting or deleting data), which typically requires specific permissions in Android for accessing and modifying such data.
/com/android/internal/telephony/data/DataProfileManager.java,buildDefaultApnSetting,Yes, it likely requires permissions because it deals with APN settings, which typically involve modifying network configurations that usually necessitate specific permissions in Android.
/com/android/internal/telephony/data/DataStallRecoveryManager.java,broadcastDataStallDetected,Yes, because it uses `sendBroadcast` which may require permissions related to phone state or broadcasting intents.
/com/android/internal/telephony/data/DataStallRecoveryManager.java,rebootModem,Yes, because rebooting the modem typically requires permission to modify system settings or network operations.
/com/android/internal/telephony/data/LinkBandwidthEstimator.java,getNrMode,Yes, because it interacts with telephony services and may need permissions related to accessing network state (e.g., `READ_PHONE_STATE`).
/com/android/internal/telephony/data/DataSettingsManager.java,handleMessage,Yes, because the method is handling telecom-related events, which typically require permissions such as `READ_PHONE_STATE` or `MODIFY_PHONE_STATE`.
/com/android/internal/telephony/data/DataSettingsManager.java,setDataEnabled,Yes, this method likely requires permissions to enable or disable mobile data, as it interacts with the TelephonyManager and system-level settings.
/com/android/internal/telephony/data/DataSettingsManager.java,isDataEnabledForReason,Yes, because accessing data state may require permissions related to phone state or network access.
/com/android/internal/telephony/data/DataSettingsManager.java,isDataEnabled,Yes, this method likely requires permissions because it checks device data provisioning information and data settings which typically requires appropriate permissions related to network access and telephony.
/com/android/internal/telephony/data/DataSettingsManager.java,setUserDataEnabled,Yes, this method likely requires permissions as it modifies user data settings, which typically requires specific permissions in Android.
/com/android/internal/telephony/data/DataSettingsManager.java,setPolicyDataEnabled,Yes, this method likely requires permissions because it involves enabling or disabling policy data, which typically requires appropriate permissions related to modifying system settings or data management in Android.
/com/android/internal/telephony/data/DataSettingsManager.java,setCarrierDataEnabled,Yes, this method requires permissions because it enables or disables carrier data, which typically requires specific telephony permissions in Android (e.g., CHANGE_NETWORK_STATE).
/com/android/internal/telephony/data/DataSettingsManager.java,setDataRoamingEnabled,Yes, the method likely requires permission to change data roaming settings in user settings.
/com/android/internal/telephony/data/DataSettingsManager.java,setDataRoamingEnabledInternal,Yes, this method likely requires permissions because it modifies system settings related to data roaming, which typically require specific permissions in Android (e.g., `WRITE_SETTINGS` or `CHANGE_NETWORK_STATE`).
/com/android/internal/telephony/data/DataSettingsManager.java,isDataRoamingEnabled,Yes, it requires permission to access the system settings related to data roaming.
/com/android/internal/telephony/data/DataSettingsManager.java,setDefaultDataRoamingEnabled,Yes, because it involves modifying the data roaming settings, which typically requires permissions related to network configuration.
/com/android/internal/telephony/data/DataSettingsManager.java,setMobileDataPolicy,Yes, it likely requires permissions because it involves changing mobile data policy, which typically requires special permissions in Android.
/com/android/internal/telephony/data/DataSettingsManager.java,onSetMobileDataPolicy,Yes, it likely requires permissions to modify mobile data settings.
/com/android/internal/telephony/data/DataConfigManager.java,updateDataRetryRules,Yes, this method likely requires permissions related to carrier config access or telephony, as it interacts with data retry rules that may involve telephony settings.
/com/android/internal/telephony/data/CellularDataService.java,setupDataCall,Yes, this method likely requires permissions related to managing data calls in Android, such as "android.permission.MODIFY_PHONE_STATE" or similar permissions required for telephony operations.
/com/android/internal/telephony/data/DataServiceManager.java,grantPermissionsToService,Yes, this method likely requires permissions because it grants permissions to another app's package, which typically requires special permissions to ensure security within the Android system.
/com/android/internal/telephony/data/DataServiceManager.java,revokePermissionsFromUnusedDataServices,Yes, this method likely requires permissions. It seems to deal with revoking permissions from data services, which typically necessitates managing permissions at a system level.
/com/android/internal/telephony/data/DataServiceManager.java,bindDataService,Yes, it likely requires permissions because it involves binding to a service, which typically requires appropriate permissions in Android to access certain functionalities or resources.
/com/android/internal/telephony/data/DataServiceManager.java,getAllDataServicePackageNames,Yes, this method likely requires permissions. It retrieves information about services from the package manager, which typically involves accessing sensitive data or system information that requires appropriate permissions to be declared in the Android manifest (e.g., `QUERY_ALL_PACKAGES` or related service permissions).
/com/android/internal/telephony/data/DataServiceManager.java,setupDataCall,Yes, this method requires permissions related to establishing a data connection, such as access to network state or permissions for data roaming.
/com/android/internal/telephony/data/DataServiceManager.java,setInitialAttachApn,Yes, this method requires permissions related to modifying network settings.
/com/android/internal/telephony/data/DataServiceManager.java,setDataProfile,Yes, it likely requires permissions related to network or telephony services, specifically for managing data profiles on a CDMA network.
/com/android/internal/telephony/data/DataServiceManager.java,requestDataCallList,Yes, this method likely requires permissions to access network details and potentially call a data service, which typically involve sensitive operations.
/com/android/internal/telephony/data/TelephonyNetworkFactory.java,makeNetworkFilterByPhoneId,Yes, it likely requires permissions related to accessing network and subscription information, such as READ_PHONE_STATE.
/com/android/internal/telephony/data/KeepaliveTracker.java,onStartSocketKeepaliveRequested,Yes, this method may require permissions related to network access for sending packets.
/com/android/internal/telephony/data/DataNetwork.java,createNetworkAgent,Yes, this method likely requires permissions related to telephony services, as it involves creating a telephony network agent and accessing sensitive information like carrier settings and subscriber IDs.
/com/android/internal/telephony/data/DataNetwork.java,enter,Yes, this method likely requires permissions because it interacts with telephony services, which typically require special permissions in Android (e.g., accessing call state or carrier configurations).
/com/android/internal/telephony/data/DataNetwork.java,registerForWwanEvents,Yes, because it involves registering for network events which may require access to cellular network state.
/com/android/internal/telephony/data/DataNetwork.java,attachNetworkRequests,Yes, it likely requires permissions related to network access.
/com/android/internal/telephony/data/DataNetwork.java,updateNetworkCapabilities,Yes, because updating network capabilities may require permissions related to network state and telephony services in Android.
/com/android/internal/telephony/data/DataNetwork.java,setupData,Yes, this method likely requires permissions because it deals with network setup, which may involve access to sensitive user data or device capabilities.
/com/android/internal/telephony/data/DataNetwork.java,getDataNetworkType,Yes, this method may require permissions to access network state or telephony information.
/com/android/internal/telephony/data/DataNetwork.java,startHandover,Yes, this method likely requires permissions because it involves network operations and handover processes, which typically necessitate specific network-related permissions in Android.
/com/android/internal/view/BaseIWindow.java,dispatchWallpaperCommand,Yes, this method likely requires permissions related to wallpaper management, such as `SET_WALLPAPER` or similar, as it involves dispatching commands to the wallpaper service.
/com/android/internal/view/RotationPolicy.java,setRotationLock,Yes, it likely requires permissions because modifying the rotation lock settings typically requires special permissions related to device configuration and settings access.
/com/android/internal/view/RotationPolicy.java,setRotationLockAtAngle,Yes, this method likely requires permissions to modify system settings such as rotation lock.
/com/android/internal/view/RotationPolicy.java,setRotationLockForAccessibility,Yes, it requires permissions to modify system settings like rotation lock.
/com/android/internal/view/RotationPolicy.java,setRotationLock,Yes, this method likely requires permissions because it interacts with the window manager service to manage rotation settings, which typically requires system-level permissions in Android.
/com/android/internal/view/RotationPolicy.java,registerRotationPolicyListener,Yes, it requires permissions to access system settings and observe changes in rotation policy.
/com/android/internal/os/KernelCpuUidTimeReader.java,removeUidsFromKernelModule,Yes, it likely requires permissions because it interacts with kernel modules and internal accounting data, which usually requires elevated privileges in Android.
/com/android/internal/os/AppIdToPackageMap.java,getSnapshot,Yes, because it interacts with the PackageManager to retrieve installed packages, which typically requires permissions like `QUERY_PACKAGES`.
/com/android/internal/os/KernelCpuThreadReader.java,getProcessCpuUsage,Yes, this method likely requires permissions because it involves reading system-level process information, which typically requires specific permissions due to the sensitive nature of the data being accessed.
/com/android/internal/os/StoragedUidIoStatsReader.java,readAbsolute,Yes, because reading proc files typically requires specific permissions related to sensitive system information.
/com/android/internal/os/AtomicDirectory.java,startWrite,Yes, this method likely requires write permissions to modify a directory.
/com/android/internal/os/AtomicDirectory.java,openWrite,Yes, this method requires permissions because it involves writing to a file, which typically requires WRITE_EXTERNAL_STORAGE or similar permissions on Android.
/com/android/internal/os/AtomicDirectory.java,ensureBaseDirectory,Yes, this method likely requires permissions because it is creating a directory and setting its permissions, which generally requires file system access permissions in Android.
/com/android/internal/os/AtomicDirectory.java,backup,Yes, the method involves file manipulation (deleting and renaming directories), which typically requires storage permissions.
/com/android/internal/os/AtomicDirectory.java,syncDirectory,Yes, because accessing and manipulating files usually requires storage permissions in Android.
/com/android/internal/os/logging/MetricsLoggerWrapper.java,logAppOverlayEnter,Yes, the method likely requires permission related to overlaying on apps (such as "SYSTEM_ALERT_WINDOW") due to the parameters and context involving app overlays and alert windows.
/com/android/internal/os/logging/MetricsLoggerWrapper.java,logAppOverlayExit,Yes, this method likely requires permissions related to overlay usage, such as `SYSTEM_ALERT_WINDOW`, to log events related to application overlays and their state changes.
/com/android/internal/display/BrightnessSynchronizer.java,getScreenBrightnessInt,Yes, this method requires permission. It accesses system settings for screen brightness, which typically requires `android.permission.WRITE_SETTINGS` or `android.permission.READ_SETTINGS`.
/com/android/internal/display/BrightnessSynchronizer.java,update,Yes, requires permissions. The method involves accessing and modifying screen brightness, which typically requires `WRITE_SETTINGS` permission in Android.
/com/android/internal/display/BrightnessSynchronizer.java,startObserving,Yes, because it involves registering a content observer for brightness changes, which typically requires `android.permission.WRITE_SETTINGS`.
/com/android/internal/accessibility/AccessibilityShortcutController.java,onSettingsChanged,Yes, the method accesses system settings (Settings.Secure) that typically require permissions, such as `READ_SETTINGS`.
/com/android/internal/accessibility/AccessibilityShortcutController.java,createShortcutWarningDialog,Yes, because it accesses content settings that may require `WRITE_SETTINGS` permission depending on the action being performed.
/com/android/internal/accessibility/AccessibilityShortcutController.java,isServiceEnabled,Yes, because it interacts with the Accessibility Service, which requires permission to access.
/com/android/internal/accessibility/AccessibilityShortcutController.java,playNotificationTone,Yes, it likely requires permissions to access and play notification sounds, as it interacts with the system's audio settings and resources.
/com/android/internal/accessibility/AccessibilityShortcutController.java,registerObserver,Yes, this method likely requires permissions because it interacts with system settings and registers a content observer, which typically involves accessing user data or settings that may be restricted by permissions in Android.
/com/android/internal/accessibility/AccessibilityShortcutController.java,setEmptyShortcutTargetIfNeeded,Yes, the method likely requires permissions because it interacts with `ContentResolver` for settings, which typically requires specific permissions (e.g., `WRITE_SETTINGS`).
/com/android/internal/accessibility/AccessibilityShortcutController.java,getRingtone,Yes, this method may require permissions to access ringtones, typically READ_EXTERNAL_STORAGE or specific ringtone permissions, depending on the source of the ringtone URI.
/com/android/internal/accessibility/util/AccessibilityStatsLogUtils.java,isAccessibilityFloatingMenuEnabled,Yes, the method likely requires permissions related to access to system settings, specifically accessibility settings.
/com/android/internal/accessibility/util/AccessibilityUtils.java,getEnabledServicesFromSettings,Yes, because accessing enabled accessibility services typically requires permissions related to accessibility features.
/com/android/internal/accessibility/util/AccessibilityUtils.java,setAccessibilityServiceState,Yes, this method likely requires permissions to modify the state of accessibility services, which could affect accessibility features in the device.
/com/android/internal/accessibility/util/AccessibilityUtils.java,setAccessibilityServiceState,Yes, the method `setAccessibilityServiceState` likely requires permissions because it interacts with accessibility services, which typically require special permissions to modify settings related to user accessibility.
/com/android/internal/accessibility/util/AccessibilityUtils.java,isAccessibilityServiceEnabled,Yes, this method requires permission. It interacts with accessibility services, which require the `BIND_ACCESSIBILITY_SERVICE` permission.
/com/android/internal/accessibility/util/AccessibilityUtils.java,interceptHeadsetHookForActiveCall,Yes, this method requires permissions because it interacts with the TelecomManager to manage call states, which typically requires the "CALL_PHONE" or "READ_PHONE_STATE" permissions in Android.
/com/android/internal/accessibility/dialog/ToggleAllowListingFeatureTarget.java,isFeatureEnabled,Yes, this method likely requires permissions because it accesses secure settings through `Settings.Secure`. Accessing these settings usually requires specific permissions in the Android manifest.
/com/android/internal/accessibility/dialog/AccessibilityTargetHelper.java,getAccessibilityServiceTargets,Yes, because accessing accessibility services usually requires the `BIND_ACCESSIBILITY_SERVICE` permission.
/com/android/internal/accessibility/dialog/AccessibilityTargetHelper.java,getAccessibilityActivityTargets,Yes, this method requires permissions because it interacts with the `AccessibilityManager`, which requires the `BIND_ACCESSIBILITY_SERVICE` permission to access accessibility-related features.
/com/android/internal/accessibility/dialog/AccessibilityTarget.java,onSelected,Yes, because it utilizes the AccessibilityManager, which may require permissions to interact with accessibility features.
/com/android/internal/policy/DecorContext.java,getSystemService,Yes, because accessing system services in Android can require specific permissions depending on the service being requested.
/com/android/internal/policy/ForceShowNavBarSettingsObserver.java,register,Yes, it requires permissions. It registers a content observer, which typically requires permission to access specific content (like user data).
/com/android/internal/policy/PhoneFallbackEventHandler.java,startCallActivity,Yes, this method likely requires permissions because it involves starting a call activity, which typically requires the `CALL_PHONE` permission or related permissions to initiate calls or access call functions.
/com/android/internal/policy/PhoneFallbackEventHandler.java,getTelephonyManager,Yes, this method requires permissions. It accesses telephony services, which typically require permissions such as `READ_PHONE_STATE` in Android.
/com/android/internal/policy/PhoneFallbackEventHandler.java,getKeyguardManager,Yes, accessing the KeyguardManager may require permissions such as `USE_FINGERPRINT` or `DISABLE_KEYGUARD` depending on its use case.
/com/android/internal/policy/PhoneWindow.java,loadImageURI,Yes, the method `loadImageURI` requires permission to access external storage or content. This is needed to read data from a URI pointing to an image.
/com/android/internal/policy/PhoneWindow.java,launchDefaultSearch,Yes, this method requires permissions because it interacts with system services, such as the search service and potentially handles user interaction that may require user permissions for accessing certain functionalities.
/com/android/internal/policy/PhoneWindow.java,sendCloseSystemWindows,Yes, the method likely requires permissions because it is related to closing system windows, which can affect user interactions and system UI behavior.
/com/android/internal/policy/PhoneWindow.java,sendCloseSystemWindows,Yes, because it involves closing system windows, which typically requires specific permissions related to system UI interactions.
/com/android/internal/policy/DecorView.java,superDispatchTouchEvent,Yes, this method likely requires permissions since it deals with touch events, which may involve user interactions that could require relevant permissions for accessing such data.
/com/android/internal/policy/DecorView.java,sendAccessibilityEvent,Yes, this method likely requires permissions related to accessibility services to send accessibility events.
/com/android/proxyhandler/ProxyServer.java,run,Yes, this method likely requires permissions related to network access (such as INTERNET permission) because it involves establishing connections and sending requests to a server using sockets.
/com/android/proxyhandler/ProxyServer.java,run,Yes, the method involves networking operations, which typically require permissions such as `INTERNET` in Android.
/com/android/localepicker/LocaleStore.java,getSimCountries,Yes, the method requires permissions because it uses the `TelephonyManager` to access SIM country information, which typically requires permissions like `READ_PHONE_STATE`.
/com/android/libraries/tv/tvsystem/user/TvUserManager.java,createManagedProfile,Yes, the method likely requires permissions as it involves creating a managed profile and filtering packages, which typically requires user management permissions in Android.
/com/android/libraries/tv/tvsystem/user/ITvUserManager.java,createManagedProfile,Yes, creating a managed profile typically requires specific permissions related to user management and profiles in Android.
/com/android/libraries/entitlement/EapAkaHelper.java,getEapAkaRootNai,Yes, requires permissions. It accesses telephony information (IMSI), which needs the `READ_PHONE_STATE` permission.
/com/android/libraries/entitlement/EsimOdsaOperation.java,terminalIccid,Yes, because accessing the ICCID of the device's eSIM may require permissions related to telephony or SIM functionality.
/com/android/libraries/entitlement/EsimOdsaOperation.java,targetTerminalId,Yes, because accessing the unique identifier of the primary device eSIM may require permissions related to device identifiers for privacy and security reasons.
/com/android/libraries/entitlement/EsimOdsaOperation.java,oldTerminalId,Yes, because accessing the unique identifier of the device (like IMEI) typically requires permission to read phone state.
/com/android/libraries/entitlement/EsimOdsaOperation.java,setOperation,Yes, because it involves setting an eSIM operation, which typically requires specific permissions related to telecommunications and device management.
/com/android/libraries/entitlement/EsimOdsaOperation.java,setTerminalEid,Yes, because setting the eUICC identifier (EID) may involve modifying SIM-related settings, which typically requires appropriate permissions.
/com/android/libraries/entitlement/EsimOdsaOperation.java,setTargetTerminalIccid,Yes, it likely requires permissions to access or modify SIM card settings.
/com/android/libraries/entitlement/EsimOdsaOperation.java,setTargetTerminalEid,Yes, because setting the eUICC identifier likely requires permissions related to managing or accessing SIM data.
/com/android/libraries/entitlement/ServiceEntitlementRequest.java,terminalId,Yes, it likely requires permissions because accessing unique device identifiers like IMEI typically requires specific permissions to protect user privacy.
/com/android/libraries/entitlement/ServiceEntitlementRequest.java,setTerminalId,Yes, because accessing the device's unique identifier like IMEI typically requires specific permissions (e.g., READ_PHONE_STATE).
/com/android/libraries/entitlement/ServiceEntitlement.java,queryEntitlementStatus,Yes, because it requires permission to read privileged phone state or carrier privilege.
/com/android/libraries/entitlement/ServiceEntitlement.java,performEsimOdsa,Yes, because it performs device service activation, which typically requires permissions related to network and device management.
/com/android/libraries/entitlement/http/HttpClient.java,request,Yes, because network operations typically require permissions such as `INTERNET` in Android.
/com/android/libraries/entitlement/http/HttpClient.java,createConnection,Yes, this method likely requires permissions related to network access (e.g., INTERNET) for establishing a connection.
/com/android/libraries/entitlement/eapaka/EapAkaApi.java,performEsimOdsaOperation,Yes, because it involves network operations which typically require internet permissions.
/com/android/libraries/entitlement/eapaka/EapAkaApi.java,appendParametersForServiceEntitlementRequest,Yes, this method requires permissions to access telephony services (such as retrieving subscriber IDs and IMEI), which necessitate appropriate permissions in the Android manifest.
/com/android/libraries/entitlement/eapaka/EapAkaResponse.java,respondToEapAkaChallenge,Yes, this method requires permissions as it interacts with the `TelephonyManager` to obtain SIM-related information, which typically requires permissions like `READ_PHONE_STATE`.
/com/android/settingslib/TetherUtil.java,isTetherAvailable,Yes, because it uses the `ConnectivityManager` which may require permissions related to network state or connectivity.
/com/android/settingslib/SliceBroadcastRelay.java,registerReceiver,Yes, this method requires permissions because it involves registering a broadcast receiver, which typically requires the `RECEIVE_BOOT_COMPLETED` or other broadcast-related permissions in Android.
/com/android/settingslib/SliceBroadcastRelay.java,unregisterReceivers,Yes, this method likely requires permissions for unregistering broadcast receivers, as it involves sending broadcasts and interacting with system UI components.
/com/android/settingslib/WirelessUtils.java,isAirplaneModeOn,Yes, this method requires permissions because it accesses system settings related to airplane mode, which typically requires the `android.permission.ACCESS_AIRPLANE_MODE` permission.
/com/android/settingslib/RestrictedSwitchPreference.java,updateState,Yes, this method requires permissions because it interacts with app operations and potentially sensitive user settings as indicated by the involvement of `AppOpsManager`.
/com/android/settingslib/DeviceInfoUtils.java,readLine,Yes, it requires permissions to read from files in Android, specifically `READ_EXTERNAL_STORAGE` if the file is on external storage.
/com/android/settingslib/DeviceInfoUtils.java,getFormattedPhoneNumber,Yes, this method requires permissions because it accesses phone numbers, which typically requires `READ_PHONE_STATE` permission in Android.
/com/android/settingslib/DeviceInfoUtils.java,getFormattedPhoneNumbers,Yes, this method requires permissions. It interacts with `TelephonyManager` to retrieve phone numbers, which requires relevant permissions (like `READ_PHONE_STATE`).
/com/android/settingslib/wifi/WifiPermissionChecker.java,canAccessWifiState,Yes, because the method checks for the permission to access Wi-Fi state.
/com/android/settingslib/wifi/WifiPermissionChecker.java,canAccessFineLocation,Yes, requires the ACCESS_FINE_LOCATION permission to check access to precise location.
/com/android/settingslib/wifi/WifiPermissionChecker.java,checkPermission,Yes, it checks if a specific permission is granted, which typically requires permission checks in Android.
/com/android/settingslib/wifi/AccessPoint.java,loadConfig,Yes, because it involves accessing and modifying Wi-Fi configuration, which requires permission to manage Wi-Fi networks.
/com/android/settingslib/wifi/AccessPoint.java,matches,Yes, because it involves scanning and retrieving security information from Wi-Fi networks, which generally requires location permissions in Android.
/com/android/settingslib/wifi/AccessPoint.java,getScanResults,Yes, this method likely requires permissions because it returns scan results which may involve access to sensitive information about Wi-Fi or Bluetooth devices, requiring appropriate permissions.
/com/android/settingslib/wifi/AccessPoint.java,getSavedNetworkSummary,Yes, the method may require permissions related to accessing saved Wi-Fi configurations and network information.
/com/android/settingslib/wifi/AccessPoint.java,startOsuProvisioning,Yes, this method likely requires permissions because it initiates network provisioning, which typically involves actions that require access to network state or Wi-Fi connections.
/com/android/settingslib/wifi/AccessPoint.java,update,Yes, this method likely requires permissions because it deals with updating access point information and network connectivity, which typically requires permissions related to Wi-Fi access and network state in Android.
/com/android/settingslib/wifi/AccessPoint.java,update,Yes, this method likely requires permissions. It deals with `WifiConfiguration`, which typically requires specific permissions (like `CHANGE_WIFI_STATE` or `ACCESS_WIFI_STATE`) in Android to modify or access Wi-Fi settings.
/com/android/settingslib/wifi/AccessPoint.java,getSummary,Yes, it requires permissions. The method interacts with network-related services (e.g., `ConnectivityManager`, `WifiManager`), which typically need permissions for access like `ACCESS_NETWORK_STATE` or `ACCESS_WIFI_STATE`.
/com/android/settingslib/wifi/AccessPoint.java,getSecurity,Yes, the method likely requires permissions because it interacts with WifiManager to get security capabilities, which typically requires ACCESS_WIFI_STATE permission in the Android SDK.
/com/android/settingslib/wifi/WifiStatusTracker.java,setListening,Yes, this method requires permissions because it involves managing network score caching and callbacks, which typically requires network-related permissions (e.g., ACCESS_NETWORK_STATE, CHANGE_NETWORK_STATE).
/com/android/settingslib/wifi/WifiStatusTracker.java,fetchInitialState,Yes, it likely requires permissions because it interacts with the `WifiManager` to fetch network state and details, which typically necessitates `ACCESS_WIFI_STATE` and potentially other related permissions in Android.
/com/android/settingslib/wifi/WifiStatusTracker.java,handleBroadcast,Yes, this method likely requires permissions related to Wi-Fi access, such as `ACCESS_WIFI_STATE` and `CHANGE_WIFI_STATE`, due to its references to `WifiManager` and managing Wi-Fi state.
/com/android/settingslib/wifi/WifiStatusTracker.java,updateWifiInfo,Yes, the method likely requires permissions related to accessing or modifying Wi-Fi state and information in Android, such as `CHANGE_WIFI_STATE` and `ACCESS_WIFI_STATE`.
/com/android/settingslib/wifi/WifiStatusTracker.java,getMainOrUnderlyingWifiInfo,Yes, this method likely requires permissions because it involves accessing network capabilities and Wi-Fi information, which typically necessitates permissions like `ACCESS_NETWORK_STATE` and `ACCESS_WIFI_STATE`.
/com/android/settingslib/wifi/WifiStatusTracker.java,getMainWifiInfo,Yes, the method is likely to require permissions related to network access, specifically for accessing Wi-Fi information, which typically requires `ACCESS_WIFI_STATE` permission in Android.
/com/android/settingslib/wifi/WifiStatusTracker.java,connectionIsWifi,Yes, this method likely requires permissions related to accessing network information, such as `ACCESS_NETWORK_STATE` and `ACCESS_WIFI_STATE` permissions, to retrieve `NetworkCapabilities` and `WifiInfo`.
/com/android/settingslib/wifi/WifiStateWorker.java,init,Yes, because it registers a receiver for system events (WIFI_STATE_CHANGED_ACTION) which requires `ACCESS_WIFI_STATE` and possibly other permissions depending on the context of use.
/com/android/settingslib/wifi/WifiStateWorker.java,refresh,Yes, because accessing Wi-Fi state typically requires the `ACCESS_WIFI_STATE` permission in Android.
/com/android/settingslib/wifi/WifiStateWorker.java,getWifiState,Yes, this method may require permissions to access the Wi-Fi state.
/com/android/settingslib/wifi/WifiStateWorker.java,onReceive,Yes, it likely requires permissions related to Wi-Fi state changes.
/com/android/settingslib/wifi/WifiUtils.java,getWifiTetherSummaryForConnectedDevices,Yes, this method likely requires permissions related to accessing Wi-Fi and connected devices' information.
/com/android/settingslib/wifi/WifiTracker.java,newIntentFilter,Yes, because it interacts with `WifiManager` actions, which typically require permissions related to Wi-Fi state and network access.
/com/android/settingslib/wifi/WifiTracker.java,resumeScanning,Yes, this method likely requires permissions because it involves scanning for Wi-Fi networks, which typically requires the `ACCESS_WIFI_STATE` and `CHANGE_WIFI_STATE` permissions in Android.
/com/android/settingslib/wifi/WifiTracker.java,onStart,Yes, this method requires permissions because it involves tracking WiFi networks, which typically requires location permissions (ACCESS_FINE_LOCATION or ACCESS_COARSE_LOCATION) in Android.
/com/android/settingslib/wifi/WifiTracker.java,isWifiEnabled,Yes, because accessing WiFi status typically requires `ACCESS_WIFI_STATE` permission.
/com/android/settingslib/wifi/WifiTracker.java,getNumSavedNetworks,Yes, this method likely requires permissions to access Wi-Fi network information on the device, such as getting the list of saved networks.
/com/android/settingslib/wifi/WifiTracker.java,fetchScansAndConfigsAndUpdateAccessPoints,Yes, the method involves managing Wi-Fi scan results and configurations, which typically requires permissions related to Wi-Fi access in Android, such as `ACCESS_WIFI_STATE` and `CHANGE_WIFI_STATE`.
/com/android/settingslib/wifi/WifiTracker.java,updatePasspointAccessPoints,Yes, because accessing and updating Wi-Fi configurations and scan results typically requires location and Wi-Fi state permissions in Android.
/com/android/settingslib/wifi/WifiTracker.java,updateNetworkInfo,Yes, this method likely requires permissions to access network information, such as `ACCESS_NETWORK_STATE` and `ACCESS_WIFI_STATE`, due to its interaction with networking and Wi-Fi configurations.
/com/android/settingslib/wifi/WifiTracker.java,onReceive,Yes, it requires permissions because it interacts with Wi-Fi state and network configurations, which generally requires specific permissions like `ACCESS_WIFI_STATE` and `CHANGE_WIFI_STATE`.
/com/android/settingslib/wifi/WifiTracker.java,updateWifiState,Yes, it likely requires permissions because it involves handling updates to WifiState, which typically necessitates access to Wifi-related features in Android, requiring appropriate permissions such as `ACCESS_WIFI_STATE` or `CHANGE_WIFI_STATE`.
/com/android/settingslib/wifi/WifiTracker.java,handleMessage,Yes, this method involves handling Wi-Fi scanning which requires relevant permissions such as `ACCESS_WIFI_STATE` and `CHANGE_WIFI_STATE`.
/com/android/settingslib/wifi/WifiSavedConfigUtils.java,getAllConfigs,Yes, accessing saved Wi-Fi configurations typically requires permissions such as `ACCESS_WIFI_STATE` and `CHANGE_WIFI_STATE`.
/com/android/settingslib/wifi/WifiSavedConfigUtils.java,getAllConfigsCount,Yes, requires permission to access Wi-Fi configurations.
/com/android/settingslib/drawer/TileUtils.java,getSwitchDataFromProvider,Yes, this method likely requires permissions because it interacts with a content provider, which typically requires appropriate permissions to access data from it in Android.
/com/android/settingslib/drawer/TileUtils.java,getTextFromUri,Yes, the method likely requires permissions because it accesses data from a content provider, which typically requires appropriate permissions to read from or write to the data it provides.
/com/android/settingslib/drawer/TileUtils.java,putBooleanToUriAndGetResult,Yes, because it interacts with a content provider, which typically requires permissions based on the data being accessed.
/com/android/settingslib/drawer/TileUtils.java,getBundleFromUri,Yes, the method likely requires permissions because it interacts with a `ContentProvider`, which typically requires specific permissions to access data.
/com/android/settingslib/drawer/ProviderTile.java,getComponentInfo,Yes, this method requires permissions. It interacts with `PackageManager` and queries provider information, which typically requires permissions like `QUERY_ALL_PACKAGED` or others related to accessing specific components.
/com/android/settingslib/drawer/SwitchController.java,notifyChanged,Yes, because the method involves notifying changes to a `ContentResolver`, which typically requires permissions to access the content it interacts with.
/com/android/settingslib/drawer/SwitchesProvider.java,query,Yes, this method interacts with a URI which typically requires permissions related to data access.
/com/android/settingslib/drawer/SwitchesProvider.java,insert,Yes, the `insert` method typically requires permissions because it involves inserting data into a content provider, which may lead to accessing sensitive data or modifying shared resources.
/com/android/settingslib/inputmethod/InputMethodAndSubtypeUtil.java,getInputMethodSubtypeSelected,Yes, because it accesses secure settings that may require permissions to read.
/com/android/settingslib/inputmethod/InputMethodAndSubtypeUtil.java,putSelectedInputMethodSubtype,Yes, because it interacts with `Settings.Secure`, which typically requires permissions related to secure settings.
/com/android/settingslib/inputmethod/InputMethodAndSubtypeUtil.java,getEnabledInputMethodsAndSubtypeList,Yes, this method requires permissions related to accessing secure settings like input methods.
/com/android/settingslib/inputmethod/InputMethodAndSubtypeEnablerManager.java,save,Yes, this method likely requires permissions to access content providers because it involves obtaining a content resolver through `context.getContentResolver()`.
/com/android/settingslib/inputmethod/InputMethodAndSubtypeUtilCompat.java,putSelectedInputMethodSubtype,Yes, because it modifies system settings related to input methods, which typically requires permissions.
/com/android/settingslib/inputmethod/InputMethodAndSubtypeUtilCompat.java,saveInputMethodSubtypeList,Yes, this method likely requires permissions to modify system settings, specifically related to input methods and user preferences.
/com/android/settingslib/inputmethod/InputMethodAndSubtypeUtilCompat.java,saveInputMethodSubtypeListForUser,Yes, it requires permissions to modify system settings related to input methods.
/com/android/settingslib/net/NetworkCycleChartDataLoader.java,recordUsage,Yes, this method likely requires permissions related to network usage statistics (e.g., `android.permission.READ_NETWORK_USAGE_HISTORY`).
/com/android/settingslib/net/NetworkCycleChartDataLoader.java,getUsageBuckets,Yes, this method likely requires permissions because it interacts with network stats, which typically require specific permissions like `android.permission.ACCESS_NETWORK_STATE` or `android.permission.READ_NETWORK_STATS` in Android.
/com/android/settingslib/net/SummaryForAllUidLoader.java,loadInBackground,Yes, this method requiring permissions is likely since it deals with `NetworkStats`, which typically involves accessing network information and statistics that can require specific permissions like `ACCESS_NETWORK_STATE` or `READ_PHONE_STATE`.
/com/android/settingslib/net/DataUsageController.java,getDataUsageInfo,Yes, this method likely requires permissions related to accessing data usage information on the device.
/com/android/settingslib/net/DataUsageController.java,getWifiDataUsageInfo,Yes, this method likely requires permissions to access data related to Wi-Fi usage, as it deals with network information that is typically protected.
/com/android/settingslib/net/DataUsageController.java,getDataUsageInfo,Yes, this method likely requires permissions related to network data usage, as it involves accessing network policy and data statistics, which typically requires specific permissions in Android.
/com/android/settingslib/net/DataUsageController.java,getHistoricalUsageLevel,Yes, this method likely requires permissions related to accessing network usage data, as it retrieves historical network usage statistics.
/com/android/settingslib/net/DataUsageController.java,getTelephonyManager,Yes, because accessing telephony services typically requires permissions such as `READ_PHONE_STATE` or `ACCESS_FINE_LOCATION` (depending on the use case).
/com/android/settingslib/net/DataUsageController.java,setMobileDataEnabled,Yes, because modifying mobile data settings typically requires specific permissions (e.g., `CHANGE_NETWORK_STATE`).
/com/android/settingslib/net/DataUsageController.java,isMobileDataEnabled,Yes, this method requires permissions because it accesses telephony services to determine mobile data status, which typically requires relevant permissions in Android.
/com/android/settingslib/net/DataUsageController.java,getActiveSubscriberId,Yes, access to the active subscriber ID typically requires the `READ_PHONE_STATE` permission in Android.
/com/android/settingslib/net/DataUsageUtils.java,getMobileTemplate,Yes, this method requires permissions because it interacts with telephony-related services and information, which typically require permissions such as `READ_PHONE_STATE` or `ACCESS_NETWORK_STATE`.
/com/android/settingslib/net/DataUsageUtils.java,getNormalizedMobileTemplate,Yes, because it interacts with the `TelephonyManager`, which requires permissions related to network state and cellular access (e.g., `READ_PHONE_STATE`).
/com/android/settingslib/emergencynumber/EmergencyNumberUtils.java,setEmergencyNumberOverride,Yes, because it involves setting emergency numbers, which typically requires permissions for accessing sensitive telephony features.
/com/android/settingslib/emergencynumber/EmergencyNumberUtils.java,setEmergencyGestureEnabled,Yes, it likely requires permissions. The method involves managing emergency settings, which typically requires special permissions related to user privacy and system settings.
/com/android/settingslib/emergencynumber/EmergencyNumberUtils.java,setEmergencySoundEnabled,Yes, because it modifies a setting related to emergency gestures, which typically requires special permissions for security and privacy reasons.
/com/android/settingslib/emergencynumber/EmergencyNumberUtils.java,getEmergencyGestureEnabled,Yes, this method likely requires permissions to access emergency settings due to the sensitive nature of the information it deals with.
/com/android/settingslib/emergencynumber/EmergencyNumberUtils.java,getEmergencyNumberOverride,Yes, the method likely requires permissions related to accessing emergency numbers, as it interacts with the content resolver which may involve sensitive data.
/com/android/settingslib/emergencynumber/EmergencyNumberUtils.java,getPromotedEmergencyNumbers,Yes, this method may require permissions. It appears to interact with emergency numbers, which typically requires specific permissions (like `READ_EMERGENCY_NUMBERS`) in Android due to privacy and security reasons.
/com/android/settingslib/core/instrumentation/SharedPreferencesLogger.java,doInBackground,Yes, because it involves accessing the PackageManager, which typically requires permissions to access information about installed packages.
/com/android/settingslib/widget/IllustrationPreference.java,getInputStreamFromUri,Yes, access to the URI may require permissions, such as reading from external storage or accessing specific content providers.
/com/android/settingslib/enterprise/ActionDisabledByAdminController.java,updateEnforcedAdmin,Yes, it likely requires permissions because it involves updating the enforced admin, which typically requires specific administrative permissions in Android.
/com/android/settingslib/enterprise/ActionDisabledByAdminControllerFactory.java,isSupervisedDevice,Yes, the method interacts with DevicePolicyManager, which requires permissions related to device management.
/com/android/settingslib/enterprise/ActionDisabledLearnMoreButtonLauncher.java,isEnforcedByDeviceOwnerOnSystemUserMode,Yes, this method likely requires permissions related to device administration, specifically to access the DevicePolicyManager.
/com/android/settingslib/enterprise/ActionDisabledLearnMoreButtonLauncher.java,showHelpPage,Yes, this method likely requires permissions to start an activity, especially if it involves launching an external URL or a help page, which may involve internet access or specific user permissions.
/com/android/settingslib/enterprise/ActionDisabledLearnMoreButtonLauncher.java,showAdminPolicies,Yes, the method likely requires permissions to access device administration policies or settings, as it deals with `EnforcedAdmin` and potentially sensitive admin components.
/com/android/settingslib/connectivity/ConnectivitySubsystemsRecoveryManager.java,isApmEnabled,Yes, this method requires permissions. It accesses the `Settings.Global.AIRPLANE_MODE_ON`, which typically requires the `android.permission.ACCESS_SETTINGS` permission to read system settings.
/com/android/settingslib/connectivity/ConnectivitySubsystemsRecoveryManager.java,isWifiEnabled,Yes, it requires permissions to access Wi-Fi status.
/com/android/settingslib/connectivity/ConnectivitySubsystemsRecoveryManager.java,startTrackingRecoveryAvailability,Yes, the method likely requires permissions because it involves registering a broadcast receiver (`registerReceiver`), which typically requires permissions related to receiving system broadcasts (e.g., AIRPLANE_MODE changes).
/com/android/settingslib/connectivity/ConnectivitySubsystemsRecoveryManager.java,triggerSubsystemRestart,Yes, this method likely requires permissions because it interacts with connectivity features such as WiFi and telephony, which typically require specific permissions in Android (e.g., `ACCESS_WIFI_STATE`, `CHANGE_WIFI_STATE`, `MODIFY_PHONE_STATE`).
/com/android/settingslib/development/DevelopmentSettingsEnabler.java,setDevelopmentSettingsEnabled,Yes, because modifying development settings may require special permissions.
/com/android/settingslib/development/DevelopmentSettingsEnabler.java,isDevelopmentSettingsEnabled,Yes, it requires permissions because accessing development settings requires the `android.permission.READ_SETTINGS` permission.
/com/android/settingslib/development/AbstractEnableAdbPreferenceController.java,isAvailable,Yes, this method requires permissions because it involves checking if a user is an admin, which typically requires appropriate permissions in Android.
/com/android/settingslib/development/AbstractEnableAdbPreferenceController.java,writeAdbSetting,Yes, because it manipulates system settings which typically require specific permissions.
/com/android/settingslib/development/AbstractEnableAdbPreferenceController.java,notifyStateChanged,Yes, because it uses `sendBroadcast`, which may require permissions for the broadcast action.
/com/android/settingslib/development/AbstractLogpersistPreferenceController.java,onCreate,Yes, because `registerReceiver` typically requires the `RECEIVE_BOOT_COMPLETED` permission or other relevant permissions depending on the specific broadcasts being registered for.
/com/android/settingslib/fuelgauge/PowerAllowlistBackend.java,addApp,Yes, this method requires permissions because it interacts with device power management features, which typically require specific permissions to modify system settings.
/com/android/settingslib/fuelgauge/PowerAllowlistBackend.java,removeApp,Yes, because modifying power save settings typically requires specific permissions related to device management or settings access.
/com/android/settingslib/fuelgauge/BatterySaverUtils.java,setPowerSaveMode,Yes, this method likely requires permissions because it interacts with battery-saving settings, which typically require system-level permissions in Android.
/com/android/settingslib/fuelgauge/BatterySaverUtils.java,maybeShowBatterySaverConfirmation,Yes, it requires permissions because it accesses secure settings through `ContentResolver` which typically requires appropriate permissions to read system settings.
/com/android/settingslib/fuelgauge/BatterySaverUtils.java,sendSystemUiBroadcast,Yes, it requires permissions because it sends a broadcast, which may need specific permissions depending on the action and data being sent.
/com/android/settingslib/fuelgauge/BatterySaverUtils.java,setBatterySaverConfirmationAcknowledged,Yes, this method requires permissions because it interacts with secure settings (using `Secure.putIntForUser`), which typically requires WRITE_SECURE_SETTINGS permission.
/com/android/settingslib/fuelgauge/BatterySaverUtils.java,revertScheduleToNoneIfNeeded,Yes, it likely requires permissions because it interacts with system settings related to battery saver mode, which typically requires specific permissions to modify.
/com/android/settingslib/fuelgauge/BatterySaverUtils.java,setBatterySaverScheduleMode,Yes, it requires permissions to modify global system settings related to battery saver.
/com/android/settingslib/notification/ZenModeDialogMetricsLogger.java,logOnEnableZenModeForever,Yes, this method likely requires permissions since it involves changing Do Not Disturb (DND) settings, which typically require specific permissions in the Android system.
/com/android/settingslib/notification/EnableZenModeDialog.java,onClick,Yes, because it interacts with system settings (specifically, modifying Zen mode), which typically requires permissions in Android.
/com/android/settingslib/notification/EnableZenModeDialog.java,getNextAlarm,Yes, it likely requires permission to access alarm data from the system.
/com/android/settingslib/notification/ZenDurationDialog.java,updateZenDuration,Yes, because it interacts with `Settings.Secure`, which typically requires permission to modify secure settings in Android.
/com/android/settingslib/location/SettingsInjector.java,startService,Yes, it requires permissions because it starts a service which may need permissions depending on its functionality (e.g., if it accesses user data or system settings).
/com/android/settingslib/location/RecentLocationApps.java,getAppList,Yes, apps requesting location permissions typically require user consent for privacy reasons.
/com/android/settingslib/location/RecentLocationApps.java,getAppListSorted,Yes, this method likely requires permissions related to accessing location data, as it retrieves a list of apps that recently requested location.
/com/android/settingslib/deviceinfo/AbstractSimStatusImeiInfoPreferenceController.java,isAvailable,Yes, this method checks if the user is an admin and the connection type, which may require permissions like `ACCESS_NETWORK_STATE` or user authentication permissions.
/com/android/settingslib/deviceinfo/PrivateStorageInfo.java,getPrivateStorageInfo,Yes, this method requires permissions because accessing storage information typically involves permissions related to reading or querying storage data.
/com/android/settingslib/deviceinfo/PrivateStorageInfo.java,getTotalSize,Yes, because it interacts with the `StorageStatsManager`, which typically requires storage-related permissions.
/com/android/settingslib/deviceinfo/StorageVolumeProvider.java,getTotalBytes,Yes, because it deals with storage volume information which may require permissions to access.
/com/android/settingslib/deviceinfo/StorageMeasurement.java,measureExactStorage,Yes, this method likely requires permissions because it deals with user storage and might require access to storage-related data or APIs that necessitate user permissions in Android.
/com/android/settingslib/deviceinfo/AbstractConnectivityPreferenceController.java,onStart,Yes, it requires permissions because it registers a receiver for network state changes, which typically requires the `CHANGE_NETWORK_STATE` permission.
/com/android/settingslib/deviceinfo/AbstractImsStatusPreferenceController.java,isAvailable,Yes, this method likely requires permissions because it involves retrieving configuration data from the `CarrierConfigManager`, which often necessitates certain permissions related to network and telecommunications services in Android.
/com/android/settingslib/utils/WorkPolicyUtils.java,showWorkPolicyInfo,Yes, this method may require permissions related to managing device policies or accessing profile information, such as the "BIND_DEVICE_ADMIN" permission.
/com/android/settingslib/utils/WorkPolicyUtils.java,getManagedProfileOwnerComponent,Yes, the method involves accessing device policy services, which requires permissions such as `BIND_DEVICE_ADMIN` to interact with the `DevicePolicyManager`.
/com/android/settingslib/qrcode/QrCamera.java,start,Yes, this method requires permissions. It interacts with the camera to capture pictures, which necessitates camera permissions in Android.
/com/android/settingslib/qrcode/QrCamera.java,setCameraParameter,Yes, the method likely requires permissions because it interacts with the camera hardware, which typically requires camera permissions in Android applications.
/com/android/settingslib/qrcode/QrCamera.java,initCamera,Yes, this method requires permissions because it accesses the camera hardware, which necessitates Camera permissions to function properly in Android applications.
/com/android/settingslib/accounts/AuthenticatorHelper.java,onReceive,Yes, this method likely requires permissions related to account access, as it involves interacting with `AccountManager` and retrieving account information.
/com/android/settingslib/accounts/AuthenticatorHelper.java,listenToAccountUpdates,Yes, this method likely requires permissions because it registers a receiver for account updates, which usually requires permissions related to account management and possibly user data.
/com/android/settingslib/mobile/MobileStatusTracker.java,onSignalStrengthsChanged,Yes, it requires permissions because the method deals with signal strength changes, which typically requires access to telephony-related permissions in Android.
/com/android/settingslib/mobile/MobileMappings.java,readConfig,Yes, this method likely requires permissions because it accesses system services (CarrierConfigManager and SubscriptionManager) which typically require specific permissions in Android (e.g., READ_PHONE_STATE).
/com/android/settingslib/mobile/dataservice/MobileNetworkDatabase.java,deleteSubInfoBySubId,Yes, because deleting subscription information typically requires permissions related to managing subscriptions or accessing sensitive user data.
/com/android/settingslib/mobile/dataservice/MobileNetworkDatabase.java,deleteMobileNetworkInfoBySubId,Yes, because deleting mobile network info typically requires permissions related to telephony and mobile data management in Android.
/com/android/settingslib/bluetooth/HearingAidProfile.java,onServiceConnected,Yes, the method involves Bluetooth operations and may require permissions such as `BLUETOOTH` and `BLUETOOTH_ADMIN` to interact with Bluetooth devices.
/com/android/settingslib/bluetooth/HearingAidProfile.java,getConnectedDevices,Yes, it requires permissions to access Bluetooth devices.
/com/android/settingslib/bluetooth/HearingAidProfile.java,getConnectableDevices,Yes, this method likely requires Bluetooth permissions to access and manage Bluetooth devices.
/com/android/settingslib/bluetooth/HearingAidProfile.java,getDevicesByStates,Yes, this method likely requires permissions related to Bluetooth access, as it deals with Bluetooth devices.
/com/android/settingslib/bluetooth/HearingAidProfile.java,setActiveDevice,Yes, this method likely requires Bluetooth permissions, as it interacts with Bluetooth devices (e.g., `BluetoothDevice` and `mBluetoothAdapter`).
/com/android/settingslib/bluetooth/HearingAidProfile.java,getActiveDevices,Yes, this method requires permissions because it interacts with Bluetooth devices, which typically requires the "BLUETOOTH" and possibly "BLUETOOTH_ADMIN" permissions in Android.
/com/android/settingslib/bluetooth/HearingAidProfile.java,getConnectionPolicy,Yes, because it interacts with Bluetooth devices potentially requiring Bluetooth permissions.
/com/android/settingslib/bluetooth/HearingAidProfile.java,setEnabled,Yes, it requires permissions. This method interacts with Bluetooth devices, which typically requires Bluetooth permissions in Android.
/com/android/settingslib/bluetooth/HearingAidProfile.java,getSummaryResourceForDevice,Yes, it requires Bluetooth permissions to access Bluetooth devices and their connection statuses.
/com/android/settingslib/bluetooth/HapClientProfile.java,onServiceConnected,Yes, this method likely requires permissions. It interacts with Bluetooth profiles and devices, which typically require Bluetooth permissions in Android.
/com/android/settingslib/bluetooth/HapClientProfile.java,getConnectedDevices,Yes, this method likely requires permissions because it interacts with Bluetooth devices, which typically necessitates location and Bluetooth permissions in Android.
/com/android/settingslib/bluetooth/HapClientProfile.java,getConnectableDevices,Yes, requires Bluetooth permissions to access device information.
/com/android/settingslib/bluetooth/HapClientProfile.java,setEnabled,Yes, this method likely requires permissions because it involves enabling or altering the connection policy of a Bluetooth device, which typically requires Bluetooth permissions in Android, such as `BLUETOOTH` or `BLUETOOTH_ADMIN`.
/com/android/settingslib/bluetooth/PbapServerProfile.java,setEnabled,Yes, this method requires permissions. It interacts with Bluetooth devices, which typically requires permissions to access Bluetooth features in Android.
/com/android/settingslib/bluetooth/SapProfile.java,onServiceConnected,Yes, this method likely requires permissions related to Bluetooth usage, as it deals with Bluetooth profiles and device connections.
/com/android/settingslib/bluetooth/SapProfile.java,setEnabled,Yes, it likely requires permissions because it interacts with `BluetoothDevice` and modifies connection policies, which usually require Bluetooth permissions in Android.
/com/android/settingslib/bluetooth/SapProfile.java,getConnectedDevices,Yes, this method requires permissions because it interacts with Bluetooth devices, which typically requires permissions such as `BLUETOOTH` and `BLUETOOTH_ADMIN` in Android.
/com/android/settingslib/bluetooth/MapClientProfile.java,onServiceConnected,Yes, this method likely requires permissions related to Bluetooth operations, as it involves Bluetooth profiles and connected devices.
/com/android/settingslib/bluetooth/MapClientProfile.java,setEnabled,Yes, this method requires permissions because it interacts with Bluetooth devices, which typically necessitates Bluetooth-related permissions in Android applications.
/com/android/settingslib/bluetooth/MapClientProfile.java,getConnectedDevices,Yes, this method requires permissions. It interacts with Bluetooth devices, which typically requires `BLUETOOTH` and/or `BLUETOOTH_CONNECT` permissions in Android.
/com/android/settingslib/bluetooth/MapClientProfile.java,getSummaryResourceForDevice,Yes, because accessing Bluetooth devices typically requires location permissions.
/com/android/settingslib/bluetooth/HidProfile.java,onServiceConnected,Yes, because this method deals with Bluetooth profile connections, which typically require Bluetooth permissions (`BLUETOOTH`, `BLUETOOTH_ADMIN`) in Android.
/com/android/settingslib/bluetooth/HidProfile.java,isEnabled,Yes, this method likely requires permissions because it interacts with Bluetooth devices, which typically necessitates location or Bluetooth permissions in Android.
/com/android/settingslib/bluetooth/HidProfile.java,setEnabled,Yes, this method likely requires permissions to manage Bluetooth device connections, such as `BLUETOOTH` and `BLUETOOTH_ADMIN`.
/com/android/settingslib/bluetooth/HearingAidDeviceManager.java,initHearingAidDeviceIfNeeded,Yes, this method likely requires permissions related to Bluetooth usage, as it interacts with Bluetooth devices to initialize hearing aids.
/com/android/settingslib/bluetooth/HearingAidDeviceManager.java,onProfileConnectionStateChangedIfProcessed,Yes, because it involves Bluetooth operations, which typically require Bluetooth permissions in Android.
/com/android/settingslib/bluetooth/HearingAidDeviceManager.java,onActiveDeviceChanged,Yes, this method likely requires Bluetooth permissions to access and manipulate Bluetooth device settings.
/com/android/settingslib/bluetooth/A2dpSinkProfile.java,onServiceConnected,Yes, the method interacts with Bluetooth profiles and devices, which require Bluetooth permissions in the AndroidManifest.
/com/android/settingslib/bluetooth/A2dpSinkProfile.java,getConnectedDevices,Yes, this method requires permissions. It accesses Bluetooth devices, which typically requires `BLUETOOTH` and perhaps `BLUETOOTH_ADMIN` permissions in Android.
/com/android/settingslib/bluetooth/A2dpSinkProfile.java,setEnabled,Yes, it requires permissions related to Bluetooth operations, specifically to manage Bluetooth device connections.
/com/android/settingslib/bluetooth/PbapClientProfile.java,getConnectedDevices,Yes, this method requires permissions because it accesses connected Bluetooth devices, which typically requires Bluetooth permissions in Android (`BLUETOOTH` and `BLUETOOTH_ADMIN`).
/com/android/settingslib/bluetooth/PbapClientProfile.java,setEnabled,Yes, this method requires permissions because it involves setting connection policies for Bluetooth devices, which typically requires Bluetooth permissions in Android.
/com/android/settingslib/bluetooth/BluetoothDiscoverableTimeoutReceiver.java,setDiscoverableAlarm,Yes, this method likely requires permissions related to setting alarms and Bluetooth discoverability.
/com/android/settingslib/bluetooth/BluetoothDiscoverableTimeoutReceiver.java,cancelDiscoverableAlarm,Yes, it requires permissions. The method interacts with Bluetooth discoverability, which typically requires permissions related to Bluetooth in Android.
/com/android/settingslib/bluetooth/BluetoothDiscoverableTimeoutReceiver.java,onReceive,Yes, because it involves Bluetooth functionality that typically requires permissions like `BLUETOOTH` and `BLUETOOTH_ADMIN`.
/com/android/settingslib/bluetooth/LocalBluetoothProfileManager.java,updateLocalProfiles,Yes, this method requires permissions as it interacts with Bluetooth profiles, which typically requires permissions like `BLUETOOTH` and `BLUETOOTH_ADMIN` in Android for accessing or modifying Bluetooth features.
/com/android/settingslib/bluetooth/LocalBluetoothProfileManager.java,setBluetoothStateOn,Yes, likely requires Bluetooth permissions to change Bluetooth state and read paired devices.
/com/android/settingslib/bluetooth/LocalBluetoothProfileManager.java,onReceive,Yes, this method likely requires Bluetooth permissions because it interacts with Bluetooth devices, which typically necessitate permissions such as BLUETOOTH and BLUETOOTH_ADMIN in Android.
/com/android/settingslib/bluetooth/LocalBluetoothProfileManager.java,onReceiveInternal,Yes, this method requires permissions because it deals with Bluetooth device connections and state changes, which typically need permissions like `BLUETOOTH` and `BLUETOOTH_ADMIN` in the Android manifest.
/com/android/settingslib/bluetooth/LocalBluetoothProfileManager.java,onReceive,Yes, because it involves Bluetooth operations, which typically require Bluetooth permissions in the Android manifest.
/com/android/settingslib/bluetooth/CachedBluetoothDeviceManager.java,addDevice,Yes, requires permissions because it deals with Bluetooth devices, which typically requires location permissions in Android.
/com/android/settingslib/bluetooth/CachedBluetoothDeviceManager.java,onBluetoothStateChanged,Yes, because managing Bluetooth state generally requires Bluetooth-related permissions.
/com/android/settingslib/bluetooth/CachedBluetoothDeviceManager.java,shouldPairByCsip,Yes, because it involves Bluetooth operations which typically require the BLUETOOTH and BLUETOOTH_ADMIN permissions in Android.
/com/android/settingslib/bluetooth/CachedBluetoothDeviceManager.java,pairDeviceByCsip,Yes, because pairing with Bluetooth devices typically requires Bluetooth permissions in Android.
/com/android/settingslib/bluetooth/CachedBluetoothDeviceManager.java,syncConfigFromMainDevice,Yes, because it involves accessing Bluetooth devices and potentially user data, which typically requires permissions.
/com/android/settingslib/bluetooth/CachedBluetoothDeviceManager.java,onBondStateChangedIfProcess,Yes, requires permissions. The method deals with Bluetooth device bonding, which typically requires the `BLUETOOTH` and `BLUETOOTH_ADMIN` permissions on Android.
/com/android/settingslib/bluetooth/LocalBluetoothAdapter.java,getProfileProxy,Yes, this method likely requires permissions related to Bluetooth access, as it involves obtaining a Bluetooth profile proxy.
/com/android/settingslib/bluetooth/LocalBluetoothAdapter.java,getBondedDevices,Yes, because accessing bonded Bluetooth devices typically requires Bluetooth permissions in Android.
/com/android/settingslib/bluetooth/LocalBluetoothAdapter.java,setScanMode,Yes, because setting the scan mode for Bluetooth typically requires Bluetooth permissions.
/com/android/settingslib/bluetooth/LocalBluetoothAdapter.java,startScanning,Yes, the method likely requires permissions related to Bluetooth operations, such as discovering devices.
/com/android/settingslib/bluetooth/LocalBluetoothAdapter.java,setBluetoothStateInt,Yes, the method likely requires Bluetooth permissions. It involves setting the Bluetooth state, which typically requires `BLUETOOTH` and `BLUETOOTH_ADMIN` permissions in Android.
/com/android/settingslib/bluetooth/LocalBluetoothAdapter.java,syncBluetoothState,Yes, because the method interacts with Bluetooth functionality, which typically requires Bluetooth permissions (e.g., BLUETOOTH, BLUETOOTH_ADMIN).
/com/android/settingslib/bluetooth/LocalBluetoothAdapter.java,setBluetoothEnabled,Yes, because enabling Bluetooth requires the `BLUETOOTH` and potentially `BLUETOOTH_ADMIN` permissions in Android.
/com/android/settingslib/bluetooth/LocalBluetoothAdapter.java,getRemoteDevice,Yes, требуется разрешение на доступ к Bluetooth устройствам.
/com/android/settingslib/bluetooth/MapProfile.java,setEnabled,Yes, because it interacts with Bluetooth devices, which requires Bluetooth permissions.
/com/android/settingslib/bluetooth/MapProfile.java,getConnectedDevices,Yes, this method likely requires permissions related to Bluetooth access, such as `BLUETOOTH` or `BLUETOOTH_ADMIN`, to get connected devices.
/com/android/settingslib/bluetooth/MapProfile.java,getSummaryResourceForDevice,Yes, this method interacts with Bluetooth devices, which typically requires Bluetooth permissions in Android (e.g., `BLUETOOTH` and `BLUETOOTH_ADMIN`).
/com/android/settingslib/bluetooth/HfpClientProfile.java,onServiceConnected,Yes, it likely requires permissions. It involves Bluetooth operations which typically require `BLUETOOTH` and `BLUETOOTH_ADMIN` permissions.
/com/android/settingslib/bluetooth/HfpClientProfile.java,getConnectedDevices,Yes, this method requires permissions because it interacts with Bluetooth devices, which generally requires Bluetooth permissions in Android.
/com/android/settingslib/bluetooth/HfpClientProfile.java,isEnabled,Yes, requires permissions. Accessing Bluetooth state often requires "BLUETOOTH" and "BLUETOOTH_ADMIN" permissions in Android.
/com/android/settingslib/bluetooth/HfpClientProfile.java,setEnabled,Yes, because it manipulates Bluetooth device connections which requires Bluetooth permissions.
/com/android/settingslib/bluetooth/HearingAidAudioRoutingHelper.java,getMatchedHearingDeviceAttributes,Yes, this method likely requires permissions to access Bluetooth devices, specifically to communicate with hearing aid devices.
/com/android/settingslib/bluetooth/PanProfile.java,setEnabled,Yes, this method requires permissions because it interacts with Bluetooth functionality, which typically requires specific permissions such as `BLUETOOTH` and `BLUETOOTH_ADMIN`.
/com/android/settingslib/bluetooth/BluetoothCallback.java,onBluetoothStateChanged,Yes, this method requires permissions because it deals with the local Bluetooth adapter's state, which typically requires `BLUETOOTH` and possibly `BLUETOOTH_ADMIN` permissions.
/com/android/settingslib/bluetooth/BluetoothCallback.java,onScanningStateChanged,Yes, it requires permissions because Bluetooth operations typically involve accessing location or Bluetooth permissions.
/com/android/settingslib/bluetooth/BluetoothCallback.java,onDeviceBondStateChanged,Yes, because it deals with Bluetooth device bonding, which requires permission to access Bluetooth features.
/com/android/settingslib/bluetooth/BluetoothCallback.java,onConnectionStateChanged,Yes, because it involves Bluetooth operations which typically require Bluetooth permissions.
/com/android/settingslib/bluetooth/BluetoothCallback.java,onAudioModeChanged,Yes, this method may require permissions related to telephony and Bluetooth states.
/com/android/settingslib/bluetooth/HeadsetProfile.java,getConnectionStatus,Yes, this method likely requires permissions. It involves querying the connection status of a Bluetooth device, which typically requires Bluetooth permissions in Android.
/com/android/settingslib/bluetooth/HeadsetProfile.java,setActiveDevice,Yes, this method requires permissions because it interacts with Bluetooth functionality, which typically requires permissions like `BLUETOOTH` and `BLUETOOTH_ADMIN` in Android.
/com/android/settingslib/bluetooth/HeadsetProfile.java,getActiveDevice,Yes, this method likely requires permissions because it interacts with Bluetooth functionalities, which typically require Bluetooth permissions in Android.
/com/android/settingslib/bluetooth/HeadsetProfile.java,setEnabled,Yes, this method requires permissions because it interacts with Bluetooth devices and manages their connection policies, which typically requires Bluetooth-related permissions in Android.
/com/android/settingslib/bluetooth/HeadsetProfile.java,getConnectedDevices,Yes, this method likely requires permissions because it deals with Bluetooth connections, which typically requires specific permissions (like `BLUETOOTH` and `BLUETOOTH_ADMIN`) in Android.
/com/android/settingslib/bluetooth/HeadsetProfile.java,getSummaryResourceForDevice,Yes, because it involves Bluetooth operations, which typically require Bluetooth permissions in Android.
/com/android/settingslib/bluetooth/LocalBluetoothLeBroadcastMetadata.java,convertToBroadcastMetadata,Yes, this method requires permissions related to Bluetooth access. It uses `BluetoothAdapter.getDefaultAdapter()` which necessitates the `BLUETOOTH` and potentially `BLUETOOTH_ADMIN` permissions in Android.
/com/android/settingslib/bluetooth/BluetoothEventManager.java,registerIntentReceiver,Yes, this method likely requires permissions to receive broadcasts, as registering a receiver for broadcasts can involve listening to system-wide events or messages, which typically requires appropriate permissions defined in the Android manifest.
/com/android/settingslib/bluetooth/BluetoothEventManager.java,readPairedDevices,Yes, this method requires permissions. Specifically, it interacts with Bluetooth devices, which typically requires `BLUETOOTH` and `BLUETOOTH_ADMIN` permissions in Android.
/com/android/settingslib/bluetooth/BluetoothEventManager.java,onReceive,Yes, this method likely requires permissions because it involves handling Bluetooth devices, which typically requires certain permissions (e.g., BLUETOOTH, BLUETOOTH_ADMIN) in Android.
/com/android/settingslib/bluetooth/BluetoothEventManager.java,onReceive,Yes, this method likely requires permissions related to Bluetooth operations, such as accessing Bluetooth state or managing Bluetooth connections.
/com/android/settingslib/bluetooth/BluetoothEventManager.java,onReceive,Yes, this method likely requires Bluetooth permissions, as it interacts with Bluetooth devices (e.g., receiving Bluetooth device information).
/com/android/settingslib/bluetooth/BluetoothEventManager.java,onReceive,Yes, this method likely requires Bluetooth permissions, such as `BLUETOOTH` and `BLUETOOTH_ADMIN`, to interact with Bluetooth devices.
/com/android/settingslib/bluetooth/BluetoothEventManager.java,onReceive,Yes, it likely requires permissions related to Bluetooth access, as it operates with Bluetooth devices and actions like bonding and unbonding.
/com/android/settingslib/bluetooth/BluetoothEventManager.java,onReceive,Yes, requires permissions related to Bluetooth access.
/com/android/settingslib/bluetooth/BluetoothEventManager.java,onReceive,Yes, because interacting with Bluetooth devices typically requires Bluetooth permissions in Android.
/com/android/settingslib/bluetooth/BluetoothEventManager.java,onReceive,Yes, this method involves Bluetooth operations which typically require Bluetooth permissions in Android (such as `BLUETOOTH` and `BLUETOOTH_ADMIN`).
/com/android/settingslib/bluetooth/BluetoothEventManager.java,onReceive,Yes, this method likely requires permissions related to Bluetooth usage, such as `BLUETOOTH` and `BLUETOOTH_ADMIN`.
/com/android/settingslib/bluetooth/BluetoothEventManager.java,onReceive,Yes, this method likely requires permissions because it deals with Bluetooth devices, which generally require Bluetooth-related permissions in Android.
/com/android/settingslib/bluetooth/HidDeviceProfile.java,setEnabled,Yes, because it involves enabling or disabling Bluetooth functionality, which requires Bluetooth permissions in Android.
/com/android/settingslib/bluetooth/HidDeviceProfile.java,getSummaryResourceForDevice,Yes, the method deals with Bluetooth devices, which requires Bluetooth permissions to access their state or perform operations on them.
/com/android/settingslib/users/AppCopyHelper.java,installSelectedApps,Yes, this method likely requires permissions because it installs packages, which typically involves modifying the device's app settings or filesystem.
/com/android/settingslib/users/AppCopyHelper.java,installSelectedApp,Yes, this method likely requires permissions because it is performing actions related to installing or managing applications, which typically involve permissions like `PACKAGE_INSTALL`, `INSTALL_PACKAGES`, or similar permissions in the Android environment.
/com/android/settingslib/users/EditUserPhotoController.java,saveNewUserPhotoBitmap,Yes, the method `saveNewUserPhotoBitmap` interacts with files, which typically requires storage permissions in Android to create or modify files.
/com/android/settingslib/users/EditUserPhotoController.java,removeNewUserPhotoBitmapFile,Yes, because it likely accesses the filesystem to delete a file, which requires storage permissions.
/com/android/settingslib/users/GrantAdminDialogController.java,createDialog,Yes, this method likely requires permissions because it is related to granting admin privileges, which typically needs specific permissions in Android (like BIND_DEVICE_ADMIN).
/com/android/settingslib/users/AppRestrictionsHelper.java,applyUserAppState,Yes, because it appears to manipulate application states, which typically requires permissions related to package management and application visibility.
/com/android/settingslib/users/CreateUserDialogController.java,getChangePhotoAdminRestriction,Yes, the method likely requires permissions because it checks for a restriction on user settings (related to changing the user icon), which typically requires administrative permissions in Android.
/com/android/settingslib/users/AvatarPhotoController.java,takePhoto,Yes, the method `takePhoto` requires permissions to access the camera.
/com/android/settingslib/users/AvatarPhotoController.java,choosePhoto,Yes, because it involves choosing images, which typically requires storage permissions to access the user's photos.
/com/android/settingslib/users/AvatarPhotoController.java,copyAndCropPhoto,Yes, this method requires permissions to access and manipulate photos, as it involves operations with `Uri` associated with images which generally requires READ_EXTERNAL_STORAGE and/or WRITE_EXTERNAL_STORAGE permissions in Android.
/com/android/settingslib/users/AvatarPhotoController.java,cropPhoto,Yes, this method requires permissions because it interacts with the camera to crop a photo.
/com/android/settingslib/users/AvatarPhotoController.java,appendOutputExtra,Yes, this method requires permissions because it deals with `Uri` access that needs read/write permissions for security and privacy.
/com/android/settingslib/users/AvatarPhotoController.java,onPhotoNotCropped,Yes, because it requires access to the device's storage to read from the `Uri` and possibly write back the cropped image, which involves permissions like `READ_EXTERNAL_STORAGE` and `WRITE_EXTERNAL_STORAGE`.
/com/android/settingslib/users/AvatarPhotoController.java,getRotation,Yes, this method requires permissions because it reads the EXIF data from an image, which typically requires access to external storage.
/com/android/settingslib/users/AvatarPhotoController.java,saveBitmapToFile,Yes, because saving a file typically requires storage permissions.
/com/android/settingslib/users/AvatarPhotoController.java,startActivityForResult,Yes, this method requires permissions to start activities, especially if the activity being launched requires specific permissions to function properly.
/com/android/settingslib/users/AvatarPhotoController.java,startSystemActivityForResult,Yes, this method may require permissions related to starting activities or accessing specific packages, depending on the intent being used.
/com/android/settingslib/users/AvatarPhotoController.java,createTempImageUri,Yes, the method requires permissions because it involves file operations which may require storage access permissions.
/com/android/settingslib/users/EditUserInfoController.java,getChangePhotoAdminRestriction,Yes, requires permission to check user restrictions on changing photo settings managed by an admin (likely associated with device policy management).
/com/android/settingslib/users/PhotoCapabilityUtils.java,isDeviceLocked,Yes, because accessing the device lock state may require the `USE_FINGERPRINT` or related permissions.
/com/android/settingslib/applications/DefaultAppInfo.java,getComponentInfo,Yes, access to component information usually requires permissions, specifically if it involves accessing system services or sensitive components.
/com/android/settingslib/applications/StorageStatsSource.java,getExternalStorageStats,Yes, because accessing external storage stats typically requires specific permissions related to storage access in Android.
/com/android/settingslib/applications/StorageStatsSource.java,getStatsForUid,Yes, it likely requires permissions related to accessing storage statistics for the specified UID.
/com/android/settingslib/applications/StorageStatsSource.java,getStatsForPackage,Yes, this method likely requires permissions to access storage stats for a specific package, which involves querying storage usage information that may not be accessible without appropriate permissions.
/com/android/settingslib/applications/ServiceListing.java,setListening,Yes, this method requires permissions because it involves registering a receiver and an observer, which typically requires permissions related to accessing system broadcasts and content changes in an Android application.
/com/android/settingslib/applications/RecentAppOpsAccess.java,createForLocation,Yes, because accessing location services may require location permissions (coarse or fine).
/com/android/settingslib/applications/RecentAppOpsAccess.java,createForMicrophone,Yes, it requires microphone permission for accessing the microphone.
/com/android/settingslib/applications/RecentAppOpsAccess.java,createForCamera,Yes, this method likely requires camera permissions, as it is creating an instance related to camera access.
/com/android/settingslib/applications/RecentAppOpsAccess.java,getAppList,Yes, this method likely requires permissions. It interacts with `AppOpsManager` and checks app permissions which necessitates permissions such as `PACKAGE_USAGE_STATS`.
/com/android/settingslib/applications/RecentAppOpsAccess.java,getAppListSorted,Yes, this method likely requires permissions as it deals with accessing information about app usage, which typically involves sensitive data that requires user consent.
/com/android/settingslib/applications/RecentAppOpsAccess.java,getAccessFromOps,Yes, it likely requires permissions due to the involvement of `AppOpsManager`, which typically deals with app operations that may require specific permissions for accessing app usage data.
/com/android/settingslib/suggestions/SuggestionController.java,start,Yes, the method likely requires permissions because it involves binding a service, which typically requires specific permissions defined in the AndroidManifest.xml.
/com/android/settingslib/display/DisplayDensityConfiguration.java,setForcedDisplayDensity,Yes, this method likely requires permissions to modify display settings, as it applies changes to the display density which can impact user experience and might require system-level permissions.
/com/android/settingslib/display/DisplayDensityUtils.java,setForcedDisplayDensity,Yes, this method may require permissions to change display settings, as it directly manipulates display density settings potentially affecting user experience.
/com/android/settingslib/devicestate/AndroidSecureSettings.java,putStringForUser,Yes, this method likely requires permissions to modify shared settings based on its interaction with `Settings.Secure`.
/com/android/settingslib/devicestate/AndroidSecureSettings.java,getStringForUser,Yes, it likely requires permission to access user-specific settings or secure data.
/com/android/settingslib/devicestate/AndroidSecureSettings.java,registerContentObserver,Yes, because it is likely interacting with content providers which typically require permissions to access their data.
/com/android/settingslib/accessibility/AccessibilityButtonHelper.java,isRequestedByAccessibilityService,Yes, it requires permission to access accessibility features, specifically `BIND_ACCESSIBILITY_SERVICE`.
/com/android/settingslib/accessibility/AccessibilityUtils.java,getEnabledServicesFromSettings,Yes, this method requires permissions to access accessibility services settings, which are considered sensitive in Android.
/com/android/settingslib/accessibility/AccessibilityUtils.java,setAccessibilityServiceState,Yes, this method likely requires permissions because it changes the state of an accessibility service, which typically requires specific permissions to ensure user control and privacy.
/com/android/settingslib/accessibility/AccessibilityUtils.java,setAccessibilityServiceState,Yes, this method requires permissions because it modifies system settings related to accessibility services, which typically requires the 'WRITE_SECURE_SETTINGS' permission.
/com/android/settingslib/accessibility/AccessibilityUtils.java,getInstalledServices,Yes, the method interacts with accessibility services, which require the `BIND_ACCESSIBILITY_SERVICE` permission in Android.
/com/android/settingslib/dream/DreamBackend.java,getDreamInfos,Yes, this method requires permissions because it interacts with package manager services and retrieves metadata about active dreams, which typically requires specific permissions in Android for security and privacy reasons.
/com/android/settingslib/dream/DreamBackend.java,setBoolean,Yes, it requires permissions because it interacts with `Settings.Secure`, which may require permissions to modify secure system settings.
/com/android/settingslib/dream/DreamBackend.java,launchSettings,Yes, this method likely requires permissions because it involves launching an activity (with `startActivity`), which typically requires specific permissions depending on the components being accessed or the actions being performed.
/com/android/settingslib/media/LocalMediaManager.java,getMutingExpectedDevice,Yes, the method involves Bluetooth operations, which typically require permissions such as `BLUETOOTH` and possibly `BLUETOOTH_ADMIN` in Android.
/com/android/settingslib/media/LocalMediaManager.java,buildDisconnectedBluetoothDevice,Yes, the method likely requires Bluetooth-related permissions to access Bluetooth devices and manage Bluetooth connections.
/com/android/sharedstoragebackup/ObbBackupService.java,backupObbs,Yes, this method likely requires permissions. It deals with backing up OBB files, which typically necessitates permissions related to storage access and backup operations on the device, such as `WRITE_EXTERNAL_STORAGE` and `BIND_BACKUP_AGENT`.
/com/android/sharedstoragebackup/ObbBackupService.java,restoreObbFile,Yes, because restoring OBB files typically requires access to external storage, which necessitates the appropriate permissions.
/com/android/sharedstoragebackup/ObbBackupService.java,allFileContents,Yes, this method may require permissions. The method appears to access the file system to read directory contents, which typically requires storage permissions on Android devices.
/com/android/sharedstoragebackup/SharedStorageAgent.java,onCreate,Yes, this method likely requires permissions related to accessing storage services, as it interacts with the `StorageManager`.
/com/android/sharedstoragebackup/SharedStorageAgent.java,onFullBackup,Yes, this method requires permissions because it involves backing up shared-storage files, which requires access to external storage.
/com/android/sharedstoragebackup/SharedStorageAgent.java,onRestoreFile,Yes, this method likely requires permissions as it involves restoring files to shared storage, which typically necessitates storage-related permissions in Android.
/com/android/server/SensorNotificationService.java,onBootPhase,Yes, this method requires permissions because it interacts with the `SensorManager` and `LocationManager`, which typically require permissions like `BODY_SENSORS` and `ACCESS_FINE_LOCATION` to access sensor and location data.
/com/android/server/SensorNotificationService.java,broadcastDynamicSensorChanged,Yes, this method likely requires permissions because it involves broadcasting an intent (`sendBroadcastAsUser`), which typically requires specific permissions in Android to ensure only authorized apps can send certain broadcasts.
/com/android/server/SensorNotificationService.java,onLocationChanged,Yes, this method requires permissions. It is related to location updates in Android, which typically require location permissions (ACCESS_FINE_LOCATION or ACCESS_COARSE_LOCATION) to access the user's current location privacy-sensitive data.
/com/android/server/TelephonyRegistry.java,canReadCallLog,Yes, it requires permission to read call logs.
/com/android/server/TelephonyRegistry.java,isCallStateReadPhoneStateEnforcedInPlatformCompat,Yes, it relates to call state permissions.
/com/android/server/TelephonyRegistry.java,isActiveDataSubIdReadPhoneStateEnforcedInPlatformCompat,Yes, because it mentions the need for `READ_PHONE_STATE` permission since Android 12.
/com/android/server/TelephonyRegistry.java,isCellInfoReadPhoneStateEnforcedInPlatformCompat,Yes, because it requires `READ_PHONE_STATE` permission since Android 12 to access cell info.
/com/android/server/TelephonyRegistry.java,isDisplayInfoReadPhoneStateEnforcedInPlatformCompat,Yes, the method checks for the READ_PHONE_STATE permission, which is necessary for accessing phone state information on certain Android versions.
/com/android/server/TelephonyRegistry.java,isPhoneStatePermissionRequired,Yes, this method appears to involve checking conditions related to phone state events, which may require permissions to access sensitive information regarding phone state (like read phone state).
/com/android/server/TelephonyRegistry.java,isPrecisePhoneStatePermissionRequired,Yes, because it checks if the app requires the precise phone state permission.
/com/android/server/TelephonyRegistry.java,isActiveEmergencySessionPermissionRequired,Yes, because it checks for emergency call and SMS events, which typically require permissions related to telephony.
/com/android/server/TelephonyRegistry.java,handleMessage,Yes, this method likely requires permissions related to telephony, such as accessing the telephony manager and subscription data, which often necessitate specific permissions in Android (e.g., `READ_PHONE_STATE` or `ACCESS_FINE_LOCATION`).
/com/android/server/TelephonyRegistry.java,onReceive,Yes, the method likely requires permissions because it interacts with broadcast actions related to user switching and subscription information, which typically require specific permissions in Android.
/com/android/server/TelephonyRegistry.java,getTelephonyManager,Yes, because accessing the TelephonyManager generally requires permissions related to telephony services (e.g., READ_PHONE_STATE).
/com/android/server/TelephonyRegistry.java,notifySubscriptionInfoChanged,Yes, the method calls `checkNotifyPermission`, which implies a permission check may be required before executing its logic.
/com/android/server/TelephonyRegistry.java,notifyOpportunisticSubscriptionInfoChanged,Yes, the method likely requires permissions because it includes a check for `checkNotifyPermission`, which suggests the need for permission verification before executing its functionality.
/com/android/server/TelephonyRegistry.java,listen,Yes, the method requires permissions. The method deals with location access and telephony events which typically require permissions like `ACCESS_FINE_LOCATION`, `ACCESS_COARSE_LOCATION`, and telephony-related permissions to operate.
/com/android/server/TelephonyRegistry.java,getCallIncomingNumber,Yes, the method likely requires permission to read call logs, which is related to the `canReadCallLog` check in the implementation.
/com/android/server/TelephonyRegistry.java,notifyCallStateForAllSubs,Yes, it appears this method involves checking permissions related to reading call logs (indicated by the call to `canReadCallLog`).
/com/android/server/TelephonyRegistry.java,notifyCallState,Yes, this method requires permission because it involves telephony operations, which typically require permissions related to phone state or call handling in Android.
/com/android/server/TelephonyRegistry.java,notifyServiceStateForPhoneId,Yes, the method likely requires permissions because it checks for location access permissions (`checkFineLocationAccess`, `checkCoarseLocationAccess`) within its logic, which are sensitive and typically require explicit permissions to access in Android.
/com/android/server/TelephonyRegistry.java,notifySimActivationStateChangedForPhoneId,Yes, the method likely requires permissions because it involves notifying and managing SIM activation states, which typically requires privileges related to telephony services in Android.
/com/android/server/TelephonyRegistry.java,notifySignalStrengthForPhoneId,Yes, this method requires permissions, as it involves checking for notifications related to signal strength which likely falls under telephony permissions for accessing network state or signal strength information.
/com/android/server/TelephonyRegistry.java,notifyCarrierNetworkChange,Yes, the method is related to carrier network changes, which typically require specific permissions to access telephony features and carrier privileges.
/com/android/server/TelephonyRegistry.java,notifyCarrierNetworkChangeWithSubId,Yes, it requires carrier privilege permissions to notify carrier network changes for a specific subscription ID (subId).
/com/android/server/TelephonyRegistry.java,notifyCarrierNetworkChangeWithPermission,Yes, this method likely requires permissions related to carrier network changes and possibly telephony operations.
/com/android/server/TelephonyRegistry.java,notifyCellInfo,Yes, this method likely requires permissions related to accessing cellular information or network state.
/com/android/server/TelephonyRegistry.java,notifyCellInfoForSubscriber,Yes, this method checks for permissions related to location access (`checkCoarseLocationAccess` and `checkFineLocationAccess`).
/com/android/server/TelephonyRegistry.java,notifyMessageWaitingChangedForPhoneId,Yes, this method likely requires permissions because it involves notifying changes related to message waiting indicators, which typically requires permissions to access telephony features in Android.
/com/android/server/TelephonyRegistry.java,notifyDisplayInfoChanged,Yes, because it checks for notification permissions before proceeding with the operation.
/com/android/server/TelephonyRegistry.java,notifyCallForwardingChangedForSubscriber,Yes, the method likely requires permissions because it seems to interact with telephony features (e.g., call forwarding), which typically require specific permissions in Android, such as `Manifest.permission.READ_PHONE_STATE` or similar telephony-related permissions.
/com/android/server/TelephonyRegistry.java,notifyDataActivityForSubscriber,Yes, this method likely requires permissions because it involves accessing phone-related data, which typically requires specific permissions in Android (e.g., `READ_PHONE_STATE`).
/com/android/server/TelephonyRegistry.java,notifyDataConnectionForSubscriber,Yes, it requires permissions. The method checks notifications through `checkNotifyPermission`, indicating the need for appropriate permissions to modify or send notifications related to data connection states.
/com/android/server/TelephonyRegistry.java,notifyCellLocationForSubscriber,Yes, the method requires permissions because it involves checking for coarse or fine location access, which requires location permissions in Android.
/com/android/server/TelephonyRegistry.java,notifyPreciseCallState,Yes, because the method calls `checkNotifyPermission` which suggests it checks for a specific permission before proceeding.
/com/android/server/TelephonyRegistry.java,notifyImsDisconnectCause,Yes, it requires permissions because it checks for notification permissions before executing its main functionality.
/com/android/server/TelephonyRegistry.java,notifySrvccStateChanged,Yes, because the method involves telephony-related operations that typically require permissions like `ACCESS_FINE_LOCATION` or `READ_PHONE_STATE`.
/com/android/server/TelephonyRegistry.java,notifyOemHookRawEventForSubscriber,Yes, the method likely requires permissions because it checks for "notify" permissions before executing its main functionality.
/com/android/server/TelephonyRegistry.java,notifyPhoneCapabilityChanged,Yes, this method likely requires permissions because it interacts with phone capabilities, which generally involves sensitive user data and requires appropriate permissions to be accessed or modified.
/com/android/server/TelephonyRegistry.java,notifyActiveDataSubIdChanged,Yes, this method likely requires permissions to notify and handle telephony events.
/com/android/server/TelephonyRegistry.java,notifyRadioPowerStateChanged,Yes, this method may require permissions as it includes a call to `checkNotifyPermission`.
/com/android/server/TelephonyRegistry.java,notifyEmergencyNumberList,Yes, the method checks for permissions related to notifying users about emergency numbers.
/com/android/server/TelephonyRegistry.java,notifyOutgoingEmergencyCall,Yes, this method likely requires permissions because it checks for notification permissions with `checkNotifyPermission`.
/com/android/server/TelephonyRegistry.java,notifyOutgoingEmergencySms,Yes, because it includes a permission check with `checkNotifyPermission`.
/com/android/server/TelephonyRegistry.java,notifyCallQualityChanged,Yes, the method likely requires permissions because it interacts with call quality, which may involve accessing sensitive telephony data.
/com/android/server/TelephonyRegistry.java,notifyRegistrationFailed,Yes, the method requires permissions because it checks for location access and interacts with telephony events, which typically require the appropriate runtime permissions in Android.
/com/android/server/TelephonyRegistry.java,notifyBarringInfoChanged,Yes, this method requires permissions because it involves the listening and notifying of telephony-related events, which typically requires permissions like `ACCESS_FINE_LOCATION` or other telephony permissions in Android.
/com/android/server/TelephonyRegistry.java,notifyPhysicalChannelConfigForSubscriber,Yes, it requires permissions because it involves notifying changes related to physical channel configurations, which typically requires specific telephony permissions in Android.
/com/android/server/TelephonyRegistry.java,notifyDataEnabled,Yes, this method likely requires permissions related to telephony and data usage, as it deals with enabling and notifying about data changes in a telephony context.
/com/android/server/TelephonyRegistry.java,notifyAllowedNetworkTypesChanged,Yes, the method appears to require permissions because it includes a check for a notification permission (`checkNotifyPermission`).
/com/android/server/TelephonyRegistry.java,notifyLinkCapacityEstimateChanged,Yes, this method likely requires permissions as it involves notifying changes in link capacity estimates, which may involve accessing sensitive telephony-related information.
/com/android/server/TelephonyRegistry.java,addCarrierPrivilegesCallback,Yes, because it enforces the `READ_PRIVILEGED_PHONE_STATE` permission.
/com/android/server/TelephonyRegistry.java,removeCarrierPrivilegesCallback,Yes, the method requires permissions because it calls `enforceCallingOrSelfPermission` with `READ_PRIVILEGED_PHONE_STATE`, which indicates that it checks for a specific permission.
/com/android/server/TelephonyRegistry.java,notifyCarrierPrivilegesChanged,Yes, this method requires permissions to check and notify carrier privileges.
/com/android/server/TelephonyRegistry.java,notifyCarrierServiceChanged,Yes, the method likely requires permissions, as it includes a permission check (`checkNotifyPermission`) before proceeding with its operations.
/com/android/server/TelephonyRegistry.java,notifyCarrierConfigChanged,Yes, because it checks for a notification permission before proceeding.
/com/android/server/TelephonyRegistry.java,notifyMediaQualityStatusChanged,Yes, this method requires permissions because it includes a permission check via `checkNotifyPermission`.
/com/android/server/TelephonyRegistry.java,notifyCallbackModeStarted,Yes, this method likely requires permission because it involves notifying or handling callback modes related to emergency services, which typically necessitates specific permissions for privacy and security reasons in Android.
/com/android/server/TelephonyRegistry.java,notifyCallbackModeStopped,Yes, the method likely requires permissions because it involves phone operations, as suggested by parameters like 'phoneId' and the association with callback modes, which usually necessitate permissions to access telephony features.
/com/android/server/TelephonyRegistry.java,dump,Yes, this method requires permissions because it includes a call to `checkDumpPermission`, indicating it checks for specific permissions related to dumping system logs or sensitive information.
/com/android/server/TelephonyRegistry.java,broadcastServiceStateChanged,Yes, because the method involves sending broadcasts that require permissions like `READ_PHONE_STATE` and `READ_PRIVILEGED_PHONE_STATE`.
/com/android/server/TelephonyRegistry.java,broadcastSignalStrengthChanged,Yes, this method likely requires permissions because it involves broadcasting signal strength changes, which may involve reading phone state or accessing network information, requiring specific permissions in Android.
/com/android/server/TelephonyRegistry.java,broadcastCallStateChanged,Yes, the method broadcasts phone state changes, which typically requires permissions such as `READ_PHONE_STATE` to access phone state information.
/com/android/server/TelephonyRegistry.java,broadcastDataConnectionStateChanged,Yes, this method requires permissions. It uses `sendBroadcastAsUser` to send a broadcast with permissions like `READ_PHONE_STATE`, which necessitates declaring these permissions in the manifest for the app to function correctly.
/com/android/server/TelephonyRegistry.java,enforceNotifyPermissionOrCarrierPrivilege,Yes, the method likely requires permissions as it references `checkNotifyPermission` and `enforceCallingOrSelfCarrierPrivilege`, which are typically associated with permission checks in telephony operations.
/com/android/server/TelephonyRegistry.java,checkNotifyPermission,Yes, this method involves checking a permission related to phone state, which typically requires specific permissions like "READ_PHONE_STATE" or "MODIFY_PHONE_STATE" in Android.
/com/android/server/TelephonyRegistry.java,checkNotifyPermission,Yes, because it checks for the `MODIFY_PHONE_STATE` permission.
/com/android/server/TelephonyRegistry.java,checkListenerPermission,Yes, the method requires permissions because it checks for location and phone state permissions to operate correctly.
/com/android/server/TelephonyRegistry.java,checkFineLocationAccess,Yes, this method likely requires permissions because it appears to be checking fine location access, which typically requires location permissions in Android (e.g., FINE_LOCATION).
/com/android/server/TelephonyRegistry.java,checkCoarseLocationAccess,Yes, this method likely requires permissions because it involves checking access to coarse location, which typically requires location permissions in Android.
/com/android/server/TelephonyRegistry.java,checkFineLocationAccess,Yes, this method requires permissions because it checks location permissions for access.
/com/android/server/TelephonyRegistry.java,checkCoarseLocationAccess,Yes, the method checks for coarse location permissions, which require specific location permissions to function properly.
/com/android/server/TelephonyRegistry.java,getPhoneIdFromSubId,Yes, this method requires permissions because it interacts with telephony features, specifically accessing subscription information, which typically requires permissions like `READ_PHONE_STATE` or `READ_SUBSCRIPTION_DATA`.
/com/android/server/EntropyMixer.java,writeNewSeed,Yes, because writing to a file typically requires file storage permissions.
/com/android/server/PersistentDataBlockService.java,enforceOemUnlockReadPermission,Yes, it requires the `READ_OEM_UNLOCK_STATE` or `OEM_UNLOCK_STATE` permission to access the OEM unlock state.
/com/android/server/PersistentDataBlockService.java,enforceOemUnlockWritePermission,Yes, this method checks for the permission to modify the OEM unlock state, which requires a specific permission to be granted.
/com/android/server/PersistentDataBlockService.java,formatPartitionLocked,Yes, this method likely requires permissions because it involves formatting a partition, which can affect the device's storage and files, typically requiring elevated privileges like accessing or modifying system partitions.
/com/android/server/PersistentDataBlockService.java,write,Yes, the method involves writing data, which generally requires storage permissions in Android.
/com/android/server/PersistentDataBlockService.java,wipe,Yes, it requires permissions because it calls `enforceOemUnlockWritePermission`, indicating a need for OEM unlock permissions.
/com/android/server/PersistentDataBlockService.java,setOemUnlockEnabled,Yes, it requires permissions because it enforces OEM unlock write permission and admin privileges.
/com/android/server/PersistentDataBlockService.java,getOemUnlockEnabled,Yes, because it calls `enforceOemUnlockReadPermission`, which implies a permission check is performed.
/com/android/server/PersistentDataBlockService.java,getFlashLockState,Yes, this method requires permission because it calls `enforceOemUnlockReadPermission`, which suggests a specific permission related to OEM unlock state access is needed.
/com/android/server/PersistentDataBlockService.java,enforcePersistentDataBlockAccess,Yes, the method checks for a specific permission (ACCESS_PDB_STATE) which requires calling `checkCallingPermission`.
/com/android/server/PersistentDataBlockService.java,getMaximumDataBlockSize,Yes, this method requires permissions because it calls `enforceUid`, which checks the calling UID and may require specific permissions to access system resources.
/com/android/server/PersistentDataBlockService.java,getPersistentDataPackageName,Yes, this method likely requires permissions related to accessing persistent data blocks in Android, as indicated by the enforcement of access in the expression `enforcePersistentDataBlockAccess`.
/com/android/server/PersistentDataBlockService.java,dump,Yes, it requires permissions because it includes a check for dump permissions before executing, which typically requires explicit permissions to access system or sensitive data.
/com/android/server/PersistentDataBlockService.java,forceOemUnlockEnabled,Yes, because it likely involves setting a security feature related to OEM unlock, which typically requires permissions to modify device security settings.
/com/android/server/SystemConfigService.java,getDisabledUntilUsedPreinstalledCarrierApps,Yes, getDisabledUntilUsedPreinstalledCarrierApps requires the READ_CARRIER_APP_INFO permission.
/com/android/server/SystemConfigService.java,getDisabledUntilUsedPreinstalledCarrierAssociatedApps,Yes, because the method enforces the permission `READ_CARRIER_APP_INFO`.
/com/android/server/SystemConfigService.java,getDisabledUntilUsedPreinstalledCarrierAssociatedAppEntries,Yes, it requires the READ_CARRIER_APP_INFO permission.
/com/android/server/SystemConfigService.java,getSystemPermissionUids,Yes, this method requires the `GET_RUNTIME_PERMISSIONS` permission to enforce permission checks related to system permissions.
/com/android/server/SystemConfigService.java,getDefaultVrComponents,Yes, the method requires permission because it enforces the calling of `QUERY_ALL_PACKAGES` permission.
/com/android/server/SystemUpdateManagerService.java,updateSystemUpdateInfo,Yes, the method requires permissions because it uses `enforceCallingOrSelfPermission` to check for the `RECOVERY` permission, which indicates that specific permissions are needed to perform its operations.
/com/android/server/SystemUpdateManagerService.java,retrieveSystemUpdateInfo,Yes, it requires permissions because it checks for `READ_SYSTEM_UPDATE_INFO` and `RECOVERY` permissions before executing its logic.
/com/android/server/SystemUpdateManagerService.java,writeInfoFileLocked,Yes, this method likely requires permissions to write to a file on the device storage.
/com/android/server/AlarmManagerInternal.java,setTimeZone,Yes, the method modifies the device's time zone, which typically requires permission to change system settings.
/com/android/server/AlarmManagerInternal.java,setTime,Yes, it requires permissions because setting the device's time alters system settings.
/com/android/server/RuntimeService.java,dump,Yes, the method checks for permissions related to dumping and usage stats, indicating that it requires appropriate permissions to access sensitive data.
/com/android/server/SoundTriggerInternal.java,startRecognition,Yes, recognition methods typically require permissions related to microphone access.
/com/android/server/HsumBootUserInitializer.java,createMainUserIfNeeded,Yes, this method likely requires permissions because it deals with user management operations, such as creating a user, which typically necessitates specific permissions in the Android operating system.
/com/android/server/HsumBootUserInitializer.java,unlockSystemUser,Yes, because the method involves unlocking a system user, which typically requires elevated permissions in Android.
/com/android/server/HsumBootUserInitializer.java,switchToBootUser,Yes, switching to a boot user typically requires permissions related to user management, such as `MANAGE_USERS` or `INTERACT_ACROSS_USERS`.
/com/android/server/BatteryService.java,onBootPhase,Yes, the method likely requires permissions because it involves registering a ContentObserver, which typically involves accessing system settings or user data that necessitate specific permissions in Android.
/com/android/server/BatteryService.java,registerHealthCallback,Yes, this method likely requires permissions related to health data access, as it interacts with health-related services (health HAL service).
/com/android/server/BatteryService.java,shutdownIfNoPowerLocked,Yes, because shutting down the device typically requires system-level permissions to modify power states.
/com/android/server/BatteryService.java,run,Yes, requires permissions for shutting down the system.
/com/android/server/BatteryService.java,shutdownIfOverTempLocked,Yes, this method requires permissions because it involves shutdown actions, which typically necessitate system-level permissions (e.g., `android.permission.REBOOT`).
/com/android/server/BatteryService.java,run,Yes, this method requires permissions because it involves starting an activity related to system shutdown, which typically requires specific permissions for security and safety reasons, such as `android.permission.REQUEST_SHUTDOWN`.
/com/android/server/BatteryService.java,run,Yes, this method requires permissions because it involves sending a broadcast, which typically requires the `AndroidManifest` permission for specific actions or broadcasts.
/com/android/server/BatteryService.java,run,Yes, the method uses `sendBroadcastAsUser`, which typically requires permissions to send broadcasts in Android.
/com/android/server/BatteryService.java,run,Yes, because sending a broadcast may require permissions depending on the broadcast being sent.
/com/android/server/BatteryService.java,sendEnqueuedBatteryLevelChangedEvents,Yes, this method requires permissions because it sends a broadcast (`sendBroadcastAsUser`) containing battery level changes, which may need `BATTERY_STATS` permission.
/com/android/server/BatteryService.java,onShellCommand,Yes, this method requires permissions. It contains calls to `enforceCallingOrSelfPermission` to check for `android.Manifest.permission.DEVICE_POWER`, suggesting that it requires the DEVICE_POWER permission to access certain functionalities.
/com/android/server/BatteryService.java,dumpProto,Yes, it likely requires permissions due to accessing battery status and health information.
/com/android/server/BatteryService.java,dump,Yes, the method checks for dump permissions, indicating it requires permission to perform its operation.
/com/android/server/BatteryService.java,getProperty,Yes, because it involves accessing battery statistics which typically require specific permissions in Android.
/com/android/server/BatteryService.java,setBatteryLevel,Yes, this method likely requires permissions to modify the battery level, as it involves interacting with system-level battery services.
/com/android/server/BatteryService.java,unplugBattery,Yes, this method likely requires permissions because it interacts with battery management, which typically requires specific permissions in Android for security and privacy reasons.
/com/android/server/BatteryService.java,resetBattery,Yes, this method likely requires permissions to modify the battery state, as it is interacting with the BatteryService.
/com/android/server/ExtconStateObserver.java,parseStateFromFile,Yes, it likely requires permissions to access the file system to read the state file.
/com/android/server/BootReceiver.java,logBootEvents,Yes, it requires permissions to access system services like `DropBoxManager` and `SystemProperties`, which may be restricted.
/com/android/server/BootReceiver.java,addTombstoneToDropBox,Yes, the method interacts with the DropBoxManager, which may require special permissions to log data, particularly for accessing system-level services.
/com/android/server/BootReceiver.java,addLastkToDropBox,Yes, the method likely requires permissions as it interacts with `DropBoxManager`, which typically needs permissions for logging data to the system dropbox.
/com/android/server/BootReceiver.java,addFileToDropBox,Yes, because accessing DropBox requires specific permissions related to writing to system services.
/com/android/server/BootReceiver.java,addFileWithFootersToDropBox,Yes, it requires permissions because it interacts with the DropBoxManager, which typically requires permissions to log information to the system dropbox.
/com/android/server/BootReceiver.java,addTextToDropBox,Yes, it requires permissions because accessing the DropBoxManager and writing to event logs typically requires specific permissions related to logging and accessing system services.
/com/android/server/BootReceiver.java,addAuditErrorsToDropBox,Yes, this method requires permissions. It interacts with the `DropBoxManager`, which typically requires permissions related to writing to the system log or dropbox.
/com/android/server/BootReceiver.java,addFsckErrorsToDropBoxAndLogFsStat,Yes, it requires permission to access the DropBoxManager and potentially to read/write files in the filesystem.
/com/android/server/BootReceiver.java,writeTimestamps,Yes, it requires permissions because it involves writing to a file which typically requires storage permissions in Android.
/com/android/server/LooperStatsService.java,initFromSettings,Yes, this method interacts with system settings, specifically retrieving and manipulating global settings, which typically requires the `READ_SETTINGS` and `WRITE_SETTINGS` permissions.
/com/android/server/LooperStatsService.java,dump,Yes, the method requires permissions because it calls `checkDumpPermission`, which typically checks if the calling process has the necessary permissions to perform activities like dumping system state or debug information.
/com/android/server/LooperStatsService.java,onBootPhase,Yes, the method likely requires permissions, as it involves accessing system settings and registering a content observer, which typically necessitates certain permissions in the Android SDK.
/com/android/server/DockObserver.java,fromFile,Yes, the method likely requires permissions because it reads a file from the file system, which typically requires permission to access external storage in Android.
/com/android/server/DockObserver.java,dump,Yes, requires permissions. The method includes a permission check (`checkDumpPermission`), indicating that access control is needed.
/com/android/server/DockObserver.java,updateRegistration,Yes, because it interacts with `ContentResolver`, which typically requires specific permissions in Android.
/com/android/server/SystemTimeZone.java,setTimeZoneId,Yes, this method requires permissions because it modifies the device's time zone, which typically requires specific system permissions in Android.
/com/android/server/PinnerService.java,onReceive,Yes, this method may require permissions because it handles package changes, which could involve accessing information about installed applications, typically requiring `QUERY_ALL_PACKAGES` or similar permissions.
/com/android/server/PinnerService.java,getCameraInfo,Yes, because accessing camera information typically requires camera permissions.
/com/android/server/PinnerService.java,dump,Yes, this method requires permissions because it includes a check for a dump permission before executing its functionality.
/com/android/server/MmsServiceBroker.java,sendMessage,Yes, this method likely requires permissions related to sending messages or accessing specific URIs, as it deals with message sending functionality and may involve sensitive data.
/com/android/server/MmsServiceBroker.java,downloadMessage,Yes, this method may require permissions related to downloading content, accessing URIs, or managing pending intents.
/com/android/server/MmsServiceBroker.java,importMultimediaMessage,Yes, this method likely requires permissions related to accessing multimedia content (e.g., storage permissions) and potentially sending messages.
/com/android/server/MmsServiceBroker.java,sendStoredMessage,Yes, this method likely requires permissions because it involves sending messages and may interact with the user's storage or communication channels, which typically require explicit permissions in Android.
/com/android/server/MmsServiceBroker.java,tryConnecting,Yes, this method requires permissions. It's binding to a service (`bindService`), which typically requires the appropriate permissions in Android to access the service, such as `BIND_MMS_SERVICE`.
/com/android/server/MmsServiceBroker.java,getCallingPackageName,Yes, this method requires permissions. It accesses the package manager and retrieves information about the calling UID, which typically requires permissions related to querying installed packages.
/com/android/server/MmsServiceBroker.java,sendMessage,Yes, because the method enforces the "SEND_SMS" permission and checks for appropriate app ops permissions before sending a message.
/com/android/server/MmsServiceBroker.java,downloadMessage,Yes, because it enforces permission to receive MMS messages and may involve handling URIs that require permission to read/write.
/com/android/server/MmsServiceBroker.java,importTextMessage,Yes, this method appears to require permissions related to sending or accessing SMS messages, indicated by the involvement of `OP_WRITE_SMS`, which suggests that SMS permissions are checked.
/com/android/server/MmsServiceBroker.java,importMultimediaMessage,Yes, because it involves handling multimedia messages, which typically requires SMS permissions.
/com/android/server/MmsServiceBroker.java,deleteStoredMessage,Yes, this method requires permissions because it involves operations related to writing SMS messages, which usually require specific permissions in Android for data protection and privacy.
/com/android/server/MmsServiceBroker.java,deleteStoredConversation,Yes, this method likely requires permissions to handle stored conversations, particularly related to SMS operations, hence it may involve permissions like `WRITE_SMS`.
/com/android/server/MmsServiceBroker.java,updateStoredMessageStatus,Yes, this method requires permissions because it interacts with stored message statuses, likely requiring SMS-related permissions.
/com/android/server/MmsServiceBroker.java,archiveStoredConversation,Yes, this method likely requires permissions related to accessing and modifying SMS data, as indicated by the reference to `OP_WRITE_SMS` in the `AppOpsManager`.
/com/android/server/MmsServiceBroker.java,addTextMessageDraft,Yes, this method likely requires SMS-related permissions since it interacts with SMS drafts and checks for the write SMS operation.
/com/android/server/MmsServiceBroker.java,addMultimediaMessageDraft,Yes, the method appears to require permissions related to sending SMS or MMS, specifically needing to check for OP_WRITE_SMS permissions through AppOpsManager.
/com/android/server/MmsServiceBroker.java,sendStoredMessage,Yes, the method likely requires permissions because it deals with sending messages, which typically necessitates SMS permissions in Android.
/com/android/server/MmsServiceBroker.java,setAutoPersisting,Yes, this method may require permissions because it interacts with AppOpsManager, particularly regarding SMS operations (OP_WRITE_SMS).
/com/android/server/MmsServiceBroker.java,adjustUriForUserAndGrantPermission,Yes, this method requires permissions because it involves granting access to a content Uri, which typically requires the appropriate permissions related to content access and telephony services.
/com/android/server/MmsServiceBroker.java,getPhoneIdFromSubId,Yes, this method requires permissions to access subscription information, likely needing permissions related to telephony services (e.g., READ_PHONE_STATE).
/com/android/server/CertBlacklister.java,getValue,Yes, this method likely requires permissions because it accesses `Settings.Secure`, which typically requires permissions related to accessing secure settings in the Android framework.
/com/android/server/CertBlacklister.java,writeBlacklist,Yes, this method likely requires permissions due to its file writing operations and working with temporary files, which typically necessitate storage permissions in Android.
/com/android/server/CertBlacklister.java,run,Yes, the method likely requires permissions to write to files in the filesystem, specifically for operations involving creating temporary files and writing data to them.
/com/android/server/CertBlacklister.java,registerObservers,Yes, the method registers content observers which typically requires permissions to access the data being observed, such as `READ_SETTINGS` for accessing secure settings content.
/com/android/server/SystemClockTime.java,initializeIfRequired,Yes, this method requires permissions because it sets the system clock time, which typically requires specific system-level permissions related to time settings.
/com/android/server/SystemClockTime.java,setTimeAndConfidence,Yes, the method sets the system clock time, which requires appropriate permissions to modify system settings.
/com/android/server/NetworkScorerAppManager.java,hasPermissions,Yes, it likely requires permissions because it involves checking user and package-specific permissions for accessing resources, which typically necessitates permission checks in Android.
/com/android/server/NetworkScorerAppManager.java,hasScoreNetworksPermission,Yes, this method checks for the SCORE_NETWORKS permission, which implies it requires permission to assess if another package has that permission granted.
/com/android/server/NetworkScorerAppManager.java,canAccessLocation,Yes, because it checks for location permissions to determine access.
/com/android/server/NetworkScorerAppManager.java,isLocationModeEnabled,Yes, because checking the location mode may require location permissions as it interacts with location settings.
/com/android/server/NetworkScorerAppManager.java,setActiveScorer,Yes, the caller must have permission to write to Settings.Global.
/com/android/server/NetworkScorerAppManager.java,updateState,Yes, the method seems to manipulate network-related settings which typically require permissions like `CHANGE_NETWORK_STATE` or similar.
/com/android/server/NetworkScorerAppManager.java,getString,Yes, this method requires permissions because it accesses system settings via `getContentResolver()` and `Settings.Global.getString()`, which often require specific app permissions to access.
/com/android/server/NetworkScorerAppManager.java,putInt,Yes, requires permissions to modify global settings.
/com/android/server/NetworkScorerAppManager.java,getInt,Yes, it requires permission to access `Settings.Global` data.
/com/android/server/NetworkScorerAppManager.java,getSecureInt,Yes, this method requires permissions because it accesses secure settings through the `Settings.Secure` class, which typically requires specific permissions to read.
/com/android/server/MasterClearReceiver.java,onReceive,Yes, requires permissions. The method involves actions related to factory reset and system-level operations, which typically require elevated privileges (e.g., `android.permission.MASTER_CLEAR`).
/com/android/server/MasterClearReceiver.java,run,Yes, because it involves performing a master clear/factory reset which typically requires system permissions.
/com/android/server/MasterClearReceiver.java,wipeUser,Yes, this method requires permissions. It interacts with user management and device administration, which typically require specific permissions like `MANAGE_USERS` and `WIPE_DATA`.
/com/android/server/MasterClearReceiver.java,sendWipeProfileNotification,Yes, this method requires permissions because it involves sending notifications, which typically requires the appropriate notification permissions in Android.
/com/android/server/MasterClearReceiver.java,getCurrentForegroundUserId,Yes, it requires permissions because accessing the current foreground user typically requires user-level permissions in Android.
/com/android/server/MasterClearReceiver.java,doInBackground,Yes, this method likely requires permissions related to storage access, as it involves wiping adoptable disks and accessing the storage service.
/com/android/server/RescueParty.java,executeRescueLevelInternal,Yes, the method interacts with system settings and performs actions like rebooting and resetting configurations, which typically require permissions.
/com/android/server/RescueParty.java,run,Yes, because rebooting the system and wiping user data typically requires administrative permissions or specific system-level permissions in Android.
/com/android/server/RescueParty.java,resetAllSettingsIfNecessary,Yes, this method likely requires permissions because it interacts with system settings, which generally necessitate specific permissions to modify or access.
/com/android/server/PruneInstantAppsJobService.java,schedule,Yes, the method likely requires permissions related to scheduling jobs, specifically `USE_FULL_SCREEN_INTENT` or `SCHEDULE_EXACT_ALARM`, depending on the specifics of its implementation and the Android version.
/com/android/server/DeviceIdleInternal.java,addPowerSaveTempWhitelistApp,Yes, this method likely requires permissions because it deals with adding an app to a power save whitelist, which typically requires system-level permissions to manage power settings and app exemptions.
/com/android/server/DeviceIdleInternal.java,addPowerSaveTempWhitelistApp,Yes, this method likely requires permissions to manage power saving settings and whitelist apps.
/com/android/server/DeviceIdleInternal.java,addPowerSaveTempWhitelistAppDirect,Yes, this method likely requires permissions because it manipulates the power save whitelist, which pertains to system-level operations that typically require elevated permissions.
/com/android/server/NetworkScoreService.java,observe,Yes, because the method interacts with a `ContentResolver`, which typically requires permissions to access content (e.g., READ_EXTERNAL_STORAGE).
/com/android/server/NetworkScoreService.java,updateScores,Yes, it requires permissions. The method checks if the caller is an active scorer using `isCallerActiveScorer`, which implies permission checks related to scoring activities.
/com/android/server/NetworkScoreService.java,get,Yes, this method requires permissions because it accesses `WifiManager` and retrieves `WifiInfo`, necessitating the `ACCESS_WIFI_STATE` permission.
/com/android/server/NetworkScoreService.java,get,Yes, this method requires permissions. It interacts with the WiFi scanner, which typically requires `ACCESS_WIFI_STATE` and `CHANGE_WIFI_STATE` permissions in Android.
/com/android/server/NetworkScoreService.java,clearScores,Yes, this method appears to involve security-related checks (enforceSystemOrIsActiveScorer) which may require specific permissions, as indicated by the need to get the calling UID and enforce system-level operations.
/com/android/server/NetworkScoreService.java,enforceSystemOnly,Yes, requires permissions because it checks for the 'REQUEST_NETWORK_SCORES' permission.
/com/android/server/NetworkScoreService.java,enforceSystemOrHasScoreNetworks,Yes, the method checks for permissions related to network score access and throws a SecurityException if the caller does not have the required permissions.
/com/android/server/NetworkScoreService.java,enforceSystemOrIsActiveScorer,Yes, this method requires permission because it checks for the `REQUEST_NETWORK_SCORES` permission.
/com/android/server/NetworkScoreService.java,requestScores,Yes, this method likely requires permissions to access network-related features or services, as it involves requesting scores from a network recommendation provider.
/com/android/server/NetworkScoreService.java,dump,Yes, this method requires permissions because it checks for a dump permission before executing its functionality.
/com/android/server/NetworkScoreService.java,bind,Yes, because it involves binding a service which typically requires permissions in Android.
/com/android/server/Watchdog.java,onReceive,Yes, this method likely requires permissions because it handles a reboot action, which typically requires specific system-level permissions in Android.
/com/android/server/Watchdog.java,init,Yes, because it involves registering a `BroadcastReceiver` to listen to reboot broadcasts, which requires the `REBOOT` permission.
/com/android/server/Watchdog.java,registerSettingsObserver,Yes, it requires permissions because it observes system settings, which typically requires access to sensitive data in Android.
/com/android/server/Watchdog.java,rebootSystem,Yes, it requires permissions because rebooting the system typically requires elevated privileges or specific permissions in Android.
/com/android/server/Watchdog.java,doSysRq,Yes, this method interacts with a system file (`/proc/sysrq-trigger`), which typically requires elevated permissions to modify.
/com/android/server/ZramWriteback.java,schedNextWriteback,Yes, because it uses the JobScheduler service, which may require the `SET_ALARM` and `SCHEDULE_EXACT_ALARM` permissions.
/com/android/server/DropBoxManagerService.java,addFile,Yes, this method likely requires permissions as it interacts with system services to add files, which typically requires storage or system-related permissions in Android.
/com/android/server/DropBoxManagerService.java,getNextEntry,Yes, this method likely requires permissions to access the DropBox data.
/com/android/server/DropBoxManagerService.java,getNextEntryWithAttribution,Yes, likely requires permissions to access DropBox data.
/com/android/server/DropBoxManagerService.java,onCommand,Yes, this method requires permissions as it involves interacting with system services (e.g., DropBoxManagerService) that may necessitate specific permissions to access and manipulate data within the device.
/com/android/server/DropBoxManagerService.java,handleMessage,Yes, this method may require permissions because it deals with broadcasting messages, which can involve sending intents that typically require specific permissions in Android (e.g., `SEND_BROADCAST`, `RECEIVE_BOOT_COMPLETED`).
/com/android/server/DropBoxManagerService.java,prepareAndSendBroadcast,Yes, because the method sends a broadcast and uses the `READ_LOGS` permission, which is restricted.
/com/android/server/DropBoxManagerService.java,sendBroadcast,Yes, it requires permissions because broadcasting intents can potentially expose data or trigger actions in other applications, which may require certain permissions, especially if interacting with sensitive or protected components.
/com/android/server/DropBoxManagerService.java,onBootPhase,Yes, this method may require permissions because it involves registering a `ContentObserver` and registering a `BroadcastReceiver`, both of which typically require specific permissions in the Android manifest to operate correctly, depending on the actions they perform.
/com/android/server/DropBoxManagerService.java,addFile,Yes, the method likely requires permissions to access files, especially as it deals with `ParcelFileDescriptor`, which typically involves reading or writing to file storage.
/com/android/server/DropBoxManagerService.java,writeTo,Yes, the method likely requires permissions as it involves writing to a file descriptor, which typically necessitates external storage permissions in Android.
/com/android/server/DropBoxManagerService.java,addEntry,Yes, the method likely requires permissions because it involves writing data (e.g., creating or modifying files), which typically requires storage permissions in the Android SDK.
/com/android/server/DropBoxManagerService.java,isTagEnabled,Yes, this method requires permissions because it interacts with `mContentResolver`, which typically requires permissions to access settings or preferences in Android.
/com/android/server/DropBoxManagerService.java,checkPermission,Yes, it requires permissions because it checks for specific app permissions like `READ_LOGS` and `PACKAGE_USAGE_STATS`.
/com/android/server/DropBoxManagerService.java,getNextEntry,Yes, the method checks permissions related to accessing DropBox entries which typically requires specific permissions in Android.
/com/android/server/DropBoxManagerService.java,dump,Yes, this method requires permissions because it calls `checkDumpAndUsageStatsPermission`, which implies a permission check for access to sensitive data or resources related to system dumps.
/com/android/server/DropBoxManagerService.java,init,Yes, this method likely requires permissions related to file system access, such as reading from or writing to storage.
/com/android/server/PersistentDataBlockManagerInternal.java,getFrpCredentialHandle,Yes, it likely requires permissions because it involves accessing security-sensitive data related to lockscreen credentials.
/com/android/server/PersistentDataBlockManagerInternal.java,forceOemUnlockEnabled,Yes, because it updates a system setting that could affect device security.
/com/android/server/HardwarePropertiesManagerService.java,getDeviceTemperatures,Yes, because it involves accessing device temperatures, which typically requires permissions related to hardware access.
/com/android/server/HardwarePropertiesManagerService.java,getCpuUsages,Yes, this method likely requires permissions because it involves retrieving CPU usage information, which may require specific system permissions for access to hardware properties.
/com/android/server/HardwarePropertiesManagerService.java,getFanSpeeds,Yes, this method requires permissions because it includes a call to `enforceHardwarePropertiesRetrievalAllowed`, which likely checks for specific permissions related to accessing hardware properties.
/com/android/server/HardwarePropertiesManagerService.java,getCallingPackageName,Yes, because it uses `PackageManager` to interact with packages, which may require permission to access package information.
/com/android/server/HardwarePropertiesManagerService.java,dump,Yes, this method requires permissions. It checks for dump permission using `checkDumpPermission`, which implies the need for appropriate privileges to access sensitive information.
/com/android/server/HardwarePropertiesManagerService.java,enforceHardwarePropertiesRetrievalAllowed,Yes, because it throws a SecurityException if the caller does not hold the `DEVICE_POWER` permission.
/com/android/server/UpdateLockService.java,sendLockChangedBroadcast,Yes, the method likely requires permissions because it involves sending a broadcast (sendStickyBroadcastAsUser) which usually requires the appropriate permissions to notify other components or applications in the Android system.
/com/android/server/UpdateLockService.java,acquireUpdateLock,Yes, this method requires permissions to enforce calling or self permission for acquiring an update lock.
/com/android/server/UpdateLockService.java,releaseUpdateLock,Yes, it requires permissions. The method calls `enforceCallingOrSelfPermission`, which checks for necessary permissions for the action being performed.
/com/android/server/UpdateLockService.java,dump,Yes, this method checks for dump permissions before executing its functionality, indicating that permissions are required.
/com/android/server/BinderCallsStatsService.java,createAppidTrustlist,Yes, this method requires permissions. It interacts with the `PackageManager` to retrieve information about packages holding specific permissions.
/com/android/server/BinderCallsStatsService.java,dump,Yes, because the method checks for permissions related to dumping usage stats.
/com/android/server/GestureLauncherService.java,onBootPhase,Yes, because it interacts with system services like `PowerManager` and `WindowManager`, which may require permissions to operate properly in an Android environment.
/com/android/server/GestureLauncherService.java,registerContentObservers,Yes, it requires permissions to access secure settings.
/com/android/server/GestureLauncherService.java,updateCameraRegistered,Yes, it likely requires permissions, specifically for camera-related functionalities.
/com/android/server/GestureLauncherService.java,registerCameraLaunchGesture,Yes, this method requires permissions because it interacts with the camera and system sensors which typically necessitate proper permissions to access.
/com/android/server/GestureLauncherService.java,registerCameraLiftTrigger,Yes, this method requires permissions because it interacts with the sensor system (specifically registers for a camera lift trigger), which typically requires `BODY_SENSORS` or similar permissions in Android.
/com/android/server/GestureLauncherService.java,isCameraLiftTriggerSettingEnabled,Yes, this method likely requires permissions as it accesses secure settings related to the camera.
/com/android/server/GestureLauncherService.java,onEmergencyGestureDetectedOnWatch,Yes, this method likely requires permissions. Specifically, it involves starting an activity, which usually requires the `android.permission.INTERNET` or other relevant permissions depending on what the emergency intent does.
/com/android/server/GestureLauncherService.java,onReceive,Yes, the method involves registering and unregistering content observers, which typically requires the `READ_EXTERNAL_STORAGE` or other relevant permissions depending on the content being observed.
/com/android/server/GestureLauncherService.java,onSensorChanged,Yes, it likely requires permissions because it involves handling camera gestures, which may require camera usage permissions in an Android application.
/com/android/server/SystemService.java,publishBinderService,Yes, this method requires permissions because it allows access to a service that can be used by other apps.
/com/android/server/FactoryResetter.java,setFactoryResetting,Yes, it likely requires permissions because it checks if the calling context has the necessary permission (`MASTER_CLEAR`) to perform a factory reset operation.
/com/android/server/SystemServer.java,run,Yes, rebooting the device typically requires permissions related to modifying system settings or restarting the device.
/com/android/server/SystemServer.java,startOtherServices,Yes, the method `startOtherServices` may require permissions because it starts various system services which typically require specific permissions in the Android framework to function correctly.
/com/android/server/testharness/TestHarnessModeService.java,disableLockScreen,Yes, this method likely requires permissions related to modifying lock screen settings (e.g., disabling the lock screen), which usually requires special permissions in Android.
/com/android/server/testharness/TestHarnessModeService.java,configureSettings,Yes, because the method interacts with `Settings.Global`, which requires specific permissions to modify system settings.
/com/android/server/testharness/TestHarnessModeService.java,setUpAdbFiles,Yes, this method likely requires permissions because it involves writing to files which could require file system access permissions.
/com/android/server/testharness/TestHarnessModeService.java,configureUser,Yes, the method interacts with user settings and location services, which typically require permissions such as "WRITE_SETTINGS" and "ACCESS_FINE_LOCATION".
/com/android/server/testharness/TestHarnessModeService.java,writeBytesToFile,Yes, because it deals with file writing and setting file permissions, which typically require storage permissions.
/com/android/server/testharness/TestHarnessModeService.java,setDeviceProvisioned,Yes, because it involves modifying system settings (`Settings.Global` and `Settings.Secure`), which typically require specific permissions to access and change.
/com/android/server/testharness/TestHarnessModeService.java,onCommand,Yes, the method involves calling `checkPermissions`, which likely requires permissions to perform certain actions based on the command (`cmd`).
/com/android/server/testharness/TestHarnessModeService.java,checkPermissions,Yes, this method requires permissions because it calls `enforceCallingPermission` with `android.permission.ENABLE_TEST_HARNESS_MODE`.
/com/android/server/testharness/TestHarnessModeService.java,isDeviceSecure,Yes, because accessing device security status often requires permission to interact with the keyguard or lock screen settings.
/com/android/server/testharness/TestHarnessModeService.java,getBytesFromFile,Yes, the method requires permissions to access the file system in order to read files.
/com/android/server/contentsuggestions/ContentSuggestionsManagerService.java,enforceCallingPermissionForManagement,Yes, this method appears to enforce calling permissions, specifically for managing content suggestions, which typically requires specific permissions.
/com/android/server/contentsuggestions/ContentSuggestionsManagerService.java,enforceCaller,Yes, the method checks for the calling permission, which indicates that it requires permission to manage content suggestions.
/com/android/server/contentsuggestions/ContentSuggestionsManagerService.java,provideContextImage,Yes, the method likely requires permissions because it interacts with user-specific services and handles task snapshots, which typically necessitate appropriate permissions to access user data and system resources securely.
/com/android/server/contentsuggestions/ContentSuggestionsManagerService.java,suggestContentSelections,Yes, this method likely requires permissions to enforce caller access and handle user-specific content suggestions.
/com/android/server/contentsuggestions/ContentSuggestionsManagerService.java,notifyInteraction,Yes, this method likely requires permissions to access user-specific services or data as indicated by the use of `getServiceForUserLocked`.
/com/android/server/contentsuggestions/ContentSuggestionsManagerService.java,setDefaultServiceEnabled,Yes, this method likely requires permissions to change service settings for a user or device.
/com/android/server/contentsuggestions/ContentSuggestionsManagerService.java,onShellCommand,Yes, this method requires permissions because it is likely part of a shell command interface, which can involve sensitive operations that typically require validation of the calling UID to ensure security and access control.
/com/android/server/rotationresolver/RotationResolverManagerService.java,resolveRotation,Yes, this method likely requires permissions because it interacts with camera resources and rotation services, which typically involve sensitive user data and may require specific permissions in Android.
/com/android/server/rotationresolver/RotationResolverManagerService.java,dump,Yes, this method requires permissions because it checks for dump permissions before proceeding with its operation.
/com/android/server/rotationresolver/RotationResolverManagerService.java,onShellCommand,Yes, the method calls `enforceCallingOrSelfPermission` for `Manifest.permission.MANAGE_ROTATION_RESOLVER`, which indicates it requires the specified permission.
/com/android/server/pm/PackageList.java,getPackageNames,Yes, because accessing the list of installed packages typically requires the `GET_PACKAGE_SIZE` or `PACKAGE_USAGE_STATS` permissions.
/com/android/server/pm/DataLoaderManagerService.java,bindToDataLoader,Yes, the method likely requires permissions as it involves binding to a service, which typically requires `BIND_SERVICE` permission in Android.
/com/android/server/pm/BackgroundInstallControlService.java,getBackgroundInstalledPackages,Yes, this method likely requires permissions. It deals with retrieving background installed packages, which typically involves accessing sensitive data about installed applications that may require specific permissions (e.g., `PACKAGE_USAGE_STATS`).
/com/android/server/pm/BackgroundInstallControlService.java,getBackgroundInstalledPackages,Yes, it likely requires permissions because it deals with installed packages, which typically need `QUERY_ALL_PACKAGES` or similar permissions in Android to access.
/com/android/server/pm/BackgroundInstallControlService.java,isInstaller,Yes, it requires permission because it checks for the `INSTALL_PACKAGES` permission.
/com/android/server/pm/BackgroundInstallControlService.java,onPackageAdded,Yes, this method likely requires permissions to monitor package changes.
/com/android/server/pm/SharedUserSetting.java,removePackage,Yes, this method modifies package settings, which typically requires permissions related to managing packages, such as `android.permission.DELETE_PACKAGES` or similar permissions depending on the context.
/com/android/server/pm/SharedUserSetting.java,getPackages,Yes, this method likely requires permissions related to accessing package information on the device, such as `PACKAGE_USAGE_STATS` or similar.
/com/android/server/pm/DefaultCrossProfileIntentFiltersUtils.java,getDefaultCrossProfileTelephonyIntentFilters,Yes, this method involves telephony-related intent filters, which typically require permissions such as `CALL_PHONE` or `SEND_SMS`.
/com/android/server/pm/PackageManagerShellCommand.java,onCommand,Yes, it requires permissions because it handles commands that may involve sensitive operations like installing, uninstalling apps, changing permissions, or managing user accounts, which typically require elevated permissions in Android.
/com/android/server/pm/PackageManagerShellCommand.java,runLegacyDexoptCommand,Yes, this method requires root or shell access, as indicated by the condition checking if the calling UID is a root or shell user.
/com/android/server/pm/PackageManagerShellCommand.java,runDisableVerificationForUid,Yes, this method likely requires permissions because it interacts with the `ActivityManagerInternal` service and calls `disableVerificationForUid`, which typically involves managing application verification and permissions that are regulated by the Android operating system.
/com/android/server/pm/PackageManagerShellCommand.java,uninstallSystemUpdates,Yes, it requires permissions. The method `uninstallSystemUpdates` indicates functionality related to uninstalling updates for applications, which typically requires specific permissions such as `REQUEST_DELETE_PACKAGES` or similar to access application management tasks.
/com/android/server/pm/PackageManagerShellCommand.java,displayPackageFilePath,Yes, because it interacts with package information and potentially requires access to application data.
/com/android/server/pm/PackageManagerShellCommand.java,runListPermissions,Yes, the method requires permissions because it interacts with permission groups and possibly lists dangerous permissions, which require appropriate app permissions to access.
/com/android/server/pm/PackageManagerShellCommand.java,handleOption,Yes, because it handles user options which may involve user-level permissions.
/com/android/server/pm/PackageManagerShellCommand.java,runInstallExisting,Yes, this method likely requires permissions because it involves installing packages, which typically requires `INSTALL_PACKAGES` or `REQUEST_INSTALL_PACKAGES` permissions in Android.
/com/android/server/pm/PackageManagerShellCommand.java,runUninstall,Yes, this method likely requires permissions because it involves uninstalling packages, which typically needs specific permissions (e.g., `DELETE_PACKAGES`) in the Android operating system.
/com/android/server/pm/PackageManagerShellCommand.java,runClear,Yes, this method likely requires permissions due to its operations related to clearing application data and cache, which typically require specific app permissions in Android.
/com/android/server/pm/PackageManagerShellCommand.java,runSetEnabledSetting,Yes, this method requires permissions because it handles enabling and disabling application components, which typically requires system-level permissions.
/com/android/server/pm/PackageManagerShellCommand.java,runSetHiddenSetting,Yes, this method likely requires permissions related to app visibility or state management, as it involves setting application visibility settings per user.
/com/android/server/pm/PackageManagerShellCommand.java,runSetDistractingRestriction,Yes, because the method appears to interact with user restrictions and package management, which typically require specific permissions in the Android environment (like `MANAGE_USERS` or similar).
/com/android/server/pm/PackageManagerShellCommand.java,runGrantRevokePermission,Yes, because the method is related to granting or revoking permissions, which typically requires specific permissions in Android.
/com/android/server/pm/PackageManagerShellCommand.java,setOrClearPermissionFlags,Yes, this method deals with permission flags and package-related operations, which typically require specific permissions to execute.
/com/android/server/pm/PackageManagerShellCommand.java,isProductApp,Yes, this method requires permissions. It interacts with the PackageManager to retrieve package information, which generally requires permissions like `PACKAGE_USAGE_STATS` or other related permissions depending on the specific details of the application for which package info is requested.
/com/android/server/pm/PackageManagerShellCommand.java,runGetOemPermissions,Yes, because the method interacts with permissions related to OEM apps, which typically require specific permissions to access system-level features.
/com/android/server/pm/PackageManagerShellCommand.java,runCreateUser,Yes, this method requires permissions because it interacts with user creation and management features, which typically require appropriate permissions in Android (e.g., `MANAGE_USERS`).
/com/android/server/pm/PackageManagerShellCommand.java,removeUser,Yes, this method likely requires permissions because it involves user management, specifically the removal of a user, which typically necessitates elevated permissions in the Android environment.
/com/android/server/pm/PackageManagerShellCommand.java,removeUserAndWait,Yes, this method likely requires permissions because it involves removing a user, which typically requires elevated permissions in an Android environment related to user management.
/com/android/server/pm/PackageManagerShellCommand.java,removeUserWhenPossible,Yes, this method likely requires permissions because it deals with user management, specifically removing a user, which typically requires elevated privileges at the system level.
/com/android/server/pm/PackageManagerShellCommand.java,runRenameUser,Yes, this method likely requires permissions since it involves manipulating user data (renaming a user), which typically necessitates specific permissions in Android, such as `android.permission.MANAGE_USERS`.
/com/android/server/pm/PackageManagerShellCommand.java,runSetUserRestriction,Yes, this method likely requires permissions related to managing user restrictions or user profiles, as it operates on user management functionality such as setting user restrictions through `setUserRestriction` on `IUserManager`.
/com/android/server/pm/PackageManagerShellCommand.java,runSetHomeActivity,Yes, this method likely requires permissions to modify the home activity or user roles, which are sensitive operations in the Android environment.
/com/android/server/pm/PackageManagerShellCommand.java,runDump,Yes, this method likely requires permissions related to accessing package state. It uses `ActivityManager` and interacts with system services, which typically need specific permissions in Android.
/com/android/server/pm/PackageManagerShellCommand.java,runGetAppMetadata,Yes, this method likely requires permissions because it involves accessing app metadata, which typically requires specific permissions in Android.
/com/android/server/pm/PackageManagerShellCommand.java,runArtServiceCommand,Yes, because it involves managing the ART (Android Runtime) services which may require permissions related to executing shell commands or interacting with system services.
/com/android/server/pm/PackageManagerShellCommand.java,translateUserId,Yes, it requires permissions. The method interacts with the `ActivityManager` to handle user IDs, which typically requires permissions related to user management.
/com/android/server/pm/PackageManagerShellCommand.java,doWriteSplit,Yes, this method likely requires permissions because it interacts with file descriptor operations and package installation, which typically require permissions related to file access and installation in the Android environment.
/com/android/server/pm/PackageManagerShellCommand.java,send,Yes, this method requires permissions, as the parameter 'requiredPermission' indicates a required permission to execute the action effectively regarding intents.
/com/android/server/pm/PackageManagerServiceUtils.java,getLastModifiedTime,Yes, this method likely requires permissions because it accesses file system information (i.e., getting last modified time of files), which is typically restricted.
/com/android/server/pm/PackageManagerServiceUtils.java,enforceSystemOrPhoneCaller,Yes, it enforces that the caller must be the system or phone process, which implies permission requirements for system-level operations.
/com/android/server/pm/PackageManagerServiceUtils.java,extractNativeBinaries,Yes, because it involves file operations that may require permissions to read/write to the file system.
/com/android/server/pm/PackageManagerServiceUtils.java,decompressFile,Yes, this method requires permissions because it deals with reading from and writing to files, which typically requires storage permissions in Android.
/com/android/server/pm/PackageManagerServiceUtils.java,copyPackage,Yes, this method likely requires permissions because it involves reading from and writing to file storage, which typically requires storage permissions in Android.
/com/android/server/pm/PackageManagerServiceUtils.java,copyFile,Yes, this method requires permissions. It accesses the file system for reading from and writing to files, which requires appropriate permissions such as `READ_EXTERNAL_STORAGE` and `WRITE_EXTERNAL_STORAGE` in Android.
/com/android/server/pm/PackageManagerServiceUtils.java,makeDirRecursive,Yes, the method requires permissions because it involves creating directories, which typically requires write permissions to the file system.
/com/android/server/pm/PackageManagerServiceUtils.java,applyEnforceIntentFilterMatching,Yes, the method likely requires permissions because it checks component permissions through the `checkComponentPermission` method, indicating that it interacts with system resources that may need specific permissions.
/com/android/server/pm/PackageManagerServiceUtils.java,enforceSystemOrRootOrShell,Yes, this method requires permissions because it enforces access control to restrict calls to system, root, or shell UIDs, which implies it operates in a context requiring elevated permissions.
/com/android/server/pm/ProtectedPackages.java,setDeviceAndProfileOwnerPackages,Yes, because setting device or profile owner information typically requires elevated permissions such as device owner or profile owner privileges in Android.
/com/android/server/pm/ProtectedPackages.java,setOwnerProtectedPackages,Yes, this method likely requires permissions because it interacts with device owner or profile owner settings, which typically need elevated privileges specific to device administration.
/com/android/server/pm/StorageEventHelper.java,reconcileApps,Yes, the method likely requires permissions because it examines and modifies applications installed on a device. Accessing this information typically involves permissions related to app management or file system access.
/com/android/server/pm/StagingManager.java,startService,Yes, because starting a service in Android typically requires permissions depending on the service being started.
/com/android/server/pm/StagingManager.java,snapshotAndRestoreApkInApexUserData,Yes, this method likely requires permissions related to managing packages and user data in the Android ecosystem.
/com/android/server/pm/StagingManager.java,systemReady,Yes, this method requires permissions as it involves registering a broadcast receiver (for ACTION_BOOT_COMPLETED), which requires the `RECEIVE_BOOT_COMPLETED` permission.
/com/android/server/pm/UserDataPreparer.java,prepareUserData,Yes, this method likely requires permissions related to storage access and user management, as it prepares storage areas for users, which typically involves modifying or accessing system storage settings.
/com/android/server/pm/UserDataPreparer.java,prepareUserDataLI,Yes, this method likely requires permissions to access user data and manage storage operations related to users, especially with actions like preparing user data and handling directories specific to users.
/com/android/server/pm/UserDataPreparer.java,destroyUserData,Yes, the method likely requires permissions due to its functionality of destroying storage areas for users, which typically involves sensitive operations affecting user data and privacy.
/com/android/server/pm/UserDataPreparer.java,destroyUserDataLI,Yes, because it likely involves deleting user data, which typically requires permissions related to storage and user management in Android.
/com/android/server/pm/UserDataPreparer.java,reconcileUsers,Yes, this method likely requires permissions because it deals with user data and file system operations that may affect user privacy and data security.
/com/android/server/pm/UserDataPreparer.java,getDataUserDeDirectory,Yes, accessing user-specific directories typically requires permission to access storage.
/com/android/server/pm/UserDataPreparer.java,getSerialNumber,Yes, the method requires permissions to access file attributes, as it involves retrieving the serial number from the file's inode using `getxattr`. This generally requires appropriate file permissions in the Android environment.
/com/android/server/pm/ShortcutRequestPinProcessor.java,requestPinItemLocked,Yes, this method requires permissions. It interacts with the device's shortcut and app widget management, which typically requires specific permissions to modify or request these features from the launcher.
/com/android/server/pm/ShortcutRequestPinProcessor.java,requestPinShortcutLocked,Yes, this method may require permissions related to interacting with shortcuts, such as `REQUEST_PIN_SHORTCUT`.
/com/android/server/pm/ShortcutRequestPinProcessor.java,startRequestConfirmActivity,Yes, this method likely requires permissions. It involves starting an activity which may need permission depending on the type of activity and its intent.
/com/android/server/pm/PackageManagerServiceInjector.java,getIBackupManager,Yes, it likely requires permissions related to backup management.
/com/android/server/pm/PackageSender.java,sendPackageBroadcast,Yes, it requires permissions to send broadcasts to other applications and manage user IDs.
/com/android/server/pm/PackageSender.java,notifyPackageChanged,Yes, it likely requires permissions related to package management or installation.
/com/android/server/pm/DexOptHelper.java,checkAndDexOptSystemUi,Yes, this method likely requires permissions as it involves operations related to system UI and package management, which typically require elevated permissions to modify or manipulate system components.
/com/android/server/pm/DexOptHelper.java,performPackageDexOptUpgradeIfNeeded,Yes, because it mentions that "only the system can request package update," which implies requiring system-level permissions.
/com/android/server/pm/DexOptHelper.java,performDexOptMode,Yes, this method may require permissions because it appears to perform operations related to package management and optimization, which typically require system-level permissions in Android.
/com/android/server/pm/DexOptHelper.java,performDexOptSecondary,Yes, this method likely requires permissions related to package management and optimization, as it deals with dex optimization which typically involves app installation and configuration processes that may require elevated privileges.
/com/android/server/pm/DexOptHelper.java,initializeArtManagerLocal,Yes, it requires permission because it involves registering a receiver and possibly accessing system services.
/com/android/server/pm/PackageManagerInternalBase.java,getInstalledApplications,Yes, it requires permissions because accessing the list of installed applications typically requires the `QUERY_ALL_PACKAGES` permission in Android.
/com/android/server/pm/PackageManagerInternalBase.java,canQueryPackage,Yes, it likely requires permissions to query if a specific package can be accessed, as it involves package visibility which is restricted by permissions for security reasons.
/com/android/server/pm/PackageManagerInternalBase.java,isPermissionsReviewRequired,Yes, possibly requires permissions due to interaction with the permission manager.
/com/android/server/pm/PackageManagerInternalBase.java,getPackageInfo,Yes, this method requires permission to access package information.
/com/android/server/pm/PackageManagerInternalBase.java,getPackageUid,Yes, this method likely requires permissions to access package information, particularly related to other apps (as indicated by the use of `packageName`).
/com/android/server/pm/PackageManagerInternalBase.java,getApplicationInfo,Yes, this method requires permissions because it accesses application information, which typically needs access to certain permissions related to app visibility and data security.
/com/android/server/pm/PackageManagerInternalBase.java,queryIntentActivities,Yes, this method requires permissions because it queries for activities that can handle a given intent, which may expose sensitive information or require specific permissions to access certain applications or data.
/com/android/server/pm/PackageManagerInternalBase.java,getSharedUserPackagesForPackage,Yes, this method likely requires permissions related to package management or user access, as it deals with getting shared user packages for a specific package name and user ID.
/com/android/server/pm/PackageManagerInternalBase.java,freeStorage,Yes, this method likely requires permissions related to storage management, as it appears to deal with freeing storage space based on specified parameters.
/com/android/server/pm/PackageManagerInternalBase.java,freeAllAppCacheAboveQuota,Yes, it likely requires permissions to manage app cache storage.
/com/android/server/pm/PackageManagerInternalBase.java,setPackageStoppedState,Yes, this method likely requires permissions because it involves modifying the state of a package, which typically requires certain permissions related to app management and security.
/com/android/server/pm/CrossProfileAppsServiceImpl.java,getTargetUserProfiles,Yes, permissions are required because the method interacts with user profiles, which typically involves accessing user-specific data, necessitating user permissions for privacy and security reasons.
/com/android/server/pm/CrossProfileAppsServiceImpl.java,startActivityAsUser,Yes, this method requires permissions because it deals with starting activities in the context of user profiles, which often requires specific permissions like `INTERACT_ACROSS_PROFILES` and `START_CROSS_PROFILE_ACTIVITIES`.
/com/android/server/pm/CrossProfileAppsServiceImpl.java,startActivityAsUserByIntent,Yes, this method requires permissions, specifically interact across profiles permission, to launch activities across different user profiles.
/com/android/server/pm/CrossProfileAppsServiceImpl.java,canRequestInteractAcrossProfiles,Yes, requires permission to verify the calling package.
/com/android/server/pm/CrossProfileAppsServiceImpl.java,canRequestInteractAcrossProfilesUnchecked,Yes, this method likely requires permissions because it checks for app operation permissions related to interacting across profiles, which typically involves access control in Android.
/com/android/server/pm/CrossProfileAppsServiceImpl.java,canInteractAcrossProfiles,Yes, the method appears to check for permissions related to interacting across user profiles, which typically requires appropriate permissions to be granted.
/com/android/server/pm/CrossProfileAppsServiceImpl.java,hasCallerGotInteractAcrossProfilesPermission,Yes, this method checks for the "interact across profiles" permission, which typically requires certain permissions to access.
/com/android/server/pm/CrossProfileAppsServiceImpl.java,haveProfilesGotInteractAcrossProfilesPermission,Yes, it requires permissions because it checks if a package has the "interact across profiles" permission, which typically requires explicit permissions in Android.
/com/android/server/pm/CrossProfileAppsServiceImpl.java,setInteractAcrossProfilesAppOp,Yes, the method likely requires permissions to manage interactions across different user profiles in Android.
/com/android/server/pm/CrossProfileAppsServiceImpl.java,setInteractAcrossProfilesAppOp,Yes, this method requires permissions. It checks for several permissions (INTERACT_ACROSS_USERS_FULL, INTERACT_ACROSS_USERS, MANAGE_APP_OPS_MODES, CONFIGURE_INTERACT_ACROSS_PROFILES) and throws a SecurityException if they are not granted.
/com/android/server/pm/CrossProfileAppsServiceImpl.java,setInteractAcrossProfilesAppOpForProfile,Yes, it likely requires permissions because it interacts with app operations across profiles, which typically involves sensitive user data and settings.
/com/android/server/pm/CrossProfileAppsServiceImpl.java,setInteractAcrossProfilesAppOpForProfileOrThrow,Yes, because it checks for permissions related to interacting across profiles.
/com/android/server/pm/CrossProfileAppsServiceImpl.java,maybeKillUid,Yes, it requires permissions because it interacts with process management and checks for "interact across profiles" permissions.
/com/android/server/pm/CrossProfileAppsServiceImpl.java,currentModeEquals,Yes, the method involves permission checks to determine app-op modes, indicating it requires permissions to access sensitive app operations or package information.
/com/android/server/pm/CrossProfileAppsServiceImpl.java,sendCanInteractAcrossProfilesChangedBroadcast,Yes, this method likely requires permissions because it involves sending broadcasts and interacting with user profiles, which typically involves sensitive user data and system-level communications.
/com/android/server/pm/CrossProfileAppsServiceImpl.java,findBroadcastReceiversForUser,Yes, it likely requires permissions because it deals with querying broadcast receivers, which can involve accessing system resources that are protected by permissions in the Android framework.
/com/android/server/pm/CrossProfileAppsServiceImpl.java,canConfigureInteractAcrossProfiles,Yes, the method interacts with user profiles and checks permissions, which typically requires permissions like `INTERACT_ACROSS_USERS`.
/com/android/server/pm/CrossProfileAppsServiceImpl.java,canConfigureInteractAcrossProfiles,Yes, the method likely requires permissions to check if a package can interact across profiles, specifically related to the operations and privileges handled by the `AppOpsManager`.
/com/android/server/pm/CrossProfileAppsServiceImpl.java,canUserAttemptToConfigureInteractAcrossProfiles,Yes, this method likely requires permissions because it checks for permissions using `checkCallingOrSelfPermission`, which implies that appropriate permissions need to be granted to access user-related functionality across profiles.
/com/android/server/pm/CrossProfileAppsServiceImpl.java,canUserAttemptToConfigureInteractAcrossProfiles,Yes, this method requires permissions because it checks if an app requested certain app operation permissions related to cross-profile interactions and verifies if the app is signed with platform permissions.
/com/android/server/pm/CrossProfileAppsServiceImpl.java,isPlatformSignedAppWithAutomaticProfilesPermission,Yes, this method checks for the `INTERACT_ACROSS_PROFILES` permission, which requires specific permissions to be granted.
/com/android/server/pm/CrossProfileAppsServiceImpl.java,resetInteractAcrossProfilesAppOps,Yes, it likely requires permissions because it involves resetting app operations across user profiles, which generally requires special app permissions to interact with other apps and user data.
/com/android/server/pm/CrossProfileAppsServiceImpl.java,clearInteractAcrossProfilesAppOps,Yes, it likely requires permissions related to app operations for managing profile interactions.
/com/android/server/pm/CrossProfileAppsServiceImpl.java,isPermissionGranted,Yes, it requires permissions because it checks if a specific permission has been granted for a given user ID.
/com/android/server/pm/CrossProfileAppsServiceImpl.java,hasInteractAcrossProfilesPermission,Yes, because it checks if specific permissions are granted related to user interactions across profiles.
/com/android/server/pm/CrossProfileAppsServiceImpl.java,sendBroadcastAsUser,Yes, this method likely requires permissions because sending broadcasts can involve communicating sensitive data or performing actions that may affect other applications, hence access controls are usually enforced.
/com/android/server/pm/CrossProfileAppsServiceImpl.java,checkComponentPermission,Yes, it checks a specific permission which typically requires permission handling in Android.
/com/android/server/pm/CrossProfileAppsServiceImpl.java,killUid,Yes, it likely requires permissions related to managing app processes, such as killing a process associated with the provided UID.
/com/android/server/pm/CrossProfileAppsServiceImpl.java,sendBroadcastAsUser,Yes, because sending a broadcast typically requires the appropriate permissions related to the intent being sent.
/com/android/server/pm/CrossProfileAppsServiceImpl.java,checkComponentPermission,Yes, it checks component permissions based on the provided parameters.
/com/android/server/pm/CrossProfileAppsServiceImpl.java,verifyPackageHasInteractAcrossProfilePermission,Yes, it requires permission to verify if a package can interact across profiles.
/com/android/server/pm/CrossProfileAppsServiceImpl.java,verifyUidHasInteractAcrossProfilePermission,Yes, it requires permission to check if the UID has the interact across profile permission.
/com/android/server/pm/CrossProfileIntentFilterHelper.java,clearCrossProfileIntentFilters,Yes, because this method deals with cross-profile intent filters, which may require user-related permissions to manipulate user data between different profiles.
/com/android/server/pm/InstallingSession.java,copyApk,Yes, because copying APKs may involve accessing storage, which typically requires permissions like `WRITE_EXTERNAL_STORAGE` in Android.
/com/android/server/pm/InstallingSession.java,copyApkForFileInstall,Yes, because copying an APK for installation typically requires permissions related to file access and package management.
/com/android/server/pm/InstallingSession.java,fixUpInstallReason,Yes, the method checks permissions related to package installation, specifically verifying if the `installerUid` has the `INSTALL_PACKAGES` permission.
/com/android/server/pm/InstallingSession.java,installStage,Yes, it likely requires permissions related to installing packages or accessing package manager functionality in Android.
/com/android/server/pm/InstallingSession.java,processApkInstallRequests,Yes, this method likely requires permissions because it involves installing APKs, which typically requires system-level permissions in Android.
/com/android/server/pm/InstallingSession.java,installApexPackagesTraced,Yes, this method likely requires permissions related to package management and installation on the device.
/com/android/server/pm/InstallingSession.java,installApexPackages,Yes, the method `installApexPackages` likely requires permissions related to installation and management of APEX packages, which typically require elevated permissions in the Android SDK for handling system-level operations.
/com/android/server/pm/Computer.java,queryIntentActivitiesInternal,Yes, this method likely requires permissions to query activities based on intents, as it interacts with the system to resolve intent activities.
/com/android/server/pm/Computer.java,getPackageInfo,Yes, requires permissions to access package information.
/com/android/server/pm/Computer.java,getPackageInfoInternal,Yes, this method likely requires permissions to access package information from other apps.
/com/android/server/pm/Computer.java,getInstalledPackages,Yes, because `getInstalledPackages` typically requires the `QUERY_PACKAGES` permission to access the list of installed packages on the device.
/com/android/server/pm/Computer.java,checkUidPermission,Yes, it likely requires permission because checking a permission involves access control, which typically requires the caller to have specific permissions.
/com/android/server/pm/Computer.java,getPackageUidInternal,Yes, it likely requires permissions, as it may access package information related to the system or other applications.
/com/android/server/pm/Computer.java,updateFlagsForResolve,Yes, because holding the permission `android.permission.ACCESS_INSTANT_APPS` is required in certain circumstances to honor the flags.
/com/android/server/pm/Computer.java,enforceCrossUserOrProfilePermission,Yes, requires permissions for interacting across user profiles and accessing system resources based on user permissions.
/com/android/server/pm/Computer.java,enforceCrossUserPermission,Yes, because it requires either INTERACT_ACROSS_USERS or INTERACT_ACROSS_USERS_FULL permissions when the userId is not the caller.
/com/android/server/pm/Computer.java,findPersistentPreferredActivity,Yes, because it involves querying persistent preferred activities which may require access to app-specific details and user information.
/com/android/server/pm/Computer.java,getPackagesHoldingPermissions,Yes, requires permissions to access package information based on provided permissions.
/com/android/server/pm/Computer.java,getInstalledApplications,Yes, it likely requires permissions to access installed applications for security and privacy reasons.
/com/android/server/pm/Computer.java,canQueryPackage,Yes, the method checks for the {@link android.Manifest.permission.QUERY_ALL_PACKAGES} permission.
/com/android/server/pm/AppStateHelper.java,getImportance,Yes, it likely requires permissions to access package importance, as it interacts with the `ActivityManager` which typically requires permissions related to package management and system services.
/com/android/server/pm/AppStateHelper.java,hasForegroundApp,Yes, requires permission to access app foreground status.
/com/android/server/pm/AppStateHelper.java,isInCall,Yes, it requires permissions related to accessing phone call state (e.g., `READ_PHONE_STATE`).
/com/android/server/pm/AppStateHelper.java,getDependencyPackages,Yes, this method requires permissions. It likely needs permissions to access package information and running app processes in the system, which are sensitive operations.
/com/android/server/pm/DistractingPackageHelper.java,setDistractingPackageRestrictionsAsUser,Yes, this method requires permissions because it deals with marking or unmarking packages as distracting for a user, which involves modifying user-specific app settings.
/com/android/server/pm/DistractingPackageHelper.java,removeDistractingPackageRestrictions,Yes, this method likely requires permissions because it manipulates package restrictions, which typically involves modifying application settings that require specific permissions in Android.
/com/android/server/pm/DistractingPackageHelper.java,sendDistractingPackagesChanged,Yes, this method likely requires permissions because it deals with sending broadcast intents, which typically requires specific permissions in Android to protect sensitive operations and communications between applications.
/com/android/server/pm/UserRestrictionsUtils.java,applyUserRestriction,Yes, the method potentially requires permissions because it modifies user restrictions and interacts with system settings, which typically necessitate elevated permissions in Android.
/com/android/server/pm/UserRestrictionsUtils.java,isSettingRestrictedForUser,Yes, because it interacts with user settings and requires relevant permissions to access or modify them.
/com/android/server/pm/UserRestrictionsUtils.java,setInstallMarketAppsRestriction,Yes, this method modifies secure settings, which requires appropriate permissions to access and change settings related to app installations.
/com/android/server/pm/UserRestrictionsUtils.java,getNewUserRestrictionSetting,Yes, it requires permissions because it interacts with user restrictions, which typically require permission to read or modify user settings in Android.
/com/android/server/pm/PackageUsage.java,writeInternal,Yes, because the method appears to handle file writing, which typically requires permissions such as `WRITE_EXTERNAL_STORAGE` or `WRITE_INTERNAL_STORAGE` in Android.
/com/android/server/pm/ShortcutDumpFiles.java,save,Yes, because the method involves file operations which typically require storage permissions.
/com/android/server/pm/PackageMetrics.java,onUninstallSucceeded,Yes, this method involves package removal, which typically requires permissions related to package management or system operations in Android.
/com/android/server/pm/Installer.java,connect,Yes, this method likely requires permissions because it interacts with the `ServiceManager` and possibly requires access to system-level services which typically require specific permissions in the Android framework.
/com/android/server/pm/Installer.java,migrateAppData,Yes, this method likely requires permissions because it is related to migrating app data, which typically involves accessing sensitive user data and application functionalities.
/com/android/server/pm/Installer.java,clearAppData,Yes, the method likely requires permissions to modify or clear app data, which is a sensitive operation.
/com/android/server/pm/Installer.java,destroyAppData,Yes, this method likely requires permissions to manage app data, as it involves operations on app packages and user data which typically require explicit permissions in Android.
/com/android/server/pm/Installer.java,getAppSize,Yes, this method likely requires permissions because it accesses application size details, which typically involves sensitive data access and may need permissions related to application management.
/com/android/server/pm/Installer.java,dexopt,Yes, this method likely requires permissions due to its operations on APKs, files, and the system environment.
/com/android/server/pm/Installer.java,dumpProfiles,Yes, this method likely requires permissions for accessing package profiles, which may involve sensitive data regarding application profiles and code paths.
/com/android/server/pm/Installer.java,rmPackageDir,Yes, this method likely requires permissions to access and manipulate package directories in the file system.
/com/android/server/pm/Installer.java,linkFile,Yes, this method likely requires permissions because it involves file operations, specifically creating a hardlink, which typically requires access to the filesystem.
/com/android/server/pm/Installer.java,moveAb,Yes, this method likely requires permissions because it involves moving and accessing app data and APK files, which are sensitive operations that typically require storage or package management permissions in Android.
/com/android/server/pm/Installer.java,deleteOdex,Yes, it likely requires permissions because it involves deleting optimized artifacts related to app installations, which typically requires specific permissions regarding app management and storage access.
/com/android/server/pm/Installer.java,prepareAppProfile,Yes, this method likely requires permissions because it interacts with app profiles and user-specific data, which generally require permission to access.
/com/android/server/pm/Installer.java,snapshotAppData,Yes, this method likely requires permissions because it deals with user data and snapshots, which typically involve sensitive information and actions that need user consent or system privileges.
/com/android/server/pm/Installer.java,restoreAppDataSnapshot,Yes, because restoring user data likely involves accessing sensitive user information, which requires permissions.
/com/android/server/pm/Installer.java,destroyAppDataSnapshot,Yes, it requires permissions to delete user data.
/com/android/server/pm/Installer.java,destroyCeSnapshotsNotSpecified,Yes, it likely requires permissions because it involves deleting user data snapshots, which typically requires specific user authorization for privacy and security.
/com/android/server/pm/Installer.java,migrateLegacyObbData,Yes, this method likely requires permission to access and modify files in the storage, particularly related to the obb data migration.
/com/android/server/pm/CrossProfileAppsServiceImplRoboTest.java,mockCrossProfileAppRequestsInteractAcrossProfiles,Yes, this method likely requires permissions because it mentions `Manifest.permission.INTERACT_ACROSS_PROFILES`, indicating that it involves cross-profile operations that typically require specific permissions in Android.
/com/android/server/pm/CrossProfileAppsServiceImplRoboTest.java,grantPermissions,Yes, because the method references multiple permissions that need to be granted.
/com/android/server/pm/CrossProfileAppsServiceImplRoboTest.java,setInteractAcrossProfilesAppOpDefault,Yes, this method likely requires permissions because it interacts with app operations across different user profiles, which typically necessitates elevated privileges.
/com/android/server/pm/CrossProfileAppsServiceImplRoboTest.java,setInteractAcrossProfilesAppOp_noPermissions_throwsSecurityException,Yes, the method requires permissions because it references `Manifest.permission` constants related to managing app operations and user interactions across profiles, which typically require specific permissions in Android.
/com/android/server/pm/CrossProfileAppsServiceImplRoboTest.java,setInteractAcrossProfilesAppOp_missingInteractAcrossUsersAndFull_throwsSecurityException,Yes, this method involves interacting with profile permissions which typically require specific permissions such as `INTERACT_ACROSS_USERS` and `INTERACT_ACROSS_USERS_FULL`.
/com/android/server/pm/CrossProfileAppsServiceImplRoboTest.java,setInteractAcrossProfilesAppOp_configureInteractAcrossProfilesPermissionWithoutAppOpsPermissions_setsAppOp,Yes, because it references permissions such as `MANAGE_APP_OPS_MODES`, `UPDATE_APP_OPS_STATS`, `CONFIGURE_INTERACT_ACROSS_PROFILES`, and `INTERACT_ACROSS_USERS`, which require specific permissions to operate.
/com/android/server/pm/CrossProfileAppsServiceImplRoboTest.java,setInteractAcrossProfilesAppOp_appOpsPermissionsWithoutConfigureInteractAcrossProfilesPermission_setsAppOp,Yes, because it references permissions such as `CONFIGURE_INTERACT_ACROSS_PROFILES`, `MANAGE_APP_OPS_MODES`, `UPDATE_APP_OPS_STATS`, and `INTERACT_ACROSS_USERS`.
/com/android/server/pm/CrossProfileAppsServiceImplRoboTest.java,setInteractAcrossProfilesAppOp_setsAppOpWithUsersAndWithoutFull,Yes, it requires permissions related to interacting with profiles (e.g., INTERACT_ACROSS_USERS_FULL and INTERACT_ACROSS_USERS).
/com/android/server/pm/CrossProfileAppsServiceImplRoboTest.java,setInteractAcrossProfilesAppOp_setsAppOpWithFullAndWithoutUsers,Yes, because it interacts with cross-profile permission settings, specifically involving `INTERACT_ACROSS_USERS` and `INTERACT_ACROSS_USERS_FULL`, which are sensitive and require specific permissions.
/com/android/server/pm/CrossProfileAppsServiceImplRoboTest.java,setInteractAcrossProfilesAppOp_setsAppOpOnOtherProfile,Yes, it likely requires permissions due to its interaction across profiles, which typically mandates permissions in Android for accessing cross-profile functionalities.
/com/android/server/pm/CrossProfileAppsServiceImplRoboTest.java,setInteractAcrossProfilesAppOp_sendsBroadcastToOtherProfile,Yes, this method likely requires permissions because it deals with interactions across profiles, which typically involves managing user data and settings that are sensitive in nature.
/com/android/server/pm/CrossProfileAppsServiceImplRoboTest.java,setInteractAcrossProfilesAppOp_withCrossProfileAttribute_manifestReceiversGetBroadcast,Yes, this method likely requires permissions related to cross-profile interactions, as it involves setting attributes and interacting with cross-profile apps, which generally necessitates certain permissions in the Android SDK.
/com/android/server/pm/CrossProfileAppsServiceImplRoboTest.java,createCrossProfilesPermissionInfo,Yes, it likely requires permissions because it references `Manifest.permission.INTERACT_ACROSS_PROFILES`, which implies it is dealing with cross-profile permissions in Android.
/com/android/server/pm/CrossProfileAppsServiceImplRoboTest.java,setInteractAcrossProfilesAppOp_userToSetInDifferentProfileGroupToCaller_setsAppOpOnOtherProfile,Yes, it likely requires permissions related to cross-profile interactions as it deals with `setInteractAcrossProfilesAppOp`, indicating a need for managing profile-specific operations which generally require special permissions in Android.
/com/android/server/pm/CrossProfileAppsServiceImplRoboTest.java,mockCrossProfileAppDoesNotRequestInteractAcrossProfiles,Yes, the method refers to "Manifest.permission.INTERACT_ACROSS_PROFILES", indicating it interacts with a permissions model.
/com/android/server/pm/CrossProfileAppsServiceImplRoboTest.java,grantPermissions,Yes, it likely requires permissions because it involves granting permissions, which typically requires permission checks in Android.
/com/android/server/pm/CrossProfileAppsServiceImplRoboTest.java,getCrossProfileAppOp,Yes, the method involves checking permissions related to interacting across profiles (`INTERACT_ACROSS_PROFILES`), which requires specific permissions to operate within the Android environment.
/com/android/server/pm/CrossProfileAppsServiceImplRoboTest.java,getActivityTaskManagerInternal,Yes, it likely requires permissions because it interacts with system services (ActivityTaskManagerInternal).
/com/android/server/pm/CrossProfileAppsServiceImplRoboTest.java,sendBroadcastAsUser,Yes, this method requires permissions to send broadcasts, which typically need the `SEND_BROADCAST` permission depending on the intent's action and component.
/com/android/server/pm/CrossProfileAppsServiceImplRoboTest.java,checkComponentPermission,Yes, it checks permissions.
/com/android/server/pm/CrossProfileAppsServiceImplRoboTest.java,killUid,Yes, it likely requires permissions because killing a process by UID typically involves modifying system-level operations, which generally require specific permissions.
/com/android/server/pm/PackageSessionVerifier.java,onPackageInstalled,Yes, because it deals with package installation, which typically requires permissions like `REQUEST_INSTALL_PACKAGES` or related package management permissions.
/com/android/server/pm/PackageSessionVerifier.java,submitSessionToApexService,Yes, the method may require permissions related to package management and possibly file management, given it involves operations such as parsing packages and possibly accessing APEX session information.
/com/android/server/pm/UserNeedsBadgingCache.java,get,Yes, because it interacts with user information which typically requires permissions related to user management or accessing user data.
/com/android/server/pm/NoFilteringResolver.java,hasPermission,Yes, the method checks whether the calling UID has a specific permission, which requires permissions to access that information.
/com/android/server/pm/ModuleInfoProvider.java,getInstalledModules,Yes, this method may require permissions to access installed modules, as it interacts with package statistics which typically involves accessing system information.
/com/android/server/pm/BroadcastHelper.java,sendPackageBroadcast,Yes, the method likely requires permissions because it sends broadcasts, which can affect or interact with other applications or system components.
/com/android/server/pm/BroadcastHelper.java,doSendBroadcast,Yes, the method requires permission because it is protected by the `ACCESS_INSTANT_APPS` permission if `isInstantApp` is `true`.
/com/android/server/pm/BroadcastHelper.java,sendBootCompletedBroadcastToSystemApp,Yes, it requires permissions because it sends broadcasts related to the boot process, which typically requires the `RECEIVE_BOOT_COMPLETED` permission.
/com/android/server/pm/BroadcastHelper.java,getTemporaryAppAllowlistBroadcastOptions,Yes, this method likely requires permissions because it deals with broadcast options and temporary app allowlist, which are typically associated with sensitive actions that can affect app behavior and system integrity.
/com/android/server/pm/BroadcastHelper.java,sendPackageChangedBroadcast,Yes, because sending package change broadcasts typically requires permissions related to package management or system broadcasts.
/com/android/server/pm/BroadcastHelper.java,sendDeviceCustomizationReadyBroadcast,Yes, the method requires permissions because it references `RECEIVE_DEVICE_CUSTOMIZATION_READY`, which indicates a permission check for broadcasting intents related to device customization.
/com/android/server/pm/BroadcastHelper.java,sendSessionCommitBroadcast,Yes, because it involves sending broadcasts which typically requires permissions related to app interactions and user data.
/com/android/server/pm/BroadcastHelper.java,sendPackageAddedForNewUsers,Yes, the method likely requires permissions to interact with system broadcasts related to package management.
/com/android/server/pm/BroadcastHelper.java,filterExtrasChangedPackageList,Yes, this method likely requires permissions because it accesses and filters intent extras related to package visibility, which typically involves sensitive data about installed applications and their interactions.
/com/android/server/pm/AppsFilterUtils.java,requestsQueryAllPackages,Yes, because it checks for the `QUERY_ALL_PACKAGES` permission.
/com/android/server/pm/ShortcutUser.java,removePackage,Yes, the method likely requires permissions to modify or remove a package, which typically involves access to package management functionalities.
/com/android/server/pm/ShortcutUser.java,removeLauncher,Yes, because this method likely modifies the launcher settings, which typically requires specific permissions to ensure security and user intent.
/com/android/server/pm/CompilerStats.java,getPackageStats,Yes, this method likely requires permissions as it deals with package statistics, which typically involves accessing sensitive information about installed apps on the device.
/com/android/server/pm/CompilerStats.java,writeInternal,Yes, the method likely requires permissions to write to storage, such as `WRITE_EXTERNAL_STORAGE`, if it writes to external files.
/com/android/server/pm/CrossProfileResolver.java,getProfileParent,Yes, accessing user info typically requires permissions related to user privacy, such as READ_PROFILE or similar in Android.
/com/android/server/pm/VerifyingSession.java,sendEnableRollbackRequest,Yes, this method likely requires permissions. It involves sending a broadcast, which typically necessitates certain permissions, like `PACKAGE_ROLLBACK_AGENT`.
/com/android/server/pm/VerifyingSession.java,sendIntegrityVerificationRequest,Yes, the method likely requires permissions related to package verification and possibly accessing package information on the device, which are sensitive operations.
/com/android/server/pm/VerifyingSession.java,isAdbVerificationEnabled,Yes, this method likely requires permissions related to accessing user settings or package information.
/com/android/server/pm/DynamicCodeLoggingService.java,schedule,Yes, this method requires permissions because it involves scheduling jobs through the JobScheduler, which may need system-level permissions to execute in the background, such as managing background tasks and accessing device states like being idle or charging.
/com/android/server/pm/PackageManagerNative.java,getInstallerForPackage,Yes, this method likely requires permission to access package information, which typically involves permissions related to accessing installed applications.
/com/android/server/pm/PackageManagerNative.java,getLocationFlags,Yes, because it involves retrieving application information which may require permissions related to accessing package details.
/com/android/server/pm/DefaultAppProvider.java,setDefaultBrowser,Yes, this method requires permissions. It sets the default browser for the device, which typically requires permissions related to accessing system settings or managing roles.
/com/android/server/pm/DefaultAppProvider.java,setDefaultHome,Yes, this method likely requires permissions because it involves setting the default home, which typically requires specific permissions to manage system settings related to app roles.
/com/android/server/pm/DefaultAppProvider.java,getRoleHolder,Yes, this method likely requires permissions because it interacts with the `RoleManager`, which typically involves user roles and permissions management in Android.
/com/android/server/pm/ApkChecksums.java,getChecksums,Yes, this method may require permissions to access files on the device.
/com/android/server/pm/PackageRemovedInfo.java,sendSystemPackageUpdatedBroadcastsInternal,Yes, this method likely requires permissions to send package update broadcasts in an Android context, which typically requires administrative-level permissions.
/com/android/server/pm/PackageRemovedInfo.java,getTemporaryAppAllowlistBroadcastOptions,Yes, the method appears to interact with `ActivityManagerInternal` and may manage application allowlists, which typically require system-level permissions.
/com/android/server/pm/PackageRemovedInfo.java,sendPackageRemovedBroadcastInternal,Yes, this method likely requires permissions, as it seems to handle package removal, which typically involves sensitive operations related to app management and may require elevated permissions such as `PACKAGE_REMOVED`, making it critical for system-level operations.
/com/android/server/pm/RestrictionsSet.java,updateRestrictions,Yes, this method likely requires permissions because it updates user restrictions, which typically involves modifying sensitive user data.
/com/android/server/pm/RestrictionsSet.java,removeRestrictionsForAllUsers,Yes, this method likely requires permissions because it involves modifying user restrictions, which typically requires elevated privileges in an Android application.
/com/android/server/pm/ResolveIntentHelper.java,resolveIntentInternal,Yes, because it involves resolving intents and may require user permissions to access certain app components and activities.
/com/android/server/pm/ResolveIntentHelper.java,getLaunchIntentSenderForPackage,Yes, this method requires permissions because it deals with intent senders, which may require specific permissions to interact with other applications and user data securely.
/com/android/server/pm/ResolveIntentHelper.java,resolveServiceInternal,Yes, the method may require permissions because it involves resolving services based on an `Intent`, which could involve accessing sensitive data or system resources.
/com/android/server/pm/ResolveIntentHelper.java,queryIntentContentProvidersInternal,Yes, this method likely requires permissions because it queries content providers, which typically requires specific permissions in Android, such as querying external storage or accessing specific data.
/com/android/server/pm/ResolveIntentHelper.java,queryIntentActivityOptionsInternal,Yes, this method may require permissions because it involves querying activities (via intents) and may access system components or user-specific data, which typically require appropriate permissions in the Android SDK.
/com/android/server/pm/UserManagerInternal.java,setDevicePolicyUserRestrictions,Yes, this method likely requires permissions related to device management or user restrictions, as it is setting policies enforced by the user.
/com/android/server/pm/UserManagerInternal.java,setUserRestriction,Yes, this method likely requires permissions because it modifies user restrictions, which typically affects system-level settings and user data privacy.
/com/android/server/pm/UserManagerInternal.java,removeAllUsers,Yes, this method likely requires permissions because it performs a sensitive operation that affects user accounts on the device.
/com/android/server/pm/UserManagerInternal.java,createUserEvenWhenDisallowed,Yes, it requires permission because it bypasses restrictions on user creation, typically controlled by device administration policies.
/com/android/server/pm/UserManagerInternal.java,setDefaultCrossProfileIntentFilters,Yes, this method likely requires permission because it deals with cross-profile intent filters, which usually involves user privacy and profile management in Android.
/com/android/server/pm/PreferredActivityHelper.java,addPreferredActivity,Yes, the method `addPreferredActivity` requires permissions as it checks for `SET_PREFERRED_APPLICATIONS` permission before executing its functionality.
/com/android/server/pm/PreferredActivityHelper.java,replacePreferredActivity,Yes, because it checks for the permission `SET_PREFERRED_APPLICATIONS`.
/com/android/server/pm/PreferredActivityHelper.java,clearPackagePreferredActivities,Yes, this method requires permissions because it involves checking and enforcing the `SET_PREFERRED_APPLICATIONS` permission, which is related to modifications of application preferences.
/com/android/server/pm/PreferredActivityHelper.java,addPersistentPreferredActivity,Yes, the method `addPersistentPreferredActivity` requires permissions because it can only be run by the system, as indicated by the check against `SYSTEM_UID`.
/com/android/server/pm/PreferredActivityHelper.java,clearPackagePersistentPreferredActivities,Yes, the method `clearPackagePersistentPreferredActivities` requires system permissions because it can only be run by the system, as indicated by the `SecurityException` thrown for non-system UIDs.
/com/android/server/pm/PreferredActivityHelper.java,restorePreferredActivities,Yes, because the method contains a security check that only allows system-level calls, implying it inherently requires system permissions to function properly.
/com/android/server/pm/PreferredActivityHelper.java,getDefaultAppsBackup,Yes, because it uses `getCallingUid()` which implies system-level access.
/com/android/server/pm/PreferredActivityHelper.java,resetApplicationPreferences,Yes, this method requires permissions because it calls `enforceCallingOrSelfPermission` which checks for specific permissions before allowing the operation.
/com/android/server/pm/PreferredActivityHelper.java,findPersistentPreferredActivity,Yes, the method likely requires permissions since it involves querying activities based on user ID and intents, which may need permissions related to accessing or modifying user data or system settings.
/com/android/server/pm/ShortcutLauncher.java,pinShortcuts,Yes, this method likely requires permissions because it deals with pinning shortcuts, which often involves interacting with the user's home screen and modifying app launcher behaviors, typically requiring specific user permissions in Android.
/com/android/server/pm/ShortcutLauncher.java,addPinnedShortcut,Yes, this method likely requires permissions. It interacts with shortcuts, which generally involve permissions related to modifying shortcuts or accessing user data.
/com/android/server/pm/ResilientAtomicFile.java,startWrite,Yes, this method likely requires permission to access the file system, particularly to create, delete, or modify files.
/com/android/server/pm/ResilientAtomicFile.java,finishWrite,Yes, this method likely requires permissions related to file handling, such as WRITE_EXTERNAL_STORAGE. It involves writing and copying files using FileOutputStream and FileInputStream.
/com/android/server/pm/UserTypeFactory.java,getDefaultSecondaryUserRestrictions,Yes, because it involves user restrictions related to telephony and messaging, which may require specific permissions to access.
/com/android/server/pm/UserTypeFactory.java,getDefaultManagedProfileRestrictions,Yes, because accessing profile restrictions may require permissions related to user management.
/com/android/server/pm/UserTypeFactory.java,getDefaultManagedProfileSecureSettings,Yes, this method likely requires permission because it interacts with `android.provider.Settings.Secure`, which typically requires specific permissions to access secure system settings on the device.
/com/android/server/pm/UserSystemPackageInstaller.java,installWhitelistedSystemPackages,Yes, because installing or uninstalling system packages typically requires elevated permissions in Android, specifically permissions related to package management and system-level operations.
/com/android/server/pm/verify/domain/DomainVerificationEnforcer.java,assertApprovedQuerent,Yes, it requires permissions. The method enforces permissions like DUMP and QUERY_ALL_PACKAGES for the caller, ensuring only approved entities can query domain verification state.
/com/android/server/pm/verify/domain/DomainVerificationEnforcer.java,assertApprovedVerifier,Yes, this method requires permissions because it includes checks for `DOMAIN_VERIFICATION_AGENT` and `QUERY_ALL_PACKAGES` permissions, indicating that the calling UID must have specific permissions to execute the method correctly.
/com/android/server/pm/verify/domain/DomainVerificationEnforcer.java,assertApprovedUserStateQuerent,Yes, it requires permissions because it involves checking user permissions to enforce access rules when mutating user selection states.
/com/android/server/pm/verify/domain/DomainVerificationEnforcer.java,assertApprovedUserSelector,Yes, because the method involves enforcing permissions related to interacting across users and updating domain verification user selection.
/com/android/server/pm/verify/domain/DomainVerificationEnforcer.java,callerIsLegacyUserSelector,Yes, requires permissions. The method enforces permissions using `enforcePermission` and checks for `INTERACT_ACROSS_USERS`, which requires specific permissions.
/com/android/server/pm/verify/domain/DomainVerificationEnforcer.java,callerIsLegacyUserQuerent,Yes, the method involves cross-user interaction and checking permissions, indicating that it likely requires certain permissions related to user and package access control.
/com/android/server/pm/verify/domain/DomainVerificationEnforcer.java,assertOwnerQuerent,Yes, the method requires permissions because it enforces `QUERY_ALL_PACKAGES` and `INTERACT_ACROSS_USERS`.
/com/android/server/pm/verify/domain/DomainVerificationShell.java,runCommand,Yes, this method likely requires permissions because it runs shell/debugging commands, which can involve sensitive operations and data access that typically require specific permissions in Android.
/com/android/server/pm/verify/domain/DomainVerificationShell.java,translateUserId,Yes, because it involves handling user IDs, which typically requires permissions related to accessing user data or identifiers in Android.
/com/android/server/pm/verify/domain/proxy/DomainVerificationProxyCombined.java,sendBroadcastForPackages,Yes, it requires permissions to send broadcasts, as this can affect other apps in the system.
/com/android/server/pm/verify/domain/proxy/DomainVerificationProxyV2.java,sendBroadcastForPackages,Yes, this method likely requires permissions because it involves sending broadcasts, which typically necessitates permissions related to messaging or inter-process communication.
/com/android/server/pm/verify/domain/proxy/DomainVerificationProxyV2.java,runMessage,Yes, because the method involves broadcasting an intent, which typically requires permissions in Android.
/com/android/server/pm/verify/domain/proxy/DomainVerificationProxyUnavailable.java,sendBroadcastForPackages,Yes, this method likely requires permissions to send broadcasts to packages, as it interacts with other apps.
/com/android/server/pm/resolution/ComponentResolverBase.java,queryServices,Yes, it likely requires permissions to access services related to intents and user information.
/com/android/server/pm/resolution/ComponentResolverBase.java,queryServices,Yes, this method likely requires permissions to access services on the device, as it queries for services using an Intent, which often involves permissions related to starting services or accessing specific functionalities.
/com/android/server/pm/resolution/ComponentResolverLocked.java,queryActivities,Yes, this method likely requires permissions because it interacts with activities, which typically involves querying for app information that might be sensitive or private.
/com/android/server/pm/dex/PackageDexUsage.java,writeInternal,Yes, this method likely requires permissions to write to a file or modify storage, especially in an Android environment where file access may require explicit permissions in the manifest (e.g., WRITE_EXTERNAL_STORAGE).
/com/android/server/pm/dex/PackageDexUsage.java,readInternal,Yes, reading a file typically requires permissions, such as reading external storage or internal storage permissions, depending on the file's location.
/com/android/server/pm/dex/PackageDexUsage.java,removePackage,Yes, this method likely requires permissions to access and modify usage data associated with packages.
/com/android/server/pm/dex/PackageDexUsage.java,removeUserPackage,Yes, this method requires permissions, specifically to manage app packages and user data.
/com/android/server/pm/dex/PackageDexUsage.java,removeDexFile,Yes, it likely requires permissions related to removing dex files associated with a package.
/com/android/server/pm/dex/OdsignStatsLogger.java,writeStats,Yes, because the method interacts with the file system (reading/deleting files), which typically requires file-related permissions in Android.
/com/android/server/pm/dex/DexManager.java,notifyPackageDataDestroyed,Yes, the method manages user package data, which typically requires permission to write or modify app data.
/com/android/server/pm/dex/DynamicCodeLogger.java,recordNative,Yes, this method likely requires permissions because it interacts with the system package manager and manages native code execution, which typically necessitates permissions for security reasons.
/com/android/server/pm/dex/DynamicCodeLogger.java,removePackage,Yes, because removing a package may require permissions related to package management.
/com/android/server/pm/dex/PackageDynamicCodeLoading.java,removePackage,Yes, because removing package data typically requires certain permissions like `DELETE_PACKAGES` or similar to ensure security and proper access control.
/com/android/server/pm/dex/PackageDynamicCodeLoading.java,removeUserPackage,Yes, because it involves modifying package data which may require specific app or user permissions.
/com/android/server/pm/dex/PackageDynamicCodeLoading.java,writeInternal,Yes, this method requires permissions as it likely writes to a file, which generally requires storage permissions in Android.
/com/android/server/pm/dex/PackageDynamicCodeLoading.java,readInternal,Yes, the method `readInternal` likely requires permissions to access the file system, specifically read permissions, due to the use of `FileInputStream` and the invocation of `openRead`.
/com/android/server/pm/dex/ViewCompiler.java,compileLayouts,Yes, this method likely requires permissions because it accesses package information and uses various system resources, which typically necessitate appropriate permissions in Android.
/com/android/server/pm/dex/ArtManagerService.java,checkAndroidPermissions,Yes, the method checks for specific runtime permissions (`READ_RUNTIME_PROFILES` and `PACKAGE_USAGE_STATS`), which require appropriate permissions to function properly.
/com/android/server/pm/dex/ArtManagerService.java,snapshotRuntimeProfile,Yes, it requires permissions because it checks for shell and Android permissions before proceeding with its functionality.
/com/android/server/pm/dex/ArtManagerService.java,snapshotAppProfile,Yes, this method likely requires permissions to access package information and potentially user data, as it interacts with applications through the package manager.
/com/android/server/pm/dex/ArtManagerService.java,dumpProfiles,Yes, because the method accesses package profiles, which may require permissions related to managing app data or accessing package information.
/com/android/server/pm/parsing/library/PackageBackwardCompatibility.java,updatePackage,Yes, this method likely requires permissions as it appears to be updating package information, which typically involves modifying system-level data that is protected by permissions in Android.
/com/android/server/pm/parsing/library/PackageBackwardCompatibility.java,updatePackage,Yes, it likely requires permissions to update a package, potentially impacting app behavior or system stability.
/com/android/server/pm/parsing/library/PackageBackwardCompatibility.java,updatePackage,Yes, it likely requires permissions because updating packages can involve installation or modification of apps, which typically requires specific permissions in Android.
/com/android/server/pm/parsing/library/PackageSharedLibraryUpdater.java,updatePackage,Yes, updating packages typically requires permissions to modify app data and system configurations.
/com/android/server/pm/parsing/library/OrgApacheHttpLegacyUpdater.java,updatePackage,Yes, it likely requires permissions to update packages in the system, particularly for system apps.
/com/android/server/pm/parsing/library/ApexSharedLibraryUpdater.java,updatePackage,Yes, this method likely requires permissions because it deals with package updates, which typically involve system-level operations and can affect installed applications.
/com/android/server/pm/parsing/library/AndroidTestBaseUpdater.java,updatePackage,Yes, the method `updatePackage` likely requires permissions because it involves updating package information, which typically necessitates specific permissions in Android for security and system integrity.
/com/android/server/pm/parsing/library/ComGoogleAndroidMapsUpdater.java,updatePackage,Yes, because it likely modifies app or library states which generally requires appropriate permissions in Android.
/com/android/server/pm/parsing/library/AndroidHidlUpdater.java,updatePackage,Yes, because it likely modifies the package state, which requires permissions such as `INSTALL_PACKAGES` or similar.
/com/android/server/pm/parsing/pkg/PackageImpl.java,addPermission,Yes, it requires permissions because it is related to managing app permissions.
/com/android/server/pm/parsing/pkg/PackageImpl.java,addUsesPermission,Yes, it requires permissions because it involves adding uses of permissions in an Android application.
/com/android/server/pm/parsing/pkg/PackageImpl.java,hasRequestRawExternalStorageAccess,Yes, it requires permissions because accessing raw external storage typically requires explicit storage permissions in Android.
/com/android/server/pm/parsing/pkg/PackageImpl.java,isExternalStorage,Yes, it requires permissions because accessing external storage typically requires storage permissions in Android.
/com/android/server/pm/parsing/pkg/PackageImpl.java,setCrossProfile,Yes, it likely requires permissions because it deals with cross-profile settings, which typically require specific user or system permissions in Android.
/com/android/server/pm/parsing/pkg/PackageImpl.java,setExternalStorage,Yes, it likely requires permissions to access external storage in Android.
/com/android/server/pm/parsing/pkg/PackageImpl.java,setFullBackupOnly,Yes, this method likely requires backup permissions, as it deals with the backup settings of an application.
/com/android/server/pm/parsing/pkg/PackageImpl.java,setInstallLocation,Yes, this method likely requires permissions to change the install location of an application.
/com/android/server/pm/parsing/pkg/PackageImpl.java,setRequestForegroundServiceExemption,Yes, this method likely requires permissions as it deals with foreground service exemptions, which typically involves managing system-level resources and operations in Android.
/com/android/server/pm/parsing/pkg/PackageImpl.java,setSharedUserId,Yes, because setting a shared user ID can involve modifying application permissions and scopes related to other applications.
/com/android/server/pm/parsing/pkg/PackageImpl.java,setTaskAffinity,Yes, because `setTaskAffinity` generally requires permissions related to modifying the task's behavior in the Android system.
/com/android/server/pm/parsing/pkg/PackageImpl.java,setPackageName,Yes, the method seems to involve handling permissions in an Android context. Typically, changing packages or settings related to permissions requires appropriate permissions granted in the AndroidManifest, such as `CHANGE_PACKAGE_SETTINGS`.
/com/android/server/pm/permission/UidPermissionState.java,getOrCreatePermissionState,Yes, this method likely requires permissions because it deals with managing or retrieving permission states, which typically requires explicit permissions to access or modify in Android.
/com/android/server/pm/permission/UidPermissionState.java,putPermissionState,Yes, this method likely requires permissions because it manages permission states, which typically require explicit permissions to modify in Android.
/com/android/server/pm/permission/UidPermissionState.java,isPermissionGranted,Yes, because it checks if a certain permission is granted, which requires appropriate permission management in Android.
/com/android/server/pm/permission/UidPermissionState.java,grantPermission,Yes, it requires permissions because it is a method that deals with granting permissions.
/com/android/server/pm/permission/UidPermissionState.java,updatePermissionFlags,Yes, it requires permission to update permission flags.
/com/android/server/pm/permission/UidPermissionState.java,updatePermissionFlagsForAllPermissions,Yes, this method likely requires permissions because it operates on permission state management, which typically involves modifying or checking app permissions and hence can impact user privacy and security.
/com/android/server/pm/permission/PermissionRegistry.java,getPermission,Yes, the method likely requires permissions to access or retrieve information related to the specified permission name.
/com/android/server/pm/permission/PermissionRegistry.java,getPermissionTrees,Yes, likely requires permission-related access due to the mention of 'Permission' in the type signature.
/com/android/server/pm/permission/PermissionRegistry.java,transferPermissions,Yes, this method requires permissions because it transfers ownership of permissions from one package to another, which involves accessing and modifying permission settings.
/com/android/server/pm/permission/PermissionRegistry.java,enforcePermissionTree,Yes, because the method throws a `SecurityException` if the calling UID is not allowed to add permissions, indicating it checks for appropriate permissions.
/com/android/server/pm/permission/PermissionAllowlist.java,getApexPrivilegedAppAllowlists,Yes, this method likely requires permissions because it appears to access privileged app allowlists, which typically involve sensitive information or system resources.
/com/android/server/pm/permission/PermissionAllowlist.java,getOemAppAllowlistState,Yes, this method likely requires permissions because it interacts with OEM-specific app allowlists, which may involve sensitive or restricted operations on package access permissions.
/com/android/server/pm/permission/PermissionAllowlist.java,getPrivilegedAppAllowlistState,Yes, this method likely requires permissions to access app privilege states and check app permissions based on the package name and permission name provided.
/com/android/server/pm/permission/PermissionAllowlist.java,getSystemExtPrivilegedAppAllowlistState,Yes, because accessing the privileged app allowlist state typically requires specific permissions related to package management or system-level access.
/com/android/server/pm/permission/LegacyPermissionManagerService.java,checkDeviceIdentifierAccess,Yes, the method requires permissions, specifically for checking access to device identifiers, which typically involves sensitive data access that requires authorization.
/com/android/server/pm/permission/LegacyPermissionManagerService.java,checkPhoneNumberAccess,Yes, this method requires permissions because it checks for `READ_PHONE_STATE`, `READ_PHONE_NUMBERS`, `READ_SMS`, and related permissions to determine access status.
/com/android/server/pm/permission/LegacyPermissionManagerService.java,checkPermissionAndAppop,Yes, this method checks for permissions and app operations, which inherently requires the appropriate permissions to be granted to the calling context or application.
/com/android/server/pm/permission/LegacyPermissionManagerService.java,grantDefaultPermissionsToCarrierServiceApp,Yes, because the method deals with granting permissions related to a carrier service app, which typically requires special permissions to access.
/com/android/server/pm/permission/LegacyPermissionManagerService.java,grantDefaultPermissionsToActiveLuiApp,Yes, it likely requires permissions to enforce system-level operations and manage permissions associated with applications.
/com/android/server/pm/permission/LegacyPermissionManagerService.java,revokeDefaultPermissionsFromLuiApps,Yes, this method likely requires permissions due to its interaction with system-level permissions and user IDs, which typically necessitate certain privileges in Android.
/com/android/server/pm/permission/LegacyPermissionManagerService.java,grantDefaultPermissionsToEnabledImsServices,Yes, it requires permissions to enforce calling identity and grant permissions to services.
/com/android/server/pm/permission/LegacyPermissionManagerService.java,grantDefaultPermissionsToEnabledTelephonyDataServices,Yes, this method requires permissions because it involves granting default permissions, which typically requires system privileges, especially related to telephony services.
/com/android/server/pm/permission/LegacyPermissionManagerService.java,grantDefaultPermissionsToEnabledCarrierApps,Yes, because it involves granting permissions, which requires appropriate system permissions.
/com/android/server/pm/permission/LegacyPermissionManagerService.java,resetRuntimePermissions,Yes, because it enforces calling permissions for `INTERACT_ACROSS_USERS_FULL` and runtime permission revocation.
/com/android/server/pm/permission/LegacyPermissionManagerService.java,grantDefaultPermissionsToDefaultUseOpenWifiApp,Yes, this method likely requires permissions to grant permissions to an app, especially regarding Wi-Fi functionality.
/com/android/server/pm/permission/LegacyPermissionManagerService.java,checkSoundTriggerRecordAudioPermissionForDataDelivery,Yes, it requires permissions because it checks for audio recording permissions (`RECORD_AUDIO`) and performs operations related to audio data delivery.
/com/android/server/pm/permission/LegacyPermissionManagerService.java,checkPermission,Yes, because it checks if a specific permission has been granted to a package, which requires permission checks.
/com/android/server/pm/permission/LegacyPermissionManagerService.java,getApplicationInfo,Yes, the method requires permissions to access application information, specifically to retrieve details about another app's `ApplicationInfo`.
/com/android/server/pm/permission/PermissionManagerServiceInternal.java,checkPermission,Yes, it involves checking if a permission has been granted, which requires permission checks.
/com/android/server/pm/permission/PermissionManagerServiceInternal.java,resetRuntimePermissionsForUser,Yes, because it involves resetting runtime permission states which requires permission management capabilities.
/com/android/server/pm/permission/PermissionManagerServiceInternal.java,startShellPermissionIdentityDelegation,Yes, because this method involves delegating permissions related to the shell UID, which typically requires specific permissions to perform such operations.
/com/android/server/pm/permission/PermissionManagerServiceInternal.java,setHotwordDetectionServiceProvider,Yes, it likely requires permissions to modify or set services related to hotword detection, as these services often involve access to sensitive audio data.
/com/android/server/pm/permission/PermissionManagerServiceInterface.java,queryPermissionsByGroup,Yes, it requires permissions to access information about permission groups.
/com/android/server/pm/permission/PermissionManagerServiceInterface.java,addPermission,Yes, the method requires permissions because it involves adding a new dynamic permission to the system, which is a privileged action restricted to certain applications.
/com/android/server/pm/permission/PermissionManagerServiceInterface.java,removePermission,Yes, because removing permissions requires appropriate ownership and can throw a SecurityException if the caller lacks the necessary permissions.
/com/android/server/pm/permission/PermissionManagerServiceInterface.java,getPermissionFlags,Yes, because it retrieves information about permissions based on package and user context.
/com/android/server/pm/permission/PermissionManagerServiceInterface.java,updatePermissionFlags,Yes, because it involves updating permission flags, which generally requires appropriate permissions to modify system settings or package states.
/com/android/server/pm/permission/PermissionManagerServiceInterface.java,updatePermissionFlagsForAllApps,Yes, because it deals with updating permission flags for apps, which typically requires permissions related to app management or device administration.
/com/android/server/pm/permission/PermissionManagerServiceInterface.java,getAllowlistedRestrictedPermissions,Yes, the method requires permissions because it accesses sensitive information regarding the allowlisting of permissions, which can be restricted and requires proper authorization to access.
/com/android/server/pm/permission/PermissionManagerServiceInterface.java,removeAllowlistedRestrictedPermission,Yes, this method requires permissions because it modifies allowlisted restricted permissions, which typically requires elevated privileges.
/com/android/server/pm/permission/PermissionManagerServiceInterface.java,grantRuntimePermission,Yes, because it requires `android.permission.GRANT_RUNTIME_PERMISSIONS` and potentially `android.permission.INTERACT_ACROSS_USERS_FULL`.
/com/android/server/pm/permission/PermissionManagerServiceInterface.java,revokeRuntimePermission,Yes, requires `android.permission.REVOKE_RUNTIME_PERMISSIONS` and possibly `android.permission.INTERACT_ACROSS_USERS_FULL`.
/com/android/server/pm/permission/PermissionManagerServiceInterface.java,checkPermission,Yes, because it checks permissions related to a package and requires access control.
/com/android/server/pm/permission/PermissionManagerServiceInterface.java,getAppOpPermissionPackages,Yes, this method involves app op permissions, which typically require specific permissions to access information about other apps' permission requests.
/com/android/server/pm/permission/LegacyPermissionSettings.java,writePermissions,Yes, this method is likely to require permissions because it involves writing permissions, which typically necessitates specific app permissions for security reasons.
/com/android/server/pm/permission/Permission.java,calculateFootprint,Yes, because the method interacts with a `Permission` object, which typically requires permission checks in Android applications.
/com/android/server/pm/permission/Permission.java,addToTree,Yes, this method likely requires permissions because it deals with `PermissionInfo` and `Permission`, which are associated with security and access control in Android.
/com/android/server/pm/permission/Permission.java,enforcePermissionTree,Yes, the method appears to involve permission management, which typically requires specific permissions to enforce or modify permission trees.
/com/android/server/pm/permission/Permission.java,generatePermissionInfo,Yes, this method deals with permission information, which typically requires appropriate permissions to access or modify permission settings in the Android environment.
/com/android/server/pm/permission/LegacyPermissionManagerInternal.java,resetRuntimePermissions,Yes, because it involves resetting permission states, which typically requires administrative or elevated permissions.
/com/android/server/pm/permission/LegacyPermissionManagerInternal.java,setSmsAppPackagesProvider,Yes, because it involves setting SMS application packages, which typically requires SMS-related permissions.
/com/android/server/pm/permission/LegacyPermissionManagerInternal.java,grantDefaultPermissionsToDefaultSimCallManager,Yes, it requires permissions to grant default permissions to a package for a specific user.
/com/android/server/pm/permission/LegacyPermissionManagerInternal.java,grantDefaultPermissionsToDefaultUseOpenWifiApp,Yes, it likely requires permissions to grant permissions to an app.
/com/android/server/pm/permission/LegacyPermissionManagerInternal.java,checkSoundTriggerRecordAudioPermissionForDataDelivery,Yes, because it checks for permission to access microphone data.
/com/android/server/pm/permission/LegacyPermission.java,dump,Yes, the method involves permission-related functionality, as it checks permission names and their enforcement, which typically requires managing app permissions.
/com/android/server/pm/pkg/component/ParsedProcessUtils.java,parseProcesses,Yes, the method involves processing permissions, as indicated by references to methods like `parseDenyPermission` and `parseAllowPermission`, which suggest that it requires permission checks/handling.
/com/android/server/pm/pkg/component/ParsedPermissionUtils.java,isRuntime,Yes, this method checks for protection level of a permission, which is related to app permissions in Android.
/com/android/server/pm/pkg/component/ParsedPermissionUtils.java,isAppOp,Yes, it likely requires permissions because it deals with app operation (AppOp) protection levels, which typically controls access to certain sensitive capabilities in Android.
/com/android/server/pm/pkg/component/ParsedPermissionUtils.java,getProtectionFlags,Yes, this method appears to deal with permissions, specifically with getting protection flags related to a permission.
/com/android/server/pm/pkg/component/ParsedPermissionUtils.java,calculateFootprint,Yes, the method requires permissions because it takes a `ParsedPermission` parameter, which implies it is working with permissions in the Android SDK context.
/com/android/server/pm/pkg/mutate/PackageStateMutator.java,setRequiredForSystemUser,Yes, this method likely requires permissions as it manipulates private flags related to application state, which typically involves system-level access.
/com/android/server/pm/pkg/mutate/PackageStateMutator.java,setInstaller,Yes, this method likely requires permissions to modify installation details or package states on a device.
/com/android/server/pm/pkg/mutate/PackageStateMutator.java,setUninstallReason,Yes, it likely requires permissions to modify the uninstall reason of a package, as it involves changing app states.
/com/android/server/pm/pkg/parsing/ParsingPackageUtils.java,getSigningDetails,Yes, because it involves verifying APK signing details which may require permissions related to accessing package information.
/com/android/server/pm/pkg/parsing/ParsingPackage.java,addImplicitPermission,Yes, because the method adds an implicit permission that may require specific permission management.
/com/android/server/pm/pkg/parsing/ParsingPackage.java,addUsesPermission,Yes, it requires permissions as it is related to adding permissions in the app's manifest.
/com/android/server/pm/pkg/parsing/ParsingPackage.java,setPermission,Yes, the method appears to set a permission, which typically requires permission management permissions in Android.
/com/android/server/power/PowerManagerShellCommand.java,runSetProx,Yes, this method requires permissions because it interacts with the device's power management (specifically the use of wake locks), which requires the `android.permission.WAKE_LOCK` permission.
/com/android/server/power/SuspendBlocker.java,acquire,Yes, this method likely requires permissions because it prevents the CPU from going to sleep, which typically requires special permissions to manage device sleep states in Android.
/com/android/server/power/ShutdownCheckPoints.java,run,Yes, the method involves file operations (like creating directories and deleting files), which generally require storage permissions.
/com/android/server/power/ShutdownCheckPoints.java,writeCheckpoints,Yes, because it involves file operations which typically require storage permissions.
/com/android/server/power/FaceDownDetector.java,registerScreenReceiver,Yes, this method requires permissions. It registers a screen receiver, which likely requires permissions related to receiving screen on/off broadcasts.
/com/android/server/power/FaceDownDetector.java,onSensorChanged,Yes, this method requires permissions because it handles sensor data, which typically requires explicit permission to access sensors on Android devices.
/com/android/server/power/WirelessChargerDetector.java,startDetectionLocked,Yes, this method likely requires permission to access sensors. Specific sensor access (like gravity sensors) typically requires the appropriate permissions defined in the Android manifest.
/com/android/server/power/LowPowerStandbyControllerInternal.java,addToAllowlist,Yes, because adding an application to the Low Power Standby allowlist likely requires permissions related to app management or power management.
/com/android/server/power/LowPowerStandbyControllerInternal.java,removeFromAllowlist,Yes, this method requires permissions because it manipulates the system's Low Power Standby allowlist, which generally requires elevated permissions to modify system settings.
/com/android/server/power/PowerGroup.java,setWakefulnessLocked,Yes, this method likely requires permissions related to controlling device power states, which is typically restricted for security and battery management.
/com/android/server/power/PowerGroup.java,wakeUpLocked,Yes, it likely requires permissions related to waking the device or manipulating power states, which is typically restricted to system-level applications or services in Android.
/com/android/server/power/PowerGroup.java,sleepLocked,Yes, because managing sleep states typically requires permissions related to device power management.
/com/android/server/power/AmbientDisplaySuppressionController.java,suppress,Yes, because the method involves controlling ambient display features, which typically requires permissions related to device settings or display management.
/com/android/server/power/ShutdownThread.java,reboot,Yes, this method likely requires permissions because it involves rebooting the device, which typically requires elevated permissions (e.g., `REBOOT`).
/com/android/server/power/ShutdownThread.java,rebootSafeMode,Yes, because rebooting the device requires permissions related to system-level operations.
/com/android/server/power/ShutdownThread.java,beginShutdownSequence,Yes, the method requires permissions because it involves acquiring wake locks, which necessitate the `WAKE_LOCK` permission in Android.
/com/android/server/power/ShutdownThread.java,run,Yes, the method likely requires permissions to perform shutdown or reboot actions, which typically require elevated privileges (like `REBOOT` or `SHUTDOWN`) in Android.
/com/android/server/power/ShutdownThread.java,shutdownRadios,Yes, this method requires permissions because it interacts with the `TelephonyManager`, which typically requires permissions like `ACCESS_FINE_LOCATION` or `MODIFY_PHONE_STATE` depending on the operations performed on the telephony services.
/com/android/server/power/ShutdownThread.java,run,Yes, this method likely requires permissions because it references TelephonyManager, which typically requires `READ_PHONE_STATE` or `ACCESS_WIFI_STATE` permissions in Android to access telephony services.
/com/android/server/power/ShutdownThread.java,rebootOrShutdown,Yes, it requires permissions for rebooting or shutting down the device.
/com/android/server/power/ShutdownThread.java,saveMetrics,Yes, it requires permissions because it involves file operations (saving metrics), which typically require storage permissions in Android.
/com/android/server/power/ShutdownThread.java,uncrypt,Yes, this method likely requires permissions because it interacts with the recovery service, manipulates files, and may require access to system-level operations, which typically need special permissions in Android.
/com/android/server/power/Notifier.java,onWakeLockChanging,Yes, this method likely requires permission to access and manage wake locks in Android, as it deals with operations related to wake locks and their changes.
/com/android/server/power/Notifier.java,sendGoToSleepBroadcast,Yes, this method likely requires permissions because it involves sending a broadcast intent related to device sleep or screen off functionality, which typically requires permissions such as `android.permission.WAKE_LOCK` or related system-level permissions.
/com/android/server/power/Notifier.java,playChargingStartedFeedback,Yes, this method may require permissions to access system settings such as vibration and sound, which generally involve user permissions in Android.
/com/android/server/power/ThermalManagerService.java,shutdownIfNeeded,Yes, the method interacts with the `PowerManager`, which controls power management features and may require permissions to modify system power states.
/com/android/server/power/ThermalManagerService.java,registerThermalEventListener,Yes, the method requires permissions as it enforces the `DEVICE_POWER` permission to register the thermal event listener.
/com/android/server/power/ThermalManagerService.java,registerThermalEventListenerWithType,Yes, this method requires permissions because it enforces a permission check using `enforceCallingOrSelfPermission` for the `DEVICE_POWER` permission.
/com/android/server/power/ThermalManagerService.java,unregisterThermalEventListener,Yes, the method involves calling `enforceCallingOrSelfPermission` with `android.Manifest.permission.DEVICE_POWER`, which requires permission handling.
/com/android/server/power/ThermalManagerService.java,getCurrentTemperatures,Yes, this method requires permissions because it enforces calling or self permission related to `DEVICE_POWER`.
/com/android/server/power/ThermalManagerService.java,getCurrentTemperaturesWithType,Yes, the method appears to require permissions because it contains a call to `enforceCallingOrSelfPermission`, which is used to check if the application has the necessary permissions to access certain features or data (in this case, likely related to device power).
/com/android/server/power/ThermalManagerService.java,getCurrentCoolingDevices,Yes, the method checks for the permission `android.Manifest.permission.DEVICE_POWER` before executing its logic, indicating that it requires this permission to function correctly.
/com/android/server/power/ThermalManagerService.java,getCurrentCoolingDevicesWithType,Yes, because it uses `enforceCallingOrSelfPermission`, which requires permission checks for accessing device features.
/com/android/server/power/ThermalManagerService.java,onShellCommand,Yes, this method appears to require permissions because it checks if the caller is a shell process, indicating it likely needs special permissions to execute shell commands securely.
/com/android/server/power/ThermalManagerService.java,dumpInternal,Yes, because it checks for dump permission using `checkDumpPermission`.
/com/android/server/power/ThermalManagerService.java,connectToHal,Yes, because it interacts with the hardware thermal service which may require specific permissions related to hardware access in Android.
/com/android/server/power/ThermalManagerService.java,connectToHal,Yes, it may require permissions to access hardware services such as the thermal HAL (Hardware Abstraction Layer).
/com/android/server/power/ThermalManagerService.java,getCurrentTemperatures,Yes, the method likely requires permissions related to accessing hardware or thermal information in Android, which typically requires specific permissions.
/com/android/server/power/ScreenUndimDetector.java,reset,Yes, this method requires permissions because it involves acquiring and releasing a wake lock, which requires the `WAKE_LOCK` permission in Android.
/com/android/server/power/ScreenOnBlocker.java,acquire,Yes, because it prevents the screen from turning on, which typically requires permission to control display behavior.
/com/android/server/power/hint/HintManagerService.java,dump,Yes, the method requires permissions because it includes a check for `checkDumpPermission`, which implies that dumping information may be restricted based on permissions.
/com/android/server/power/hint/HintManagerService.java,setThreads,Yes, this method checks thread IDs against the calling process's UID and TGID, which likely requires permissions related to process management or thread manipulation.
/com/android/server/power/stats/BatteryUsageStatsStore.java,storeBatteryUsageStats,Yes, this method likely requires permissions because it involves creating and writing files, which typically requires file storage permissions in Android.
/com/android/server/power/stats/BatteryUsageStatsStore.java,loadBatteryUsageStats,Yes, the method likely requires permissions to access battery usage statistics, which are considered sensitive data in Android.
/com/android/server/power/stats/KernelWakelockReader.java,readKernelWakelockStats,Yes, this method likely requires permissions since it reads kernel wakelock stats, which typically involves accessing system-level information that may require specific permissions for security and privacy.
/com/android/server/power/stats/KernelWakelockReader.java,getWakelockStatsFromSystemSuspend,Yes, this method likely requires permissions to access system services related to wake lock statistics, as it interacts with system-level components.
/com/android/server/wifi/SupplicantManager.java,start,Yes, this method likely requires permissions because it starts a system service (wpa_supplicant daemon) which typically involves access to network-related resources.
/com/android/server/wifi/SupplicantManager.java,stop,Yes, requires permissions to control system services.
/com/android/server/apphibernation/AppHibernationManagerInternal.java,setHibernatingForUser,Yes, it likely requires permissions to modify hibernation status for an app, which could affect its performance and resource usage.
/com/android/server/biometrics/Utils.java,checkPermissionOrShell,Yes, the method checks for permissions.
/com/android/server/biometrics/Utils.java,checkPermission,Yes, this method checks permissions, which implies it requires access to permission-related functionalities in Android.
/com/android/server/biometrics/Utils.java,isCurrentUserOrProfile,Yes, this method likely requires permissions because it interacts with the `UserManager` and retrieves information about user profiles, which typically involves sensitive user data.
/com/android/server/biometrics/Utils.java,getCurrentStrength,Yes, this method likely requires permissions because it interacts with biometric services, which typically necessitate user consent and appropriate permissions for security and privacy reasons.
/com/android/server/biometrics/Utils.java,isKeyguard,Yes, the method likely requires permissions to check if the client package matches Keyguard, which involves internal security-related operations.
/com/android/server/biometrics/Utils.java,isSystem,Yes, it likely requires permissions to check for internal operations associated with the Android system.
/com/android/server/biometrics/Utils.java,isSettings,Yes, this method likely requires permissions to check internal biometric operations, which can involve sensitive system settings.
/com/android/server/biometrics/Utils.java,hasInternalPermission,Yes, this method checks for a specific permission related to biometric usage, which requires the appropriate permissions to be granted.
/com/android/server/biometrics/Utils.java,isForeground,Yes, because it retrieves running app processes which requires `GET_TASKS` or similar permissions.
/com/android/server/biometrics/Utils.java,isBackground,Yes, this method likely requires permissions. It accesses task information from the `ActivityManager`, which typically requires the `GET_TASKS` permission (though this permission is deprecated in recent API levels).
/com/android/server/biometrics/PreAuthInfo.java,getStatusForBiometricAuthenticator,Yes, the method likely requires permissions because it involves biometric authenticator status, which typically requires user privacy and security permissions (e.g., `USE_BIOMETRIC`).
/com/android/server/biometrics/PreAuthInfo.java,getInternalStatus,Yes, it may require permissions related to accessing biometric sensors and user credentials.
/com/android/server/biometrics/AuthSession.java,onAuthenticationRejected,Yes, because this method relates to biometric authentication, which typically requires specific permissions like `USE_BIOMETRIC` or `USE_FINGERPRINT` in Android.
/com/android/server/biometrics/AuthSession.java,logOnDialogDismissed,Yes, because it involves biometric operations which typically require permission to access biometric hardware or data.
/com/android/server/biometrics/sensors/ClientMonitorCallbackConverter.java,onDetected,Yes, this method likely requires permissions related to biometric authentication (e.g., fingerprint or facial recognition) access in order to function properly.
/com/android/server/biometrics/sensors/ClientMonitorCallbackConverter.java,onUdfpsPointerUp,Yes, this method likely requires permission related to fingerprint authentication, as it interacts with a fingerprint service.
/com/android/server/biometrics/sensors/AuthenticationClient.java,onAuthenticated,Yes, this method requires permissions because it involves biometric authentication, which typically requires user authentication permissions in Android (e.g., `USE_BIOMETRIC`).
/com/android/server/biometrics/sensors/AuthenticationClient.java,start,Yes, because it likely involves biometric authentication, which requires permissions such as `USE_BIOMETRIC` or `USE_FINGERPRINT`.
/com/android/server/biometrics/sensors/AuthSessionCoordinator.java,resetLockoutFor,Yes, this method likely requires permissions related to biometric security and user management as it interacts with biometric lockout states and user IDs.
/com/android/server/biometrics/sensors/AuthResultCoordinator.java,updateState,Yes, it appears to require permissions. The method interacts with biometric states, which typically requires permission to access biometric features on the device.
/com/android/server/biometrics/sensors/LockoutCache.java,setLockoutModeForUser,Yes, it likely requires permissions since it involves modifying user lockout states which pertains to user security and management.
/com/android/server/biometrics/sensors/MultiBiometricLockoutState.java,createUnlockedMap,Yes, because it involves the use of biometric authentication methods (e.g., BIOMETRIC_STRONG, BIOMETRIC_WEAK), which require permission to access biometric hardware.
/com/android/server/biometrics/sensors/MultiBiometricLockoutState.java,setPermanentLockOut,Yes, this method likely requires permissions because it deals with user authentication and potentially modifies lockout states, which can involve sensitive user data.
/com/android/server/biometrics/sensors/MultiBiometricLockoutState.java,setTimedLockout,Yes, because it involves biometric authentication methods that typically require specific permissions like `USE_BIOMETRIC` or `USE_FINGERPRINT`.
/com/android/server/biometrics/sensors/MultiBiometricLockoutState.java,clearTimedLockout,Yes, this method likely requires permissions because it interacts with biometric information, which typically requires specific permissions related to user authentication and security in Android.
/com/android/server/biometrics/sensors/MultiBiometricLockoutState.java,getLockoutState,Yes, because it deals with biometric authentication which usually requires permissions related to security and user authentication.
/com/android/server/biometrics/sensors/RemovalClient.java,hasEnrollments,Yes, this method likely requires permissions to access biometric data for the user.
/com/android/server/biometrics/sensors/LockoutResetDispatcher.java,sendLockoutReset,Yes, this method likely requires permissions because it interacts with a wake lock, which typically requires `WAKE_LOCK` permission in Android to prevent the device from going to sleep.
/com/android/server/biometrics/sensors/BiometricNotificationUtils.java,showNotificationHelper,Yes, because it involves displaying notifications, which generally requires the `POST_NOTIFICATIONS` permission in modern Android versions.
/com/android/server/biometrics/sensors/AcquisitionClient.java,vibrateSuccess,Yes, it requires permission because it uses the `Vibrator` service, which typically requires the `VIBRATE` permission in Android.
/com/android/server/biometrics/sensors/fingerprint/FingerprintUtils.java,getBiometricsForUser,Yes, the method likely requires permissions related to accessing biometric data, which are generally restricted for privacy and security reasons.
/com/android/server/biometrics/sensors/fingerprint/FingerprintUtils.java,addBiometricForUser,Yes, this method likely requires permissions because it involves adding biometric data for a user, which typically requires sensitive permissions in Android, such as `USE_BIOMETRIC` or `USE_FINGERPRINT`.
/com/android/server/biometrics/sensors/fingerprint/FingerprintUtils.java,removeBiometricForUser,Yes, this method likely requires permissions because it involves removing biometric data for a user, which typically requires sensitive permissions related to user identity and security in Android.
/com/android/server/biometrics/sensors/fingerprint/FingerprintUtils.java,renameBiometricForUser,Yes, this method likely requires permissions to manage biometric data for a user.
/com/android/server/biometrics/sensors/fingerprint/FingerprintAuthenticator.java,prepareForAuthentication,Yes, this method likely requires permissions since it deals with authentication, which generally involves sensitive operations that may require user consent or specific permissions due to security and privacy.
/com/android/server/biometrics/sensors/fingerprint/FingerprintAuthenticator.java,isHardwareDetected,Yes, it likely requires permissions related to hardware access, as it checks if hardware features (like a fingerprint sensor) are available.
/com/android/server/biometrics/sensors/fingerprint/FingerprintAuthenticator.java,resetLockout,Yes, this method likely requires permissions related to accessing fingerprint or lockout functionalities, as it appears to be dealing with user authentication and hardware tokens.
/com/android/server/biometrics/sensors/fingerprint/UdfpsHelper.java,onFingerDown,Yes, this method likely requires permissions because it deals with biometric fingerprint data, which typically requires specific user permissions in Android for security and privacy reasons.
/com/android/server/biometrics/sensors/fingerprint/UdfpsHelper.java,onFingerUp,Yes, this method likely requires permissions related to biometric authentication, as it interacts with fingerprint biometric hardware.
/com/android/server/biometrics/sensors/fingerprint/ServiceProvider.java,scheduleEnroll,Yes, scheduling fingerprint enrollment likely requires permission to access fingerprint hardware and services for security and privacy reasons.
/com/android/server/biometrics/sensors/fingerprint/ServiceProvider.java,getEnrolledFingerprints,Yes, because accessing enrolled fingerprints typically requires permission for sensitive data related to biometric authentication.
/com/android/server/biometrics/sensors/fingerprint/aidl/FingerprintAuthenticationClient.java,startHalOperation,Yes, this method likely requires permissions since it involves biometric operations such as authentication, which typically necessitate specific user permissions in Android.
/com/android/server/biometrics/sensors/fingerprint/aidl/AidlConversionUtils.java,toFrameworkAcquiredInfo,Yes, the method likely requires permissions to access biometric data, as it deals with fingerprint acquisition information.
/com/android/server/biometrics/sensors/fingerprint/aidl/FingerprintProvider.java,getSensorProperties,Yes, this method requires permissions because it deals with fingerprint sensor properties, which typically necessitate sensitive permissions related to biometric data access.
/com/android/server/biometrics/sensors/fingerprint/aidl/FingerprintProvider.java,scheduleResetLockout,Yes, the method likely requires permissions related to biometric operations, such as fingerprint access.
/com/android/server/biometrics/sensors/fingerprint/aidl/FingerprintProvider.java,scheduleGenerateChallenge,Yes, this method likely requires permissions related to biometric access for security and privacy reasons.
/com/android/server/biometrics/sensors/fingerprint/aidl/FingerprintProvider.java,scheduleRevokeChallenge,Yes, it likely requires permissions related to biometric operations.
/com/android/server/biometrics/sensors/fingerprint/aidl/FingerprintProvider.java,scheduleEnroll,Yes, this method likely requires permissions related to biometric authentication (fingerprint enroll).
/com/android/server/biometrics/sensors/fingerprint/aidl/FingerprintProvider.java,cancelEnrollment,Yes, this method likely requires permissions related to biometric operations, specifically for managing fingerprint enrollment.
/com/android/server/biometrics/sensors/fingerprint/aidl/FingerprintProvider.java,scheduleFingerDetect,Yes, requires permissions. It interacts with biometric sensors for fingerprint detection, which typically requires sensitive user permissions (e.g., USE_BIOMETRIC).
/com/android/server/biometrics/sensors/fingerprint/aidl/FingerprintProvider.java,scheduleAuthenticate,Yes, this method likely requires permissions because it appears to handle biometric authentication, which typically necessitates the use of specific permissions (e.g., `USE_BIOMETRIC` or `USE_FINGERPRINT`).
/com/android/server/biometrics/sensors/fingerprint/aidl/FingerprintProvider.java,scheduleRemove,Yes, this method likely requires permissions because it involves operations related to sensor management and possibly accessing user-specific data, which typically require explicit permissions in the Android environment.
/com/android/server/biometrics/sensors/fingerprint/aidl/FingerprintProvider.java,scheduleRemoveAll,Yes, this method likely requires permissions because it interacts with biometric data and device security features, which typically necessitate user authorization for privacy and security reasons.
/com/android/server/biometrics/sensors/fingerprint/aidl/FingerprintProvider.java,scheduleRemoveSpecifiedIds,Yes, this method likely requires permissions related to biometric operations, such as managing fingerprint data.
/com/android/server/biometrics/sensors/fingerprint/aidl/FingerprintProvider.java,rename,Yes, the method likely requires permissions related to biometric data, as it involves renaming a biometric (fingerprint) associated with a user.
/com/android/server/biometrics/sensors/fingerprint/aidl/FingerprintProvider.java,getEnrolledFingerprints,Yes, this method likely requires permissions because it deals with biometric data (enrolled fingerprints), which typically requires specific permissions for security and privacy reasons.
/com/android/server/biometrics/sensors/fingerprint/aidl/FingerprintProvider.java,scheduleInvalidateAuthenticatorId,Yes, this method likely requires permissions as it deals with biometric authentication, which generally requires user consent and specific permissions (e.g., biometry-related permissions).
/com/android/server/biometrics/sensors/fingerprint/aidl/FingerprintProvider.java,getAuthenticatorId,Yes, this method likely requires permissions related to accessing biometric information, as it appears to handle authentication based on sensor IDs and user IDs.
/com/android/server/biometrics/sensors/fingerprint/aidl/FingerprintDetectClient.java,startHalOperation,Yes, the method may require permissions related to biometric operations, such as accessing a fingerprint sensor, which typically requires specific permissions (e.g., USE_FINGERPRINT or USE_BIOMETRIC).
/com/android/server/biometrics/sensors/fingerprint/aidl/FingerprintEnrollClient.java,startHalOperation,Yes, the method likely requires permissions related to biometric operations, such as enrolling a fingerprint, which typically requires the use of sensitive user data.
/com/android/server/biometrics/sensors/fingerprint/aidl/FingerprintEnrollClient.java,doEnroll,Yes, because enrolling typically involves biometric data or sensitive hardware operations, which often require special permissions in Android.
/com/android/server/biometrics/sensors/fingerprint/aidl/FingerprintInternalCleanupClient.java,getEnumerateClient,Yes, this method likely requires permissions related to biometric operations, as it deals with biometric contexts and actions (e.g., enumeration of enrolled biometric credentials).
/com/android/server/biometrics/sensors/fingerprint/aidl/FingerprintInternalCleanupClient.java,getRemovalClient,Yes, the method likely requires permissions related to biometric operations.
/com/android/server/biometrics/sensors/fingerprint/aidl/FingerprintInternalCleanupClient.java,onAddUnknownTemplate,Yes, this method likely requires permissions because it involves biometric authentication, which usually necessitates specific permissions to access biometric features on an Android device.
/com/android/server/biometrics/sensors/fingerprint/aidl/Sensor.java,onEnrollmentProgress,Yes, this method likely requires permissions related to fingerprint enrollment, as it interacts with fingerprint functionalities.
/com/android/server/biometrics/sensors/fingerprint/aidl/Sensor.java,onAuthenticationFailed,Yes, the method `onAuthenticationFailed` is likely related to authentication processes, which typically require permissions to access user data or secure features on the device (e.g., fingerprint or biometric data).
/com/android/server/biometrics/sensors/fingerprint/aidl/Sensor.java,dumpProtoState,Yes, this method likely requires permissions because it deals with sensitive biometric data (like fingerprint information) which generally necessitates specific permissions in Android (e.g., `USE_FINGERPRINT`).
/com/android/server/biometrics/sensors/fingerprint/hidl/FingerprintAuthenticationClient.java,startHalOperation,Yes, it likely requires permissions because it appears to involve operations related to biometric authentication and potentially interacting with sensitive user data (e.g., fingerprint sensors).
/com/android/server/biometrics/sensors/fingerprint/hidl/LockoutFrameworkImpl.java,scheduleLockoutResetForUser,Yes, this method likely requires permission to access the AlarmManager, which typically involves setting alarms that may need the `SET_ALARM` permission.
/com/android/server/biometrics/sensors/fingerprint/hidl/TestHal.java,remove,Yes, this method likely requires permissions because it interacts with biometric data (e.g., accessing fingerprints).
/com/android/server/biometrics/sensors/fingerprint/hidl/FingerprintDetectClient.java,startHalOperation,Yes, the method likely requires permissions related to biometric authentication, such as using a fingerprint sensor.
/com/android/server/biometrics/sensors/fingerprint/hidl/FingerprintInternalCleanupClient.java,getEnumerateClient,Yes, this method likely requires permissions related to biometric operations, as it interacts with fingerprint authentication mechanisms.
/com/android/server/biometrics/sensors/fingerprint/hidl/Fingerprint21.java,onEnrollResult,Yes, because it interacts with fingerprint data, which requires permissions related to biometric authentication in Android.
/com/android/server/biometrics/sensors/fingerprint/hidl/Fingerprint21.java,newInstance,Yes, this method relates to biometric features, which typically require permissions like `USE_FINGERPRINT` or `USE_BIOMETRIC`.
/com/android/server/biometrics/sensors/fingerprint/hidl/Fingerprint21.java,scheduleUpdateActiveUserWithoutHandler,Yes, requires permissions. The method relates to user-specific operations involving biometric authentication, which typically necessitates permissions related to biometric data access.
/com/android/server/biometrics/sensors/fingerprint/hidl/Fingerprint21.java,scheduleRevokeChallenge,Yes, this method likely requires permissions related to biometric operations, such as accessing fingerprint data or managing biometric challenges.
/com/android/server/biometrics/sensors/fingerprint/hidl/Fingerprint21.java,scheduleEnroll,Yes, the method likely requires permissions related to biometric operations, as it deals with fingerprint enrollment.
/com/android/server/biometrics/sensors/fingerprint/hidl/Fingerprint21.java,scheduleFingerDetect,Yes, the method involves fingerprint authentication, which typically requires permissions such as "USE_FINGERPRINT" or similar biometric permissions in Android.
/com/android/server/biometrics/sensors/fingerprint/hidl/Fingerprint21.java,scheduleAuthenticate,Yes, it likely requires permissions for biometric authentication.
/com/android/server/biometrics/sensors/fingerprint/hidl/Fingerprint21.java,scheduleAuthenticate,Yes, this method likely requires permissions related to biometric authentication, particularly for fingerprint scans, as it seems to be handling authentication schedules and options.
/com/android/server/biometrics/sensors/fingerprint/hidl/Fingerprint21.java,scheduleRemove,Yes, the method likely requires permissions related to biometric operations, such as fingerprint access, which are strictly regulated in Android for user security and privacy.
/com/android/server/biometrics/sensors/fingerprint/hidl/Fingerprint21.java,scheduleRemoveAll,Yes, this method likely requires permissions related to fingerprint or biometric services, as it interacts with fingerprint services and user identifiers.
/com/android/server/biometrics/sensors/fingerprint/hidl/Fingerprint21.java,rename,Yes, this method likely requires permissions because it involves manipulating biometric data associated with a user, which typically requires specific permissions in Android.
/com/android/server/biometrics/sensors/fingerprint/hidl/Fingerprint21.java,getEnrolledFingerprints,Yes, this method may require permissions related to biometric data access, such as fingerprint authentication, given it interacts with enrolled fingerprints.
/com/android/server/biometrics/sensors/fingerprint/hidl/Fingerprint21.java,dumpProtoState,Yes, this method requires permissions because it deals with accessing sensor data and user information, which generally involves sensitive operations that require appropriate permissions (e.g., access to sensors or user biometrics).
/com/android/server/biometrics/sensors/fingerprint/hidl/Fingerprint21.java,dumpProtoMetrics,Yes, the method likely requires permissions because it deals with user statistics and potentially sensitive biometric data, which typically necessitates permissions like `USE_FINGERPRINT` or similar user data access permissions in Android.
/com/android/server/biometrics/sensors/face/FaceUtils.java,getBiometricsForUser,Yes, this method may require permissions to access biometric information for the specified user.
/com/android/server/biometrics/sensors/face/FaceUtils.java,addBiometricForUser,Yes, because adding biometric data typically requires specific permissions for security and privacy reasons.
/com/android/server/biometrics/sensors/face/FaceUtils.java,renameBiometricForUser,Yes, this method likely requires permissions related to biometric operations and user management, as it deals with renaming biometric data for a specific user.
/com/android/server/biometrics/sensors/face/ServiceProvider.java,scheduleAuthenticate,Yes, this method likely requires permissions related to authentication functionalities in Android, especially considering it deals with sensitive operations such as face authentication.
/com/android/server/biometrics/sensors/face/FaceAuthenticator.java,getSensorProperties,Yes, this method likely requires permissions to access sensor properties, as it appears to interact with hardware or sensitive functionalities.
/com/android/server/biometrics/sensors/face/aidl/FaceAuthenticationClient.java,startHalOperation,Yes, because it interacts with biometric hardware and sensor privacy, which typically requires permissions such as CAMERA and BIOMETRIC.
/com/android/server/biometrics/sensors/face/aidl/FaceAuthenticationClient.java,onAuthenticationFrame,Yes, this method likely requires permissions. It deals with face authentication, which typically involves sensitive user data and may require specific security permissions related to biometric data access in Android.
/com/android/server/biometrics/sensors/face/aidl/FaceEnrollClient.java,hasReachedEnrollmentLimit,Yes, this method likely requires permissions related to biometric data access, as it queries biometric data with methods like `getBiometricsForUser`.
/com/android/server/biometrics/sensors/face/aidl/TestHal.java,enroll,Yes, this method likely requires permissions related to hardware access for authentication operations, such as enrolling a user for biometric features.
/com/android/server/biometrics/sensors/face/aidl/FaceProvider.java,getEnrolledFaces,Yes, this method likely requires permissions related to biometric data access, as it interacts with user IDs and facial recognition functionality.
/com/android/server/biometrics/sensors/face/aidl/FaceProvider.java,scheduleEnroll,Yes, this method likely requires permissions related to biometric enrollment, such as `USE_BIOMETRIC` or `USE_FINGERPRINT`, depending on the specific biometric features being accessed or enrolled.
/com/android/server/biometrics/sensors/face/aidl/FaceProvider.java,scheduleFaceDetect,Yes, this method likely requires permissions related to accessing biometric features for facial detection.
/com/android/server/biometrics/sensors/face/aidl/FaceProvider.java,scheduleSetFeature,Yes, this method likely requires permissions related to biometric features, as it deals with facial recognition and user authentication.
/com/android/server/biometrics/sensors/face/aidl/FaceProvider.java,scheduleGetFeature,Yes, this method likely requires permissions related to accessing biometric features and user information.
/com/android/server/biometrics/sensors/face/aidl/Sensor.java,dumpProtoState,Yes, because it interacts with user states and sensor data, which typically require sensitive permissions related to user privacy and sensor access.
/com/android/server/biometrics/sensors/face/hidl/FaceAuthenticationClient.java,startHalOperation,Yes, this method likely requires permissions related to accessing hardware components (e.g., camera) for sensor privacy management.
/com/android/server/biometrics/sensors/face/hidl/FaceUpdateActiveUserClient.java,startHalOperation,Yes, this method likely requires permissions related to accessing user biometric data and file storage operations due to its involvement with user authentication and file manipulation.
/com/android/server/biometrics/sensors/face/hidl/Face10.java,newInstance,Yes, this method likely requires permissions to access biometric features, such as facial recognition, in the Android SDK.
/com/android/server/biometrics/sensors/face/hidl/Face10.java,getDaemon,Yes, this method likely requires permissions related to biometric data access, as it engages with face recognition hardware and services (e.g., retrieving face HAL).
/com/android/server/biometrics/sensors/face/hidl/Face10.java,getEnrolledFaces,Yes, this method likely requires permissions related to biometric data access, as it retrieves enrolled faces for a user.
/com/android/server/biometrics/sensors/face/hidl/Face10.java,scheduleEnroll,Yes, this method likely requires permissions related to biometric operations, such as enrolling a biometric credential, which typically requires user authorization and specific permissions in the Android system.
/com/android/server/biometrics/sensors/face/hidl/Face10.java,scheduleFaceDetect,Yes, likely requires permissions because it relates to face detection, which typically involves sensitive personal data.
/com/android/server/biometrics/sensors/face/hidl/Face10.java,scheduleAuthenticate,Yes, this method likely requires permissions related to biometric authentication operations due to its involvement with sensitive data (e.g., facial recognition).
/com/android/server/biometrics/sensors/face/hidl/Face10.java,scheduleGetFeature,Yes, this method requires permissions related to accessing biometric features (scheduling biometric operations).
/com/android/server/biometrics/sensors/face/hidl/Face10.java,dumpInternal,Yes, this method likely requires permissions. It interacts with user profiles and biometric data, which typically requires permissions related to user and biometric access in Android.
/com/android/server/biometrics/sensors/face/hidl/Face10.java,dumpHal,Yes, it likely requires permissions due to access to tracking or debugging hardware features associated with the HAL (Hardware Abstraction Layer) and the use of FileDescriptor, which can indicate low-level system operations.
/com/android/server/biometrics/sensors/face/hidl/TestHal.java,remove,Yes, this method likely requires permissions. It interacts with biometric data, which typically requires specific permissions like `USE_BIOMETRIC` or `USE_FINGERPRINT` in Android.
/com/android/server/biometrics/sensors/face/hidl/FaceInternalCleanupClient.java,getEnumerateClient,Yes, this method likely requires permissions related to biometric data access, as it deals with biometric operations and user identification.
/com/android/server/biometrics/log/OperationContextExt.java,getAuthReason,Yes, this method likely requires permissions because it relates to fingerprint authentication, which typically involves sensitive user data.
/com/android/server/biometrics/log/BiometricFrameworkStatsLogger.java,authenticate,Yes, it likely requires permissions because it relates to biometric authentication.
/com/android/server/vr/SettingsObserver.java,onReceive,Yes, because it interacts with user settings and may require permissions related to accessing system settings.
/com/android/server/vr/VrManagerInternal.java,setVrMode,Yes, it likely requires permissions related to VR mode and interacting with services, as it involves enabling VR mode and binding to a specific service.
/com/android/server/vr/VrManagerInternal.java,setVr2dDisplayProperties,Yes, requires ACCESS_VR_MANAGER permission.
/com/android/server/vr/VrManagerInternal.java,setPersistentVrModeEnabled,Yes, it requires permissions because it modifies the device's persistent state related to VR, which could affect user experience and device behavior.
/com/android/server/vr/EnabledComponentsObserver.java,build,Yes, this method requires permissions because it involves monitoring and interacting with enabled components and includes a parameter for `servicePermission`.
/com/android/server/vr/EnabledComponentsObserver.java,onHandleForceStop,Yes, this method likely requires permissions related to stopping applications, as it seems to handle force stopping of packages based on the provided parameters.
/com/android/server/vr/EnabledComponentsObserver.java,getCurrentProfileIds,Yes, this method likely requires permissions to access user profiles which are typically protected.
/com/android/server/vr/EnabledComponentsObserver.java,loadComponentNamesForUser,Yes, because it accesses package manager components which may require specific permissions to interact with installed applications.
/com/android/server/vr/EnabledComponentsObserver.java,loadComponentNamesFromSetting,Yes, the method interacts with settings, which may require permissions to read user settings (e.g. `READ_SETTINGS` or `WRITE_SETTINGS`).
/com/android/server/vr/VrManagerService.java,update,Yes, because the method involves revoking and granting notification access and possibly location permissions, which require specific permissions in the Android manifest.
/com/android/server/vr/VrManagerService.java,registerListener,Yes, because it enforces permissions related to VR state access (ACCESS_VR_MANAGER and ACCESS_VR_STATE).
/com/android/server/vr/VrManagerService.java,unregisterListener,Yes, it requires permissions because the method enforces caller permissions related to VR services (ACCESS_VR_MANAGER and ACCESS_VR_STATE).
/com/android/server/vr/VrManagerService.java,registerPersistentVrStateListener,Yes, this method requires permissions because it involves enforcing caller permissions related to VR management.
/com/android/server/vr/VrManagerService.java,unregisterPersistentVrStateListener,Yes, it requires permissions because it uses `enforceCallerPermissionAnyOf` with `ACCESS_VR_MANAGER` and `ACCESS_VR_STATE`, which are permission checks.
/com/android/server/vr/VrManagerService.java,getPersistentVrModeEnabled,Yes, the method requires permissions because it enforces caller permissions related to VR management.
/com/android/server/vr/VrManagerService.java,setPersistentVrModeEnabled,Yes, the method requires permissions because it enforces a caller permission check related to restricted VR access.
/com/android/server/vr/VrManagerService.java,setVr2dDisplayProperties,Yes, because it calls `enforceCallerPermissionAnyOf` with `RESTRICTED_VR_ACCESS`, indicating a permission check is required.
/com/android/server/vr/VrManagerService.java,setAndBindCompositor,Yes, this method requires permission due to the use of `enforceCallerPermissionAnyOf` with `Manifest.permission.RESTRICTED_VR_ACCESS`.
/com/android/server/vr/VrManagerService.java,setStandbyEnabled,Yes, it enforces caller permission by referencing `Manifest.permission`.
/com/android/server/vr/VrManagerService.java,dump,Yes, the method requires permissions because it includes a check for dump permission using `checkDumpPermission`.
/com/android/server/vr/VrManagerService.java,enforceCallerPermissionAnyOf,Yes, because it checks if the caller holds at least one of the specified permissions and throws a SecurityException if not.
/com/android/server/vr/VrManagerService.java,setVrMode,Yes, this method likely requires permissions to control VR mode and manage processes, as it interacts with system-level functionality.
/com/android/server/vr/VrManagerService.java,onBootPhase,Yes, this method requires permissions because it involves operations related to system services, notifications, and broadcast receivers that may require specific permissions to access.
/com/android/server/vr/VrManagerService.java,onReceive,Yes, the method likely requires permissions to receive specific intent actions such as `Intent.ACTION_USER_UNLOCKED`, which is associated with user-specific actions and may require permission checks.
/com/android/server/vr/VrManagerService.java,updateOverlayStateLocked,Yes, this method likely requires permissions because it interacts with `AppOpsManager` and specifically uses the `OP_SYSTEM_ALERT_WINDOW` operation, which typically requires the `SYSTEM_ALERT_WINDOW` permission in Android.
/com/android/server/vr/VrManagerService.java,grantNotificationPolicyAccess,Yes, because it manipulates notification policy access, which requires specific permissions to modify.
/com/android/server/vr/VrManagerService.java,revokeNotificationPolicyAccess,Yes, because this method interacts with the NotificationManager, which typically requires permissions related to notification policy access.
/com/android/server/vr/VrManagerService.java,grantNotificationListenerAccess,Yes, this method requires permissions, specifically the `BIND_NOTIFICATION_LISTENER_SERVICE` permission, which is necessary to interact with notification listeners in the Android system.
/com/android/server/vr/VrManagerService.java,grantCoarseLocationPermissionIfNeeded,Yes, because it checks for and grants the ACCESS_COARSE_LOCATION permission.
/com/android/server/vr/VrManagerService.java,revokeCoarseLocationPermissionIfNeeded,Yes, because it deals with the "ACCESS_COARSE_LOCATION" permission which requires explicit permission from the user to be revoked.
/com/android/server/vr/VrManagerService.java,isPermissionUserUpdated,Yes, the method interacts with the PackageManager to get permission flags, which typically requires permissions related to accessing app permissions.
/com/android/server/vr/VrManagerService.java,getNotificationListeners,Yes, this method requires permissions because it accesses `Settings.Secure.ENABLED_NOTIFICATION_LISTENERS`, which typically requires permission to read notification listener settings in Android.
/com/android/server/vr/Vr2dDisplay.java,setVirtualDisplayProperties,Yes, requires permission to access VR Manager.
/com/android/server/webkit/SystemInterface.java,killPackageDependents,Yes, because managing packages may require permissions related to app management or system-level access.
/com/android/server/webkit/SystemInterface.java,enablePackageForAllUsers,Yes, this method likely requires permissions because it involves enabling a package for all users, which typically requires elevated privileges in the Android system.
/com/android/server/webkit/WebViewUpdateService.java,onStart,Yes, the method onStart requires permissions because it involves registering a broadcast receiver and handling user-related actions which typically require specific permissions in Android.
/com/android/server/webkit/WebViewUpdateService.java,onReceive,Yes, this method likely requires permissions because it involves handling intents related to package changes and user actions, which might require declaring permissions in the Android manifest to access/package information.
/com/android/server/webkit/WebViewUpdateService.java,changeProviderAndSetting,Yes, this method requires the `WRITE_SECURE_SETTINGS` permission to change the WebView provider, which is a sensitive action in Android.
/com/android/server/webkit/WebViewUpdateService.java,enableMultiProcess,Yes, because it checks for the `WRITE_SECURE_SETTINGS` permission before proceeding, which requires specific permissions to modify secure system settings.
/com/android/server/webkit/WebViewUpdateService.java,dump,Yes, the method requires permissions because it checks for dump permissions using `checkDumpPermission`.
/com/android/server/webkit/SystemImpl.java,getFactoryPackageVersion,Yes, the method requires permissions because it calls `getPackageInfo`, which typically requires the `QUERY_ALL_PACKAGED` permission to access information about other applications.
/com/android/server/webkit/SystemImpl.java,getUserChosenWebViewProvider,Yes, this method likely requires permissions to access certain settings or resources related to WebView providers.
/com/android/server/webkit/SystemImpl.java,killPackageDependents,Yes, this method likely requires permissions related to managing app packages, such as `android.permission.KILL_BACKGROUND_PROCESSES`, since it deals with killing package dependents.
/com/android/server/webkit/SystemImpl.java,enablePackageForAllUsers,Yes, this method likely requires permissions related to modifying packages for users, such as `PACKAGE_USAGE_STATS` or other user management permissions.
/com/android/server/webkit/SystemImpl.java,enablePackageForUser,Yes, the method affects application settings, which typically requires permissions related to modifying application states, such as `PACKAGE_USAGE_STATS` or `MODIFY_APP_SETTINGS`.
/com/android/server/webkit/SystemImpl.java,getPackageInfoForProvider,Yes, this method likely requires permissions to access package information, which typically needs specific permissions in the Android manifest (e.g., `GET_PACKAGE_SIZE`).
/com/android/server/webkit/SystemImpl.java,getMultiProcessSetting,Yes, because accessing settings related to WebView multiprocess requires permissions to read global settings.
/com/android/server/webkit/SystemImpl.java,setMultiProcessSetting,Yes, because it modifies global settings which typically require permissions.
/com/android/server/webkit/WebViewUpdateServiceImpl.java,changeProviderAndSetting,Yes, it likely requires permissions because changing the WebView provider can affect how web content is rendered and may involve access to secure system resources.
/com/android/server/tracing/TracingServiceProxy.java,notifyTraceur,Yes, this method likely requires permissions as it interacts with the system's background services and manages intents for tracing activities, which typically necessitates specific permissions in Android.
/com/android/server/tracing/TracingServiceProxy.java,reportTrace,Yes, this method requires permissions because it checks for `DUMP` and `PACKAGE_USAGE_STATS` permissions before executing its main logic.
/com/android/server/tracing/TracingServiceProxy.java,hasPermission,Yes, it requires permissions because it checks if a specific permission has been granted for a component.
/com/android/server/tracing/TracingServiceProxy.java,hasBindServicePermission,Yes, because it checks for `Manifest.permission.BIND_TRACE_REPORT_SERVICE`, which requires that permission.
/com/android/server/soundtrigger/SoundTriggerDbHelper.java,getGenericSoundModel,Yes, requires permissions. It accesses a database, which typically requires permissions like "READ_EXTERNAL_STORAGE" or "WRITE_EXTERNAL_STORAGE" in Android.
/com/android/server/soundtrigger/SoundTriggerDbHelper.java,deleteGenericSoundModel,Yes, this method may require permission to access persistent storage, as it involves database operations (specifically deleting records in an SQLite database).
/com/android/server/vibrator/PerformPrebakedVibratorStep.java,play,Yes, this method likely requires permissions as it appears to interact with the device's vibration functionality, which typically requires the `VIBRATE` permission in Android.
/com/android/server/vibrator/StartSequentialEffectStep.java,play,Yes, this method likely requires permissions because it interacts with the vibrator service, which typically requires the `VIBRATE` permission in Android.
/com/android/server/vibrator/StartSequentialEffectStep.java,startVibrating,Yes, the method requires permissions to control the vibrators on the device.
/com/android/server/vibrator/StartSequentialEffectStep.java,calculateRequiredSyncCapabilities,Yes, the method requires permissions because it interacts with the vibrator service, which typically requires the permission `VIBRATE` in Android.
/com/android/server/vibrator/InputDeviceDelegate.java,vibrateIfAvailable,Yes, this method requires permissions because it involves device vibrations, which typically necessitates the permission `VIBRATE`.
/com/android/server/vibrator/InputDeviceDelegate.java,updateInputDevice,Yes, the method interacts with device vibrators and input devices, which may require permissions related to accessing vibrational capabilities or input device management.
/com/android/server/vibrator/TurnOffVibratorStep.java,play,Yes, because it involves interacting with the vibrator feature, which requires permission to use vibration in Android.
/com/android/server/vibrator/VibrationThread.java,triggerSyncedVibration,Yes, because triggering a vibration typically requires the VIBRATE permission in Android.
/com/android/server/vibrator/VibrationThread.java,runVibrationOnVibrationThread,Yes, this method requires permissions to access the device's vibration hardware.
/com/android/server/vibrator/VibrationThread.java,runCurrentVibrationWithWakeLock,Yes, this method requires permissions related to managing wake locks and possibly accessing vibration functionalities.
/com/android/server/vibrator/VibrationThread.java,playVibration,Yes, the method likely requires permissions to access the vibrator hardware.
/com/android/server/vibrator/SetAmplitudeVibratorStep.java,play,Yes, because the method involves vibrations, which typically requires permissions related to accessing the vibrator service in Android (`VIBRATE` permission).
/com/android/server/vibrator/SetAmplitudeVibratorStep.java,turnVibratorBackOn,Yes, this method requires permissions because it is likely interacting with the device's vibrator, which typically requires the `VIBRATE` permission in Android.
/com/android/server/vibrator/SetAmplitudeVibratorStep.java,startVibrating,Yes, because starting the vibration on a device typically requires the `VIBRATE` permission.
/com/android/server/vibrator/SetAmplitudeVibratorStep.java,getVibratorOnDuration,Yes, the method likely requires permissions to access the device's vibrator functionality.
/com/android/server/vibrator/RampOffVibratorStep.java,play,Yes, the method likely requires permissions because it involves actions related to managing the device's vibrator, which typically requires the `VIBRATE` permission in Android.
/com/android/server/vibrator/FinishSequentialEffectStep.java,play,Yes, the method is related to vibration functionality, which typically requires the `VIBRATE` permission in Android.
/com/android/server/vibrator/VibrationStats.java,reportVibratorOn,Yes, this method requires permissions because it interacts with the device's vibrator hardware, which typically requires the USE_VIBRATOR permission in Android.
/com/android/server/vibrator/VibrationStats.java,reportPerformEffect,Yes, this method likely requires permission to access the vibrator feature in Android.
/com/android/server/vibrator/VibrationStats.java,reportComposePrimitives,Yes, because the method deals with triggering vibrations, which typically requires permission to access the device's vibrator feature (`VIBRATE` permission).
/com/android/server/vibrator/VibratorFrameworkStatsLogger.java,writeVibratorStateOnAsync,Yes, it likely requires permissions related to accessing and controlling the vibrator or hardware.
/com/android/server/vibrator/VibrationScaler.java,scale,Yes, because it involves vibrating effects which typically require vibration permissions in Android.
/com/android/server/vibrator/ComposePwleVibratorStep.java,play,Yes, the method may require permissions related to vibration access (e.g., `VIBRATE` permission) as it references vibration-related functionality like `getVibratorInfo` and appears to control a vibrator.
/com/android/server/vibrator/AbstractVibratorStep.java,handleVibratorOnResult,Yes, this method likely requires permissions because it interacts with the device's vibrator functionality, which typically requires the `VIBRATE` permission in Android.
/com/android/server/vibrator/AbstractVibratorStep.java,nextSteps,Yes, requires permission to access the device's vibrator.
/com/android/server/vibrator/ComposePrimitivesVibratorStep.java,play,Yes, the method likely requires permissions related to vibrator functionality in Android, as it interacts with the vibrator service (e.g., `getVibratorInfo`, `getVibration`, etc.).
/com/android/server/vibrator/CompleteEffectVibratorStep.java,play,Yes, this method likely requires permissions because it appears to involve controlling the device's vibrator, which typically requires the `VIBRATE` permission in Android.
/com/android/server/grammaticalinflection/GrammaticalInflectionService.java,setRequestedApplicationGrammaticalGender,Yes, it likely requires permissions related to accessing application settings or user data, which typically require specific permissions.
/com/android/server/grammaticalinflection/GrammaticalInflectionManagerInternal.java,stageAndApplyRestoredPayload,Yes, because it deals with restoring app-specific data, which may require permissions related to app management or backup access.
/com/android/server/grammaticalinflection/GrammaticalInflectionBackupHelper.java,isPackageInstalledForUser,Yes, because the method interacts with package management, which typically requires permissions like `QUERY_ALL_PACKAGES` or `PACKAGE_USAGE_STATS`.
/com/android/server/inputmethod/InputMethodManagerInternal.java,getEnabledInputMethodListAsUser,Yes, this method requires permissions to access system data related to input methods for a specific user.
/com/android/server/inputmethod/InputMethodManagerInternal.java,setInputMethodEnabled,Yes, because changing input method settings typically requires permissions related to modifying system settings or user preferences.
/com/android/server/inputmethod/InputMethodManagerInternal.java,setInputMethodEnabled,Yes, this method likely requires permissions to control input methods (IMEs) on the device.
/com/android/server/inputmethod/AdditionalSubtypeUtils.java,save,Yes, it requires permissions because it involves writing to the filesystem, which generally requires file write permissions in Android.
/com/android/server/inputmethod/InputContentUriTokenHandler.java,doTakeLocked,Yes, this method likely requires permissions because it involves granting URI permissions, which typically requires explicit permissions to access the resources associated with those URIs.
/com/android/server/inputmethod/InputContentUriTokenHandler.java,release,Yes, the method likely requires permissions to revoke URI permissions, which involve access control on shared data.
/com/android/server/inputmethod/OverlayableSystemBooleanResourceWrapper.java,create,Yes, the method may require permissions related to accessing user-specific resources and broadcasting.
/com/android/server/inputmethod/InputMethodManagerServiceProxy.java,dump,Yes, it requires permissions. The method `dump` checks for a dump permission before proceeding, indicating that permission validation is needed.
/com/android/server/inputmethod/InputMethodManagerServiceProxy.java,getInputMethodList,Yes, this method requires permissions. It deals with input methods, which typically requires permissions to access and manage input settings and services in Android.
/com/android/server/inputmethod/InputMethodManagerServiceProxy.java,getEnabledInputMethodList,Yes, this method likely requires permissions because it deals with user input methods, which may involve accessing sensitive user data or preferences.
/com/android/server/inputmethod/InputMethodManagerServiceProxy.java,getEnabledInputMethodSubtypeList,Yes, it likely requires permissions as it deals with input method subtypes which may involve accessing user-specific settings or configurations.
/com/android/server/inputmethod/InputMethodManagerServiceProxy.java,startInputOrWindowGainedFocus,Yes, this method likely requires permissions related to input method management and user interaction, as it involves starting input based on input flags, client, and window tokens.
/com/android/server/inputmethod/InputMethodManagerServiceProxy.java,getCurrentInputMethodSubtype,Yes, this method likely requires permissions because it interacts with user-specific input methods, which typically involve access to user-related settings and information.
/com/android/server/inputmethod/InputMethodManagerServiceProxy.java,setAdditionalInputMethodSubtypes,Yes, because it involves modifying input method subtypes which may require specific permissions related to input methods or user data in the Android framework.
/com/android/server/inputmethod/InputMethodManagerServiceProxy.java,onShellCommand,Yes, requires permissions. The method interacts with shell commands and may need permissions related to system operations or security checks.
/com/android/server/inputmethod/InputMethodManagerServiceProxy.java,getInputMethodListAsUser,Yes, it likely requires permissions because it involves accessing input method services for a specific user, which typically necessitates appropriate permissions in Android to ensure user privacy and security.
/com/android/server/inputmethod/InputMethodManagerServiceProxy.java,getEnabledInputMethodListAsUser,Yes, this method likely requires permissions to access input methods for a specified user, particularly in a multi-user environment.
/com/android/server/inputmethod/InputMethodManagerServiceProxy.java,switchToInputMethod,Yes, it likely requires permissions to switch input methods, as this involves modifying user input settings, which typically necessitates user permissions for security and privacy reasons.
/com/android/server/inputmethod/InputMethodManagerServiceProxy.java,setInputMethodEnabled,Yes, it likely requires permissions because it involves setting input method (IME) status, which typically requires specific user permissions in an Android context.
/com/android/server/infra/SecureSettingsServiceNameResolver.java,readServiceNameList,Yes, because it accesses secure settings which typically require appropriate permissions.
/com/android/server/infra/SecureSettingsServiceNameResolver.java,readServiceName,Yes, it requires permissions because it involves accessing secure settings that typically require permission from the user for privacy reasons.
/com/android/server/infra/SecureSettingsServiceNameResolver.java,setServiceNameList,Yes, this method interacts with `Settings.Secure`, which typically requires permissions to read or write secure settings in Android.
/com/android/server/appop/DiscreteRegistry.java,addDiscreteAccess,Yes, it likely requires permissions because it deals with UID operations and may modify access settings, which typically need certain permissions in Android.
/com/android/server/appop/DiscreteRegistry.java,clearHistory,Yes, because managing app history typically requires permission to access user data.
/com/android/server/appop/DiscreteRegistry.java,readFromFile,Yes, this method requires permission because it involves reading from a file, which typically requires file access permissions in Android.
/com/android/server/appop/AppOpsCheckingServiceTracingDecorator.java,setUidMode,Yes, the method likely requires permissions because it appears to interact with system-level functions (setting UID modes) that typically require elevated privileges.
/com/android/server/appop/AppOpsCheckingServiceTracingDecorator.java,setPackageMode,Yes, this method likely requires permissions because it interacts with system-level operations that manage app package modes, which typically require special permissions to use.
/com/android/server/appop/AppOpsCheckingServiceTracingDecorator.java,removePackage,Yes, this method likely requires permissions to manage packages, such as the ability to remove a package for a specific user.
/com/android/server/appop/HistoricalRegistry.java,getHistoricalOps,Yes, this method likely requires permissions because it involves accessing historical operations related to app permissions (e.g., `getHistoricalOps`). Such access typically necessitates permissions to ensure user privacy and security in Android.
/com/android/server/appop/HistoricalRegistry.java,incrementOpAccessedCount,Yes, this method likely requires permissions since it deals with accessing and modifying operation access counts which could involve sensitive data or user actions that need to be regulated by permissions.
/com/android/server/appop/HistoricalRegistry.java,increaseOpAccessDuration,Yes, this method likely requires permissions because it involves user operations, access management, and interaction with app-specific data (e.g., `uid` and `packageName`), which typically require proper permissions in Android to ensure user data protection.
/com/android/server/appop/HistoricalRegistry.java,clearHistory,Yes, the method likely requires permissions because it involves clearing history for a specific user and package, which could involve sensitive user data.
/com/android/server/appop/HistoricalRegistry.java,isApiEnabled,Yes, because it checks the API status related to privacy permissions.
/com/android/server/appop/AudioRestrictionManager.java,checkAudioOperation,Yes, this method likely requires permissions related to audio usage and camera restrictions, as it checks audio operations and restrictions based on usage, uid, and packageName.
/com/android/server/appop/AudioRestrictionManager.java,setZenModeAudioRestriction,Yes, because modifying Zen mode audio restrictions typically requires specific permissions related to managing system audio or Do Not Disturb settings in Android.
/com/android/server/appop/AppOpsCheckingServiceInterface.java,setUidMode,Yes, it likely requires permissions as it involves setting app-op modes for specific user IDs, which typically needs elevated privileges.
/com/android/server/appop/AppOpsCheckingServiceInterface.java,setPackageMode,Yes, this method likely requires permissions to modify app-op modes for a package, which typically involves system-level privileges.
/com/android/server/appop/AppOpsCheckingServiceLoggingDecorator.java,setUidMode,Yes, this method likely requires permissions because it appears to modify or sets a UID mode, which is generally associated with system-level operations in Android that could affect app permissions and user data isolation.
/com/android/server/appop/AppOpsCheckingServiceLoggingDecorator.java,removePackage,Yes, because removing a package typically requires permissions related to package management actions.
/com/android/server/appop/AppOpsUidStateTrackerImpl.java,evalMode,Yes, this method likely requires permissions related to user IDs and possibly access to system-level features, based on the use of `getUidState`, `getUidCapability`, and `logEvalForegroundMode`.
/com/android/server/appop/AppOpsUidStateTrackerImpl.java,getOpCapability,Yes, because it accesses location and camera capabilities, which require location and camera permissions in Android.
/com/android/server/appop/AppOpsRestrictions.java,setGlobalRestriction,Yes, this method likely requires permissions to modify global app-op restrictions, as it alters the state of operations that can affect system-level capabilities and app behavior.
/com/android/server/appop/AppOpsRestrictions.java,setUserRestriction,Yes, this method likely requires permissions to modify user app-op restrictions.
/com/android/server/appop/AppOpsRestrictions.java,clearUserRestrictions,Yes, because it manages user app-op restrictions, which typically requires specific permissions to modify.
/com/android/server/appop/AppOpsRestrictions.java,clearUserRestrictions,Yes, this method likely requires permissions to modify user app-op restrictions, as it deals with user-specific settings.
/com/android/server/compat/OverrideValidatorImpl.java,getOverrideAllowedStateInternal,Yes, this method may require permissions because it interacts with the `PackageManager` and checks for permission status using `checkCallingOrSelfPermission`.
/com/android/server/compat/CompatConfig.java,enableTargetSdkChangesForPackage,Yes, it likely requires permissions to enable changes for a specific package name, which may involve altering app behavior/settings.
/com/android/server/compat/CompatConfig.java,saveOverrides,Yes, because it involves writing to files in the filesystem, which requires WRITE_EXTERNAL_STORAGE or similar permissions.
/com/android/server/compat/CompatConfig.java,getVersionCodeOrNull,Yes, the method likely requires permissions because it accesses application information using the PackageManager, which typically requires the `GET_PACKAGE_SIZE` or `QUERY_ALL_PACKAGED` permissions in Android.
/com/android/server/compat/overrides/AppCompatOverridesService.java,getVersionCodeOrNull,Yes, this method requires permissions because it accesses application information via PackageManager, which typically requires specific permissions to access.
/com/android/server/compat/overrides/AppCompatOverridesService.java,register,Yes, this method likely requires permissions because it involves registering a receiver, which typically requires permissions related to broadcast or intent handling in Android.
/com/android/server/compat/overrides/AppCompatOverridesService.java,onReceive,Yes, this method ('onReceive') requires permissions because it handles system broadcast intents related to package actions (like package added, changed, or removed), which may need permissions like `PACKAGE_USAGE_STATS` or others depending on the actions being processed.
/com/android/server/gpu/GpuService.java,assetToSettingsGlobal,Yes, this method requires permissions because it accesses `Settings.Global`, which typically requires `WRITE_SETTINGS` permission to modify global settings on the device.
/com/android/server/net/NetworkPinner.java,pin,Yes, the method likely requires permissions because it involves registering a network callback, which generally requires access to network state or connectivity information.
/com/android/server/net/LockdownVpnTracker.java,handleStateChangedLocked,Yes, it likely requires permissions related to network access and VPN configuration.
/com/android/server/net/LockdownVpnTracker.java,showNotification,Yes, because showing notifications typically requires the `android.permission.ACCESS_NOTIFICATION_POLICY` or related permissions to manage and display notifications in Android.
/com/android/server/net/NetworkPolicyManagerShellCommand.java,addRestrictBackgroundWhitelist,Yes, because it suggests modifying network restrictions which likely requires permission to access network state or manage background data.
/com/android/server/net/NetworkPolicyManagerShellCommand.java,addRestrictBackgroundBlacklist,Yes, it likely requires permission as it involves setting policies related to background data usage.
/com/android/server/net/NetworkPolicyManagerShellCommand.java,listWifiNetworks,Yes, this method likely requires permissions because it interacts with Wi-Fi configurations and networks, which generally requires access permissions in Android (such as `ACCESS_WIFI_STATE` and `CHANGE_WIFI_STATE`).
/com/android/server/net/NetworkPolicyManagerShellCommand.java,setMeteredWifiNetwork,Yes, this method likely requires permissions related to modifying network settings, such as `CHANGE_NETWORK_STATE` or similar, as it appears to deal with metered network configurations.
/com/android/server/net/NetworkPolicyManagerInternal.java,setAppIdleWhitelist,Yes, this method likely requires permissions because it modifies app idle configurations, which typically requires system-level access or administrative permissions.
/com/android/server/net/NetworkPolicyManagerInternal.java,setMeteredRestrictedPackages,Yes, because it involves restricting access to metered data, which typically requires special permissions to manage network usage policies.
/com/android/server/net/watchlist/NetworkWatchlistService.java,startWatchlistLogging,Yes, this method enforces a permission related to watchlist logging.
/com/android/server/net/watchlist/NetworkWatchlistService.java,stopWatchlistLogging,Yes, it requires permission to enforce watchlist logging.
/com/android/server/net/watchlist/NetworkWatchlistService.java,enforceWatchlistLoggingPermission,Yes, the method checks if the calling UID has the permission to change the watchlist, implying that specific permissions are required for this action.
/com/android/server/net/watchlist/NetworkWatchlistService.java,reloadWatchlist,Yes, because it enforces permission related to watchlist logging.
/com/android/server/net/watchlist/NetworkWatchlistService.java,dump,Yes, the method requires permissions because it checks for dump permissions before execution.
/com/android/server/net/watchlist/WatchlistReportDbHelper.java,insertNewRecord,Yes, reason: This method interacts with a database, which may require permissions to read and write to storage.
/com/android/server/net/watchlist/ReportWatchlistJobService.java,schedule,Yes, this method requires permissions because it schedules a job through the JobScheduler, which typically requires the permission to access background tasks.
/com/android/server/net/watchlist/WatchlistLoggingHandler.java,insertRecord,Yes, this method likely requires permissions because it appears to interact with a database (e.g., inserting a record), which generally requires specific permissions in Android (like WRITE_EXTERNAL_STORAGE or similar).
/com/android/server/net/watchlist/WatchlistLoggingHandler.java,getAllDigestsForReport,Yes, this method requires permissions because it accesses information about installed applications, which typically necessitates the `QUERY_ALL_PACKAGES` permission in Android to get a comprehensive list of installed apps.
/com/android/server/net/watchlist/WatchlistLoggingHandler.java,addEncodedReportToDropBox,Yes, requires permission to access the Dropbox service for adding data.
/com/android/server/oemlock/PersistentDataBlockLock.java,setOemUnlockAllowedByCarrier,Yes, the method likely requires permissions related to user restrictions, specifically for OEM unlock settings, which typically involve security and device management permissions.
/com/android/server/oemlock/PersistentDataBlockLock.java,disallowUnlockIfNotUnlocked,Yes, the method modifies device security settings related to the bootloader, which typically requires permissions to ensure that only authorized apps can make such modifications.
/com/android/server/oemlock/VendorLockHidl.java,getOemLockHalService,Yes, it is likely that this method requires permissions to access the OEM Lock HAL service. Accessing system services typically requires appropriate permissions to ensure the security and integrity of the system.
/com/android/server/oemlock/VendorLockHidl.java,setOemUnlockAllowedByCarrier,Yes, this method likely requires permissions because it appears to modify OEM unlock settings, which typically involve sensitive system-level operations that are protected by permissions in Android.
/com/android/server/oemlock/VendorLockHidl.java,setOemUnlockAllowedByDevice,Yes, this method likely requires permissions. It involves setting the OEM unlock state, which typically requires elevated permissions to modify device security settings.
/com/android/server/oemlock/VendorLockAidl.java,setOemUnlockAllowedByCarrier,Yes, this method likely requires permissions because it involves setting OEM unlock options, which typically requires specific permissions related to device security and carrier configurations.
/com/android/server/oemlock/VendorLockAidl.java,setOemUnlockAllowedByDevice,Yes, likely requires permissions to modify OEM unlock settings.
/com/android/server/signedconfig/GlobalSettingsConfigApplicator.java,updateCurrentConfig,Yes, this method likely requires permissions because it accesses and modifies global settings in the Android system, which typically requires specific permissions (e.g., `WRITE_SETTINGS`).
/com/android/server/locales/LocaleManagerBackupHelper.java,notifyBackupManager,Yes, this method likely requires permissions because it interacts with the backup manager, which typically requires specific permissions to manage backup operations in Android.
/com/android/server/locales/LocaleManagerBackupHelper.java,isPackageInstalledForUser,Yes, because accessing package information typically requires `QUERY_ALL_PACKAGES` or related permissions.
/com/android/server/locales/SystemAppUpdateTracker.java,isUpdatedSystemApp,Yes, this method requires permissions. It accesses application information through the PackageManager, which typically requires the `QUERY_ALL_PACKAGES` or related permissions in Android.
/com/android/server/locales/LocaleManagerService.java,getBackupPayload,Yes, this method likely requires permissions because it involves a check for system caller, implying it may access or manipulate sensitive data related to backups that are usually protected in Android.
/com/android/server/locales/LocaleManagerService.java,setApplicationLocales,Yes, because the method enforces a permission check (`enforceChangeConfigurationPermission`) which typically requires specific privileges to modify application locales.
/com/android/server/locales/LocaleManagerService.java,setApplicationLocalesUnchecked,Yes, this method likely requires permissions as it deals with application locales and configurations, which can affect system settings and user preferences.
/com/android/server/locales/LocaleManagerService.java,notifyRegisteredReceivers,Yes, requires `READ_APP_SPECIFIC_LOCALES` permission to send the broadcast.
/com/android/server/locales/LocaleManagerService.java,notifyInstallerOfAppWhoseLocaleChanged,Yes, this method requires permissions. It sends a broadcast, which typically requires appropriate permissions to access the underlying broadcast mechanism and potentially interact with other applications.
/com/android/server/locales/LocaleManagerService.java,notifyAppWhoseLocaleChanged,Yes, because sending broadcasts typically requires permissions to ensure that only authorized apps can receive or send certain intents.
/com/android/server/locales/LocaleManagerService.java,enforceChangeConfigurationPermission,Yes, because it calls `enforceCallingOrSelfPermission` with the permission `android.Manifest.permission.CHANGE_CONFIGURATION`, which requires specific permissions to execute.
/com/android/server/locales/LocaleManagerService.java,getApplicationLocales,Yes, requires permission. The method enforces a read permission for application-specific locales.
/com/android/server/locales/LocaleManagerService.java,enforceReadAppSpecificLocalesPermission,Yes, it requires the `READ_APP_SPECIFIC_LOCALES` permission to check access permissions for reading application-specific locales.
/com/android/server/locales/LocaleManagerService.java,getPackageUid,Yes, the method likely requires permissions because it involves querying package information, which typically necessitates permission to access app-specific data.
/com/android/server/locales/LocaleManagerService.java,enforceSetAppSpecificLocaleConfigPermission,Yes, this method checks for the permission `SET_APP_SPECIFIC_LOCALECONFIG`, which indicates that it requires permission to be called.
/com/android/server/locales/LocaleManagerShellCommand.java,runSetAppLocales,Yes, this method likely requires permissions because it involves managing user locales and application settings, which may necessitate permissions related to user data or application configurations in Android.
/com/android/server/locales/LocaleManagerShellCommand.java,runSetAppOverrideLocaleConfig,Yes, this method likely requires permissions because it interacts with system-level services (like `ActivityManager` and `mBinderService`), which typically need appropriate permissions to access.
/com/android/server/locales/LocaleManagerServicePackageMonitor.java,onPackageAdded,Yes, because managing packages may require permissions related to package management.
/com/android/server/app/GameServiceProviderSelectorImpl.java,get,Yes, this method likely requires permissions because it interacts with system services, user profiles, and possibly sensitive user data (like game service configurations based on user IDs).
/com/android/server/app/GameServiceProviderSelectorImpl.java,determineGameSessionServiceFromGameService,Yes, the method requires permissions to access information about services and their metadata in the Android system.
/com/android/server/app/GameTaskInfoProvider.java,getRunningTaskInfo,Yes, this method requires permissions because it accesses running task information, which typically requires `android.permission.GET_TASKS`.
/com/android/server/app/GameManagerSettings.java,writePersistentDataLocked,Yes, because this method writes data to disk, which typically requires write permissions in Android.
/com/android/server/app/GameServiceProviderInstanceFactoryImpl.java,create,Yes, this method likely requires permissions related to accessing system services (e.g., ActivityManager, WindowManager, etc.) as it interacts with various Android services that can be restricted.
/com/android/server/am/SettingsToPropertiesMapper.java,updatePropertyFromSetting,Yes, because it interacts with `Settings.Global` which typically requires permissions to access settings data.
/com/android/server/am/MemoryStatUtil.java,readMemoryStatFromMemcg,Yes, this method likely requires permissions to read memory statistics from the operating system, which may be restricted.
/com/android/server/am/MemoryStatUtil.java,readFileContents,Yes, because reading file contents typically requires permissions to access the file system.
/com/android/server/am/LmkdConnection.java,openSocket,Yes, this method likely requires permissions. It works with sockets, which typically involves networking operations that require permissions such as `INTERNET` in Android.
/com/android/server/am/BugReportHandlerUtil.java,launchBugReportHandlerApp,Yes, it appears that this method might require permissions related to bug reporting and handling, specifically to send broadcasts and interact with a bug report handler app.
/com/android/server/am/BugReportHandlerUtil.java,launchBugReportHandlerApp,Yes, because it sends a broadcast which may require the permission `android.Manifest.permission.DUMP`.
/com/android/server/am/BugReportHandlerUtil.java,getCustomBugReportHandlerUser,Yes, it requires permissions because it accesses secure settings that typically need permission to access in Android.
/com/android/server/am/BugReportHandlerUtil.java,getBugReportHandlerAppReceivers,Yes, this method likely requires permission because it deals with querying system-level broadcast receivers, which typically requires certain permissions in Android for accessing specific data or functionalities.
/com/android/server/am/BugReportHandlerUtil.java,resetCustomBugreportHandlerAppAndUser,Yes, because it interacts with secure settings which typically require permissions.
/com/android/server/am/BugReportHandlerUtil.java,onReceive,Yes, this method likely requires permissions to access bug reporting features and system services in Android.
/com/android/server/am/BroadcastFilter.java,dumpDebug,Yes, this method requires permissions because it checks for a `requiredPermission` and performs actions based on that.
/com/android/server/am/BroadcastFilter.java,dumpBroadcastFilterState,Yes, it checks for a `requiredPermission`.
/com/android/server/am/DataConnectionStats.java,startMonitoring,Yes, because it interacts with telephony services that may require permissions such as `READ_PHONE_STATE` or `ACCESS_NETWORK_STATE`.
/com/android/server/am/DataConnectionStats.java,onReceive,Yes, this method likely requires permissions related to telephony, such as `READ_PHONE_STATE`, since it handles a SIM state change.
/com/android/server/am/DataConnectionStats.java,notePhoneDataConnectionState,Yes, this method likely requires permissions related to accessing telephony services or network state information, as it interacts with the mobile network's state and registration information.
/com/android/server/am/DataConnectionStats.java,updateSimState,Yes, it requires permissions as it deals with SIM state updates which are sensitive operations that typically require permissions related to telephony access.
/com/android/server/am/ActivityManagerConstants.java,start,Yes, the method likely requires permissions because it interacts with `ContentResolver` and `DeviceConfig`, which typically require permissions to access system settings and content providers on Android.
/com/android/server/am/ProviderMap.java,putProviderByName,Yes, it likely requires permissions as it deals with content providers, which typically require specific permissions to access data.
/com/android/server/am/ActivityManagerShellCommand.java,onCommand,Yes, this method requires permissions. The method appears to handle multiple commands related to starting services, monitoring users, and managing applications, which typically require specific permissions in Android (e.g., starting services, accessing user data).
/com/android/server/am/ActivityManagerShellCommand.java,runStartActivity,Yes, this method may require permissions as it deals with starting activities, which typically involves permissions in Android, such as `android.permission.START_ACTIVITIES`.
/com/android/server/am/ActivityManagerShellCommand.java,runStartService,Yes, this method likely requires permissions because it involves starting a service, which typically necessitates explicit permissions in Android to access system resources or start background processes.
/com/android/server/am/ActivityManagerShellCommand.java,runStopService,Yes, requires permission to stop a service in Android.
/com/android/server/am/ActivityManagerShellCommand.java,runSendBroadcast,Yes, because the method is broadcasting an Intent, which requires the appropriate permissions to be set in the manifest or acquired at runtime.
/com/android/server/am/ActivityManagerShellCommand.java,runDumpHeap,Yes, it requires permissions because it involves dumping the heap, which typically requires special permissions related to memory access and debugging.
/com/android/server/am/ActivityManagerShellCommand.java,runClearExitInfo,Yes, requires permission to write secure settings (WRITE_SECURE_SETTINGS).
/com/android/server/am/ActivityManagerShellCommand.java,runBugReport,Yes, this method likely requires permissions related to accessing telephony and potentially for generating and sharing bug reports.
/com/android/server/am/ActivityManagerShellCommand.java,runForceStop,Yes, because this method seems to involve stopping a package, which typically requires specific permissions related to modifying application processes on the device.
/com/android/server/am/ActivityManagerShellCommand.java,runCrash,Yes, this method likely requires permissions as it interacts with user accounts and potentially crashes applications, which typically requires specific permissions (e.g., `INTERACT_ACROSS_USERS` or `CRASH_APPLICATION`).
/com/android/server/am/ActivityManagerShellCommand.java,runKill,Yes, this method likely requires permissions to manage background processes (e.g., `killBackgroundProcesses`), which involves sensitive system operations that typically necessitate specific permissions in Android.
/com/android/server/am/ActivityManagerShellCommand.java,runKillAll,Yes, this method likely requires permissions because it calls `killAllBackgroundProcesses`, which usually requires special permissions related to managing background processes.
/com/android/server/am/ActivityManagerShellCommand.java,appNotResponding,Yes, because the method appears to be dealing with process management, which typically requires permissions related to managing and monitoring other applications on the device.
/com/android/server/am/ActivityManagerShellCommand.java,runRestart,Yes, this method likely requires permissions because it calls the `restart` method, which typically requires elevated permissions to restart the system or application.
/com/android/server/am/ActivityManagerShellCommand.java,switchUserAndWaitForComplete,Yes, this method likely requires permissions related to user management or switching users in the system, which typically involves sensitive operations that require appropriate permissions to ensure security and privacy.
/com/android/server/am/ActivityManagerShellCommand.java,runSwitchUser,Yes, this method likely requires permissions as it interacts with the UserManager to switch users, which typically needs specific permissions like `MANAGE_USERS` or `INTERACT_ACROSS_PROFILES` in Android.
/com/android/server/am/ActivityManagerShellCommand.java,runStartUser,Yes, this method likely requires permissions related to user management and activity management, as it deals with user interactions and services.
/com/android/server/am/ActivityManagerShellCommand.java,runUnlockUser,Yes, it likely requires permissions because it involves user management operations (unlocking a user) which typically requires specific system-level permissions in Android.
/com/android/server/am/ActivityManagerShellCommand.java,runStopUser,Yes, because it likely involves stopping a user account, which may require permissions related to user management.
/com/android/server/am/ActivityManagerShellCommand.java,runTrackAssociations,Yes, because the method enforces the calling permission using `enforceCallingPermission` with `android.Manifest.permission`.
/com/android/server/am/ActivityManagerShellCommand.java,runUntrackAssociations,Yes, it requires permissions because it enforces calling permissions with `enforceCallingPermission`.
/com/android/server/am/ActivityManagerShellCommand.java,getUidState,Yes, this method requires permissions because it enforces the calling permission for `getUidState()`, indicating that it checks for necessary permissions before executing its functionality.
/com/android/server/am/ActivityManagerShellCommand.java,getRecentConfigurations,Yes, this method requires permissions because it involves accessing usage statistics, which is a sensitive data point in Android that typically requires specific permissions like `PACKAGE_USAGE_STATS`.
/com/android/server/am/ActivityManagerShellCommand.java,runSetInactive,Yes, this method likely requires permissions because it interacts with `IUsageStatsManager`, which typically requires specific permissions relating to usage statistics.
/com/android/server/am/ActivityManagerShellCommand.java,runSetStandbyBucket,Yes, the method interacts with `IUsageStatsManager` to set app standby buckets, which generally requires permissions related to usage statistics.
/com/android/server/am/ActivityManagerShellCommand.java,runGetStandbyBucket,Yes, because it accesses the `USAGE_STATS_SERVICE`, which typically requires the `PACKAGE_USAGE_STATS` permission.
/com/android/server/am/ActivityManagerShellCommand.java,runGetInactive,Yes, because it uses `IUsageStatsManager`, which requires the `PACKAGE_USAGE_STATS` permission.
/com/android/server/am/ActivityManagerShellCommand.java,runWrite,Yes, requires permission to enforce calling permission.
/com/android/server/am/ActivityManagerShellCommand.java,runAttachAgent,Yes, it requires permission to enforce calling permission related to "attach-agent".
/com/android/server/am/ActivityManagerShellCommand.java,runMemoryFactor,Yes, because the method invokes `enforceCallingPermission` with `WRITE_SECURE_SETTINGS`, which requires permission to modify secure settings.
/com/android/server/am/ActivityManagerShellCommand.java,runServiceRestartBackoff,Yes, it requires permissions because it enforces calling permissions through the `enforceCallingPermission` method, indicating that certain permissions must be granted to execute this method.
/com/android/server/am/ActivityManagerShellCommand.java,runGetIsolatedProcesses,Yes, it requires permissions because it enforces calling permission related to the `getIsolatedProcesses()` method.
/com/android/server/am/ActivityManagerShellCommand.java,runSetStopUserOnSwitch,Yes, the method uses `enforceCallingPermission` with `INTERACT_ACROSS_USERS_FULL`, which requires permissions related to user interactions across different user profiles.
/com/android/server/am/ActivityManagerShellCommand.java,runSetBgRestrictionLevel,Yes, it likely requires permissions related to modifying application restrictions, which generally require certain privileges.
/com/android/server/am/ActivityManagerShellCommand.java,runSetForegroundServiceDelegate,Yes, this method likely requires permissions because it involves managing foreground services, which typically requires the `FOREGROUND_SERVICE` permission in Android.
/com/android/server/am/StackTracesDumpHelper.java,dumpStackTraces,Yes, this method likely requires permissions for accessing system process information or performing operations related to stack traces, which can be sensitive and typically require special permissions in Android.
/com/android/server/am/StackTracesDumpHelper.java,dumpStackTracesTempFile,Yes, it likely requires permissions. The method deals with dumping stack traces and creating temporary files, which may involve file system access permissions.
/com/android/server/am/StackTracesDumpHelper.java,createAnrDumpFile,Yes, this method requires permissions because it involves creating a file, which typically requires write privileges in Android.
/com/android/server/am/StackTracesDumpHelper.java,dumpJavaTracesTombstoned,Yes, because it interacts with file operations which typically require file write permissions in Android.
/com/android/server/am/StackTracesDumpHelper.java,appendtoANRFile,Yes, because writing to a file typically requires file system permissions.
/com/android/server/am/BroadcastSkipPolicy.java,shouldSkipMessage,Yes, the method requires permissions because it checks for permissions related to broadcasting intents, which typically requires specific permissions declared in the Android manifest.
/com/android/server/am/BroadcastSkipPolicy.java,disallowBackgroundStart,Yes, this method checks for required permissions related to broadcasting intents, which may involve background process restrictions.
/com/android/server/am/BroadcastSkipPolicy.java,shouldSkipMessage,Yes, the method requires permissions. It checks for permissions associated with broadcasting messages, including the verification of required permissions and app ops, indicating security constraints around sending broadcasts.
/com/android/server/am/BroadcastSkipPolicy.java,noteOpForManifestReceiverInner,Yes, this method likely requires permissions because it interacts with app operations through `AppOpsManager`, which typically requires specific permissions to monitor and manage app operation permissions.
/com/android/server/am/BroadcastSkipPolicy.java,requestStartTargetPermissionsReviewIfNeededLocked,Yes, this method likely requires permissions because it involves actions related to managing app permissions and launching permission reviews.
/com/android/server/am/BroadcastSkipPolicy.java,run,Yes, this method likely requires permission to start an activity as it involves calling `startActivityAsUser`, which generally requires permissions related to starting activities.
/com/android/server/am/NativeCrashListener.java,run,Yes, this method likely requires permissions because it involves creating and manipulating sockets, which often requires specific permissions in Android for network operations.
/com/android/server/recoverysystem/RecoverySystemShellCommand.java,rebootAndApply,Yes, because rebooting the device typically requires system-level permissions.
/com/android/server/selectiontoolbar/SelectionToolbarManagerService.java,dump,Yes, this method requires permissions because it checks for dump permission to access sensitive information for debugging or logging.
/com/android/server/contentcapture/ContentCaptureMetricsLogger.java,writeSessionEvent,Yes, the method likely requires permissions as it appears to interact with system services (like logging events), which typically need specific permissions to access or modify.
/com/android/server/wearable/WearableSensingManagerService.java,enforceCallingPermissionForManagement,Yes, it likely requires permissions due to the call to `enforceCallingPermission`, which suggests a permission check is involved.
/com/android/server/wearable/WearableSensingManagerService.java,provideDataStream,Yes, because the method enforces the permission `MANAGE_WEARABLE_SENSING_SERVICE`.
/com/android/server/wearable/WearableSensingManagerService.java,provideData,Yes, it requires permissions because it enforces calling or self permission for `MANAGE_WEARABLE_SENSING_SERVICE`.
/com/android/server/wearable/WearableSensingShellCommand.java,onCommand,Yes, the method likely requires permissions to interact with features such as data streams, which may involve accessing system resources or user data.
/com/android/server/textservices/TextServicesManagerInternal.java,getCurrentSpellCheckerForUser,Yes, this method likely requires permissions related to accessing user data or input methods.
/com/android/server/connectivity/MultipathPolicyTracker.java,start,Yes, this method requires permissions because it interacts with system services (ConnectivityManager, NetworkPolicyManager, NetworkStatsManager) and registers a content observer (which may require permissions related to accessing specific settings).
/com/android/server/connectivity/MultipathPolicyTracker.java,getNetworkTotalBytes,Yes, this method likely requires permissions to access network stats, such as `android.permission.READ_NETWORK_USAGE_HISTORY`, as it deals with querying network usage data.
/com/android/server/connectivity/MultipathPolicyTracker.java,updateMultipathBudget,Yes, this method likely requires permissions since it interacts with network policies and quota management, which typically require specific permissions in Android.
/com/android/server/connectivity/MultipathPolicyTracker.java,registerTrackMobileCallback,Yes, because registering a network callback usually requires permissions related to network access.
/com/android/server/connectivity/IpConnectivityMetrics.java,logEvent,Yes, the method checks for network stack permissions.
/com/android/server/connectivity/IpConnectivityMetrics.java,dump,Yes, the method requires permissions because it includes calls to `enforceDumpPermission`, which usually checks for the necessary permissions to perform a dump operation in Android.
/com/android/server/connectivity/IpConnectivityMetrics.java,enforceDumpPermission,Yes, it checks for the DUMP permission.
/com/android/server/connectivity/IpConnectivityMetrics.java,enforcePermission,Yes, this method likely requires permissions because it involves a call to `enforceCallingOrSelfPermission`, which checks if the calling process has been granted a specific permission.
/com/android/server/connectivity/IpConnectivityMetrics.java,enforceNetdEventListeningPermission,Yes, because it checks if the calling UID has permission to listen for netd events and throws a SecurityException if not.
/com/android/server/connectivity/IpConnectivityMetrics.java,addNetdEventCallback,Yes, the method likely requires permissions because it calls `enforceNetdEventListeningPermission`, which suggests a check for specific access rights related to network operations.
/com/android/server/connectivity/IpConnectivityMetrics.java,removeNetdEventCallback,Yes, the method calls `enforceNetdEventListeningPermission`, indicating that it checks for a specific permission before executing its logic.
/com/android/server/connectivity/IpConnectivityMetrics.java,logDefaultNetworkValidity,Yes, this method requires permissions because it checks for network stack permissions before logging network validity.
/com/android/server/connectivity/IpConnectivityMetrics.java,logDefaultNetworkEvent,Yes, this method checks for "network stack permission," indicating it requires permissions related to network access.
/com/android/server/connectivity/NetdEventListenerService.java,getMetricsForNetwork,Yes, this method likely requires permissions because it involves retrieving network metrics and capabilities, which typically requires network-related permissions in Android (e.g., ACCESS_NETWORK_STATE).
/com/android/server/connectivity/VpnIkev2Utils.java,makeIkeSessionParamsBuilder,Yes, it likely requires permissions related to VPN or network access, as it appears to involve creating configurations for an IPsec/IKE VPN session.
/com/android/server/connectivity/VpnIkev2Utils.java,setIkeAuth,Yes, this method requires permissions. It manages VPN profiles and authentication, which typically necessitates specific permissions, such as `BIND_VPN_SERVICE` in Android.
/com/android/server/voiceinteraction/VoiceInteractionSessionConnection.java,run,Yes, this method likely requires permissions related to power management, as it interacts with power boost settings through `mPowerManagerInternal`.
/com/android/server/voiceinteraction/VoiceInteractionSessionConnection.java,getUserDisabledShowContextLocked,Yes, this method requires permissions because it accesses secure settings (like ASSIST_STRUCTURE_ENABLED and ASSIST_SCREENSHOT_ENABLED) which typically require specific permissions to access in Android.
/com/android/server/voiceinteraction/VoiceInteractionSessionConnection.java,grantUriPermission,Yes, requires permissions; it deals with granting URI permissions which typically requires specific permissions to access shared resources.
/com/android/server/voiceinteraction/VoiceInteractionSessionConnection.java,grantClipDataItemPermission,Yes, this method likely requires permissions because it involves granting URI permissions between different UIDs and packages, which typically requires specific permissions in Android for security reasons.
/com/android/server/voiceinteraction/VoiceInteractionSessionConnection.java,hideLocked,Yes, needs permissions due to the invocation of methods that may require permission checks (e.g., `revokeUriPermissionFromOwner`).
/com/android/server/voiceinteraction/IEnrolledModelDb.java,updateKeyphraseSoundModel,Yes, this method likely requires permission to access and modify sound models in the database.
/com/android/server/voiceinteraction/IEnrolledModelDb.java,deleteKeyphraseSoundModel,Yes, likely requires permissions to access and modify user-specific data (e.g., sound models).
/com/android/server/voiceinteraction/HotwordAudioStreamCopier.java,run,Yes, this method requires permissions because it involves recording audio, which typically necessitates the `RECORD_AUDIO` permission in Android.
/com/android/server/voiceinteraction/DatabaseHelper.java,updateKeyphraseSoundModel,Yes, this method requires permissions. It accesses the database, which typically requires permissions for reading/writing to storage in Android.
/com/android/server/voiceinteraction/DatabaseHelper.java,deleteKeyphraseSoundModel,Yes, this method may require permissions because it interacts with a database to delete a sound model, which typically requires permissions related to storage or database access in Android.
/com/android/server/voiceinteraction/DatabaseHelper.java,getKeyphraseSoundModel,Yes, this method likely requires permissions because it interacts with user-specific data (e.g., `userHandle`) and potentially sensitive information related to sound models.
/com/android/server/voiceinteraction/DatabaseHelper.java,writeToDatabase,Yes, this method requires permissions because it interacts with a database, which generally requires the appropriate permissions to read/write data in Android (such as `WRITE_EXTERNAL_STORAGE` or `WRITE_DATABASE`).
/com/android/server/voiceinteraction/VoiceInteractionManagerServiceImpl.java,grantImplicitAccessLocked,Yes, this method likely requires permissions related to managing access between apps, such as `GRANT_PERMISSION` or similar permissions related to inter-process communication in Android.
/com/android/server/voiceinteraction/VoiceInteractionManagerServiceImpl.java,showSessionLocked,Yes, this method likely requires permissions as it involves interaction with voice sessions and possibly user-related activities, which typically require specific permissions in Android.
/com/android/server/voiceinteraction/VoiceInteractionManagerServiceImpl.java,setDisabledShowContextLocked,Yes, it checks if the calling UID matches the active UID, which requires permission to access sensitive information related to user identity.
/com/android/server/voiceinteraction/VoiceInteractionManagerServiceImpl.java,verifyDetectorForHotwordDetectionLocked,Yes, because it checks for the `BIND_HOTWORD_DETECTION_SERVICE` permission, which requires user approval.
/com/android/server/voiceinteraction/VoiceInteractionManagerServiceImpl.java,verifyDetectorForVisualQueryDetectionLocked,Yes, it requires permissions. Specifically, it checks for the `BIND_VISUAL_QUERY_DETECTION_SERVICE` permission.
/com/android/server/voiceinteraction/VoiceInteractionManagerServiceImpl.java,initAndVerifyDetectorLocked,Yes, this method likely requires permissions because it interacts with hotword detection services, which typically involves sensitive user information and resources.
/com/android/server/voiceinteraction/VoiceInteractionManagerServiceImpl.java,startListeningFromMicLocked,Yes, this method likely requires permissions because it starts listening from the microphone, which typically involves accessing sensitive audio data.
/com/android/server/voiceinteraction/VoiceInteractionManagerServiceImpl.java,startListeningFromExternalSourceLocked,Yes, this method likely requires permissions as it interacts with external audio sources and possibly involves microphone access.
/com/android/server/voiceinteraction/VoiceInteractionManagerServiceImpl.java,startLocked,Yes, the method likely requires permissions related to binding to a foreground service, such as `BIND_FOREGROUND_SERVICE`, which is needed to interact with services in the foreground.
/com/android/server/textclassifier/IconsContentProvider.java,openFile,Yes, this method likely requires permissions to access the provided `Uri` (e.g., reading from external storage or accessing specific resources), which may not be granted by default.
/com/android/server/textclassifier/IconsContentProvider.java,query,Yes, it likely requires permissions because it involves querying data through a URI, which may access sensitive information.
/com/android/server/textclassifier/IconsContentProvider.java,delete,Yes, it likely requires permissions to delete data referenced by the `Uri`.
/com/android/server/textclassifier/IconsContentProvider.java,insert,Yes, it likely requires permissions to insert data into a content provider, which typically involves accessing shared data that may be protected.
/com/android/server/textclassifier/IconsContentProvider.java,update,Yes, this method likely requires permissions to access and modify content represented by the provided `Uri`.
/com/android/server/powerstats/PowerStatsHALWrapper.java,getEnergyMeterInfo,Yes, this method likely requires permissions because it deals with hardware power statistics, which typically requires specific permissions to access sensitive system information.
/com/android/server/powerstats/PowerStatsHALWrapper.java,readEnergyMeter,Yes, it likely requires permissions to access hardware energy meter data.
/com/android/server/powerstats/PowerStatsHALWrapper.java,get,Yes, the method likely requires permissions related to accessing power statistics or system services that monitor power usage.
/com/android/server/powerstats/PowerStatsService.java,createDataStoragePath,Yes, it likely requires permissions as it appears to interact with the file system, which generally requires storage permissions in Android.
/com/android/server/powerstats/PowerStatsService.java,dump,Yes, this method requires permissions because it includes a check for dump permissions (using `checkDumpPermission`) before executing certain actions, indicating the necessity of appropriate permissions to access sensitive data or services.
/com/android/server/powerstats/PowerStatsService.java,readEnergyMeterAsync,Yes, this method likely requires permissions to access energy measurements or related device features.
/com/android/server/powerstats/PowerStatsLogger.java,writeMeterDataToFile,Yes, because writing data to a file descriptor may require file system write permissions.
/com/android/server/powerstats/PowerStatsDataStorage.java,write,Yes, writing to on-device storage generally requires permission to access storage in Android.
/com/android/server/powerstats/PowerStatsDataStorage.java,read,Yes, because it reads data stored in on-device storage, which typically requires permission to access storage.
/com/android/server/security/AttestationVerificationPeerDeviceVerifier.java,getStatusMap,Yes, because it involves network operations to access a URL, which typically requires Internet permissions in Android.
/com/android/server/security/KeyChainSystemService.java,onStart,Yes, this method requires permissions because it appears to register a broadcast receiver for package removal events, which typically requires permission to receive those broadcasts in Android.
/com/android/server/security/KeyChainSystemService.java,onReceive,Yes, because it involves starting a service and resolving system services, which typically require permission.
/com/android/server/security/FileIntegrityService.java,isAppSourceCertificateTrusted,Yes, the method checks the caller's permission, which typically requires appropriate permissions to access certain functionalities in Android.
/com/android/server/security/FileIntegrityService.java,checkCallerPermission,Yes, because it checks for permissions related to package installation using `INSTALL_PACKAGES` and `REQUEST_INSTALL_PACKAGES`.
/com/android/server/security/AttestationVerificationManagerService.java,verifyAttestation,Yes, the method likely requires permissions due to the call to `enforceUsePermission`, which enforces permission checks.
/com/android/server/security/AttestationVerificationManagerService.java,verifyToken,Yes, this method likely requires permissions since it includes a call to `enforceUsePermission`, which suggests that it checks for specific permissions before proceeding with the operation.
/com/android/server/security/rkp/RemoteProvisioningService.java,dump,Yes, the method requires permissions because it includes a check for "checkDumpPermission," indicating that permission validation is necessary before execution.
/com/android/server/security/rkp/RemoteProvisioningService.java,handleShellCommand,Yes, this method likely requires permissions because it involves handling shell commands, which typically requires elevated permissions to execute commands and access file descriptors.
/com/android/server/input/KeyRemapper.java,addKeyRemapping,Yes, because it interacts with the InputManager, which typically requires permissions related to device input handling.
/com/android/server/input/PersistentDataStore.java,setKeyboardBacklightBrightness,Yes, because setting keyboard backlight brightness typically requires system-level permissions to control hardware features.
/com/android/server/input/PersistentDataStore.java,load,Yes, this method likely requires permissions related to file access since it seems to involve reading from a file (indicated by the use of `openRead`) and parsing data (possibly from XML).
/com/android/server/input/PersistentDataStore.java,save,Yes, it requires permissions to write to files, typically requiring WRITE_EXTERNAL_STORAGE or similar permissions in Android.
/com/android/server/input/PersistentDataStore.java,setKeyboardBacklightBrightness,Yes, it likely requires permission to control hardware features like keyboard backlight brightness.
/com/android/server/input/NativeInputManagerService.java,createInputMonitor,Yes, this method likely requires permissions to create input monitors, as it pertains to handling user input and potentially sensitive information.
/com/android/server/input/NativeInputManagerService.java,injectInputEvent,Yes, this method requires permissions because it injects input events into the system, which typically requires elevated privileges.
/com/android/server/input/NativeInputManagerService.java,vibrate,Yes, this method likely requires permissions to control device vibration features.
/com/android/server/input/NativeInputManagerService.java,vibrateCombined,Yes, this method likely requires permissions to access vibration features on the device.
/com/android/server/input/NativeInputManagerService.java,injectInputEvent,Yes, it likely requires permissions because it deals with injecting input events, which can interfere with user input and may require specific system-level permissions to ensure security and integrity of input handling.
/com/android/server/input/NativeInputManagerService.java,vibrate,Yes, because vibrating the device typically requires the `VIBRATE` permission in Android.
/com/android/server/input/NativeInputManagerService.java,vibrateCombined,Yes, the method likely requires permission to access the device's vibration feature.
/com/android/server/input/InputShellCommand.java,injectKeyEvent,Yes, this method requires permissions because it involves injecting a key event, which typically requires permission to control input methods or handle user input programmatically.
/com/android/server/input/InputShellCommand.java,injectMotionEvent,Yes, this method likely requires permissions to inject input events into the event stream, which could pose security risks.
/com/android/server/input/InputShellCommand.java,sendText,Yes, it likely requires permissions because sending key events can involve interacting with input devices, which may need user permissions to ensure security and privacy.
/com/android/server/input/InputShellCommand.java,sendKeyEvent,Yes, this method likely requires permissions as it deals with injecting key events, which can affect user input and system behavior.
/com/android/server/input/InputShellCommand.java,sendSwipe,Yes, this method likely requires permissions as it involves sending motion events, which could affect user interaction.
/com/android/server/input/InputShellCommand.java,injectKeyEventAsync,Yes, this method likely requires permissions as it involves injecting key events, which typically requires specific security permissions in Android to prevent unauthorized input events.
/com/android/server/input/InputShellCommand.java,sendKeyCombination,Yes, this method likely requires permissions because it interacts with key events, which may involve actions that require user consent for security and privacy reasons.
/com/android/server/input/InputSettingsObserver.java,registerAndUpdate,Yes, the method likely requires permissions because it registers a content observer and a broadcast receiver, which commonly need permissions to access certain data or to listen to system-wide broadcasts in Android.
/com/android/server/input/InputManagerInternal.java,incrementKeyboardBacklight,Yes, this method likely requires permissions to control hardware features like keyboard backlight, as such actions typically need special device access permissions.
/com/android/server/wallpapereffectsgeneration/WallpaperEffectsGenerationManagerService.java,enforceCallingPermissionForManagement,Yes, this method likely requires permissions because it involves enforcing a calling permission related to managing wallpaper effects, which typically requires specific permissions in Android.
/com/android/server/wallpapereffectsgeneration/WallpaperEffectsGenerationManagerService.java,runForUser,Yes, requires permission. The method checks for `MANAGE_WALLPAPER_EFFECTS_GENERATION` permission, indicating a need for specific user permissions.
/com/android/server/notification/NotificationShellCmd.java,onCommand,Yes, this method requires permissions. It includes checking for shell command permissions, which typically requires the `android.permission.INTERNET` permission or specific permissions based on the command context.
/com/android/server/notification/ReviewNotificationPermissionsJobService.java,scheduleJob,Yes, because scheduling a job that shows a notification requires permission to run jobs and potentially display notifications.
/com/android/server/notification/ReviewNotificationPermissionsJobService.java,onStartJob,Yes, this method likely requires permissions to send notifications, as it involves the `NotificationManagerInternal` and the method `sendReviewPermissionsNotification`.
/com/android/server/notification/SnoozeHelper.java,repostGroupSummary,Yes, the method might require permissions related to notifications, such as accessing or modifying notifications for a specific user or group.
/com/android/server/notification/SnoozeHelper.java,scheduleRepostAtTime,Yes, the method likely requires permissions to schedule alarms or notifications, as it interacts with `AlarmManager` and modifies system-level settings.
/com/android/server/notification/ReviewNotificationPermissionsReceiver.java,cancelNotification,Yes, the method interacts with notifications, which typically require permissions to do so in Android.
/com/android/server/notification/ReviewNotificationPermissionsReceiver.java,onReceive,Yes, because it interacts with the ContentResolver and access to system settings, which typically requires permissions.
/com/android/server/notification/NotificationHistoryDatabase.java,init,Yes, this method likely requires permissions to access and modify the filesystem, including creating directories and files.
/com/android/server/notification/NotificationHistoryDatabase.java,deleteNotificationHistoryItem,Yes, this method likely requires permissions because it involves deleting notification history items, which typically requires access to sensitive user data.
/com/android/server/notification/NotificationHistoryDatabase.java,readNotificationHistory,Yes, this method likely requires permissions, as it involves reading notification history, which typically requires access to sensitive user data that is protected by permissions in the Android framework.
/com/android/server/notification/NotificationHistoryDatabase.java,prune,Yes, this method likely requires permissions to delete files, as it is removing potentially sensitive files from storage.
/com/android/server/notification/NotificationHistoryDatabase.java,deleteFile,Yes, it may require permissions related to file storage access, as it deletes a file.
/com/android/server/notification/VibratorHelper.java,createPwleWaveformVibration,Yes, this method requires permissions because it involves creating a vibration effect, which typically requires the `VIBRATE` permission in Android.
/com/android/server/notification/VibratorHelper.java,vibrate,Yes, because vibrating the device typically requires the `VIBRATE` permission in Android.
/com/android/server/notification/VibratorHelper.java,createFallbackVibration,Yes, because this method involves creating a vibration effect, which typically requires the "VIBRATE" permission in Android.
/com/android/server/notification/VibratorHelper.java,createDefaultVibration,Yes, this method requires permissions. It involves creating vibrations, which usually requires the "VIBRATE" permission in Android.
/com/android/server/notification/RankingConfig.java,createNotificationChannel,Yes, it requires permissions to create a notification channel, as it involves managing notification settings which may require appropriate app permissions.
/com/android/server/notification/RankingConfig.java,getNotificationChannel,Yes, it likely requires permissions because it interacts with notification channels, which typically need permission to access in Android.
/com/android/server/notification/RankingConfig.java,deleteNotificationChannel,Yes, it likely requires permission because it involves deleting a notification channel, which typically requires specific permissions in Android, such as modifying notification settings.
/com/android/server/notification/RankingConfig.java,permanentlyDeleteNotificationChannel,Yes, this method requires permissions because it modifies the notification settings for a specific package, which typically requires appropriate app permissions in Android.
/com/android/server/notification/RankingConfig.java,permanentlyDeleteNotificationChannels,Yes, it may require permissions to modify notification channels for a specific package and user.
/com/android/server/notification/PermissionHelper.java,hasPermission,Yes, requires notification permission to check if the UID has it.
/com/android/server/notification/PermissionHelper.java,hasRequestedPermission,Yes, because it checks if an app has requested a specific permission, which typically requires permission to access that information.
/com/android/server/notification/PermissionHelper.java,getAppsRequestingPermission,Yes, the method likely requires permissions to access notification-related information from other apps.
/com/android/server/notification/PermissionHelper.java,getInstalledPackages,Yes, this method requires permissions because it accesses installed packages, which typically requires the `QUERY_ALL_PACKAGES` permission or similar.
/com/android/server/notification/PermissionHelper.java,getAppsGrantedPermission,Yes, this method requires permissions because it accesses information about apps that hold the notification permission.
/com/android/server/notification/PermissionHelper.java,getNotificationPermissionValues,Yes, this method likely requires permissions because it involves getting information about applications requesting permissions and accessing user-specific notification settings.
/com/android/server/notification/PermissionHelper.java,setNotificationPermission,Yes, because this method deals with modifying notification permissions which typically requires permission management operations in Android.
/com/android/server/notification/PermissionHelper.java,setNotificationPermission,Yes, it likely requires permissions because it deals with notification permissions, which typically necessitate user consent in Android.
/com/android/server/notification/PermissionHelper.java,isPermissionFixed,Yes, this method likely requires permissions because it interacts with the package manager to check permission flags, which typically requires appropriate application permissions.
/com/android/server/notification/PermissionHelper.java,isPermissionUserSet,Yes, this method checks permission flags and involves permission management, which typically requires appropriate permissions to access permission-related data.
/com/android/server/notification/PermissionHelper.java,isPermissionGrantedByDefaultOrRole,Yes, this method likely requires permissions as it deals with permission flags and roles related to app functionality.
/com/android/server/notification/PermissionHelper.java,packageRequestsNotificationPermission,Yes, this method likely requires permission to access package information, specifically to check for notification permissions of other apps. This typically involves using the `GET_PACKAGE_SIZE` or similar permissions.
/com/android/server/notification/ZenModeHelper.java,getZenRules,Yes, this method likely requires permissions related to managing Zen mode settings or rules in Android, as it interacts with `ZenRule` and checks whether the user can manage automatic Zen rules.
/com/android/server/notification/ZenModeHelper.java,addAutomaticZenRule,Yes, this method manipulates Zen rules which typically require specific permissions related to managing device settings, especially in regards to do-not-disturb features.
/com/android/server/notification/ZenModeHelper.java,removeAutomaticZenRules,Yes, this method requires permissions because it manipulates automatic Zen rules, which typically necessitates specific permissions related to modifying system settings or notifications.
/com/android/server/notification/ZenModeHelper.java,setAutomaticZenRuleState,Yes, this method likely requires permissions related to modifying system settings, specifically for Zen Mode configuration.
/com/android/server/notification/ZenModeHelper.java,setAutomaticZenRuleState,Yes, this method likely requires permissions as it appears to manipulate the automatic zen mode settings, which typically involve user privacy and system settings that are restricted.
/com/android/server/notification/ZenModeHelper.java,canManageAutomaticZenRule,Yes, this method requires permissions because it checks calling permissions related to managing notifications (MANAGE_NOTIFICATIONS).
/com/android/server/notification/ZenModeHelper.java,updateDefaultZenRules,Yes, this method likely requires permissions related to modifying do not disturb (DND) settings, which involves accessing and updating Zen modes.
/com/android/server/notification/ZenModeHelper.java,getServiceInfo,Yes, this method likely requires permissions to access service information, as it interacts with `ServiceInfo` and checks for a bind permission.
/com/android/server/notification/ZenModeHelper.java,createAutomaticZenRule,Yes, this method likely requires permissions related to modifying or creating zen rules, such as managing notifications or accessing specific device settings.
/com/android/server/notification/ZenModeHelper.java,setManualZenMode,Yes, it likely requires permissions to modify Zen mode settings in the system.
/com/android/server/notification/ZenModeHelper.java,setManualZenMode,Yes, it requires permissions. This method likely alters the device's Do Not Disturb settings, which typically requires system-level permissions.
/com/android/server/notification/ZenModeHelper.java,setNotificationPolicy,Yes, this method likely requires permissions to modify notification policies, which are sensitive actions related to Do Not Disturb settings in Android.
/com/android/server/notification/ZenModeHelper.java,cleanUpZenRules,Yes, because it interacts with package management to verify installed rules, which typically requires permission to access installed applications.
/com/android/server/notification/ZenModeHelper.java,setConfigLocked,Yes, this method likely requires permissions related to modifying system settings or managing do-not-disturb modes in Android, as it involves configuration changes and user interactions.
/com/android/server/notification/ZenModeHelper.java,setZenModeSetting,Yes, because modifying Zen Mode settings typically requires `MODIFY_AUDIO_SETTINGS` permission.
/com/android/server/notification/ZenModeHelper.java,applyRestrictions,Yes, this method likely requires permissions related to modifying app operation restrictions or managing notification priorities, especially if it deals with Do Not Disturb (DND) modes.
/com/android/server/notification/ZenModeHelper.java,applyZenToRingerMode,Yes, it likely requires permissions because it interacts with audio settings, which generally require system permissions in Android.
/com/android/server/notification/ZenModeHelper.java,getPackageUid,Yes, because accessing package information may require permissions related to app information or package management.
/com/android/server/notification/ZenModeHelper.java,onSetRingerModeInternal,Yes, this method requires permissions because it involves changing the ringer mode, which typically requires audio-related permissions like `MODIFY_AUDIO_SETTINGS`.
/com/android/server/notification/ZenModeHelper.java,onSetRingerModeExternal,Yes, the method likely requires permissions because it manipulates the device's ringer mode, which typically requires the `MODIFY_AUDIO_SETTINGS` permission in Android.
/com/android/server/notification/ZenModeHelper.java,observe,Yes, it requires permissions. The method interacts with the content resolver and registers a content observer, which typically requires specific permissions to access the content.
/com/android/server/notification/ZenModeHelper.java,showZenUpgradeNotification,Yes, because it interacts with `Settings.Secure` and notifications, which typically require permissions in Android (like `WRITE_SETTINGS`, `POST_NOTIFICATIONS`).
/com/android/server/notification/CountdownConditionProvider.java,onSubscribe,Yes, the method likely requires permissions related to managing alarms, such as `SET_ALARM`, due to the use of `AlarmManager` and scheduling actions.
/com/android/server/notification/CountdownConditionProvider.java,getPendingIntent,Yes, the method likely requires permissions to send a broadcast or start an activity, depending on the intent being used.
/com/android/server/notification/NotificationComparator.java,isDefaultPhoneApp,Yes, it likely requires permissions because it interacts with the Telecom service to check the default phone app, which typically involves sensitive operations that require specific permissions (e.g., `BIND_TELECOM_CONNECTION_SERVICE`).
/com/android/server/notification/CalendarTracker.java,getCalendarsWithAccess,Yes, because it interacts with calendar data, which typically requires `READ_CALENDAR` permission.
/com/android/server/notification/CalendarTracker.java,checkEvent,Yes, the method likely requires permissions to access calendar data, specifically to read calendar events. This is inferred from the use of `getCalendarsWithAccess` and operations that interact with calendar data.
/com/android/server/notification/CalendarTracker.java,setRegistered,Yes, the method interacts with content observers and requires permissions related to accessing the content provider data.
/com/android/server/notification/ZenLog.java,traceSetConsolidatedZenPolicy,Yes, this method likely requires permissions related to modifying notification settings, specifically the "SET_ZEN_MODE" permission.
/com/android/server/notification/NotificationRecord.java,visitGrantableUri,Yes, this method requires permissions because it handles URIs, which may involve granting or accessing content that requires specific access rights.
/com/android/server/notification/ValidateNotificationPeople.java,initialize,Yes, the method "initialize" likely requires permissions because it involves operations that may access system resources (like content observers and settings), which typically require appropriate permissions in Android.
/com/android/server/notification/ValidateNotificationPeople.java,mergeContact,Yes, this method requires permissions because it interacts with contact data, which typically necessitates permissions such as `READ_CONTACTS` and potentially `WRITE_CONTACTS`.
/com/android/server/notification/ValidateNotificationPeople.java,mergePhoneNumber,Yes, because this method interacts with phone contacts data, which requires the appropriate permissions like `READ_CONTACTS`.
/com/android/server/notification/ValidateNotificationPeople.java,work,Yes, this method likely requires permissions related to user data access (e.g., for reading contacts) and accessing the internet (e.g., for handling URIs), as implied by references to contact search and URI handling.
/com/android/server/notification/ValidateNotificationPeople.java,resolvePhoneContact,Yes, it requires permissions because it accesses contact information.
/com/android/server/notification/ValidateNotificationPeople.java,resolveEmailContact,Yes, the method likely requires permissions to access email contacts from the device's contacts database.
/com/android/server/notification/ValidateNotificationPeople.java,searchContacts,Yes, this method likely requires permissions because it interacts with the contacts database, which typically requires the `READ_CONTACTS` or `WRITE_CONTACTS` permissions in Android.
/com/android/server/notification/ValidateNotificationPeople.java,searchContactsAndLookupNumbers,Yes, this method likely requires permissions because it accesses contacts and phone number data, which typically demands READ_CONTACTS permission in Android.
/com/android/server/notification/ValidateNotificationPeople.java,addWorkContacts,Yes, this method likely requires permissions to access contacts, as it interacts with contacts data (e.g., adding work contacts).
/com/android/server/notification/ValidateNotificationPeople.java,addContacts,Yes, this method requires permissions because it involves querying contacts which generally requires READ_CONTACTS permission in the Android platform.
/com/android/server/notification/NotificationManagerInternal.java,enqueueNotification,Yes, this method likely requires permissions related to posting notifications, as it involves enqueuing a notification.
/com/android/server/notification/NotificationManagerInternal.java,cancelNotification,Yes, this method likely requires permissions as it deals with canceling notifications, which typically requires notification management permissions in Android.
/com/android/server/notification/CriticalNotificationExtractor.java,process,Yes, it requires permissions to send or manage notifications, particularly critical notifications in an Android environment.
/com/android/server/notification/ConditionProviders.java,resetPackage,Yes, this method likely requires permissions to modify package settings, such as enabling or disabling applications, which typically require specific permissions in Android (e.g., `PACKAGE_USAGE_STATS` or `CHANGE_COMPONENT_ENABLED_SETTING`).
/com/android/server/notification/ConditionProviders.java,getConfig,Yes, this method likely requires permissions such as `BIND_CONDITION_PROVIDER_SERVICE` to interact with the condition provider service.
/com/android/server/notification/NotificationDelegate.java,grantInlineReplyUriPermission,Yes, because it involves granting permission to access a URI, which typically requires specific permissions associated with that URI.
/com/android/server/notification/EventConditionProvider.java,onBootComplete,Yes, the method likely requires permissions to register a BroadcastReceiver.
/com/android/server/notification/EventConditionProvider.java,rescheduleAlarm,Yes, this method likely requires permissions because it uses the `AlarmManager` to set an alarm, which typically requires permissions like `SET_ALARM` or `SCHEDULE_EXACT_ALARM`.
/com/android/server/notification/EventConditionProvider.java,setRegistered,Yes, the method requires permissions because it registers a receiver which typically requires the `RECEIVE_BOOT_COMPLETED` permission or other related permissions depending on the actions being registered.
/com/android/server/notification/ZenModeConditions.java,onConditionChanged,Yes, because the method involves managing Zen mode conditions, which typically requires permission to modify Do Not Disturb settings.
/com/android/server/notification/VisibilityExtractor.java,adminAllowsKeyguardFeature,Yes, this method likely requires permissions related to device administration or keyguard features, as it deals with checking if a feature is allowed for the specified user handle.
/com/android/server/notification/ZenModeFiltering.java,isDefaultPhoneApp,Yes, this method likely requires permission because it involves accessing the `TelecomManager` to determine if the specified package is the default phone app, which typically requires permissions related to telephony.
/com/android/server/notification/ZenModeFiltering.java,isRepeat,Yes, this method likely requires permissions because it involves checking callers and potentially accessing phone numbers, which typically necessitates permissions related to phone and contacts usage in Android.
/com/android/server/notification/ZenModeFiltering.java,checkCallers,Yes, this method likely requires permissions as it interacts with phone numbers and possibly contacts, which typically require specific permissions in Android (e.g., `READ_CONTACTS`, `CALL_PHONE`, etc.).
/com/android/server/notification/NotificationHistoryJobService.java,scheduleJob,Yes, scheduling jobs may require permissions related to background operations, such as modifying system settings or scheduling tasks, depending on the specifics of the job.
/com/android/server/camera/CameraStatsJobService.java,schedule,Yes, because scheduling jobs may require permission to access device resources or perform tasks in the background.
/com/android/server/camera/CameraServiceProxy.java,onReceive,Yes, the `onReceive` method may require permissions, as it handles actions related to user management and USB device connections, which typically require specific permissions in Android, like `android.permission.MANAGE_USERS` for user management actions and `android.permission.USB_PERMISSION` for USB interactions.
/com/android/server/camera/CameraServiceProxy.java,isCameraDisabled,Yes, this method likely requires permissions, specifically related to accessing device policies or camera states, which typically require specific permissions in Android.
/com/android/server/camera/CameraServiceProxy.java,setDeviceStateFlags,Yes, calling this method requires permission to send system events related to the camera.
/com/android/server/camera/CameraServiceProxy.java,clearDeviceStateFlags,Yes, calling this method requires the permission `CAMERA_SEND_SYSTEM_EVENTS`.
/com/android/server/camera/CameraServiceProxy.java,onStart,Yes, because it involves actions related to user management and camera services, which may require specific permissions in Android.
/com/android/server/camera/CameraServiceProxy.java,onBootPhase,Yes, the method involves registering a display window listener and interacting with system services, which generally require appropriate permissions in Android.
/com/android/server/camera/CameraServiceProxy.java,logCameraUsageEvent,Yes, because logging camera usage events typically requires permissions to access camera data.
/com/android/server/camera/CameraServiceProxy.java,getCameraServiceRawLocked,Yes, the method interacts with the camera service, which typically requires camera permissions.
/com/android/server/camera/CameraServiceProxy.java,notifyNfcService,Yes, because it interacts with the NFC service which generally requires NFC permissions in Android.
/com/android/server/location/LocationPermissions.java,asPermission,Yes, this method deals with permissions related to location access (ACCESS_COARSE_LOCATION and ACCESS_FINE_LOCATION), which require specific permissions in the Android manifest.
/com/android/server/location/LocationPermissions.java,enforceCallingOrSelfLocationPermission,Yes, requires location permissions.
/com/android/server/location/LocationPermissions.java,enforceLocationPermission,Yes, location permissions are required to enforce location access.
/com/android/server/location/LocationPermissions.java,enforceLocationPermission,Yes, the method checks for specific location permissions (`ACCESS_FINE_LOCATION` and `ACCESS_COARSE_LOCATION`) and throws a security exception if the user lacks them.
/com/android/server/location/LocationPermissions.java,enforceCallingOrSelfBypassPermission,Yes, the method enforces bypass permissions, indicating that it requires specific permissions to function correctly.
/com/android/server/location/LocationPermissions.java,enforceBypassPermission,Yes, this method requires permissions because it checks if the specified uid/pid holds the required bypass permissions and throws a security exception if not.
/com/android/server/location/LocationPermissions.java,checkCallingOrSelfLocationPermission,Yes, this method requires permissions because it checks if the caller has the required location permissions.
/com/android/server/location/LocationPermissions.java,checkLocationPermission,Yes, location permission is required to check location-based access.
/com/android/server/location/LocationPermissions.java,checkLocationPermission,Yes, location permissions are typically required to check for location-related permissions.
/com/android/server/location/LocationPermissions.java,getCallingOrSelfPermissionLevel,Yes, this method involves permission levels which typically require checking permissions based on caller's identity, hence it likely requires appropriate permissions in the context of Android security.
/com/android/server/location/LocationPermissions.java,getPermissionLevel,Yes, this method checks for location permissions (FINE and COARSE), which require appropriate permissions in the Android manifest.
/com/android/server/location/LocationShellCommand.java,onCommand,Yes, because it handles location-related commands which typically require location permissions.
/com/android/server/location/LocationShellCommand.java,handleSetTestProviderLocation,Yes, this method likely requires permissions related to accessing or modifying location data, as it deals with setting a provider's location, which typically involves location services that need permissions.
/com/android/server/location/GeocoderProxy.java,createAndRegister,Yes, because creating and registering a geocoder proxy may require location permissions to access geocoding services.
/com/android/server/location/settings/LocationSettings.java,deleteFiles,Yes, because deleting files typically requires permission to access the file system.
/com/android/server/location/settings/SettingsStore.java,deleteFile,Yes, this method likely requires permissions to manage files, such as deleting a file.
/com/android/server/location/contexthub/ContextHubServiceUtil.java,checkPermissions,Yes, ACCESS_CONTEXT_HUB permission is required to use the Context Hub.
/com/android/server/location/contexthub/IContextHubWrapper.java,handleNanoappMessage,Yes, because the method references `nanoappPermissions` and `messagePermissions`, indicating it may require specific permissions to handle the message.
/com/android/server/location/contexthub/IContextHubWrapper.java,maybeConnectToAidlGetProxy,Yes, this method likely requires permissions to access hardware services, specifically for the Context Hub AIDL service.
/com/android/server/location/contexthub/IContextHubWrapper.java,loadNanoapp,Yes, this method likely requires permissions related to accessing hardware components, specifically the Context Hub, which may involve sensitive operations.
/com/android/server/location/contexthub/ContextHubClientManager.java,broadcastMessage,Yes, the method broadcasts a message from a nanoapp and may require permissions related to accessing the hub or sending messages to clients.
/com/android/server/location/contexthub/ContextHubShellCommand.java,onCommand,Yes, requires permission to enforce calling or self permission for "ContextHubShellCommand".
/com/android/server/location/contexthub/ContextHubTransactionManager.java,createUnloadTransaction,Yes, this method likely requires permissions because it involves manipulating nanoapps, which typically involves interactions with hardware or system services that require specific permissions in Android.
/com/android/server/location/contexthub/ContextHubTransactionManager.java,createEnableTransaction,Yes, it likely requires permissions related to enabling nanoapps on a context hub, which may involve hardware access or system-level modifications.
/com/android/server/location/contexthub/ContextHubTransactionManager.java,createDisableTransaction,Yes, the method likely requires permissions to interact with hardware components (like a context hub) to disable a nanoapp.
/com/android/server/location/contexthub/ContextHubClientBroker.java,sendMessageToNanoApp,Yes, the method requires permissions because it throws a `SecurityException` if the client does not have permissions to send a message to the nanoapp.
/com/android/server/location/contexthub/ContextHubClientBroker.java,onOpChanged,Yes, it likely requires permissions because it involves checking for permissions asynchronously (`checkNanoappPermsAsync`) which typically requires certain permissions in Android.
/com/android/server/location/contexthub/ContextHubClientBroker.java,sendMessageToClient,Yes, the method requires permissions because it deals with communication between a client and a nanoapp, and involves priorities and authorization checks for message delivery, as indicated by the `nanoappPermissions` and `messagePermissions` parameters.
/com/android/server/location/contexthub/ContextHubClientBroker.java,onNanoAppLoaded,Yes, requires permissions because it involves checking nanoapp permissions and sending intents related to nanoapp events.
/com/android/server/location/contexthub/ContextHubClientBroker.java,hasPermissions,Yes, this method checks for granted permissions, which requires the app to have the necessary permissions declared in the manifest.
/com/android/server/location/contexthub/ContextHubClientBroker.java,notePermissions,Yes, this method requires permissions because it attributes permissions to the package of the client, which typically requires acknowledgment of those permissions in an Android context.
/com/android/server/location/contexthub/ContextHubClientBroker.java,updateNanoAppAuthState,Yes, the method requires permissions as indicated by the parameter `nanoappPermissions`, which specifies the Android permissions needed to communicate with the nanoapp.
/com/android/server/location/contexthub/ContextHubClientBroker.java,doSendPendingIntent,Yes, the method may require permissions as it interacts with `PendingIntent` and possibly involves wake locks or other sensitive operations that need explicit permission from the user.
/com/android/server/location/contexthub/ContextHubClientBroker.java,acquireWakeLock,Yes, it requires permission to access the wake lock feature, which typically involves using the `WAKE_LOCK` permission in Android.
/com/android/server/location/provider/PassiveLocationProvider.java,updateLocation,Yes, this method requires permissions because it involves accessing location data, which typically requires location permissions in Android.
/com/android/server/location/provider/PassiveLocationProviderManager.java,updateLocation,Yes, the method likely requires location permissions because it deals with reporting and updating location information.
/com/android/server/location/provider/LocationProviderController.java,start,Yes, location-related methods typically require permissions to access location data.
/com/android/server/location/provider/AbstractLocationProvider.java,reportLocation,Yes, the method likely requires permissions to access location services on the device.
/com/android/server/location/provider/MockLocationProvider.java,setProviderLocation,Yes, this method is related to location services, which typically require location permissions in Android.
/com/android/server/location/provider/proxy/ProxyLocationProvider.java,onReportLocation,Yes, this method likely requires permissions to access location data in Android, as it deals with a `Location` object and may involve location reporting.
/com/android/server/location/provider/proxy/ProxyLocationProvider.java,onReportLocations,Yes, the method likely requires permissions because it interacts with location data, which typically requires location permissions in Android.
/com/android/server/location/fudger/LocationFudger.java,createCoarse,Yes, the method likely requires permissions. It deals with location data which typically necessitates location permissions in Android (ACCESS_FINE_LOCATION or ACCESS_COARSE_LOCATION).
/com/android/server/location/gnss/GnssNetworkConnectivityHandler.java,onSubscriptionsChanged,Yes, this method requires permissions. It likely interacts with telephony services or subscription management, which typically require permissions like `READ_PHONE_STATE` or `ACCESS_FINE_LOCATION` in Android.
/com/android/server/location/gnss/GnssNetworkConnectivityHandler.java,isDataNetworkConnected,Yes, requires permission to access network state.
/com/android/server/location/gnss/GnssNetworkConnectivityHandler.java,onReportAGpsStatus,Yes, it likely requires permissions related to accessing location services or AGPS.
/com/android/server/location/gnss/GnssNetworkConnectivityHandler.java,runOnHandler,Yes, it likely requires permissions because it interacts with a `WakeLock`, which typically requires the `WAKE_LOCK` permission in Android.
/com/android/server/location/gnss/GnssNetworkConnectivityHandler.java,updateTrackedNetworksState,Yes, this method requires permissions. It deals with network information and capabilities, which typically require permissions like `ACCESS_NETWORK_STATE` or `ACCESS_WIFI_STATE` to access network-related features in Android.
/com/android/server/location/gnss/GnssMetrics.java,logCn0,Yes, because it likely interacts with GNSS (Global Navigation Satellite System) functionalities, which typically require location permissions in Android.
/com/android/server/location/gnss/GnssGeofenceProxy.java,addCircularHardwareGeofence,Yes, this method requires permissions because it involves adding geofences, which typically requires location permissions in Android.
/com/android/server/location/gnss/GnssGeofenceProxy.java,resumeHardwareGeofence,Yes, this method likely requires permissions related to geofencing as it interacts with geofence entries and resumes geofencing operations.
/com/android/server/location/gnss/GnssStatusProvider.java,onReportStatus,Yes, this method likely requires permissions related to location services, as it deals with GNSS (Global Navigation Satellite System) status updates, which typically require location permissions in Android.
/com/android/server/location/gnss/GnssStatusProvider.java,onReportSvStatus,Yes, it appears to require permission because it references location services (GnssStatus), which typically necessitates location permissions.
/com/android/server/location/gnss/GnssConfiguration.java,setSatelliteBlocklist,Yes, because it involves updating the GNSS HAL satellite denylist, which may require location-related permissions.
/com/android/server/location/gnss/GnssConfiguration.java,isSimAbsent,Yes, requires permissions. It accesses the TelephonyManager to get SIM state, which requires the READ_PHONE_STATE permission.
/com/android/server/location/gnss/GnssLocationProvider.java,subscriptionOrCarrierConfigChanged,Yes, the method requires permissions because it accesses the TelephonyManager and CarrierConfigManager services, which typically require permissions related to phone state or carrier configuration in Android.
/com/android/server/location/gnss/GnssLocationProvider.java,onSystemReady,Yes, the method likely requires permissions since it involves registering receivers and content observers, which are typically associated with user-sensitive data and actions that require explicit permissions in Android.
/com/android/server/location/gnss/GnssLocationProvider.java,onReceive,Yes, it likely requires permissions as it interacts with user accounts (sending user ID) and possibly system services.
/com/android/server/location/gnss/GnssLocationProvider.java,handleInitialize,Yes, likely required permissions due to network and location access.
/com/android/server/location/gnss/GnssLocationProvider.java,onReceive,Yes, the method `onReceive` likely requires permissions to receive specific broadcast intents, such as those related to telephony (e.g., `ACTION_CARRIER_CONFIG_CHANGED`, `ACTION_DEFAULT_DATA_SUBSCRIPTION_CHANGED`).
/com/android/server/location/gnss/GnssLocationProvider.java,isNfwLocationAccessAllowed,Yes, it checks for location permission.
/com/android/server/location/gnss/GnssLocationProvider.java,injectTime,Yes, this method likely requires permissions because it appears to interact with system time settings, which typically involve sensitive operations that require appropriate permissions in Android.
/com/android/server/location/gnss/GnssLocationProvider.java,handleRequestLocation,Yes, the method likely requires permissions related to location access (e.g., ACCESS_FINE_LOCATION or ACCESS_COARSE_LOCATION) because it involves requesting location updates from the LocationManager.
/com/android/server/location/gnss/GnssLocationProvider.java,handleDownloadPsdsData,Yes, the method likely requires permissions related to network access (to check data connectivity) and acquiring wake locks.
/com/android/server/location/gnss/GnssLocationProvider.java,handleEnable,Yes, because enabling the location provider typically requires location permissions in Android.
/com/android/server/location/gnss/GnssLocationProvider.java,onExtraCommand,Yes, the method may require permissions for operations related to commands such as "delete_aiding_data", "force_time_injection", and "request_power_stats", which typically involve interactions with system resources and data.
/com/android/server/location/gnss/GnssLocationProvider.java,startNavigating,Yes, the method likely requires permissions because it involves setting up location services, which typically requires permissions such as ACCESS_FINE_LOCATION or ACCESS_COARSE_LOCATION in Android.
/com/android/server/location/gnss/GnssLocationProvider.java,handleReportLocation,Yes, because it involves location reporting, which typically requires location permissions in Android.
/com/android/server/location/gnss/GnssLocationProvider.java,getCidFromCellIdentity,Yes, requires permissions. This method deals with mobile network information, which typically requires reading phone state permissions (e.g., READ_PHONE_STATE) to access cell identity data.
/com/android/server/location/gnss/GnssLocationProvider.java,setRefLocation,Yes, this method may require permissions. It deals with cellular identities and location services, which typically require permissions such as ACCESS_FINE_LOCATION or ACCESS_COARSE_LOCATION in Android.
/com/android/server/location/gnss/GnssLocationProvider.java,requestRefLocation,Yes, this method requires permissions. It accesses telephony information, which typically requires `ACCESS_FINE_LOCATION` or `ACCESS_COARSE_LOCATION` permissions in Android, as it deals with cell information and location services.
/com/android/server/location/gnss/GnssLocationProvider.java,postWithWakeLockHeld,Yes, this method requires permissions because it uses a `WakeLock`, which requires the `WAKE_LOCK` permission in Android.
/com/android/server/location/gnss/GnssLocationProvider.java,onHalRestarted,Yes, this method likely requires permissions related to GPS and network access.
/com/android/server/location/gnss/GnssLocationProvider.java,onRequestSetID,Yes, this method likely requires permissions related to accessing telephony services and possibly network identifiers.
/com/android/server/location/gnss/GnssListenerMultiplexer.java,onRegister,Yes, because it seems to check for location permissions (PERMISSION_FINE).
/com/android/server/location/gnss/GnssListenerMultiplexer.java,onLocationPermissionsChanged,Yes, this method likely requires permissions because it deals with location permissions, which are sensitive and necessitate explicit user consent in Android.
/com/android/server/location/gnss/GnssListenerMultiplexer.java,onLocationPermissionsChanged,Yes, it checks for location permissions (PERMISSION_FINE).
/com/android/server/location/gnss/GnssListenerMultiplexer.java,onLocationPermissionsChanged,Yes, this method likely requires permissions related to location access, as it handles changes to location permissions.
/com/android/server/location/gnss/GnssListenerMultiplexer.java,isActive,Yes, the method likely requires permissions because it checks if it is permitted to access certain resources (e.g., location, background activities) using methods like `isPermitted` and `isBackgroundRestrictionExempt`.
/com/android/server/location/gnss/GnssListenerMultiplexer.java,onRegister,Yes, likely requires permissions as it involves adding listeners for location updates and package changes, which typically require specific permissions in Android.
/com/android/server/location/gnss/GnssListenerMultiplexer.java,onProviderEnabledChanged,Yes, it likely requires permissions to access the provider status changes, especially when dealing with location services (like GPS).
/com/android/server/location/gnss/GnssNavigationMessageProvider.java,onReportNavigationMessage,Yes, requires fine location permission for GNSS navigation messages.
/com/android/server/location/gnss/GnssSatelliteBlocklistHelperTest.java,updateBlocklistAndNotifyContentObserver,Yes, the method likely requires permissions as it interacts with `Settings.Global` and modifies content via `ContentResolver`, which typically requires permissions for accessing and modifying system settings.
/com/android/server/location/gnss/GnssPsdsDownloader.java,doDownload,Yes, this method requires permissions to access the internet to download data from the specified URL.
/com/android/server/location/gnss/GnssManagerService.java,getGnssAntennaInfos,Yes, this method likely requires permissions to access GNSS (Global Navigation Satellite System) antenna information, which typically involves location-related data.
/com/android/server/location/gnss/GnssManagerService.java,registerGnssStatusCallback,Yes, the method requires permissions because it uses `ACCESS_FINE_LOCATION` to enforce permission checks for GNSS status changes.
/com/android/server/location/gnss/GnssManagerService.java,registerGnssNmeaCallback,Yes, requires ACCESS_FINE_LOCATION permission to register for GNSS NMEA messages.
/com/android/server/location/gnss/GnssManagerService.java,addGnssMeasurementsListener,Yes, requires ACCESS_FINE_LOCATION permission to access GNSS measurements.
/com/android/server/location/gnss/GnssManagerService.java,injectGnssMeasurementCorrections,Yes, requires permissions for location access (ACCESS_FINE_LOCATION).
/com/android/server/location/gnss/GnssManagerService.java,addGnssNavigationMessageListener,Yes, requires ACCESS_FINE_LOCATION permission because the method enforces this permission to function correctly.
/com/android/server/location/gnss/GnssManagerService.java,onCapabilitiesChanged,Yes, this method likely requires permissions because it involves sending a broadcast related to GNSS capabilities, which often requires location-related permissions in Android.
/com/android/server/location/gnss/NtpNetworkTimeHelper.java,isNetworkConnected,Yes, because accessing network information typically requires permissions such as `ACCESS_NETWORK_STATE` in Android.
/com/android/server/location/gnss/NtpNetworkTimeHelper.java,retrieveAndInjectNtpTime,Yes, the method likely requires permissions related to network access since it checks network connectivity and involves network time protocol (NTP) operations.
/com/android/server/location/gnss/NtpNetworkTimeHelper.java,blockingGetNtpTimeAndInject,Yes, this method requires permissions because it involves a blocking network operation (NTP retrieval), which typically requires internet access permission in Android.
/com/android/server/location/gnss/GnssMeasurementsProvider.java,onReportMeasurements,Yes, this method likely requires permissions because it involves GPS or location data, which typically necessitates location permissions in Android (e.g., FINE_LOCATION).
/com/android/server/location/gnss/GnssNmeaProvider.java,registerWithService,Yes, this method likely requires permissions related to accessing GNSS (Global Navigation Satellite System) data to register and start collecting NMEA messages.
/com/android/server/location/gnss/GnssNmeaProvider.java,onReportNmea,Yes, this method likely requires permissions related to fine location access due to its reference to `AppOpsManager.OP_FINE_LOCATION`, which is typically associated with obtaining location data in Android.
/com/android/server/location/gnss/GnssNmeaProvider.java,apply,Yes, the method requires permissions because it checks `OP_FINE_LOCATION`, which corresponds to location access permissions in Android.
/com/android/server/location/gnss/hal/GnssNative.java,injectLocation,Yes, requires location permissions to inject location information.
/com/android/server/location/gnss/hal/GnssNative.java,injectBestLocation,Yes, this method likely requires permissions because it deals with injecting location data, which typically requires location permissions (like ACCESS_FINE_LOCATION or ACCESS_COARSE_LOCATION) to access and manipulate location data in Android.
/com/android/server/location/gnss/hal/GnssNative.java,injectTime,Yes, this method likely requires permissions because it interacts with GNSS (Global Navigation Satellite System) hardware, which typically requires specific permissions to access location services in Android.
/com/android/server/location/gnss/hal/GnssNative.java,startNmeaMessageCollection,Yes, this method likely requires permissions related to accessing GNSS or location services, as it starts NMEA message collection, which is tied to GPS functionality.
/com/android/server/location/gnss/hal/GnssNative.java,injectMeasurementCorrections,Yes, the method interacts with the GNSS (Global Navigation Satellite System) hardware, which typically requires permissions related to location access in Android.
/com/android/server/location/gnss/hal/GnssNative.java,addGeofence,Yes, because adding geofences typically requires location permissions in Android.
/com/android/server/location/gnss/hal/GnssNative.java,setAgpsServer,Yes, it likely requires permissions related to accessing AGPS (Assisted GPS) services.
/com/android/server/location/gnss/hal/GnssNative.java,setAgpsReferenceLocationCellId,Yes, it requires permissions to access location-related functionality.
/com/android/server/location/gnss/hal/GnssNative.java,reportLocation,Yes, this method likely requires permissions related to location access, as it involves reporting location data.
/com/android/server/location/gnss/hal/GnssNative.java,reportAGpsStatus,Yes, the method involves handling AGPS (Assisted GPS) status, which typically requires location permissions to access GPS-related functionalities in an Android application.
/com/android/server/location/gnss/hal/GnssNative.java,reportLocationBatch,Yes, this method likely requires location permissions to access and report location data.
/com/android/server/location/gnss/hal/GnssNative.java,reportGeofenceTransition,Yes, location permissions are typically required for geofence-related operations in Android.
/com/android/server/location/gnss/hal/GnssNative.java,injectLocation,Yes, this method likely requires location permissions because it deals with injecting location data.
/com/android/server/location/gnss/hal/GnssNative.java,injectBestLocation,Yes, it likely requires permissions related to location access, as it involves injecting location data.
/com/android/server/location/gnss/hal/GnssNative.java,addGeofence,Yes, this method requires permissions related to location services, as it involves adding geofences which typically requires access to the device's location.
/com/android/server/location/gnss/hal/GnssNative.java,native_inject_location,Yes, this method likely requires permissions because it deals with GPS location data.
/com/android/server/location/gnss/hal/GnssNative.java,native_inject_best_location,Yes, this method likely requires permissions related to location access as it deals with latitude, longitude, altitude, and other location-related parameters.
/com/android/server/location/gnss/hal/GnssNative.java,native_add_geofence,Yes, the method likely requires permissions related to location services to add a geofence.
/com/android/server/location/gnss/hal/GnssNative.java,native_agps_set_ref_location_cellid,Yes, it likely requires permissions related to accessing cellular network information.
/com/android/server/location/geofence/GeofenceManager.java,onRegister,Yes, this method likely requires location permissions, as it's checking for "PERMISSION_FINE" and using a method related to location permissions (`hasLocationPermissions`).
/com/android/server/location/geofence/GeofenceManager.java,onLocationPermissionsChanged,Yes, because the method is related to location permissions which require the appropriate permissions in Android.
/com/android/server/location/geofence/GeofenceManager.java,onLocationPermissionsChanged,Yes, the method checks for location permissions using `hasLocationPermissions`, which implies it requires permissions related to accessing location data.
/com/android/server/location/geofence/GeofenceManager.java,onLocationChanged,Yes, the method `onLocationChanged` likely requires permissions, specifically the location permissions (ACCESS_FINE_LOCATION or ACCESS_COARSE_LOCATION), because it handles a `Location` object, which typically necessitates access to location data.
/com/android/server/location/geofence/GeofenceManager.java,addGeofence,Yes, this method requires permissions because it enforces location permissions (specifically `"PERMISSION_FINE"`) for accessing geofence functionalities.
/com/android/server/location/geofence/GeofenceManager.java,isActive,Yes, this method checks permissions related to geofence activity, hence it requires appropriate permissions to access location or geofence functionality.
/com/android/server/location/geofence/GeofenceManager.java,isActive,Yes, because the method checks user location settings, which typically requires location permissions.
/com/android/server/location/geofence/GeofenceManager.java,onRegister,Yes, this method involves adding listeners related to user changes and location permissions, which typically require specific permissions in Android (e.g., location access permissions).
/com/android/server/location/geofence/GeofenceManager.java,registerWithService,Yes, this method likely requires permissions because it interacts with location services (e.g., `requestLocationUpdates`). Accessing location data typically necessitates location-related permissions in Android.
/com/android/server/location/geofence/GeofenceManager.java,getLastLocation,Yes, because accessing the last known location typically requires location permissions (ACCESS_FINE_LOCATION or ACCESS_COARSE_LOCATION).
/com/android/server/location/geofence/GeofenceProxy.java,register,Yes, this method likely requires permissions because it involves binding to a service (`bindServiceAsUser`), which typically requires specific permissions in Android for accessing certain system services or features.
/com/android/server/location/countrydetector/LocationBasedCountryDetector.java,getCountryFromLocation,Yes, the method requires permissions because it accesses the user's location data.
/com/android/server/location/countrydetector/LocationBasedCountryDetector.java,registerListener,Yes, this method likely requires permissions because it involves registering a `LocationListener`, which typically requires location permissions in Android to access location data.
/com/android/server/location/countrydetector/LocationBasedCountryDetector.java,getLastKnownLocation,Yes, this method requires permissions because it retrieves the user's last known location, which typically requires location permissions in Android.
/com/android/server/location/countrydetector/LocationBasedCountryDetector.java,detectCountry,Yes, it requires permissions. The method deals with location providers, which typically requires location permissions (ACCESS_FINE_LOCATION, ACCESS_COARSE_LOCATION) to access location data.
/com/android/server/location/countrydetector/LocationBasedCountryDetector.java,onLocationChanged,Yes, because location updates typically require location permissions to access the device's location data.
/com/android/server/location/countrydetector/ComprehensiveCountryDetector.java,getCountry,Yes, it likely requires permissions. The method retrieves country information based on network, location, or SIM, which typically requires location and network-related permissions in Android.
/com/android/server/location/countrydetector/ComprehensiveCountryDetector.java,getNetworkBasedCountry,Yes, this method requires permissions. It accesses network-related information, which typically requires permissions such as `ACCESS_NETWORK_STATE` or `READ_PHONE_STATE` in the Android SDK.
/com/android/server/location/countrydetector/ComprehensiveCountryDetector.java,getSimBasedCountry,Yes, requires permissions to access the SIM card information.
/com/android/server/location/countrydetector/ComprehensiveCountryDetector.java,startLocationBasedDetector,Yes, the method likely requires permissions to access location information.
/com/android/server/location/countrydetector/ComprehensiveCountryDetector.java,createLocationBasedCountryDetector,Yes, the method likely requires permissions related to location access to create a location-based country detector.
/com/android/server/location/countrydetector/ComprehensiveCountryDetector.java,isAirplaneModeOff,Yes, this method requires permissions. It accesses system settings (AIRPLANE_MODE_ON), which generally requires the `android.permission.READ_SETTINGS` permission.
/com/android/server/location/countrydetector/ComprehensiveCountryDetector.java,addPhoneStateListener,Yes, this method likely requires permissions because it involves listening to phone state changes, which typically requires `READ_PHONE_STATE` permission in Android.
/com/android/server/location/injector/SystemAlarmHelper.java,setDelayedAlarmInternal,Yes, because setting alarms typically requires `SET_ALARM` permission in Android.
/com/android/server/location/injector/SystemSettingsHelper.java,isLocationEnabled,Yes, this method likely requires permissions because it checks the location mode, which typically requires access to location services on the device.
/com/android/server/location/injector/SystemSettingsHelper.java,setLocationEnabled,Yes, this method likely requires permissions because it manipulates location settings, which is typically protected by permissions in Android (e.g., ACCESS_FINE_LOCATION or ACCESS_COARSE_LOCATION).
/com/android/server/location/injector/SystemSettingsHelper.java,getCoarseLocationAccuracyM,Yes, this method likely requires permissions because it accesses user location settings, which typically involve location permissions in Android.
/com/android/server/location/injector/SystemSettingsHelper.java,register,Yes, this method likely requires permissions because it involves registering a content observer, which typically requires specific permissions to access the underlying data being observed.
/com/android/server/location/injector/SystemSettingsHelper.java,getValueForUser,Yes, it requires permissions to access user-specific settings from the content resolver.
/com/android/server/location/injector/SystemSettingsHelper.java,getValue,Yes, this method likely requires permissions because it involves accessing a value from `Settings.Global`, which typically requires specific permissions in Android, such as `android.permission.READ_SETTINGS`.
/com/android/server/location/injector/SystemSettingsHelper.java,getValue,Yes, the method interacts with `Settings.Global` which typically requires permissions to read/write system settings in Android.
/com/android/server/location/injector/AlarmHelper.java,setDelayedAlarm,Yes, it requires permissions to set an alarm.
/com/android/server/location/injector/SystemDeviceIdleHelper.java,onRegistrationStateChanged,Yes, this method requires permissions because it involves registering a `BroadcastReceiver`, which typically requires specific permissions depending on the broadcast being received (e.g., for actions related to device idle modes).
/com/android/server/location/injector/SystemDeviceIdleHelper.java,isDeviceIdle,Yes, the method `isDeviceIdle` likely requires permission to access power management features, specifically related to checking the device's idle state.
/com/android/server/location/injector/LocationPermissionsHelper.java,addListener,Yes, because it handles location permissions events, which typically require location permissions to be granted.
/com/android/server/location/injector/LocationPermissionsHelper.java,hasLocationPermissions,Yes, location access requires permissions in Android.
/com/android/server/location/injector/LocationPermissionsHelper.java,hasPermission,Yes, it requires permissions as it checks if a specific permission is held by the caller.
/com/android/server/location/injector/Injector.java,getLocationSettings,Yes, because it likely involves accessing location data, which requires location permissions.
/com/android/server/location/injector/SettingsHelper.java,isLocationEnabled,Yes, because accessing location settings may require location-related permissions in Android.
/com/android/server/location/injector/AppOpsHelper.java,noteOp,Yes, it may throw a security exception, indicating it requires permissions to perform the operation.
/com/android/server/location/injector/SystemUserInfoHelper.java,getActivityManager,Yes, because accessing the ActivityManager typically requires permissions such as `android.permission.GET_TASKS` or others depending on the methods invoked.
/com/android/server/location/injector/SystemUserInfoHelper.java,getUserManager,Yes, the method likely requires permissions related to user management in Android, as it interacts with the `UserManager` class and retrieves the system service, which typically needs specific permissions.
/com/android/server/location/injector/SystemUserInfoHelper.java,getRunningUserIds,Yes, this method requires permissions. It interacts with the ActivityManager, which typically requires specific permissions to access running user IDs in Android.
/com/android/server/location/injector/SystemPackageResetHelper.java,onRegister,Yes, this method requires permissions. It registers a broadcast receiver which may require permissions to receive specific actions (e.g., ACTION_PACKAGE_CHANGED, ACTION_PACKAGE_REMOVED, etc.).
/com/android/server/location/injector/SystemPackageResetHelper.java,onReceive,Yes, this method likely requires permissions because it handles package changes, which could involve accessing sensitive data or system-level operations that require user consent.
/com/android/server/location/injector/SystemLocationPermissionsHelper.java,onSystemReady,Yes, the method involves notifying location permissions changes, which typically requires location permissions.
/com/android/server/location/injector/SystemLocationPermissionsHelper.java,hasPermission,Yes, this method checks permissions, which requires relevant permissions to be defined in the application's manifest.
/com/android/server/location/injector/SystemAppOpsHelper.java,onSystemReady,Yes, because it interacts with `AppOpsManager`, which requires permissions for location services.
/com/android/server/location/injector/SystemAppOpsHelper.java,startOpNoThrow,Yes, this method likely requires permissions because it involves checking app operations (using `AppOpsManager`), which typically requires specific permissions related to app operations or user context.
/com/android/server/location/injector/SystemAppOpsHelper.java,noteOp,Yes, the method interacts with `AppOpsManager`, which typically requires permissions related to app operations control in Android.
/com/android/server/location/injector/SystemAppOpsHelper.java,noteOpNoThrow,Yes, because the method interacts with app operations using `AppOpsManager`, which may require specific permissions to access app-specific operations or to check the status of operations for different apps.
/com/android/server/location/injector/LocationUsageLogger.java,bucketizeProvider,Yes, because it checks for location providers which require location permissions.
/com/android/server/location/injector/SystemEmergencyHelper.java,onSystemReady,Yes, this method likely requires permissions because it interacts with the `TelephonyManager`, which typically requires permissions related to telephony, such as `READ_PHONE_STATE` or `CALL_PHONE`.
/com/android/server/location/injector/SystemEmergencyHelper.java,onReceive,Yes, it likely requires permissions because it interacts with the TelephonyManager to check if a number is an emergency number, which typically requires the `CALL_PHONE` or `READ_PHONE_STATE` permissions in Android.
/com/android/server/location/injector/SystemEmergencyHelper.java,isInEmergency,Yes, this method likely requires permissions because it interacts with telephony services to determine emergency call status, which typically requires permissions related to phone state or telephony access.
/com/android/server/location/injector/SystemEmergencyHelper.java,onCallStateChanged,Yes, this method likely requires permissions because it deals with call state changes, which typically involves reading phone state information on Android.
/com/android/server/location/injector/SystemAppForegroundHelper.java,isAppForeground,Yes, the method likely requires permissions related to querying the app's foreground status, which typically involves accessing the Activity Manager.
/com/android/server/statusbar/SessionMonitor.java,registerSessionListener,Yes, because it likely needs permissions related to accessing or modifying session types.
/com/android/server/statusbar/SessionMonitor.java,onSessionStarted,Yes, special permission is required to start and end a session depending on the session type.
/com/android/server/statusbar/SessionMonitor.java,onSessionEnded,Yes, the method requires special permission to start and end a session, depending on the session type.
/com/android/server/statusbar/SessionMonitor.java,requireListenerPermissions,Yes, requires the `MANAGE_BIOMETRIC` permission to enforce security checks related to session flags.
/com/android/server/statusbar/SessionMonitor.java,requireSetterPermissions,Yes, because it involves checking permissions related to keyguard and status bar services, which require appropriate permissions in the Android manifest.
/com/android/server/statusbar/StatusBarManagerInternal.java,setIcon,Yes, this method likely requires permission to modify status bar icons.
/com/android/server/statusbar/StatusBarManagerInternal.java,setIconVisibility,Yes, because it interacts with the StatusBarManager, which typically requires specific permissions for modifying the status bar.
/com/android/server/slice/SliceManagerService.java,pinSlice,Yes, the method involves enforcing access and verifying caller permissions, which typically requires permissions to access certain resources or features in Android.
/com/android/server/slice/SliceManagerService.java,unpinSlice,Yes, the method likely requires permissions because it involves verifying the caller and enforcing access to specific resources based on the `pkg` and `uri` parameters.
/com/android/server/slice/SliceManagerService.java,hasSliceAccess,Yes, it likely requires permissions to verify the calling context and access user handles.
/com/android/server/slice/SliceManagerService.java,grantSlicePermission,Yes, this method likely requires permissions because it involves granting access to a specified URI to another package, which typically necessitates permission checks to ensure the requesting package is authorized to perform the action.
/com/android/server/slice/SliceManagerService.java,revokeSlicePermission,Yes, the method likely requires permissions to verify the caller and enforce ownership over the URI.
/com/android/server/slice/SliceManagerService.java,checkSlicePermission,Yes, this method likely requires permissions as it involves checking permissions for a given URI and calling package, which typically entails ensuring that the requesting application has the necessary permissions to access that resource.
/com/android/server/slice/SliceManagerService.java,checkSlicePermissionInternal,Yes, this method likely requires permissions related to accessing and managing content URIs, as it checks for permissions using methods like `hasPermission` and `checkPermission`, which imply that permissions are being enforced on the provided URIs and package names.
/com/android/server/slice/SliceManagerService.java,grantPermissionFromUser,Yes, the method requires permissions because it enforces the "MANAGE_SLICE_PERMISSIONS" permission to grant access to slices.
/com/android/server/slice/SliceManagerService.java,getBackupPayload,Yes, the method requires permissions because it checks the calling UID against the system UID and throws a `SecurityException` if the caller is not the system. Additionally, it involves user-specific data, indicating a need for user-level permissions.
/com/android/server/slice/SliceManagerService.java,createPinnedSlice,Yes, this method likely requires permissions to interact with resources identified by the `Uri` parameter, especially if it accesses external data or sensitive information.
/com/android/server/slice/SliceManagerService.java,enforceCrossUser,Yes, the method requires permission because it checks for `INTERACT_ACROSS_USERS_FULL` permission to enforce user interactions across different users.
/com/android/server/slice/SliceManagerService.java,enforceAccess,Yes, this method seems to require permissions as it checks access to a URI and may throw a SecurityException if access is not granted.
/com/android/server/slice/SliceManagerService.java,register,Yes, it likely requires permissions because it involves interacting with system services (e.g., RoleManager) and adding listeners, which typically requires specific permissions in Android.
/com/android/server/slice/SliceManagerService.java,getAllPackagesGranted,Yes, this method likely requires permissions because it involves querying packages and accessing content providers, which typically necessitates specific permissions to safeguard user data and system integrity.
/com/android/server/slice/SliceShellCommand.java,onCommand,Yes, this method seems to be related to command handling, specifically regarding permissions (as indicated by the "get-permissions" case), which typically requires permissions in Android.
/com/android/server/slice/SliceShellCommand.java,runGetPermissions,Yes, it requires permissions because it interacts with package management and permissions data, which typically requires specific permissions in Android.
/com/android/server/slice/SliceFullAccessList.java,grantFullAccess,Yes, it requires permissions as it deals with modifying access to packages for users, which typically requires system-level permissions.
/com/android/server/slice/SlicePermissionManager.java,removePkg,Yes, this method likely requires permissions to remove a package, affecting user and/or system resources.
/com/android/server/slice/SlicePermissionManager.java,hasPermission,Yes, it likely requires permissions as it checks for access to a specific URI and user ID, which commonly involves permission checks in Android.
/com/android/server/slice/SlicePermissionManager.java,handleRemove,Yes, because it involves file deletion which typically requires permissions.
/com/android/server/slice/SliceClientPermissions.java,hasPermission,Yes, this method likely requires permissions to access specific content or authority, as indicated by its interaction with `Uri` and the checking of permissions related to `SliceAuthority`.
/com/android/server/smartspace/SmartspaceManagerService.java,enforceCallingPermissionForManagement,Yes, this method likely requires permissions because it involves enforcing a calling permission related to management operations (MANAGE_SMARTSPACE).
/com/android/server/smartspace/SmartspaceManagerService.java,runForUserLocked,Yes, this method requires permissions because it checks for the `MANAGE_SMARTSPACE` permission before executing its main logic.
/com/android/server/health/HealthServiceWrapperHidl.java,getProperty,Yes, this method likely requires permissions related to accessing battery properties, which typically require permissions like `android.permission.BATTERY_STATS` in Android.
/com/android/server/health/HealthServiceWrapperHidl.java,getHealthInfo,Yes, the method likely requires permissions since it interacts with health-related information, which typically necessitates user consent and specific permissions in Android (e.g., `android.permission.BIND_HEALTH_SERVICE`).
/com/android/server/resources/ResourcesManagerService.java,dumpResources,Yes, this method requires permissions. It contains conditions that restrict access to specific user IDs (ROOT_UID and SHELL_UID), indicating that it is likely meant for operations that require elevated privileges or special permissions.
/com/android/server/resources/ResourcesManagerService.java,handleShellCommand,Yes, this method likely requires permissions to execute shell commands, which can involve system-level access and interaction with file descriptors.
/com/android/server/om/IdmapDaemon.java,createIdmap,Yes, it likely requires permissions related to file access or system resource access, given that it deals with paths and potentially system overlays.
/com/android/server/om/OverlayManagerServiceImpl.java,updateOverlaysForTarget,Yes, this method likely requires permissions because it deals with updating overlays, which often involves access to system-level settings or modifications that require specific permissions in Android.
/com/android/server/om/OverlayManagerServiceImpl.java,setEnabled,Yes, this method likely requires permissions because it deals with enabling or modifying overlays for specific user IDs, which typically involves sensitive changes in system settings.
/com/android/server/om/OverlayManagerServiceImpl.java,setPriority,Yes, it likely requires permissions because it involves modifying overlay settings, which typically requires system-level permissions in Android.
/com/android/server/om/OverlayManagerServiceImpl.java,getEnabledOverlayPaths,Yes, this method may require permissions to access overlay paths and user-specific data.
/com/android/server/om/PackageManagerHelper.java,enforcePermission,Yes, the method checks for permissions and throws a SecurityException if the caller lacks the required permission.
/com/android/server/om/IdmapManager.java,createFabricatedOverlay,Yes, because it involves persisting data to disk, which typically requires storage permissions.
/com/android/server/om/OverlayManagerService.java,onReceive,Yes, the method likely requires permissions related to user management, such as "MANAGE_USERS" or similar, because it handles actions related to users being added or removed.
/com/android/server/om/OverlayManagerService.java,setEnabled,Yes, because this method appears to interact with system-level functionalities, potentially requiring permissions related to modifying app states or user settings.
/com/android/server/om/OverlayManagerService.java,setPriority,Yes, this method likely requires permissions because it involves setting priorities and managing overlays, which typically requires certain system-level permissions in Android to ensure proper access and security for inter-process communications and resource management.
/com/android/server/om/OverlayManagerService.java,setHighestPriority,Yes, because it involves user management and package manipulation, which typically requires permissions like `MANAGE_USERS` or `PACKAGE_USAGE_STATS` in Android.
/com/android/server/om/OverlayManagerService.java,setLowestPriority,Yes, this method likely requires permissions because it manipulates user-dependent information (using `userIdArg` and `packageName`) which may involve access controls or privileges specific to the package or user.
/com/android/server/om/OverlayManagerService.java,getDefaultOverlayPackages,Yes, it requires permissions because it enforces calling or self permission for modifying theme overlays.
/com/android/server/om/OverlayManagerService.java,dump,Yes, this method requires permissions because it involves dumping information which typically relates to debugging or performing system-level tasks that are sensitive.
/com/android/server/om/OverlayManagerService.java,handleIncomingUser,Yes, the method requires permissions because it checks for the INTERACT_ACROSS_USERS_FULL permission to interact with users.
/com/android/server/om/OverlayManagerService.java,getPackageStateForUser,Yes, this method likely requires permissions to access package information for a specific user, as it involves querying package availability and state that generally requires certain permissions in the Android framework.
/com/android/server/om/OverlayManagerService.java,enforcePermission,Yes, because the method calls `enforceCallingOrSelfPermission`, which enforces a specific permission that needs to be granted to the calling application.
/com/android/server/om/OverlayManagerService.java,getPackagesForUid,Yes, this method requires permissions because it accesses information related to installed packages for a specific UID, which typically requires system-level permissions in Android.
/com/android/server/om/OverlayManagerService.java,broadcastActionOverlayChanged,Yes, the method likely requires permissions to broadcast intents, especially to sensitive actions like `ACTION_OVERLAY_CHANGED`, which may require system-level permissions.
/com/android/server/om/OverlayManagerShellCommand.java,runEnableDisable,Yes, this method likely requires permissions because it involves enabling or disabling overlay features which typically requires the `SYSTEM_ALERT_WINDOW` permission or similar permissions in Android to alter system-level settings.
/com/android/server/om/OverlayManagerShellCommand.java,runFabricate,Yes, the method requires permissions because it checks if the calling UID is not the root UID, indicating it may require root permissions to execute certain operations (e.g., fabricating overlays).
/com/android/server/om/OverlayManagerShellCommand.java,runSetPriority,Yes, this method likely requires permissions related to modifying process priorities, which typically involve app-level security restrictions in Android.
/com/android/server/hdmi/HdmiCecLocalDeviceSource.java,sendStandby,Yes, this method likely requires permissions because it involves sending commands related to HDMI CEC (Consumer Electronics Control), which can affect device states and interactions that may require user consent.
/com/android/server/hdmi/HdmiCecLocalDeviceSource.java,toggleAndFollowTvPower,Yes, because it likely interacts with the TV's power status, which generally requires system-level permissions.
/com/android/server/hdmi/PowerManagerWrapper.java,newWakeLock,Yes, the method manages power states and requires permissions to prevent unauthorized usage and control over device power.
/com/android/server/hdmi/AudioManagerWrapper.java,adjustStreamVolume,Yes, it requires permissions because adjusting audio stream volume typically requires specific permissions in the Android manifest, such as `MODIFY_AUDIO_SETTINGS`.
/com/android/server/hdmi/AudioManagerWrapper.java,setStreamVolume,Yes, changing the audio stream volume requires the `MODIFY_AUDIO_SETTINGS` permission.
/com/android/server/hdmi/AudioManagerWrapper.java,setStreamMute,Yes, it requires permissions because it involves muting audio streams, which typically requires audio-related permissions in Android.
/com/android/server/hdmi/AudioManagerWrapper.java,setWiredDeviceConnectionState,Yes, because managing wired device connections typically requires permissions to access audio settings or manage audio outputs.
/com/android/server/hdmi/DefaultAudioManagerWrapper.java,adjustStreamVolume,Yes, this method likely requires permissions to adjust audio settings on a device.
/com/android/server/hdmi/DefaultAudioManagerWrapper.java,setStreamVolume,Yes, requires permission to modify audio settings.
/com/android/server/hdmi/DefaultAudioManagerWrapper.java,setStreamMute,Yes, because managing audio streams may require permissions related to audio settings.
/com/android/server/hdmi/DefaultAudioManagerWrapper.java,setWiredDeviceConnectionState,Yes, it likely requires permissions related to managing device connections.
/com/android/server/hdmi/HdmiCecPowerStatusController.java,setPowerStatus,Yes, this method likely requires permissions as it appears to control a power status, which generally involves system-level operations in Android that demand specific permissions.
/com/android/server/hdmi/SendKeyAction.java,sendKeyDown,Yes, it likely requires permissions since it deals with sending key events and interacting with devices on HDMI (such as audio systems), which may involve sensitive hardware control.
/com/android/server/hdmi/HdmiCecConfig.java,storeSystemProperty,Yes, writing to a system property typically requires permissions due to potential security implications.
/com/android/server/hdmi/HdmiCecConfig.java,storeGlobalSetting,Yes, this method likely requires permissions to write global settings, which can affect the system or user preferences.
/com/android/server/hdmi/DelayedMessageBuffer.java,processActiveSource,Yes, because it interacts with the TV input framework, which typically requires permissions related to accessing TV inputs.
/com/android/server/hdmi/DeviceSelectActionFromPlayback.java,start,Yes, this method likely requires permissions because it interacts with HDMI devices, which typically involves controlling or querying their power status. Such actions generally require appropriate permissions related to device control in the Android SDK.
/com/android/server/hdmi/HdmiCecController.java,connectToHal,Yes, it requires permissions because it interacts with system services (like HDMI) that typically require specific permissions in Android.
/com/android/server/hdmi/HdmiCecController.java,nativeSendCecCommand,Yes, this method likely requires permissions because it involves sending CEC (Consumer Electronics Control) commands, which typically requires specific hardware-related permissions to access and control HDMI devices.
/com/android/server/hdmi/HdmiCecController.java,nativeSendCecCommand,Yes, the method likely requires permissions because it interacts with hardware features (HDMI CEC), which typically necessitates specific permissions to manage device interactions.
/com/android/server/hdmi/DevicePowerStatusAction.java,start,Yes, because it interacts with HDMI devices and potentially requires permissions related to device control.
/com/android/server/hdmi/HdmiCecLocalDeviceAudioSystem.java,getSystemAudioDeviceInfo,Yes, it requires permissions related to audio settings to access system audio device information.
/com/android/server/hdmi/HdmiCecLocalDeviceAudioSystem.java,setSystemAudioMode,Yes, it likely requires permissions related to audio settings and management.
/com/android/server/hdmi/HdmiCecLocalDeviceAudioSystem.java,switchToTvInput,Yes, it likely requires permissions because it involves switching to a TV input, which typically requires access to resources or activities that may be protected by permissions in Android.
/com/android/server/hdmi/HdmiCecLocalDeviceTv.java,deviceSelect,Yes, this method likely requires permissions to access and control HDMI devices on the TV, which involves interfacing with connected hardware.
/com/android/server/hdmi/HdmiCecLocalDeviceTv.java,handleRecordTvScreen,Yes, this method likely requires permissions related to recording functionalities, as it involves recording actions and accessing recorder sources.
/com/android/server/hdmi/HdmiCecLocalDeviceTv.java,startOneTouchRecord,Yes, this method likely requires permissions related to recording or audio/video capture, as it appears to initiate a recording process.
/com/android/server/hdmi/HdmiCecLocalDevice.java,handleUnmappedCecKeycode,Yes, it requires permissions because it interacts with audio settings (adjusts volume), which typically requires `MODIFY_AUDIO_SETTINGS` permission.
/com/android/server/hdmi/HdmiCecLocalDevice.java,injectKeyEvent,Yes, this method likely requires permissions because it injects key events, which typically requires system-level permissions to prevent misuse and maintain security.
/com/android/server/hdmi/HdmiCecLocalDevicePlayback.java,startSetMenuLanguageActivity,Yes, the method potentially requires permissions to start another activity. The use of `startActivityAsUser` indicates it may need permissions related to starting activities or accessing user contexts.
/com/android/server/hdmi/HdmiCecLocalDevicePlayback.java,acquire,Yes, this method likely requires permissions as it deals with acquiring a wake lock, which affects device power management and may require specific permissions in the Android manifest (e.g., `WAKE_LOCK`).
/com/android/server/tare/TareShellCommand.java,runClearVip,Yes, it checks for permissions using the `checkPermission` method.
/com/android/server/tare/TareShellCommand.java,runSetVip,Yes, it requires permissions because it calls `checkPermission`.
/com/android/server/tare/PowerSaveModeModifier.java,startTracking,Yes, this method requires permissions as it involves registering a receiver for system events (ACTION_POWER_SAVE_MODE_CHANGED), which typically requires declaring the appropriate permissions in the Android manifest.
/com/android/server/tare/EconomicPolicy.java,getSettingsGlobalString,Yes, this method requires permissions. It accesses global settings which require appropriate permissions related to accessing system settings.
/com/android/server/tare/ChargingModifier.java,startTracking,Yes, because it registers a broadcast receiver related to battery charging and discharging actions, which requires appropriate permissions in the Android manifest.
/com/android/server/tare/DeviceIdleModifier.java,startTracking,Yes, this method likely requires permissions because it involves tracking device idle states, which may require access to system services that need proper permissions in Android.
/com/android/server/tare/DeviceIdleModifier.java,onReceive,Yes, this method likely requires permissions related to managing device power state, such as `android.permission.WAKE_LOCK` or `android.permission.DEVICE_POWER`. These permissions are needed to listen for and control power state changes.
/com/android/server/devicepolicy/TransferOwnershipMetadataManager.java,loadMetadataFile,Yes, it likely requires permissions since it involves file I/O operations, specifically accessing or loading a metadata file, which typically necessitates storage permissions in Android.
/com/android/server/devicepolicy/TransferOwnershipMetadataManager.java,metadataFileExists,Yes, the method likely requires permissions to access the file system, specifically to check if a metadata file exists.
/com/android/server/devicepolicy/ActiveAdmin.java,getUid,Yes, it likely requires permissions to access the application info or UID.
/com/android/server/devicepolicy/ActiveAdmin.java,addSyntheticRestrictions,Yes, this method likely requires permissions related to user management and device restrictions (e.g., camera access, date/time configuration) as it interacts with `UserManager`.
/com/android/server/devicepolicy/RemoteBugreportManager.java,buildNotification,Yes, this method likely requires permissions because it appears to create and manage notifications related to bug reports, which may involve accessing user data or system settings.
/com/android/server/devicepolicy/RemoteBugreportManager.java,requestBugreport,Yes, this method likely requires permissions because it initiates bugreport collection, which typically involves accessing system-level resources or services that are protected.
/com/android/server/devicepolicy/RemoteBugreportManager.java,registerRemoteBugreportReceivers,Yes, it likely requires permissions to register receivers for actions related to remote bug reporting.
/com/android/server/devicepolicy/RemoteBugreportManager.java,shareBugreportWithDeviceOwnerIfExists,Yes, this method likely requires permissions related to sharing bug reports with device owners, which might include device administration permissions.
/com/android/server/devicepolicy/DevicePolicyManagerServiceShellCommand.java,onCommand,Yes, because the method appears to handle commands that may alter device settings or manage device administration, which typically require specific permissions in Android.
/com/android/server/devicepolicy/DevicePolicyManagerServiceShellCommand.java,runSetActiveAdmin,Yes, this method likely requires permission to set an active admin, as it involves interacting with device administration features.
/com/android/server/devicepolicy/DevicePolicyManagerServiceShellCommand.java,runSetDeviceOwner,Yes, this method requires permissions because it involves setting a device owner and modifying active admin settings which fall under device administration privileges in Android.
/com/android/server/devicepolicy/DevicePolicyManagerServiceShellCommand.java,runRemoveActiveAdmin,Yes, this method likely requires permissions to remove an active admin component in the Android system, as it deals with administrative actions related to device management.
/com/android/server/devicepolicy/DevicePolicyManagerServiceShellCommand.java,runSetProfileOwner,Yes, this method likely requires permissions to set the profile owner and manage active admin status for a user.
/com/android/server/devicepolicy/DevicePolicyManagerServiceShellCommand.java,runMarkProfileOwnerOnOrganizationOwnedDevice,Yes, this method likely requires permissions related to managing device owner settings, which typically involves restricting access to certain functionality and requires appropriate permissions for security reasons.
/com/android/server/devicepolicy/OverlayPackagesProvider.java,getLaunchableApps,Yes, the method `getLaunchableApps` may require permissions such as `QUERY_ALL_PACKAGES` to access app information and `PACKAGE_USAGE_STATS` for querying usage stats, depending on its implementation in relation to installed applications.
/com/android/server/devicepolicy/PolicyEnforcerCallbacks.java,setAutoTimezoneEnabled,Yes, it likely requires permissions because it interacts with `Settings.Global`, which typically requires permissions to modify system settings (like changing time zone settings).
/com/android/server/devicepolicy/PolicyEnforcerCallbacks.java,setUserControlDisabledPackages,Yes, because it likely involves modifying package visibility or permissions which requires certain system-level permissions.
/com/android/server/devicepolicy/PolicyEnforcerCallbacks.java,addPersistentPreferredActivity,Yes, it requires permissions. The method interacts with the package manager and user-specific data, which typically requires certain permissions in Android (like MANAGE_ACTIVITY_STACK).
/com/android/server/devicepolicy/PolicyEnforcerCallbacks.java,setUninstallBlocked,Yes, this method likely requires permissions because it manages device policies, which typically involves operations that affect user permissions and device management settings.
/com/android/server/devicepolicy/PolicyEnforcerCallbacks.java,setUserRestriction,Yes, this method likely requires permissions because it manipulates user restrictions, which typically requires specific permissions related to user management in Android.
/com/android/server/devicepolicy/PolicyEnforcerCallbacks.java,setScreenCaptureDisabled,Yes, because it deals with device policy settings that likely require permissions related to device management.
/com/android/server/devicepolicy/PolicyEnforcerCallbacks.java,setPersonalAppsSuspended,Yes, this method likely requires permissions because it deals with suspending personal apps, which is sensitive functionality that typically requires special permissions in Android.
/com/android/server/devicepolicy/PolicyEnforcerCallbacks.java,suspendPersonalAppsInPackageManager,Yes, it likely requires permissions related to managing app suspension (e.g., PACKAGE_USAGE_STATS or DEVICE_ADMIN), as it interacts with a PackageManager and involves user-specific operations.
/com/android/server/devicepolicy/UserUnlockedBlockingReceiver.java,onReceive,Yes, this method may require permissions because it relates to user actions and potentially sensitive information (like user unlock and user ID), which typically requires specific permissions in Android.
/com/android/server/devicepolicy/CertificateMonitor.java,installCaCert,Yes, this method likely requires permissions because installing a CA certificate typically involves sensitive operations that can affect device security, thus it usually needs specific privileges to prevent unauthorized actions.
/com/android/server/devicepolicy/CertificateMonitor.java,uninstallCaCerts,Yes, it requires permissions related to managing certificates (uninstalling CA certificates) in the device's keychain.
/com/android/server/devicepolicy/CertificateMonitor.java,getInstalledCaCertificates,Yes, it requires permissions because managing and accessing installed CA certificates generally involves sensitive operations that require appropriate security permissions in Android.
/com/android/server/devicepolicy/CertificateMonitor.java,updateInstalledCertificates,Yes, it likely requires permissions because it interacts with user-level installed certificates and notifications, which typically require specific permissions to manage security-sensitive tasks in Android.
/com/android/server/devicepolicy/CertificateMonitor.java,buildNotification,Yes, this method likely requires permissions because it interacts with user handles and may be creating notifications. Notifications related to security settings often require specific permissions (like `BIND_NOTIFICATION_LISTENER_SERVICE`). Additionally, manipulating user contexts and system notifications usually necessitates elevated privileges.
/com/android/server/devicepolicy/NetworkLogger.java,stopNetworkLogging,Yes, this method may require permissions related to network logging and connectivity status.
/com/android/server/devicepolicy/PolicyVersionUpgrader.java,upgradePolicy,Yes, this method requires permissions as it deals with user data and system policies, which typically require specific permissions to access or modify in Android.
/com/android/server/devicepolicy/PolicyVersionUpgrader.java,upgradeSensorPermissionsAccess,Yes, this method requires permissions because it controls sensor-related permission grants, which typically involves sensitive data and operations that require explicit user consent.
/com/android/server/devicepolicy/PolicyVersionUpgrader.java,upgradeProtectedPackages,Yes, because it handles device owner protected packages and likely requires permissions related to device administration and management.
/com/android/server/devicepolicy/PolicyVersionUpgrader.java,saveSuspendedPackages,Yes, this method likely requires permissions. It interacts with user data and administrative functionalities, which typically necessitate appropriate permissions in the Android SDK.
/com/android/server/devicepolicy/DevicePolicyEngine.java,setLocalPolicy,Yes, this method likely requires permissions because it deals with enforcing policies and managing device administration, which typically involves sensitive configurations that require specific permissions in Android.
/com/android/server/devicepolicy/DevicePolicyEngine.java,setNonCoexistableLocalPolicy,Yes, this method likely requires permissions because it deals with setting and enforcing device policies, which typically involves device administration permissions in Android.
/com/android/server/devicepolicy/DevicePolicyEngine.java,setLocalPolicy,Yes, this method likely requires permissions to enforce policies, as it interacts with user management and policy settings, which typically need admin or specific permissions.
/com/android/server/devicepolicy/DevicePolicyEngine.java,removeLocalPolicy,Yes, this method likely requires permissions because it deals with policies and administration that typically require specific privileges to alter or access on a device and affects local policy settings for users.
/com/android/server/devicepolicy/DevicePolicyEngine.java,removeGlobalPolicy,Yes, the method likely requires permissions because it involves modifying global policy settings related to a device admin, which typically necessitates specific permissions in Android.
/com/android/server/devicepolicy/DevicePolicyEngine.java,applyGlobalPolicyOnUsersWithLocalPoliciesLocked,Yes, it likely requires permissions because it enforces global policies that can affect user settings and behaviors, potentially requiring administrative privileges.
/com/android/server/devicepolicy/DevicePolicyEngine.java,getLocalPolicySetByAdmin,Yes, because it likely involves accessing admin policies which requires special permissions in Android.
/com/android/server/devicepolicy/DevicePolicyEngine.java,sendDevicePolicyChangedToSystem,Yes, this method likely requires permissions because it involves sending broadcasts related to device policy changes, which typically necessitates specific permissions related to device management and policy administration in Android.
/com/android/server/devicepolicy/DevicePolicyEngine.java,sendPolicyResultToAdmin,Yes, this method likely requires permissions because it interacts with device policies and sends broadcasts, which typically require specific permissions in Android for security reasons.
/com/android/server/devicepolicy/DevicePolicyEngine.java,maybeSendIntentToAdminReceivers,Yes, because the method checks for the `BIND_DEVICE_ADMIN` permission which is required for certain actions related to device administration.
/com/android/server/devicepolicy/DevicePolicyEngine.java,updateDeviceAdminsServicesForUser,Yes, it requires permissions because it deals with device administration services, which generally require the appropriate permissions to start/stop.
/com/android/server/devicepolicy/DevicePolicyEngine.java,handlePackageChanged,Yes, this method likely requires permissions because it handles package updates and interactions with device admin policies, which typically require specific permissions to modify or access.
/com/android/server/devicepolicy/DevicePolicyEngine.java,removePoliciesForAdmin,Yes, this method requires permissions because it handles policies related to device administration, which typically necessitates having specific permissions to modify or enforce device policies.
/com/android/server/devicepolicy/DevicePolicyEngine.java,updateDeviceAdminServiceOnPolicyAddLocked,Yes, this method likely requires permissions because it involves binding to an admin service, which typically requires Device Admin permissions in Android.
/com/android/server/devicepolicy/DevicePolicyEngine.java,updateDeviceAdminServiceOnPolicyRemoveLocked,Yes, this method likely requires permissions related to device administration, as it involves stopping a service for an admin and checking admin policies.
/com/android/server/devicepolicy/DevicePolicyEngine.java,writeToFileLocked,Yes, writing to a file typically requires storage permissions in Android.
/com/android/server/devicepolicy/EnforcingAdmin.java,createEnforcingAdmin,Yes, because it likely involves managing device administration which typically requires specific permissions in Android.
/com/android/server/devicepolicy/EnforcingAdmin.java,createEnterpriseEnforcingAdmin,Yes, this method likely requires permissions because it deals with `ActiveAdmin` operations which typically involve administrative privileges in the context of an enterprise or device policy management.
/com/android/server/devicepolicy/EnforcingAdmin.java,createDeviceAdminEnforcingAdmin,Yes, the method involves device administration which requires the `BIND_DEVICE_ADMIN` permission.
/com/android/server/devicepolicy/EnforcingAdmin.java,getParcelableAdmin,Yes, this method likely requires permissions because it interacts with device admin and authority roles, which typically require explicit permissions to enforce security and restrictions on the device.
/com/android/server/devicepolicy/UpdateInstaller.java,isBatteryLevelSufficient,Yes, this method requires permissions to access battery status information.
/com/android/server/devicepolicy/UpdateInstaller.java,copyUpdateFileToDataOtaPackageDir,Yes, the method likely requires permission to write to the file system, specifically to create and copy files, which is subject to storage permissions in Android.
/com/android/server/devicepolicy/UpdateInstaller.java,createNewFileWithPermissions,Yes, because the method creates a new file and sets permissions, which typically requires file system permissions.
/com/android/server/devicepolicy/UpdateInstaller.java,copyToFile,Yes, because writing to a file generally requires `WRITE_EXTERNAL_STORAGE` permission in Android.
/com/android/server/devicepolicy/DeviceManagementResourcesProvider.java,writeToFileLocked,Yes, this method likely requires permissions because it involves writing to a file system, which typically requires storage permissions in Android.
/com/android/server/devicepolicy/OwnersData.java,writeDeviceOwner,Yes, because writing to device owner settings typically requires specific system permissions related to device management.
/com/android/server/devicepolicy/OwnersData.java,writeProfileOwner,Yes, it likely requires permission as it involves writing to a profile owner file, which typically necessitates specific access controls in Android for user data security.
/com/android/server/devicepolicy/OwnersData.java,getDeviceOwnerFile,Yes, this method may require permissions because it accesses device-specific data related to the device owner, which typically requires elevated privileges or specific permissions in Android.
/com/android/server/devicepolicy/OwnersData.java,writeToFileLocked,Yes, the method likely requires permissions to write to files, as it manipulates file operations (e.g., writing, deleting existing files).
/com/android/server/devicepolicy/DevicePolicyCacheImpl.java,setPermissionPolicy,Yes, this method likely requires permissions because it updates permission policies, which typically requires authorization to modify user-specific settings.
/com/android/server/devicepolicy/DevicePolicyData.java,createOrGetPermissionBasedAdmin,Yes, this method likely requires permissions because it references creating or retrieving a permission-based admin, which typically involves user management and may require specific permissions related to device administration in Android.
/com/android/server/devicepolicy/DevicePolicyData.java,store,Yes, this method likely requires permissions due to its interactions with device policy data, which often involves accessing sensitive information about device configurations, user profiles, and security settings.
/com/android/server/devicepolicy/DevicePolicyData.java,setDelayedFactoryReset,Yes, because it likely deals with factory resets and data wiping, which require specific permissions to ensure user data protection.
/com/android/server/devicepolicy/FactoryResetter.java,factoryReset,Yes, factory resetting a device typically requires specific permissions due to its potential impact on the user's data and device settings.
/com/android/server/devicepolicy/FactoryResetter.java,factoryResetInternalUnchecked,Yes, it requires permissions. This method performs a factory reset and related operations that require elevated privileges or permissions.
/com/android/server/devicepolicy/FactoryResetter.java,setWipeAdoptableStorage,Yes, it likely requires permissions because it deals with external storage, which typically involves storage-related permissions in Android.
/com/android/server/devicepolicy/FactoryResetter.java,setWipeFactoryResetProtection,Yes, the method involves factory reset protection, which typically requires special permissions related to device administration.
/com/android/server/devicepolicy/PersonalAppsSuspensionHelper.java,getPersonalAppsForSuspension,Yes, this method requires permissions because it retrieves a list of installed packages, which typically requires the `QUERY_ALL_PACKAGES` permission in Android to access the package information.
/com/android/server/devicepolicy/PersonalAppsSuspensionHelper.java,getAccessibilityServices,Yes, this method requires permissions because it interacts with accessibility services, which typically require permission to access in Android (e.g., `BIND_ACCESSIBILITY_SERVICE`).
/com/android/server/devicepolicy/NonAbUpdateInstaller.java,installUpdateInThread,Yes, it likely requires permissions because it involves installing a package, which typically requires `INSTALL_PACKAGES` or similar permissions in Android.
/com/android/server/wm/LetterboxUiController.java,updateWallpaperForLetterbox,Yes, this method likely requires permissions related to changing or updating the wallpaper in Android.
/com/android/server/wm/WindowOrientationListener.java,enable,Yes, because it monitors device orientation and requires access to sensors.
/com/android/server/wm/WindowOrientationListener.java,onSensorChanged,Yes, this method requires permissions as it appears to involve sensor data handling related to device rotation, which may necessitate permissions such as `android.permission.BODY_SENSORS` or `android.permission.READ_EXTERNAL_STORAGE` in certain contexts.
/com/android/server/wm/DragAndDropPermissionsHandler.java,take,Yes, the method seems to involve handling permissions related to an activity, as it references a permission owner token and activities.
/com/android/server/wm/DragAndDropPermissionsHandler.java,doTake,Yes, this method likely requires permissions because it interacts with the `UriGrantsManager` and uses `grantUriPermissionFromOwner`, which typically involves granting URI permissions that require specific app permissions to ensure security and privacy.
/com/android/server/wm/TaskPersister.java,saveImage,Yes, this method likely requires permissions because it involves saving an image to a file, which typically requires write permissions to external storage in Android.
/com/android/server/wm/TaskPersister.java,fileToString,Yes, this method requires permissions because it reads a file from the file system. Accessing files often necessitates storage permissions in Android.
/com/android/server/wm/TaskPersister.java,process,Yes, this method requires permissions. It involves file operations which typically require storage permissions in Android.
/com/android/server/wm/WindowManagerInternal.java,lockNow,Yes, it likely requires permissions as locking the device may involve security or privacy controls.
/com/android/server/wm/WindowManagerInternal.java,setContentRecordingSession,Yes, this method likely requires permissions related to media projection or recording, as it deals with updating a content recording session, which impacts user content.
/com/android/server/wm/DisplayWindowSettings.java,setForcedSize,Yes, this method may require permissions to modify global settings, specifically `WRITE_SETTINGS`.
/com/android/server/wm/DisplayWindowSettings.java,setForcedDensity,Yes, this method likely requires permissions due to accessing and modifying display settings (like display density) in the system settings, which typically require permission checks for security.
/com/android/server/wm/TaskFragment.java,resumeTopActivity,Yes, this method requires permissions because it interacts with system-level activities and potentially modifies task states, which may require specific permissions depending on the context in which it's called (e.g., resuming activities, modifying app visibility).
/com/android/server/wm/BaseAppSnapshotPersister.java,createDirectory,Yes, this method likely requires permissions because it involves creating a directory, which typically requires write access to the file system.
/com/android/server/wm/ActivitySnapshotController.java,write,Yes, this method likely requires permissions because it involves file operations, specifically deleting files and checking their existence, which typically necessitates storage permissions in Android.
/com/android/server/wm/AbsAppSnapshotController.java,createSnapshot,Yes, this method likely requires permissions because it deals with screen capture functionality, which typically necessitates permissions to access and manipulate the screen content or hardware buffers.
/com/android/server/wm/WallpaperWindowToken.java,updateWallpaperWindows,Yes, it likely requires permissions related to changing the wallpaper or its visibility in an Android context.
/com/android/server/wm/ActivityRecord.java,isKeyguardLocked,Yes, it likely requires permissions related to checking the lock state of the keyguard.
/com/android/server/wm/ActivityRecord.java,canShowWhenLocked,Yes, because it involves showing a window when the device is locked, which typically requires special permissions related to displaying content over lock screens.
/com/android/server/wm/ActivityRecord.java,startFreezingScreen,Yes, this method likely requires permissions related to screen freezing or control over UI elements, which typically requires specific system-level permissions in an Android context.
/com/android/server/wm/ActivityRecord.java,requestUpdateWallpaperIfNeeded,Yes, it requires permissions to update the wallpaper.
/com/android/server/wm/LockTaskController.java,stopLockTaskMode,Yes, it requires permissions because it throws a `SecurityException` if the caller is not authorized to stop the lock task mode.
/com/android/server/wm/LockTaskController.java,startLockTaskMode,Yes, it requires permissions to lock tasks.
/com/android/server/wm/LockTaskController.java,setLockTaskMode,Yes, this method requires permissions because it involves starting lock task mode, which typically requires specific system permissions to manage and restrict app behavior for security purposes.
/com/android/server/wm/LockTaskController.java,performStartLockTask,Yes, this method likely requires permissions due to its interaction with device policy management and lock task state, which typically involve elevated privileges.
/com/android/server/wm/LockTaskController.java,updateLockTaskPackages,Yes, it likely requires permissions as it deals with updating packages in lock task mode, which generally involves security and user accessibility considerations within the Android system.
/com/android/server/wm/LockTaskController.java,setStatusBarState,Yes, this method likely requires permissions, as it interacts with the status bar service, which typically requires specific system permissions to modify UI elements.
/com/android/server/wm/LockTaskController.java,setKeyguardState,Yes, because it interacts with the keyguard state, which typically requires permissions related to device security.
/com/android/server/wm/LockTaskController.java,lockKeyguardIfNeeded,Yes, it likely requires permissions because it involves locking the device, which typically needs system-level permissions related to device security.
/com/android/server/wm/LockTaskController.java,shouldLockKeyguard,Yes, this method requires permissions because it accesses secure settings related to the device's lock screen, which typically requires the `android.permission.ACCESS_SECURITY_SETTINGS` permission.
/com/android/server/wm/LockTaskController.java,getDevicePolicyManager,Yes, it requires permissions because it interacts with the Device Policy Manager, which typically requires specific device administration permissions in Android.
/com/android/server/wm/LockTaskController.java,getTelecomManager,Yes, it likely requires permission to access telecom services in Android (e.g., `READ_PHONE_STATE`).
/com/android/server/wm/KeyguardController.java,dismissKeyguard,Yes, because dismissing the keyguard typically requires the permission to modify system settings or control the screen lock state.
/com/android/server/wm/KeyguardController.java,handleDismissKeyguard,Yes, the method involves managing keyguard features, which typically requires permissions related to device security and user authentication.
/com/android/server/wm/RecentsAnimationController.java,screenshotTask,Yes, this method likely requires permissions as it deals with task snapshots and may access sensitive user information or UI state, which typically requires specific permissions in Android (e.g., `READ_EXTERNAL_STORAGE` or `SYSTEM_ALERT_WINDOW`).
/com/android/server/wm/WindowState.java,setKeepClearAreas,Yes, requires permission. The method mentions the need for the `SET_UNRESTRICTED_KEEP_CLEAR_AREAS` permission to handle keep-clear areas appropriately.
/com/android/server/wm/WindowState.java,switchUser,Yes, it likely requires permissions because switching users typically involves altering user sessions or accessing user-specific data, which typically requires specific system permissions.
/com/android/server/wm/WindowState.java,updateAppOpsState,Yes, the method likely requires permissions because it interacts with app operations (mAppOps) that may involve checking and setting app visibility states which typically require specific permissions in the Android framework.
/com/android/server/wm/WindowState.java,hideNonSystemOverlayWindowsWhenVisible,Yes, the method pertains to managing visibility for toast windows and potentially requires the `OP_SYSTEM_ALERT_WINDOW` permission related to overlay windows.
/com/android/server/wm/WindowState.java,requestUpdateWallpaperIfNeeded,Yes, it likely requires permissions to access or update the wallpaper on the device.
/com/android/server/wm/WindowState.java,setWallpaperOffset,Yes, this method likely requires permissions as it involves setting wallpaper offsets, which typically requires the `SET_WALLPAPER` permission in Android.
/com/android/server/wm/TaskSnapshotController.java,createImeSnapshot,Yes, because it involves capturing screen content which typically requires permissions related to screen recording or capturing.
/com/android/server/wm/AppWarnings.java,setPackageFlag,Yes, it likely requires permissions because it modifies flags for a package, which may affect system behavior or other apps.
/com/android/server/wm/AppWarnings.java,show,Yes, this method likely requires permissions because it involves showing dialogs and registering a receiver for system broadcast actions, which may require specific permissions in an Android application.
/com/android/server/wm/AppWarnings.java,writeConfigToFileAmsThread,Yes, it likely requires permissions because it performs file I/O operations, which typically require storage permissions in Android.
/com/android/server/wm/SafeActivityOptions.java,getOptions,Yes, because it performs permission checks.
/com/android/server/wm/SafeActivityOptions.java,checkPermissions,Yes, the method requires permissions because it checks for various permissions (e.g., `START_TASKS_FROM_RECENTS`, `MANAGE_ACTIVITY_TASKS`, `CONTROL_KEYGUARD`) before allowing certain actions to proceed, resulting in `SecurityException` being thrown on permission denial.
/com/android/server/wm/SafeActivityOptions.java,isSystemOrSystemUI,Yes, the method checks for a specific permission (`STATUS_BAR_SERVICE`) related to the system UI, and permissions are typically required for accessing system services.
/com/android/server/wm/LaunchParamsPersister.java,process,Yes, the method likely requires permissions for file operations (like creating directories and writing files).
/com/android/server/wm/LaunchParamsPersister.java,process,Yes, it likely requires permissions related to file deletion.
/com/android/server/wm/PackageConfigurationUpdaterImpl.java,commit,Yes, this method likely requires permissions because it involves operations related to application configuration and user identification, which typically require appropriate permissions in Android for security and privacy reasons.
/com/android/server/wm/DisplayWindowSettingsProvider.java,writeSettings,Yes, this method likely requires permissions as it appears to involve writing settings, which typically requires permissions to modify system or application settings in Android.
/com/android/server/wm/DisplayWindowSettingsProvider.java,writeSettings,Yes, this method likely requires permissions to write settings, which typically involves modifying system settings.
/com/android/server/wm/LetterboxConfigurationPersister.java,process,Yes, the method requires permissions because it writes to a file and may require storage permissions to access the filesystem.
/com/android/server/wm/RecentsAnimation.java,startRecentsActivity,Yes, because it interacts with system-level activities and potentially manipulates application states, which may require permissions.
/com/android/server/wm/DisplayAreaOrganizerController.java,registerOrganizer,Yes, this method likely requires permissions because it includes a call to `enforceTaskPermission`, which suggests that it is checking for specific permissions related to task execution.
/com/android/server/wm/DisplayAreaOrganizerController.java,unregisterOrganizer,Yes, the method likely requires permissions because it calls `enforceTaskPermission`, which typically checks for specific permissions related to the task organizer functionality in Android.
/com/android/server/wm/DisplayAreaOrganizerController.java,createTaskDisplayArea,Yes, this method requires permissions. It includes a call to `enforceTaskPermission`, indicating that permission checks are required before executing the logic within the method.
/com/android/server/wm/DisplayAreaOrganizerController.java,deleteTaskDisplayArea,Yes, because the method checks for permissions related to task deletion, implying specific access rights are necessary.
/com/android/server/wm/WindowOrganizerController.java,applyTransaction,Yes, this method likely requires permissions, as it includes a call to `enforceTaskPermission`, suggesting that it checks for specific permissions related to task execution.
/com/android/server/wm/WindowOrganizerController.java,applySyncTransaction,Yes, because it calls `enforceTaskPermission` which checks for the necessary permissions to apply the transaction.
/com/android/server/wm/WindowOrganizerController.java,startTransition,Yes, the method requires permissions because it invokes `enforceTaskPermission`, which typically checks if the calling context has the necessary permissions to perform specific actions related to tasks.
/com/android/server/wm/WindowOrganizerController.java,startLegacyTransition,Yes, the method requires permissions because it invokes `enforceTaskPermission`, which checks for specific permissions related to tasks.
/com/android/server/wm/WindowOrganizerController.java,finishTransition,Yes, the method likely requires permissions related to managing transitions and window containers, which typically involve interacting with system resources that require specific permissions in Android.
/com/android/server/wm/WindowOrganizerController.java,applyTaskFragmentTransactionLocked,Yes, the method enforces a permission via `enforceTaskFragmentOrganizerPermission`, which indicates that it requires specific permissions to operate.
/com/android/server/wm/WindowOrganizerController.java,getTaskOrganizerController,Yes, this method appears to invoke a permission enforcement check (`enforceTaskPermission`), indicating that it requires certain permissions to be executed.
/com/android/server/wm/WindowOrganizerController.java,getDisplayAreaOrganizerController,Yes, the method uses 'enforceTaskPermission', indicating it checks for required permissions.
/com/android/server/wm/WindowOrganizerController.java,registerTransitionPlayer,Yes, it requires permissions to enforce task permission and manage process interactions.
/com/android/server/wm/WindowOrganizerController.java,getApplyToken,Yes, it requires permissions because it calls `enforceTaskPermission`, indicating that permission checks are involved.
/com/android/server/wm/WindowOrganizerController.java,enforceTaskFragmentOrganizerPermission,Yes, this method requires permissions because it involves operations related to a `TaskFragmentOrganizer`, which typically requires permission checks to ensure that only authorized entities can modify task fragments.
/com/android/server/wm/WindowOrganizerController.java,enforceTaskFragmentOrganized,Yes, because it checks for permission to modify a TaskFragment that belongs to a TaskFragmentOrganizer, indicating a security measure.
/com/android/server/wm/WindowOrganizerController.java,enforceTaskFragmentConfigChangeAllowed,Yes, this method requires permissions as it includes checks for permission denial related to modifying a TaskFragment, implying the need for access control based on process ID and user ID.
/com/android/server/wm/ActivityStartInterceptor.java,interceptQuietProfileIfNeeded,Yes, this method requires permissions because it interacts with user profiles and user management, which typically need specific permissions in Android (e.g., `MANAGE_USERS`).
/com/android/server/wm/ActivityStartInterceptor.java,interceptSuspendedByAdminPackage,Yes, this method likely requires permissions. It's likely interacting with `DevicePolicyManager`, which typically requires admin permissions.
/com/android/server/wm/BlackFrame.java,kill,Yes, this method likely requires permissions because it appears to manipulate surfaces, which may involve changing UI elements or system resources. These actions typically require specific permissions in Android.
/com/android/server/wm/WallpaperController.java,updateWallpaperOffset,Yes, this method requires permissions because it involves updating wallpaper offsets, which typically requires the `SET_WALLPAPER` permission in Android.
/com/android/server/wm/WallpaperController.java,setWindowWallpaperPosition,Yes, this method requires permissions because it alters the position of the wallpaper, which typically involves `SET_WALLPAPER` permission in Android.
/com/android/server/wm/WallpaperController.java,sendWindowWallpaperCommand,Yes, the method likely requires permissions to manipulate wallpaper settings and interact with the window system.
/com/android/server/wm/WallpaperController.java,getAllTopWallpapers,Yes, this method likely requires permissions to access wallpaper information.
/com/android/server/wm/WallpaperController.java,updateWallpaperTokens,Yes, this method likely requires permissions, as it involves changing the visibility of wallpapers, which typically requires specific permissions related to wallpaper management in Android.
/com/android/server/wm/WallpaperController.java,adjustWallpaperWindows,Yes, this method likely requires permissions. It involves manipulating wallpaper elements, which typically necessitates permissions related to wallpaper management in Android (e.g., `SET_WALLPAPER`).
/com/android/server/wm/WallpaperController.java,screenshotWallpaperLocked,Yes, this method likely requires permissions because it involves taking a screenshot of the wallpaper, which may access user-sensitive data and requires appropriate permissions to handle visual content.
/com/android/server/wm/ActivityTaskManagerInternal.java,startActivitiesAsPackage,Yes, because it performs operations involving starting activities, which typically require permissions.
/com/android/server/wm/ActivityTaskManagerInternal.java,startActivityInPackage,Yes, it likely requires permissions because it includes starting an activity, which generally needs permission to access components of other apps and potentially their data.
/com/android/server/wm/ActivityTaskManagerInternal.java,setAccessibilityServiceUids,Yes, this method may require permissions related to accessibility services, as it involves setting UIDs for active accessibility services.
/com/android/server/wm/ActivityTaskManagerInternal.java,startActivityAsUser,Yes, the method likely requires permissions because it starts an activity, which typically requires specific permissions based on what the activity does.
/com/android/server/wm/ActivityTaskManagerInternal.java,checkCanCloseSystemDialogs,Yes, it may require permissions to close system dialogs.
/com/android/server/wm/ActivityTaskManagerInternal.java,startHomeOnDisplay,Yes, this method likely requires permission to access or launch home activities on displays, particularly due to its interaction with the user interface and system-level behaviors.
/com/android/server/wm/ActivityTaskManagerInternal.java,startConfirmDeviceCredentialIntent,Yes, it requires permissions to access secure credentials.
/com/android/server/wm/ActivityTaskManagerInternal.java,switchUser,Yes, switching users typically requires permissions to ensure that only authorized applications can change user states.
/com/android/server/wm/ActivityTaskManagerInternal.java,hasSystemAlertWindowPermission,Yes, it requires permission to check for SYSTEM_ALERT_WINDOW, which is a sensitive operation in Android.
/com/android/server/wm/ActivityTaskManagerInternal.java,getMostRecentTaskFromBackground,Yes, it requires permission to access recent tasks, typically `android.permission.GET_TASKS`.
/com/android/server/wm/ActivityTaskManagerInternal.java,getAppTasks,Yes, because accessing app tasks typically requires permissions related to retrieving task information on the device.
/com/android/server/wm/ActivityTaskManagerInternal.java,restartTaskActivityProcessIfVisible,Yes, this method likely requires permissions because it involves restarting a process associated with an activity, which may affect app resources and user experience.
/com/android/server/wm/TaskOrganizerController.java,registerTaskOrganizer,Yes, this method requires permissions because it internally calls `enforceTaskPermission`, which indicates a permission check is performed.
/com/android/server/wm/TaskOrganizerController.java,unregisterTaskOrganizer,Yes, this method likely requires permissions because it calls `enforceTaskPermission`, which suggests the need for a specific permission check before unregistering a task organizer.
/com/android/server/wm/TaskOrganizerController.java,createRootTask,Yes, the method likely requires permissions to manage tasks and windowing modes in the Android system, which typically involves enforcing security checks.
/com/android/server/wm/TaskOrganizerController.java,deleteRootTask,Yes, this method likely requires permissions because it involves deleting a root task, which typically requires specific system-level permissions to ensure only authorized actions can be performed on window management tasks.
/com/android/server/wm/TaskOrganizerController.java,getImeTarget,Yes, this method likely requires permissions because it calls `enforceTaskPermission`, suggesting it checks or enforces permissions related to accessing task information.
/com/android/server/wm/TaskOrganizerController.java,getChildTasks,Yes, this method requires permissions because it involves accessing task information, which typically requires specific permissions to ensure user privacy and security in Android.
/com/android/server/wm/TaskOrganizerController.java,getRootTasks,Yes, because this method calls `enforceTaskPermission`, which often checks for specific permissions before accessing task-related information.
/com/android/server/wm/TaskOrganizerController.java,restartTaskTopActivityProcessIfVisible,Yes, the method involves restarting a task's top activity, which typically requires permissions related to modifying activities or accessing system resources.
/com/android/server/wm/TaskOrganizerController.java,updateCameraCompatControlState,Yes, it requires permissions because the method uses `enforceTaskPermission`, which indicates that it checks for specific permissions before executing actions related to tasks and windows.
/com/android/server/wm/TaskOrganizerController.java,setOrientationRequestPolicy,Yes, it requires permissions as it involves enforcing task permissions and manipulating window orientation settings.
/com/android/server/wm/ContentRecordingController.java,setContentRecordingSessionLocked,Yes, the method likely requires permissions because it handles content recording sessions, which typically involves user privacy and security concerns, necessitating explicit permissions.
/com/android/server/wm/ViewServer.java,start,Yes, it likely requires permissions because it involves starting a server, which can involve network operations.
/com/android/server/wm/WindowTracing.java,writeTraceToFileLocked,Yes, the method writes to disk, which typically requires file write permissions.
/com/android/server/wm/DisplayRotation.java,setFixedToUserRotation,Yes, this method likely requires permissions because it appears to modify user interface behavior (e.g., screen orientation), which generally involves user interaction and system permissions in Android.
/com/android/server/wm/DisplayRotation.java,setUserRotation,Yes, this method likely requires permissions. It interacts with system settings related to user rotation, which typically necessitates permissions to modify system settings in Android.
/com/android/server/wm/DisplayRotation.java,registerSensorManager,Yes, this method requires permissions. It involves accessing sensor information which typically requires device permissions, such as "android.permission.BODY_SENSORS" or similar sensor-related permissions in Android.
/com/android/server/wm/DisplayRotation.java,observe,Yes, because the method registers content observers for system settings which typically requires permissions to access.
/com/android/server/wm/ActivityMetricsLaunchObserver.java,onIntentFailed,Yes, the method may require permissions because it mentions that the calling package needs security permissions to call the requested activity.
/com/android/server/wm/ActivityClientController.java,finishActivityAffinity,Yes, this method likely requires permissions to modify or finish activities, as it deals with activity management in the Android framework.
/com/android/server/wm/ActivityClientController.java,setForceSendResultForMediaProjection,Yes, this method requires the `MANAGE_MEDIA_PROJECTION` permission, which typically relates to managing media projection access in Android.
/com/android/server/wm/ActivityClientController.java,getLaunchedFromPackage,Yes, it likely requires permissions to access the information related to the package that was launched, as it deals with activity records and potentially sensitive data related to application interactions.
/com/android/server/wm/ActivityClientController.java,setRequestedOrientation,Yes, this method may require permissions to modify the requested orientation of an activity, as it affects the application's UI behavior which could depend on system-level restrictions.
/com/android/server/wm/ActivityClientController.java,enterPictureInPictureMode,Yes, this method requires permissions because it involves entering Picture-in-Picture mode, which typically requires the `android.permission.SYSTEM_ALERT_WINDOW` permission.
/com/android/server/wm/ActivityClientController.java,toggleFreeformWindowingMode,Yes, this method likely requires permissions since it involves changing the windowing mode of an activity, which could affect the app's visual presentation and user experience.
/com/android/server/wm/ActivityClientController.java,startLockTaskModeByToken,Yes, it likely requires permissions because it involves locking a task mode, which typically needs specific security permissions in Android.
/com/android/server/wm/ActivityClientController.java,startLocalVoiceInteraction,Yes, this method requires permissions because it involves starting a voice interaction, which typically requires specific permissions related to audio input or interacting with voice services in Android.
/com/android/server/wm/ActivityClientController.java,setVrMode,Yes, this method likely requires permissions because it interacts with services related to VR features, which typically require specific permissions to manage system features securely.
/com/android/server/wm/ActivityClientController.java,invalidateHomeTaskSnapshot,Yes, it requires permission to manage activity tasks. The method mentions `MANAGE_ACTIVITY_TASKS` permission to find the home task token.
/com/android/server/wm/ActivityClientController.java,dismissKeyguard,Yes, the method dismissKeyguard likely requires permissions because it mentions enforcing a calling permission related to the "dismissKeyguard" functionality, which typically involves managing the device's keyguard state.
/com/android/server/wm/ActivityClientController.java,registerRemoteAnimations,Yes, this method likely requires permissions because it appears to enforce a calling permission via `enforceCallingPermission`, suggesting that only authorized callers are allowed to invoke this method.
/com/android/server/wm/ActivityClientController.java,unregisterRemoteAnimations,Yes, this method requires permissions because it enforces calling permissions as indicated by the use of `enforceCallingPermission`.
/com/android/server/wm/ImmersiveModeConfirmation.java,loadSetting,Yes, it requires permissions to access settings, specifically the `Settings.Secure` content, which may involve permissions related to accessing user settings or secure settings.
/com/android/server/wm/ImmersiveModeConfirmation.java,saveSetting,Yes, the method requires permissions. It interacts with `Settings.Secure`, which typically requires the `WRITE_SETTINGS` permission in Android.
/com/android/server/wm/ActivityStarter.java,startActivityUnchecked,Yes, because the method description mentions that the caller must hold necessary permissions to start the activity.
/com/android/server/wm/ActivityStarter.java,startActivityInner,Yes, this method requires permissions because it starts an activity, which typically requires permissions such as `android.permission.START_ACTIVITIES` to launch new activities in the application's context.
/com/android/server/wm/ActivityStarter.java,checkActivitySecurityModel,Yes, this method may require permissions as it deals with security checks related to activity starts, which often involve user privacy and system resource access.
/com/android/server/wm/ActivityStarter.java,setCallingPackage,Yes, this method likely requires permissions. It involves setting the calling package, which may relate to inter-application interactions and could require permission to access package information for security reasons.
/com/android/server/wm/TransitionTracer.java,writeTraceToFileLocked,Yes, this method requires permission to write to a file, which is typically protected in Android.
/com/android/server/wm/AppTaskImpl.java,finishAndRemoveTask,Yes, this method requires permissions because it involves checking the calling UID and manipulating tasks which typically requires special permissions in Android.
/com/android/server/wm/AppTaskImpl.java,getTaskInfo,Yes, the method requires permissions to access task information, as it utilizes systems that can expose sensitive information about tasks and their states, which typically requires appropriate permissions in Android.
/com/android/server/wm/AppTaskImpl.java,moveToFront,Yes, this method likely requires permissions to manage application activities, as it deals with moving applications to the front and interacting with activity lifecycle management.
/com/android/server/wm/AppTaskImpl.java,startActivity,Yes, this method requires permissions because it starts an activity, which typically requires `START_ACTIVITY`, depending on the context and calling package.
/com/android/server/wm/AppTaskImpl.java,setExcludeFromRecents,Yes, this method likely requires permissions because it modifies the visibility of a task in the recent tasks list, which typically involves user privacy and requires system-level permissions.
/com/android/server/wm/DisplayPolicy.java,setHdmiPlugged,Yes, this method likely requires permissions because it appears to involve sending broadcasts which may require specific permissions related to system broadcasts or HDMi functionality.
/com/android/server/wm/DisplayPolicy.java,validateAddingWindowLw,Yes, the method requires permissions to enforce security and access control for certain window types.
/com/android/server/wm/DisplayPolicy.java,takeScreenshot,Yes, this method requires permissions because it involves taking a screenshot, which typically requires user consent and specific permissions in Android.
/com/android/server/wm/BackgroundActivityStartController.java,checkBackgroundActivityStart,Yes, it requires permissions. The method checks for permissions related to starting activities from the background, as indicated by the reference to `checkPermission` with `START_ACTIVITIES_FROM_BACKGROUND`.
/com/android/server/wm/BackgroundActivityStartController.java,checkPiBackgroundActivityStart,Yes, this method likely requires permissions because it checks for activity start privileges and calls a method related to checking component permissions, which implies the need for proper permissions to perform such tasks.
/com/android/server/wm/CarLaunchParamsModifier.java,getUserAssignedToDisplay,Yes, this method likely requires permissions related to user management, as it involves retrieving user information associated with a display.
/com/android/server/wm/DisplayHashController.java,connectAndRun,Yes, this method likely requires permissions because it binds to a service using the `bindService` method, which typically necessitates specific permissions defined in the AndroidManifest.xml.
/com/android/server/wm/DisplayHashController.java,getServiceInfo,Yes, because it involves accessing package manager services, which typically requires appropriate permissions in Android.
/com/android/server/wm/DisplayHashController.java,getServiceComponentName,Yes, requires permission because it checks for `Manifest.permission.BIND_DISPLAY_HASHING_SERVICE`.
/com/android/server/wm/WindowManagerShellCommand.java,runSetBlurDisabled,Yes, this method likely requires permission to write settings, as it interacts with `Settings.Global.putInt`, which requires `WRITE_SETTINGS` permission on Android.
/com/android/server/wm/WindowManagerShellCommand.java,runDumpVisibleWindowViews,Yes, this method requires the DUMP permission to execute.
/com/android/server/wm/WindowManagerShellCommand.java,runWmShellCommand,Yes, it likely requires permissions because it seems to interact with the Android system shell, which typically needs elevated permissions to execute commands.
/com/android/server/wm/DisplayContent.java,finishHoldScreenUpdate,Yes, this method requires permissions because it deals with wake locks, which require the `WAKE_LOCK` permission in Android.
/com/android/server/wm/DisplayContent.java,updateRotationUnchecked,Yes, because updating display rotation typically requires system permissions related to display settings.
/com/android/server/wm/DisplayContent.java,switchUser,Yes, because switching users typically requires permissions related to managing user accounts on the device.
/com/android/server/wm/DisplayContent.java,refreshImeSecureFlag,Yes, this method likely requires permissions related to IME (Input Method Editor) operations, such as access to input method capabilities.
/com/android/server/wm/DisplayContent.java,screenshotDisplayLocked,Yes, this method requires permissions to take a screenshot, as it captures the display content, which is sensitive user data.
/com/android/server/wm/DisplayContent.java,getKeepClearAreas,Yes, this method requires the `SET_UNRESTRICTED_KEEP_CLEAR_AREAS` permission.
/com/android/server/wm/DisplayContent.java,setDisplayMirroring,Yes, the method likely requires permissions related to managing display content and mirroring, as it involves operations that affect how content is displayed and recorded.
/com/android/server/wm/SurfaceFreezer.java,createSnapshotBuffer,Yes, this method likely requires permissions because it involves capturing layers of the screen, which usually necessitates specific permissions related to screen recording or capturing in Android.
/com/android/server/wm/RecentTasks.java,saveImage,Yes, saving an image typically requires storage permissions to write to a file in specified paths.
/com/android/server/wm/RecentTasks.java,unloadUserDataFromMemoryLocked,Yes, this method manipulates user data and recent tasks, which typically requires specific permissions to ensure user privacy and data integrity.
/com/android/server/wm/RecentTasks.java,removeTasksByPackageName,Yes, this method likely requires permissions because it appears to manipulate tasks or processes associated with package names, which may involve modifying application behavior in a way that could affect user privacy or system integrity.
/com/android/server/wm/RecentTasks.java,getRecentTasks,Yes, this method requires permissions because retrieving recent tasks typically requires the `GET_TASKS` permission or similar, especially in the context of managing app visibility and tasks.
/com/android/server/wm/RecentTasks.java,getRecentTasksImpl,Yes, it may require permissions related to accessing recent tasks, such as `GET_TASKS` or `PACKAGE_USAGE_STATS`.
/com/android/server/wm/RecentTasks.java,remove,Yes, it requires permissions to modify the recent tasks list.
/com/android/server/wm/ContentRecorder.java,startRecordingIfNeeded,Yes, this method likely requires permissions to capture screen content or audio, as it involves recording the display content and may interact with sensitive information.
/com/android/server/wm/ContentRecorder.java,retrieveRecordedWindowContainer,Yes, because it handles content recording which may involve accessing sensitive user interface elements and potentially accessing personal data.
/com/android/server/wm/ContentRecorder.java,notifyActiveProjectionCapturedContentVisibilityChanged,Yes, the method interacts with `MediaProjectionManager`, which typically requires permissions to record screen content (`MEDIA_PROJECTION`).
/com/android/server/wm/Session.java,performHapticFeedback,Yes, because performing haptic feedback often requires permission to access the device's vibration motor.
/com/android/server/wm/Session.java,performDrag,Yes, this method relates to drag and drop operations which can involve interacting with various system resources or user interface elements, thus may require permissions related to window management or touch events.
/com/android/server/wm/Session.java,validateAndResolveDragMimeTypeExtras,Yes, because it requires the permission to start tasks from recents (START_TASKS_FROM_RECENTS).
/com/android/server/wm/Session.java,setWallpaperPosition,Yes, because setting wallpaper position typically requires the `SET_WALLPAPER` permission.
/com/android/server/wm/Session.java,setWallpaperZoomOut,Yes, this method likely requires permissions because it interacts with the wallpaper service, which typically requires specific permissions (e.g., `SET_WALLPAPER`).
/com/android/server/wm/Session.java,setWallpaperDisplayOffset,Yes, this method likely requires permissions to set the wallpaper display offset, as it involves manipulating the wallpaper settings.
/com/android/server/wm/Session.java,sendWallpaperCommand,Yes, this method would likely require permissions because it involves sending wallpaper commands, which is part of the system UI functionality that typically requires special permissions to manipulate system resources or user data.
/com/android/server/wm/Session.java,onWindowSurfaceVisibilityChanged,Yes, it requires permissions because it involves altering the visibility of system alert windows, which typically requires special permissions in Android.
/com/android/server/wm/Session.java,grantInputChannel,Yes, Requires `INTERNAL_SYSTEM_WINDOW` permission.
/com/android/server/wm/Session.java,grantEmbeddedWindowFocus,Yes, requires INTERNAL_SYSTEM_WINDOW permission.
/com/android/server/wm/DisplayAreaPolicyBuilder.java,set,Yes, this method requires permissions because it modifies system overlay layers, which typically requires special permissions in Android.
/com/android/server/wm/BlurController.java,getBlurDisabledSetting,Yes, it requires permissions to access `Settings.Global`, which involves reading system settings.
/com/android/server/wm/KeyguardDisableHandler.java,disableKeyguard,Yes, the method `disableKeyguard` likely requires permissions to disable the keyguard on a device, as such operations typically need elevated privileges to alter security settings.
/com/android/server/wm/KeyguardDisableHandler.java,reenableKeyguard,Yes, because it involves re-enabling the keyguard, which typically requires permission related to device administration or security.
/com/android/server/wm/KeyguardDisableHandler.java,create,Yes, it likely requires permissions as it interacts with user security settings and device policies, which typically require explicit user permissions in Android.
/com/android/server/wm/RootWindowContainer.java,handleMessage,Yes, it likely requires permissions because it handles screen brightness and user activity timeout, which typically need system-level permissions in Android.
/com/android/server/wm/RootWindowContainer.java,startHomeOnTaskDisplayArea,Yes, this method may require permissions related to starting activities and accessing display areas in Android, especially when handling home activities in different display contexts.
/com/android/server/wm/RootWindowContainer.java,switchUser,Yes, this method likely requires permissions because it involves switching user contexts, which typically necessitates security measures to prevent unauthorized access or manipulation of user data.
/com/android/server/wm/RootWindowContainer.java,moveRootTaskToDisplay,Yes, this method likely requires permissions to manipulate tasks and displays in the system, as it involves moving tasks between display areas, which is a sensitive operation that may affect user privacy and system stability.
/com/android/server/wm/RootWindowContainer.java,process,Yes, it may require permissions because it deals with processes and activities, which could involve sensitive operations like stopping or modifying other apps, often needing permissions related to activity management (e.g., modifying system settings or accessing app data).
/com/android/server/wm/RootWindowContainer.java,finishDisabledPackageActivities,Yes, this method likely requires permissions to finish activities related to packages, which could involve manipulating app behavior and user data.
/com/android/server/wm/RootWindowContainer.java,getRunningTasks,Yes, this method requires permission. Specifically, it may require permissions related to accessing running tasks, which can involve privacy considerations in Android.
/com/android/server/wm/RootWindowContainer.java,getTaskToShowPermissionDialogOn,Yes, this method likely requires permissions because it interacts with task fragments and permission dialogs, which typically involve privileged operations in Android.
/com/android/server/wm/RootWindowContainer.java,getDumpActivities,Yes, this method likely requires permissions because it interacts with activities and tasks, which generally involve accessing sensitive user data or manipulating system-level functionalities that mandate specific permissions in Android, such as SYSTEM_ALERT_WINDOW or GET_TASKS.
/com/android/server/wm/AlertWindowNotification.java,getContentIntent,Yes, because it may require permission related to managing overlay settings (e.g., ACTION_MANAGE_APP_OVERLAY_PERMISSION).
/com/android/server/wm/AlertWindowNotification.java,createNotificationChannel,Yes, this method requires permissions to create notification channels.
/com/android/server/emergency/EmergencyAffordanceService.java,onReceive,Yes, this method likely requires permissions because it handles actions related to network state changes and airplane mode, which commonly require the appropriate system permissions in Android (e.g., `ACCESS_NETWORK_STATE`, `CHANGE_NETWORK_STATE`).
/com/android/server/emergency/EmergencyAffordanceService.java,handleThirdPartyBootPhase,Yes, this method likely requires permissions because it involves accessing the TelephonyManager and managing subscriptions, which typically requires permissions like `READ_PHONE_STATE` or `READ_SMS`.
/com/android/server/emergency/EmergencyAffordanceService.java,handleUpdateAirplaneModeStatus,Yes, this method requires permissions because it interacts with the `Settings.Global` to get the airplane mode status, which typically requires `CHANGE_NETWORK_STATE` or `WRITE_SETTINGS` permissions in Android.
/com/android/server/emergency/EmergencyAffordanceService.java,dump,Yes, this method requires permissions because it checks for dump permissions using `checkDumpPermission`, which implies that it has security implications and requires the appropriate permissions to execute.
/com/android/server/criticalevents/CriticalEventLog.java,saveLogToFileNow,Yes, this method requires permissions because it involves accessing the file system to create and write logs, which typically requires `WRITE_EXTERNAL_STORAGE` permission on Android.
/com/android/server/criticalevents/CriticalEventLog.java,loadLogFromFile,Yes, this method requires permission to access the file system to read the log file.
/com/android/server/content/SyncStorageEngine.java,setSyncAutomatically,Yes, this method requires permissions because it deals with account synchronization, which typically requires access to sensitive user data and permissions like `android.permission.WRITE_SYNC_SETTINGS` and `android.permission.READ_SYNC_SETTINGS`.
/com/android/server/content/SyncStorageEngine.java,setIsSyncable,Yes, it likely requires permissions because modifying sync settings for accounts usually involves accessing sensitive user data.
/com/android/server/content/SyncStorageEngine.java,restoreAllPeriodicSyncs,Yes, this method likely requires permissions. It appears to manage sync settings, which typically requires access to accounts or synchronization features that are protected by permissions in the Android Manifest.
/com/android/server/content/SyncStorageEngine.java,setMasterSyncAutomatically,Yes, this method likely requires permissions because it deals with syncing operations and user data, which typically necessitate permissions for accessing or modifying account and sync settings.
/com/android/server/content/SyncStorageEngine.java,writeAccountInfoLocked,Yes, this method requires permissions because it writes account information to a file, which typically requires file system permissions in Android.
/com/android/server/content/SyncStorageEngine.java,writeStatusLocked,Yes, this method likely requires permissions because it involves writing to a file, which typically requires file access permissions in Android.
/com/android/server/content/SyncStorageEngine.java,requestSync,Yes, this method likely requires permissions to access the accounts and perform synchronization operations.
/com/android/server/content/SyncStorageEngine.java,writeStatisticsLocked,Yes, this method likely requires permissions because it involves writing to a file (`FileOutputStream`), which typically requires file storage permissions in Android.
/com/android/server/content/SyncStorageEngine.java,queueBackup,Yes, backup operations typically require permissions related to backing up data.
/com/android/server/content/SyncOperation.java,reasonToString,Yes, this method requires permissions because it calls `getPackagesForUid` and `getNameForUid` methods on `PackageManager`, which typically require permissions to access package-related information.
/com/android/server/content/SyncManagerConstants.java,start,Yes, requires permissions. The method interacts with the ContentResolver, which typically requires permissions to access specific content providers.
/com/android/server/content/SyncManagerConstants.java,refresh,Yes, because it accesses and modifies settings using `ContentResolver` and `Settings.Global`.
/com/android/server/ambientcontext/AmbientContextManagerService.java,enforceCallingPermissionForManagement,Yes, it requires permission to access a specific context event (ACCESS_AMBIENT_CONTEXT_EVENT).
/com/android/server/ambientcontext/AmbientContextManagerService.java,startDetection,Yes, requires ACCESS_AMBIENT_CONTEXT_EVENT permission.
/com/android/server/ambientcontext/AmbientContextManagerService.java,stopAmbientContextEvent,Yes, because it requires the `ACCESS_AMBIENT_CONTEXT_EVENT` permission.
/com/android/server/ambientcontext/AmbientContextManagerService.java,queryServiceStatus,Yes, requires ACCESS_AMBIENT_CONTEXT_EVENT permission to query the status of specified events.
/com/android/server/ambientcontext/AmbientContextManagerService.java,registerObserverWithCallback,Yes, the method requires permissions because it enforces the calling or self permission with `ACCESS_AMBIENT_CONTEXT_EVENT`.
/com/android/server/ambientcontext/AmbientContextManagerService.java,unregisterObserver,Yes, this method requires permissions because it enforces the calling package to have a specific permission to access ambient context events.
/com/android/server/ambientcontext/AmbientContextManagerService.java,queryServiceStatus,Yes, it requires permission to access the ambient context service indicated by the call to `enforceCallingOrSelfPermission` with `ACCESS_AMBIENT_CONTEXT_EVENT`.
/com/android/server/ambientcontext/AmbientContextManagerService.java,startConsentActivity,Yes, the method calls `enforceCallingOrSelfPermission`, which checks for the `ACCESS_AMBIENT_CONTEXT_EVENT` permission.
/com/android/server/ambientcontext/AmbientContextManagerService.java,dump,Yes, this method requires permissions because it checks for a "dump" permission to determine if it can execute the dump functionality safely.
/com/android/server/usage/UsageStatsDatabase.java,pruneUninstalledPackagesData,Yes, this method likely requires permissions as it handles usage stats data, which typically involves user privacy and might require specific permissions to access such data in an Android context.
/com/android/server/usage/UsageStatsDatabase.java,prunePackagesDataOnUpgrade,Yes, because it involves accessing and modifying files on disk, which typically requires file permissions.
/com/android/server/usage/UsageStatsDatabase.java,getLatestUsageStats,Yes, this method likely requires permissions because it deals with accessing usage statistics, which typically necessitates permissions to read usage data on the device.
/com/android/server/usage/UsageStatsDatabase.java,queryUsageStats,Yes, this method requires permissions as it involves accessing usage statistics, which is sensitive data and typically requires specific permissions like `PACKAGE_USAGE_STATS` in the Android SDK.
/com/android/server/usage/UsageStatsDatabase.java,readLocked,Yes, the method interacts with a file, which typically requires storage permissions in Android.
/com/android/server/usage/UsageStatsDatabase.java,applyRestoredPayload,Yes, this method likely requires permissions related to accessing usage statistics as it references `UsageStatsManager` and methods for retrieving usage statistics, which typically require specific permissions in Android (e.g., `PACKAGE_USAGE_STATS`).
/com/android/server/usage/UserUsageStatsService.java,queryEventsForPackage,Yes, this method likely requires permissions to access package events on an Android device, as it involves querying a package's usage events, which may involve sensitive data.
/com/android/server/usage/UserUsageStatsService.java,getBackupPayload,Yes, it likely requires permissions related to data backup or accessing backup contents in the database.
/com/android/server/usage/StorageStatsService.java,enforceStatsPermission,Yes, because it calls `checkStatsPermission`, which likely requires permission to access specific stats related to the calling UID or package.
/com/android/server/usage/StorageStatsService.java,checkStatsPermission,Yes, because it checks for the `PACKAGE_USAGE_STATS` permission to ensure the calling package has the right to access usage stats.
/com/android/server/usage/StorageStatsService.java,getCacheBytes,Yes, it requires permissions because it calls `enforceStatsPermission`, which indicates that specific permissions must be enforced to access the stats.
/com/android/server/usage/StorageStatsService.java,getCacheQuotaBytes,Yes, it appears to require permissions due to the call to `enforceStatsPermission`.
/com/android/server/usage/StorageStatsService.java,queryStatsForPackage,Yes, because it enforces permissions such as `INTERACT_ACROSS_USERS` and `STATS_ACCESS`, which are necessary for accessing storage statistics for a specific package.
/com/android/server/usage/StorageStatsService.java,queryStatsForUid,Yes, the method requires permissions. It uses `enforceCallingOrSelfPermission` and `enforceStatsPermission`, which are permission-checking methods in Android.
/com/android/server/usage/StorageStatsService.java,queryStatsForUser,Yes, because it enforces permissions for cross-user interaction and stats access.
/com/android/server/usage/StorageStatsService.java,queryExternalStatsForUser,Yes, the method `queryExternalStatsForUser` requires permissions. It enforces permissions like `INTERACT_ACROSS_USERS` and `STATS` to access external storage stats, indicating sensitive operations that necessitate appropriate permissions.
/com/android/server/usage/StorageStatsService.java,getAppIds,Yes, it requires permissions because it involves accessing installed applications which requires the `QUERY_ALL_PACKAGES` or relevant permissions in Android.
/com/android/server/usage/StorageStatsService.java,enforceCratesPermission,Yes, because it enforces the {@link android.Manifest.permission#MANAGE_CRATES} permission.
/com/android/server/usage/StorageStatsService.java,queryCratesForPackage,Yes, this method requires permissions because it checks for specific permissions (`enforceCallingOrSelfPermission` and `enforceCratesPermission`) to access certain app information, which indicates it involves user data or system-level operations.
/com/android/server/usage/StorageStatsService.java,queryCratesForUid,Yes, the method requires permissions. It enforces calling or self permissions related to user IDs and package access, indicating it operates on user-specific data and requires explicit permissions to access it.
/com/android/server/usage/StorageStatsService.java,queryCratesForUser,Yes, because the method involves checking permissions related to user interaction (`INTERACT_ACROSS_USERS` and `enforceCratesPermission`).
/com/android/server/usage/IntervalStats.java,getOrCreateUsageStats,Yes, this method likely requires permissions because it deals with usage statistics of a package, which typically involves accessing sensitive data about app usage that requires specific permissions in Android, such as `PACKAGE_USAGE_STATS`.
/com/android/server/usage/AppStandbyInternal.java,setAppStandbyBucket,Yes, because it involves modifying the standby bucket of another app, which typically requires specific permissions.
/com/android/server/usage/AppStandbyInternal.java,setAppStandbyBuckets,Yes, this method likely requires permissions to change app standby buckets, as it involves modifying system settings for multiple apps.
/com/android/server/usage/AppStandbyInternal.java,restoreAppsToRare,Yes, because it interacts with app usage stats which may require specific permissions.
/com/android/server/usage/AppStandbyInternal.java,restrictApp,Yes, because it modifies app usage restrictions which typically requires specific permissions related to app usage stats.
/com/android/server/usage/AppStandbyInternal.java,restrictApp,Yes, this method likely requires permissions to restrict app usage, as it affects app behavior and potentially user experience.
/com/android/server/usage/AppStandbyInternal.java,addActiveDeviceAdmin,Yes, this method likely requires permissions because it involves adding an active device administrator, which typically necessitates security permissions in Android.
/com/android/server/usage/UsageStatsProto.java,loadUsageStats,Yes, this method likely requires permissions. It interacts with usage statistics, which are sensitive data, and typically access to such data requires appropriate permissions in Android (e.g., `PACKAGE_USAGE_STATS`).
/com/android/server/usage/AppIdleHistory.java,readScreenOnTime,Yes, this method likely requires permissions to read from the file system, specifically related to accessing files.
/com/android/server/usage/AppIdleHistory.java,writeScreenOnTime,Yes, this method likely requires permissions because it involves writing to a file, which typically requires storage permissions in Android.
/com/android/server/usage/AppIdleHistory.java,reportUsage,Yes, the method `reportUsage` likely requires permissions related to accessing app usage statistics or the ability to modify app usage history.
/com/android/server/usage/AppIdleHistory.java,getAppUsageHistory,Yes, requires permissions to access app usage history data.
/com/android/server/usage/AppIdleHistory.java,setAppStandbyBucket,Yes, this method likely requires permissions because it manipulates app standby behavior, which typically requires elevated privileges to affect app activities.
/com/android/server/usage/AppIdleHistory.java,setAppStandbyBucket,Yes, this method likely requires permissions because it modifies app standby settings, which typically need user permissions to access or change for privacy and security reasons.
/com/android/server/usage/AppIdleHistory.java,noteRestrictionAttempt,Yes, this method likely requires permissions because it interacts with app usage statistics and restrictions tied to user management.
/com/android/server/usage/AppIdleHistory.java,getTimeSinceLastUsedByUser,Yes, this method likely requires permissions related to accessing app usage history and user-specific data, which are sensitive.
/com/android/server/usage/AppIdleHistory.java,setIdle,Yes, it likely requires permissions because it is interacting with app standby buckets, which may involve modifying the state of applications, potentially requiring specific permissions related to app management or system settings.
/com/android/server/usage/AppIdleHistory.java,readAppIdleTimes,Yes, this method likely requires permissions because it reads user-specific data, which may involve accessing files associated with user profiles.
/com/android/server/usage/AppIdleHistory.java,writeAppIdleTimes,Yes, the method requires permissions as it involves writing to a file, which typically requires file write permissions in Android.
/com/android/server/usage/UsageStatsProtoV2.java,writeUsageStats,Yes, this method likely requires permissions related to accessing and writing usage stats, such as `android.permission.PACKAGE_USAGE_STATS`.
/com/android/server/usage/StorageStatsManagerLocal.java,augmentStatsForPackageForUser,Yes, it requires the PACKAGE_USAGE_STATS permission to access stats for packages other than itself.
/com/android/server/usage/StorageStatsManagerLocal.java,augmentStatsForUid,Yes, the method requires permissions because it mentions that holding the PACKAGE_USAGE_STATS permission allows querying stats for packages other than the caller's own.
/com/android/server/usage/UsageStatsIdleService.java,scheduleJobInternal,Yes, scheduling jobs in Android typically requires permissions, specifically `android.permission.SCHEDULE_EXACT_ALARM` for exact alarms or related permissions for background job execution.
/com/android/server/usage/UsageStatsIdleService.java,onStartJob,Yes, because it involves usage of `UsageStatsManagerInternal` which typically requires the permission to access usage statistics.
/com/android/server/utils/ManagedApplicationService.java,connect,Yes, this method requires permissions to bind to a service, particularly if it's binding to a foreground service.
/com/android/server/utils/quota/UptcMap.java,delete,Yes, this method likely requires permissions because it refers to removing data associated with a user and a package, which generally involves accessing sensitive user data or application data that may require specific permissions to manage or modify in Android.
/com/android/server/utils/quota/UptcMap.java,delete,Yes, this method likely requires permissions because it involves removing data for a specific user and package, which typically requires explicit user permissions for data access and modification.
/com/android/server/autofill/FieldClassificationStrategy.java,getServiceInfo,Yes, this method likely requires permissions because it interacts with the PackageManager to resolve services, which typically requires specific permissions such as `QUERY_ALL_PACKAGES` or others depending on the nature of the services being accessed.
/com/android/server/autofill/FieldClassificationStrategy.java,getServiceComponentName,Yes, this method requires permission because it checks for the permission `Manifest.permission.BIND_AUTOFILL_FIELD_CLASSIFICATION_SERVICE`.
/com/android/server/autofill/FieldClassificationStrategy.java,getMetadataValue,Yes, this method requires permissions. Accessing application metadata typically requires permission to interact with the package manager and application resources.
/com/android/server/autofill/RemoteInlineSuggestionRenderService.java,getServiceInfo,Yes, this method requires permissions because it checks for the `BIND_INLINE_SUGGESTION_RENDER_SERVICE` permission associated with the `ServiceInfo`.
/com/android/server/autofill/PresentationStatsEventLogger.java,maybeSetInlinePresentationAndSuggestionHostUid,Yes, this method requires permissions because it accesses user-specific information (like the input method) and interacts with the package manager, which typically requires certain permissions in Android.
/com/android/server/autofill/AutofillManagerService.java,registerForExtraSettingsChanges,Yes, because it involves registering a `ContentObserver` for changes to system settings, which requires permissions related to accessing those settings.
/com/android/server/autofill/AutofillManagerService.java,enforceCallingPermissionForManagement,Yes, this method likely requires permission management (MANAGE_AUTO_FILL) as it enforces a calling permission for a specific management function.
/com/android/server/autofill/AutofillManagerService.java,removeAllSessions,Yes, the method requires permissions because it uses `enforceCallingPermissionForManagement`, indicating that specific permissions must be enforced for security reasons.
/com/android/server/autofill/AutofillManagerService.java,listSessions,Yes, requires permission for management as indicated by the call to `enforceCallingPermissionForManagement`.
/com/android/server/autofill/AutofillManagerService.java,reset,Yes, because it contains a call to `enforceCallingPermissionForManagement`, which indicates that permission is required for calling this method.
/com/android/server/autofill/AutofillManagerService.java,setLogLevel,Yes, it likely requires permissions because it interacts with system settings (Settings.Global) and manages logging levels, which generally necessitate specific permissions in the Android SDK.
/com/android/server/autofill/AutofillManagerService.java,getLogLevel,Yes, the method calls `enforceCallingPermissionForManagement`, which indicates that it likely requires specific permissions to ensure that the calling context has the rights to access this method.
/com/android/server/autofill/AutofillManagerService.java,getMaxPartitions,Yes, the method appears to enforce a calling permission for management, implying that permissions are required for accessing it.
/com/android/server/autofill/AutofillManagerService.java,setMaxPartitions,Yes, the method likely requires permissions because it involves calling `enforceCallingPermissionForManagement` and modifying global settings with `Settings.Global.putInt`, which typically requires specific permissions.
/com/android/server/autofill/AutofillManagerService.java,getMaxVisibleDatasets,Yes, the method enforces calling permission for management, indicating that specific permissions are required for its execution.
/com/android/server/autofill/AutofillManagerService.java,setMaxVisibleDatasets,Yes, it requires permissions because it involves modifying global settings, which typically requires permissions for security reasons.
/com/android/server/autofill/AutofillManagerService.java,calculateScore,Yes, the method contains a call to `enforceCallingPermissionForManagement`, which suggests that it requires permissions to enforce calling permissions.
/com/android/server/autofill/AutofillManagerService.java,setFullScreenMode,Yes, it likely requires permissions to enforce calling permission for management related to fullscreen mode.
/com/android/server/autofill/AutofillManagerService.java,setTemporaryAugmentedAutofillService,Yes, this method likely requires permissions because it deals with setting a temporary augmented autofill service, which typically involves managing autofill data and user input.
/com/android/server/autofill/AutofillManagerService.java,resetTemporaryAugmentedAutofillService,Yes, it requires permissions due to the `enforceCallingPermissionForManagement` method, which suggests permission enforcement is needed for management operations.
/com/android/server/autofill/AutofillManagerService.java,isDefaultAugmentedServiceEnabled,Yes, it requires permissions because it enforces calling permissions for management before checking if the default service is enabled.
/com/android/server/autofill/AutofillManagerService.java,setDefaultAugmentedServiceEnabled,Yes, the method requires permissions because it involves modifying settings for a user, which typically requires specific permissions in Android.
/com/android/server/autofill/AutofillManagerService.java,getFieldDetectionServiceName,Yes, it appears to enforce a calling permission for management, indicating that permissions are required to access this method.
/com/android/server/autofill/AutofillManagerService.java,setTemporaryDetectionService,Yes, because it likely involves managing a detection service, which may require permissions related to accessing user data or services.
/com/android/server/autofill/AutofillManagerService.java,resetTemporaryDetectionService,Yes, the method likely requires permissions as it involves enforcing calling permissions, which typically indicates a need for specific Android permissions.
/com/android/server/autofill/AutofillManagerService.java,requestSavedPasswordCount,Yes, the method likely requires permissions related to accessing saved passwords, as indicated by the call to `enforceCallingPermissionForManagement`.
/com/android/server/autofill/AutofillManagerService.java,injectAugmentedAutofillInfo,Yes, this method likely requires permissions related to autofill services and potentially accessing user data or package information.
/com/android/server/autofill/AutofillManagerService.java,setAugmentedAutofillWhitelist,Yes, this method likely requires permissions because it interacts with the Autofill service, which typically involves sensitive user data and could require user consent.
/com/android/server/autofill/AutofillManagerService.java,updateSession,Yes, this method likely requires permissions related to accessing user sessions or autofill services.
/com/android/server/autofill/AutofillManagerService.java,dump,Yes, because the method checks for dump permissions using `checkDumpPermission`.
/com/android/server/autofill/AutofillUriGrantsManager.java,grantUriPermissions,Yes, this method requires permissions because it deals with granting URI permissions, which typically requires specific permissions for accessing content providers or shared resources.
/com/android/server/autofill/AutofillUriGrantsManager.java,grantUriPermissions,Yes, this method requires permissions because it deals with granting URI permissions, which typically requires specific permissions to access or share data between applications.
/com/android/server/autofill/ui/SaveUi.java,startActivity,Yes, the `startActivity` method requires permissions because it initiates an activity, which generally requires permission (like `INTERNET`, `ACCESS_FINE_LOCATION`, etc.) depending on the activity being started and the data it needs to access.
/com/android/server/autofill/ui/OverlayControl.java,setOverlayAllowed,Yes, this method likely requires permissions because it involves operations related to system overlays, which typically require the `SYSTEM_ALERT_WINDOW` permission in Android.
/com/android/server/servicewatcher/ServiceWatcherImpl.java,bind,Yes, the method likely requires permissions because it involves binding to a service, which generally requires appropriate permissions defined in the AndroidManifest.xml for accessing services or specific features.
/com/android/server/servicewatcher/CurrentUserServiceSupplier.java,create,Yes, because the method involves service details and permission requirements which indicate that specific permissions may be necessary for accessing or interacting with the service.
/com/android/server/servicewatcher/CurrentUserServiceSupplier.java,createUnsafeForTestsOnly,Yes, it likely requires permissions due to the parameters related to actions and services, which often entail permission checks in Android.
/com/android/server/servicewatcher/CurrentUserServiceSupplier.java,register,Yes, this method likely requires permissions related to receiving user switch and unlock events, as it registers a receiver for those actions.
/com/android/server/servicewatcher/CurrentUserServiceSupplier.java,getServiceInfo,Yes, this method requires permissions because it interacts with services and includes checks against service permissions.
/com/android/server/servicewatcher/CurrentUserServiceSupplier.java,onReceive,Yes, this method requires permissions because it deals with user-related actions and potentially sensitive user data. Accessing user-specific actions like `ACTION_USER_SWITCHED` and `ACTION_USER_UNLOCKED` typically requires specific permissions related to user account management or system-level access.
/com/android/server/updates/CarrierIdInstallReceiver.java,postInstall,Yes, this method likely requires permissions because it interacts with `ContentResolver` to update a database, which typically involves accessing sensitive data and therefore requires appropriate permissions.
/com/android/server/updates/ConfigUpdateInstallReceiver.java,onReceive,Yes, this method likely requires permissions due to its involvement in installing an update and accessing content from an intent, which typically require specific permissions in an Android application (like `WRITE_EXTERNAL_STORAGE` or `REQUEST_INSTALL_PACKAGES`).
/com/android/server/updates/ConfigUpdateInstallReceiver.java,run,Yes, this method likely requires permissions. It involves checking and installing application updates, which typically requires permissions related to network access and package management.
/com/android/server/updates/ConfigUpdateInstallReceiver.java,getAltContent,Yes, this method requires permissions because it interacts with a `ContentResolver` to open an input stream, which generally requires permission to access data from other applications or the file system.
/com/android/server/updates/ConfigUpdateInstallReceiver.java,writeUpdate,Yes, it requires permission to write to the file system.
/com/android/server/updates/NetworkWatchlistInstallReceiver.java,postInstall,Yes, it may require permissions related to network access, as it interacts with the `NetworkWatchlistManager`.
/com/android/server/updates/ApnDbInstallReceiver.java,postInstall,Yes, this method likely requires permissions because it interacts with the `ContentResolver` and performs a deletion operation, which generally requires permissions related to modifying data in the Android content provider (e.g., WRITE_APN_SETTINGS).
/com/android/server/updates/CertificateTransparencyLogInstallReceiver.java,install,Yes, it requires permissions because it involves file system operations such as creating directories, setting permissions, and possibly modifying files, which typically require specific permissions on Android.
/com/android/server/updates/CertificateTransparencyLogInstallReceiver.java,installLog,Yes, it requires permissions because it involves file operations, which typically require storage permissions.
/com/android/server/updates/EmergencyNumberDbInstallReceiver.java,postInstall,Yes, requires permission to access telephony services.
/com/android/server/tv/TvRemoteProviderWatcher.java,start,Yes, because it involves registering a receiver and handling package actions which typically requires permissions related to access packages and broadcasts in Android.
/com/android/server/tv/TvRemoteProviderWatcher.java,verifyServiceTrusted,Yes, requires permissions. The method checks for `BIND_TV_REMOTE_SERVICE` and `TV_VIRTUAL_REMOTE_CONTROLLER` permissions.
/com/android/server/tv/TvRemoteProviderWatcher.java,hasNecessaryPermissions,Yes, the method checks for permissions related to the given package name.
/com/android/server/tv/TvInputHardwareManager.java,onBootPhase,Yes, this method likely requires permissions as it interacts with the HDMI Control Service, which typically requires permissions related to system services or hardware control.
/com/android/server/tv/TvInputHardwareManager.java,acquireHardware,Yes, it likely requires permissions because it interacts with hardware resources and system services that typically necessitate permissions in Android for access control.
/com/android/server/tv/TvInputHardwareManager.java,captureFrame,Yes, this method likely requires permissions related to capturing a TV input, such as accessing TV content or hardware resources.
/com/android/server/tv/TvInputHardwareManager.java,updateVolume,Yes, because it involves managing audio volume, which typically requires the `MODIFY_AUDIO_SETTINGS` permission.
/com/android/server/tv/TvInputHardwareManager.java,dump,Yes, the method requires permissions because it calls `checkDumpPermission`, which likely checks if the caller has the necessary permissions to access sensitive information or system details.
/com/android/server/tv/TvInputHardwareManager.java,setStreamVolume,Yes, setting the stream volume typically requires audio-related permissions in Android, such as `MODIFY_AUDIO_SETTINGS`.
/com/android/server/tv/TvRemoteServiceInput.java,sendKeyDown,Yes, because it likely involves input handling operations that may require specific permissions.
/com/android/server/tv/TvRemoteServiceInput.java,sendKeyUp,Yes, this method likely requires permissions because it involves sending key events, which can affect input handling and system security.
/com/android/server/tv/TvRemoteProviderProxy.java,bind,Yes, it likely requires permissions because it involves binding a service, which typically requires permissions in Android (e.g., BIND_SERVICE).
/com/android/server/tv/PersistentDataStore.java,save,Yes, this method likely requires permissions related to file access, as it involves creating and writing to a file (`FileOutputStream`).
/com/android/server/tv/PersistentDataStore.java,broadcastChangesIfNeeded,Yes, it requires permissions because it sends broadcasts, which may require specific permissions depending on the intent being sent.
/com/android/server/tv/tunerresourcemanager/TunerResourceManagerService.java,registerClientProfile,Yes, it requires permissions due to the calls to `enforceTrmAccessPermission` and `enforceTunerAccessPermission`, which likely enforce specific permissions.
/com/android/server/tv/tunerresourcemanager/TunerResourceManagerService.java,unregisterClientProfile,Yes, the method likely requires permission as it includes `enforceTrmAccessPermission`, indicating that a specific permission check is enforced when attempting to unregister a client profile.
/com/android/server/tv/tunerresourcemanager/TunerResourceManagerService.java,updateClientPriority,Yes, this method requires permissions because it calls `enforceTrmAccessPermission`, indicating a security check for appropriate access rights.
/com/android/server/tv/tunerresourcemanager/TunerResourceManagerService.java,isLowestPriority,Yes, because the method calls `enforceTrmAccessPermission`, which implies a permission check is necessary.
/com/android/server/tv/tunerresourcemanager/TunerResourceManagerService.java,setFrontendInfoList,Yes, the method appears to involve setting frontend information which may require specific permissions for accessing hardware or system resources related to tuning, hence it likely requires permission checks.
/com/android/server/tv/tunerresourcemanager/TunerResourceManagerService.java,setDemuxInfoList,Yes, the method involves enforcing access permissions, implying it requires specific permissions to execute.
/com/android/server/tv/tunerresourcemanager/TunerResourceManagerService.java,updateCasInfo,Yes, the method likely requires permissions to enforce access control, as indicated by the call to `enforceTrmAccessPermission`.
/com/android/server/tv/tunerresourcemanager/TunerResourceManagerService.java,requestFrontend,Yes, the method calls `enforceTunerAccessPermission` and `enforceTrmAccessPermission`, indicating it requires permissions related to tuner access.
/com/android/server/tv/tunerresourcemanager/TunerResourceManagerService.java,setMaxNumberOfFrontends,Yes, because it mentions enforcing permissions related to "Tuner" and "Trm" access.
/com/android/server/tv/tunerresourcemanager/TunerResourceManagerService.java,getMaxNumberOfFrontends,Yes, it requires permissions because the method calls `enforceTunerAccessPermission` and `enforceTrmAccessPermission`, which suggest access control based on specific permissions.
/com/android/server/tv/tunerresourcemanager/TunerResourceManagerService.java,shareFrontend,Yes, the method likely requires permissions because it involves sharing frontend resources, which typically requires specific access controls and permissions in an Android environment.
/com/android/server/tv/tunerresourcemanager/TunerResourceManagerService.java,transferOwner,Yes, the method requires permissions because it enforces tuner access and TRM access permissions as indicated by calls to `enforceTunerAccessPermission` and `enforceTrmAccessPermission`.
/com/android/server/tv/tunerresourcemanager/TunerResourceManagerService.java,requestDemux,Yes, the method calls `enforceTunerAccessPermission` and `enforceTrmAccessPermission`, indicating that it requires specific permissions to proceed with its functionality.
/com/android/server/tv/tunerresourcemanager/TunerResourceManagerService.java,requestDescrambler,Yes, because it calls methods `enforceDescramblerAccessPermission` and `enforceTrmAccessPermission` that likely check for permissions.
/com/android/server/tv/tunerresourcemanager/TunerResourceManagerService.java,requestCasSession,Yes, because it contains a permission check with `enforceTrmAccessPermission`.
/com/android/server/tv/tunerresourcemanager/TunerResourceManagerService.java,requestCiCam,Yes, it likely requires permissions because it involves accessing a component related to the CI CAM (Conditional Access Module), which typically needs permission checks in a security-sensitive context.
/com/android/server/tv/tunerresourcemanager/TunerResourceManagerService.java,requestLnb,Yes, because the method calls `enforceTunerAccessPermission` and `enforceTrmAccessPermission`, indicating that specific permissions are required for accessing the tuner.
/com/android/server/tv/tunerresourcemanager/TunerResourceManagerService.java,releaseFrontend,Yes, the method requires permissions because it calls `enforceTunerAccessPermission` and `enforceTrmAccessPermission`, which suggests it checks for specific access permissions related to the tuner and resource management functionality.
/com/android/server/tv/tunerresourcemanager/TunerResourceManagerService.java,releaseDemux,Yes, the method checks for access permissions like `enforceTunerAccessPermission` and `enforceTrmAccessPermission`, indicating it requires specific permissions to operate.
/com/android/server/tv/tunerresourcemanager/TunerResourceManagerService.java,releaseDescrambler,Yes, because the method enforces access permissions (`enforceTunerAccessPermission` and `enforceTrmAccessPermission`).
/com/android/server/tv/tunerresourcemanager/TunerResourceManagerService.java,releaseCasSession,Yes, this method requires permissions because it involves enforcing access control (`enforceTrmAccessPermission`) and validating resource access, which typically requires specific permissions in an Android context.
/com/android/server/tv/tunerresourcemanager/TunerResourceManagerService.java,releaseCiCam,Yes, because the method involves resource management that typically requires specific permissions in Android, such as access to hardware components.
/com/android/server/tv/tunerresourcemanager/TunerResourceManagerService.java,releaseLnb,Yes, because it enforces tuner and TRM access permissions.
/com/android/server/tv/tunerresourcemanager/TunerResourceManagerService.java,storeResourceMap,Yes, the method calls `enforceTrmAccessPermission`, which suggests that it requires permissions to access certain resources.
/com/android/server/tv/tunerresourcemanager/TunerResourceManagerService.java,clearResourceMap,Yes, this method likely requires permissions because it includes a call to `enforceTrmAccessPermission`, indicating that access control measures are in place.
/com/android/server/tv/tunerresourcemanager/TunerResourceManagerService.java,restoreResourceMap,Yes, the method calls `enforceTrmAccessPermission`, which implies that it requires special permissions to execute.
/com/android/server/tv/tunerresourcemanager/TunerResourceManagerService.java,acquireLock,Yes, this method requires permissions because it invokes `enforceTrmAccessPermission`, indicating a permission check.
/com/android/server/tv/tunerresourcemanager/TunerResourceManagerService.java,releaseLock,Yes, the method likely requires permissions since it calls `enforceTrmAccessPermission`, indicating a check for access rights.
/com/android/server/tv/tunerresourcemanager/TunerResourceManagerService.java,dump,Yes, because it checks for `DUMP` permission before executing the dump operation.
/com/android/server/tv/tunerresourcemanager/TunerResourceManagerService.java,getClientPriority,Yes, this method requires permissions because it calls `enforceTrmAccessPermission`, indicating that certain access rights are necessary to execute its functionality.
/com/android/server/tv/tunerresourcemanager/TunerResourceManagerService.java,getConfigPriority,Yes, this method likely requires permissions as it involves accessing specific configurations or resources, indicated by the `enforceTrmAccessPermission` invocation.
/com/android/server/tv/tunerresourcemanager/TunerResourceManagerService.java,checkIsForeground,Yes, this method likely requires permissions because it queries running app processes using `getRunningAppProcesses`, which typically necessitates the `GET_TASKS` permission in Android.
/com/android/server/tv/tunerresourcemanager/TunerResourceManagerService.java,enforceTrmAccessPermission,Yes, it checks for the permission 'android.permission.TUNER_RESOURCE_ACCESS'.
/com/android/server/tv/tunerresourcemanager/TunerResourceManagerService.java,enforceTunerAccessPermission,Yes, because it checks for the "android.permission.ACCESS_TV_TUNER" permission.
/com/android/server/tv/tunerresourcemanager/TunerResourceManagerService.java,enforceDescramblerAccessPermission,Yes, the method enforces access to a specific permission (`android.permission.ACCESS_TV_DESCRAMBLER`), which indicates a requirement for permission.
/com/android/server/restrictions/RestrictionsManagerService.java,getApplicationRestrictionsPerAdminForUser,Yes, because this method retrieves application restrictions for a specific user, which typically requires permissions related to user management or app restrictions in Android.
/com/android/server/restrictions/RestrictionsManagerService.java,requestPermission,Yes, requires permissions. This method requests permission which typically requires the app to have the appropriate permissions declared in its manifest.
/com/android/server/restrictions/RestrictionsManagerService.java,notifyPermissionResponse,Yes, the method likely requires permissions because it involves broadcasting with `sendBroadcastAsUser` which typically requires specific permissions to operate securely in the Android environment.
/com/android/server/appprediction/AppPredictionManagerService.java,enforceCallingPermissionForManagement,Yes, it likely requires permissions related to managing app predictions, indicated by `MANAGE_APP_PREDICTIONS`.
/com/android/server/appprediction/AppPredictionManagerService.java,runForUserLocked,Yes, because the method checks for the `PACKAGE_USAGE_STATS` permission before executing its main logic.
/com/android/server/print/PrintManagerService.java,print,Yes, the method likely requires permissions to access resources related to printing and user state, as it involves checking user permissions and possibly accessing user-specific data (`resolveCallingUserEnforcingPermissions`, `resolveCallingAppEnforcingPermissions`).
/com/android/server/print/PrintManagerService.java,getPrintJobInfos,Yes, requires permissions. The method involves resolving calling user and app permissions which indicates it requires permission checks.
/com/android/server/print/PrintManagerService.java,getPrintJobInfo,Yes, the method requires permissions because it involves accessing print job information which typically requires the app to have specific permissions related to print services or user data.
/com/android/server/print/PrintManagerService.java,getCustomPrinterIcon,Yes, the method requires permissions, as it involves resolving the calling user and accessing user states, which typically requires permission checks in the Android framework.
/com/android/server/print/PrintManagerService.java,cancelPrintJob,Yes, this method requires permissions because it involves resolving user and app identities, likely needing access control to manage print jobs securely.
/com/android/server/print/PrintManagerService.java,restartPrintJob,Yes, this method likely requires permissions because it involves user and application validation (e.g., `resolveCallingUserEnforcingPermissions`, `resolveCallingAppEnforcingPermissions`), which typically necessitate specific permissions to manage print jobs securely.
/com/android/server/print/PrintManagerService.java,getPrintServices,Yes, this method requires permissions because it enforces the `READ_PRINT_SERVICES` permission.
/com/android/server/print/PrintManagerService.java,isPrintServiceEnabled,Yes, it requires permissions. The method interacts with print services and checks for user ID security, which typically involves permissions related to accessing and managing user services.
/com/android/server/print/PrintManagerService.java,getPrintServiceRecommendations,Yes, the method requires permissions because it enforces calling or self permission for `READ_PRINT_SERVICE_RECOMMENDATIONS`.
/com/android/server/print/PrintManagerService.java,createPrinterDiscoverySession,Yes, this method likely requires permissions as it involves user state and printer discovery, which may involve accessing user-specific data or hardware resources.
/com/android/server/print/PrintManagerService.java,destroyPrinterDiscoverySession,Yes, it requires permissions. The method involves user ID resolution and managing user states, which typically require permission checks in Android for user-related operations.
/com/android/server/print/PrintManagerService.java,startPrinterDiscovery,Yes, this method likely requires permissions because it interacts with user-specific resources and potentially involves operations that require authorization based on the calling user context.
/com/android/server/print/PrintManagerService.java,stopPrinterDiscovery,Yes, the method involves resolving the calling user and user state, which typically requires user-related permissions in Android.
/com/android/server/print/PrintManagerService.java,validatePrinters,Yes, the method involves resolving user permissions and states, indicating that it likely requires permissions to access user data or resources associated with printers.
/com/android/server/print/PrintManagerService.java,startPrinterStateTracking,Yes, this method requires permissions because it involves user identity and tracking printer state, which typically requires user-related permissions in Android.
/com/android/server/print/PrintManagerService.java,addPrintJobStateChangeListener,Yes, this method likely requires permissions because it involves resolving calling user and app IDs, which typically entails checking permissions related to user and application contexts in Android.
/com/android/server/print/PrintManagerService.java,addPrintServicesChangeListener,Yes, this method requires permission because it enforces the `READ_PRINT_SERVICES` permission to ensure that only authorized calls can register a listener for print service changes.
/com/android/server/print/PrintManagerService.java,removePrintServicesChangeListener,Yes, the method requires the `READ_PRINT_SERVICES` permission to enforce permission checks for accessing print service change listeners.
/com/android/server/print/PrintManagerService.java,removePrintServiceRecommendationsChangeListener,Yes, because the method enforces permissions related to print service recommendations.
/com/android/server/print/PrintManagerService.java,dump,Yes, this method requires permissions. It checks for a dump permission before proceeding with its functionality.
/com/android/server/print/PrintManagerService.java,getBindInstantServiceAllowed,Yes, this method likely requires permission because it checks the calling UID against predefined system UIDs (SHELL_UID and ROOT_UID), indicating it may involve restricted operations that typically require specific permissions.
/com/android/server/print/PrintManagerService.java,setBindInstantServiceAllowed,Yes, this method requires permissions because it can only be called by certain UID (user IDs), specifically the shell UID or root UID, which implies security restrictions.
/com/android/server/print/PrintManagerService.java,registerContentObservers,Yes, because it involves registering a content observer, which typically requires permissions to read or manipulate data from a content provider.
/com/android/server/print/PrintManagerService.java,resolveCallingAppEnforcingPermissions,Yes, because it checks for the permission `com.android.printspooler.permission.ACCESS_ALL_PRINT_JOBS` before returning the app ID.
/com/android/server/print/PrintManagerService.java,resolveCallingPackageNameEnforcingSecurity,Yes, the method interacts with package management and requires permissions related to accessing packages and their information.
/com/android/server/print/RemotePrintServiceRecommendationService.java,getServiceIntent,Yes, the method requires permission because it involves binding to a print recommendation service, which requires the `BIND_PRINT_RECOMMENDATION_SERVICE` permission.
/com/android/server/speech/SpeechRecognitionManagerService.java,onStart,Yes, because it involves speech recognition services which require specific permissions such as `RECORD_AUDIO`.
/com/android/server/speech/SpeechRecognitionManagerService.java,enforceCallingPermissionForManagement,Yes, it requires permissions because it references `MANAGE_SPEECH_RECOGNITION`, which is a permission-related operation.
/com/android/server/speech/RemoteSpeechRecognitionService.java,startListening,Yes, because starting a listening session for recognition typically requires audio recording permissions.
/com/android/server/storage/DiskStatsFileLogger.java,dumpToFile,Yes, this method requires permissions because it involves writing to a file, which necessitates storage-related permissions on Android devices.
/com/android/server/storage/CacheQuotaStrategy.java,getUnfulfilledRequests,Yes, the method likely requires permissions to access usage stats and application info, which could be restricted by the system for privacy reasons.
/com/android/server/storage/CacheQuotaStrategy.java,pushProcessedQuotas,Yes, it likely requires permissions as it seems to deal with setting quotas related to system resources and user data, which typically necessitates specific permissions in Android (e.g., modifying app quotas).
/com/android/server/storage/CacheQuotaStrategy.java,getServiceComponentName,Yes, this method requires permissions. It interacts with package management and possibly service components, which often necessitates appropriate permissions to access or modify system services.
/com/android/server/storage/CacheQuotaStrategy.java,writeXmlToFile,Yes, this method requires permissions because it involves writing to a file, which typically requires storage permissions in Android.
/com/android/server/storage/FileCollector.java,getMeasurementResult,Yes, this method likely requires storage permissions to access a directory and collect file data.
/com/android/server/storage/FileCollector.java,getMeasurementResult,Yes, requires permissions. The method interacts with device storage, which generally requires permissions like READ_EXTERNAL_STORAGE or ACCESS_MEDIA_LOCATION.
/com/android/server/storage/DiskStatsLoggingService.java,logToFile,Yes, because it involves file operations, which typically require storage permissions in Android.
/com/android/server/storage/DeviceStorageMonitorService.java,checkHigh,Yes, because the method interacts with storage, which typically requires permissions like `READ_EXTERNAL_STORAGE` or `WRITE_EXTERNAL_STORAGE`.
/com/android/server/storage/DeviceStorageMonitorService.java,dump,Yes, this method requires permissions because it checks for dump permissions through `checkDumpPermission`, indicating sensitive operations may be involved.
/com/android/server/storage/DeviceStorageMonitorService.java,onShellCommand,Yes, this method requires permissions. It enforces the "android.permission.DEVICE_POWER" permission to control power management operations.
/com/android/server/storage/DeviceStorageMonitorService.java,updateNotifications,Yes, this method requires permissions. It interacts with Notifications and may trigger system alerts, which typically requires permissions for displaying notifications and potentially accessing storage information.
/com/android/server/storage/DeviceStorageMonitorService.java,updateBroadcasts,Yes, because the method involves sending broadcasts, which typically requires permissions in Android.
/com/android/server/storage/StorageSessionController.java,notifyVolumeStateChanged,Yes, this method likely requires permissions related to storage access, as it interacts with the Storage Service and volume state changes in Android.
/com/android/server/storage/StorageSessionController.java,freeCache,Yes, because it interacts with external storage, which typically requires permissions.
/com/android/server/storage/StorageSessionController.java,initExternalStorageServiceComponent,Yes, this method requires permissions because it involves resolving an external storage service component, specifically checking if it requires the `BIND_EXTERNAL_STORAGE_SERVICE` permission.
/com/android/server/storage/StorageSessionController.java,resolveExternalStorageServiceAsUser,Yes, this method likely requires permissions related to accessing external storage services in order to resolve services as a user.
/com/android/server/storage/AppCollector.java,getPackageStats,Yes, this method likely requires permissions to access package stats, which involves reading application storage and statistics.
/com/android/server/storage/AppCollector.java,handleMessage,Yes, this method likely requires permissions due to the usage of `PackageManager` and `StorageStatsManager`, which typically require permissions to access installed applications and storage statistics in Android.
/com/android/server/storage/StorageUserConnection.java,connectIfNeeded,Yes, because it involves binding to a service which typically requires permissions to access external storage or other related services in Android.
/com/android/server/firewall/IntentFirewall.java,checkBroadcast,Yes, this method likely requires permissions related to sending or receiving broadcasts, as it involves checking intents and their associated components.
/com/android/server/firewall/IntentFirewall.java,checkComponentPermission,Yes, it checks the permission of components based on the parameters provided.
/com/android/server/firewall/IntentFirewall.java,checkComponentPermission,Yes, the method checks if the caller has a specific permission, which implies that permissions are required for access control.
/com/android/server/firewall/SenderPermissionFilter.java,matches,Yes, this method likely requires permissions because it checks component permissions based on UID and PID, which are related to access control and security in Android.
/com/android/server/firewall/SenderPermissionFilter.java,newFilter,Yes, this method requires permissions because it checks for a specific permission name and throws an exception if it is not specified.
/com/android/server/vcn/util/PersistableBundleUtils.java,readFromDisk,Yes, this method requires permissions because it involves reading a file from the disk, which requires storage access permissions in Android.
/com/android/server/vcn/util/PersistableBundleUtils.java,writeToDisk,Yes, writing to disk typically requires permissions related to file storage, such as `WRITE_EXTERNAL_STORAGE` or `WRITE_INTERNAL_STORAGE`.
/com/android/server/vcn/routeselection/UnderlyingNetworkController.java,registerOrUpdateNetworkRequests,Yes, this method requires permissions because it interacts with the `ConnectivityManager`, which typically requires permissions related to network state and access.
/com/android/server/search/SearchManagerService.java,getSearchables,Yes, it requires permissions because it accesses user information and system services related to users, which typically require specific permissions in Android (like accessing user accounts).
/com/android/server/search/SearchManagerService.java,dump,Yes, the method checks for a permission (`checkDumpPermission`) before proceeding, which implies it requires the appropriate permission to be granted.
/com/android/server/search/Searchables.java,queryIntentActivities,Yes, this method requires permissions because it queries activities that can handle the specified intent, which may involve accessing information about installed applications and their capabilities.
/com/android/server/search/Searchables.java,createFilterdSearchableInfoList,Yes, it requires permissions. The method interacts with `PackageManagerInternal` and checks access to components, which typically requires specific permissions in Android.
/com/android/server/search/Searchables.java,createFilterdResolveInfoList,Yes, the method requires permissions because it accesses components based on the calling UID and user ID, which may involve checking permissions related to accessing device services.
/com/android/server/search/Searchables.java,getGlobalSearchActivity,Yes, this method likely requires permissions because it involves checking access to a component, which may involve user authentication and security checks.
/com/android/server/testing/shadows/ShadowFullBackup.java,backupToTar,Yes, this method requires permissions to read/write files in the file system.
/com/android/server/testing/shadows/ShadowApplicationPackageManager.java,setApplicationEnabledSetting,Yes, this method likely requires permissions because it modifies the enabled state of an application, which typically requires protection against unauthorized changes in Android.
/com/android/server/testing/shadows/ShadowApplicationPackageManager.java,getPackageInfoAsUser,Yes, this method likely requires permissions to access package information for a specific user, which is sensitive in nature.
/com/android/server/testing/shadows/ShadowApplicationPackageManager.java,getInstalledPackagesAsUser,Yes, this method likely requires permissions because it deals with retrieving installed packages, which typically involves accessing sensitive information.
/com/android/server/testing/shadows/ShadowApplicationPackageManager.java,getPackageUidAsUser,Yes, this method likely requires permissions because it interacts with package UID information, which is sensitive and typically requires appropriate permissions to access in Android.
/com/android/server/usb/MtpNotificationManager.java,showNotification,Yes, because showing notifications may require permissions such as `POST_NOTIFICATIONS` for Android 13 (API level 33) and above.
/com/android/server/usb/MtpNotificationManager.java,hideNotification,Yes, because it interacts with the NotificationManager, which requires permission to modify notifications.
/com/android/server/usb/UsbAlsaMidiDevice.java,register,Yes, the method likely requires permissions for accessing the `MidiManager`, which may involve interacting with the device's MIDI capabilities or hardware, requiring specific permissions.
/com/android/server/usb/UsbHandlerManager.java,confirmUsbHandler,Yes, this method likely requires permissions related to USB device access because it interacts with `UsbDevice` and `UsbAccessory`. You may need the `android.permission.MANAGE_USB` permission for managing USB connections.
/com/android/server/usb/UsbHandlerManager.java,selectUsbHandler,Yes, this method may require permissions because it starts an activity with `startActivityAsUser`, which typically requires permission to manage or launch activities on behalf of the user.
/com/android/server/usb/UsbAlsaDevice.java,startInput,Yes, it likely requires permissions because it involves interacting with a USB input device, which typically requires user consent and permissions in Android.
/com/android/server/usb/UsbUserSettingsManager.java,canBeDefault,Yes, because this method interacts with USB accessories, which typically requires appropriate permissions in the Android manifest, such as `android.permission.USB_PERMISSION`.
/com/android/server/usb/UsbUserSettingsManager.java,getPackageActivities,Yes, this method likely requires permissions, specifically the permission to access package information on the device.
/com/android/server/usb/UsbAlsaManager.java,onEvent,Yes, requires permissions for file access events like CREATE and DELETE.
/com/android/server/usb/UsbAlsaManager.java,addMidiDevice,Yes, because the method interacts with USB devices, which typically requires USB permissions in Android.
/com/android/server/usb/UsbAlsaManager.java,usbDeviceRemoved,Yes, because the method deals with USB devices, which usually requires permissions like `android.permission.USB_ACCESS`.
/com/android/server/usb/UsbPortManager.java,updateContaminantNotification,Yes, the method requires permissions because it involves creating and managing notifications, which typically requires the `POST_NOTIFICATIONS` permission in Android.
/com/android/server/usb/UsbPortManager.java,enableUsbDataWhileDocked,Yes, it likely requires permission to access USB functionalities, which are considered sensitive operations in Android.
/com/android/server/usb/UsbPortManager.java,enableUsbData,Yes, it likely requires permissions because it interacts with USB data signaling, which typically requires specific permissions to access USB devices in Android.
/com/android/server/usb/UsbPortManager.java,resetUsbPort,Yes, the method likely requires permissions because it interacts with USB ports, which typically necessitate specific USB-related permissions in Android for security and privacy reasons.
/com/android/server/usb/UsbPortManager.java,sendPortChangedBroadcastLocked,Yes, because it sends a broadcast with the action `ACTION_USB_PORT_CHANGED`, which requires `Manifest.permission.MANAGE_USB` permission.
/com/android/server/usb/UsbPortManager.java,sendComplianceWarningBroadcastLocked,Yes, because it sends a broadcast with the action `ACTION_USB_PORT_COMPLIANCE_CHANGED` which may require the `MANAGE_USB` permission.
/com/android/server/usb/UsbService.java,openDevice,Yes, this method likely requires permissions because it interacts with device APIs and user data, which typically require specific permissions in Android.
/com/android/server/usb/UsbService.java,getCurrentAccessory,Yes, this method requires permission because it interacts with the USB accessory manager, which typically requires specific permissions to access connected devices.
/com/android/server/usb/UsbService.java,openAccessory,Yes, the method `openAccessory` likely requires permissions, as it involves interacting with a `UsbAccessory`, which typically necessitates USB-related permissions such as `MANAGE_USB` or similar.
/com/android/server/usb/UsbService.java,getControlFd,Yes, the method enforces a permission check for `ACCESS_MTP`, indicating that it requires permission to access MTP functionality.
/com/android/server/usb/UsbService.java,setDevicePackage,Yes, this method requires the `MANAGE_USB` permission, which is enforced within the method to ensure that the calling context has adequate rights to perform the action.
/com/android/server/usb/UsbService.java,setAccessoryPackage,Yes, the method requires permissions (specifically, "MANAGE_USB") to enforce calling or self permission checks related to USB accessory management.
/com/android/server/usb/UsbService.java,addDevicePackagesToPreferenceDenied,Yes, the method requires the `MANAGE_USB` permission to enforce calling or self permission for USB management operations.
/com/android/server/usb/UsbService.java,removeDevicePackagesFromPreferenceDenied,Yes, this method requires the `MANAGE_USB` permission to enforce calling or self permission for accessing USB device functionalities.
/com/android/server/usb/UsbService.java,removeAccessoryPackagesFromPreferenceDenied,Yes, this method requires permissions. It enforces the "MANAGE_USB" permission, indicating that it needs access to manage USB accessories.
/com/android/server/usb/UsbService.java,setDevicePersistentPermission,Yes, the method requires the `MANAGE_USB` permission to enforce calling or self permission checks.
/com/android/server/usb/UsbService.java,setAccessoryPersistentPermission,Yes, the method requires the `MANAGE_USB` permission to enforce calling or self permission for accessing USB accessories.
/com/android/server/usb/UsbService.java,hasDevicePermission,Yes, this method likely requires permissions to access device-specific functionalities, as it checks for permission related to a USB device and interacts with user permissions.
/com/android/server/usb/UsbService.java,hasDevicePermissionWithIdentity,Yes, this method requires the `MANAGE_USB` permission to enforce calling or self permission checks.
/com/android/server/usb/UsbService.java,hasAccessoryPermission,Yes, this method likely requires permissions because it checks access permissions related to a USB accessory, implying that permission checks are involved.
/com/android/server/usb/UsbService.java,hasAccessoryPermissionWithIdentity,Yes, the method checks for `MANAGE_USB` permission, which is necessary for managing USB accessory permissions.
/com/android/server/usb/UsbService.java,requestDevicePermission,Yes, the method likely requires permissions to access USB devices and make requests for device permissions.
/com/android/server/usb/UsbService.java,requestAccessoryPermission,Yes, the method `requestAccessoryPermission` likely requires permissions to access USB accessories, as it deals with requesting permissions related to accessing a particular USB accessory specified by the parameters.
/com/android/server/usb/UsbService.java,grantDevicePermission,Yes, this method requires the `MANAGE_USB` permission to enforce calling or self permission for USB device access.
/com/android/server/usb/UsbService.java,grantAccessoryPermission,Yes, it requires the `MANAGE_USB` permission to grant accessory permission.
/com/android/server/usb/UsbService.java,hasDefaults,Yes, the method checks permissions using `enforceCallingOrSelfPermission` which requires the appropriate permission to be declared in the app's manifest.
/com/android/server/usb/UsbService.java,clearDefaults,Yes, this method requires the 'MANAGE_USB' permission to enforce calling or self permission checks.
/com/android/server/usb/UsbService.java,setCurrentFunctions,Yes, the method requires the `MANAGE_USB` permission to enforce calling or self-permission.
/com/android/server/usb/UsbService.java,getCurrentFunctions,Yes, this method requires permission because it enforces the `MANAGE_USB` permission for accessing certain functions related to USB device management.
/com/android/server/usb/UsbService.java,setScreenUnlockedFunctions,Yes, this method requires permissions because it enforces the `MANAGE_USB` permission.
/com/android/server/usb/UsbService.java,getScreenUnlockedFunctions,Yes, it requires permission to manage USB (MANAGE_USB).
/com/android/server/usb/UsbService.java,getCurrentUsbSpeed,Yes, the method requires the `MANAGE_USB` permission to enforce calling or self-permission for accessing USB speed.
/com/android/server/usb/UsbService.java,getGadgetHalVersion,Yes, requires permission. The method enforces the `MANAGE_USB` permission, indicating that it requires this permission to access USB-related functionalities.
/com/android/server/usb/UsbService.java,resetUsbGadget,Yes, the method requires the `MANAGE_USB` permission to enforce calling or self permission for USB management.
/com/android/server/usb/UsbService.java,resetUsbPort,Yes, the method requires the `MANAGE_USB` permission to enforce calling or self permission for USB operations.
/com/android/server/usb/UsbService.java,getPorts,Yes, it requires the `MANAGE_USB` permission to enforce calling or self permission.
/com/android/server/usb/UsbService.java,getPortStatus,Yes, the method calls `enforceCallingOrSelfPermission` with `MANAGE_USB`, indicating it requires this permission to access USB port status.
/com/android/server/usb/UsbService.java,setPortRoles,Yes, requires permission because it calls `enforceCallingOrSelfPermission` with `MANAGE_USB`, indicating it needs USB management permissions.
/com/android/server/usb/UsbService.java,enableLimitPowerTransfer,Yes, the method requires permission. It enforces the `MANAGE_USB` permission to access USB management features.
/com/android/server/usb/UsbService.java,enableContaminantDetection,Yes, it requires the `MANAGE_USB` permission to enforce calling or self permission.
/com/android/server/usb/UsbService.java,getUsbHalVersion,Yes, the method requires the `MANAGE_USB` permission to enforce calling or self-permission checks for managing USB.
/com/android/server/usb/UsbService.java,enableUsbData,Yes, this method requires permissions. It checks for `MANAGE_USB` permission, which is needed to perform USB operations.
/com/android/server/usb/UsbService.java,enableUsbDataWhileDocked,Yes, the method requires the "MANAGE_USB" permission to enforce calling or self permission for USB operations.
/com/android/server/usb/UsbService.java,setUsbDeviceConnectionHandler,Yes, the method requires permissions because it calls `enforceCallingOrSelfPermission` with the `MANAGE_USB` permission, which is a restricted permission for managing USB connections.
/com/android/server/usb/UsbService.java,registerForDisplayPortEvents,Yes, this method requires the `MANAGE_USB` permission, which is indicated by the `enforceCallingOrSelfPermission` method call checking for it.
/com/android/server/usb/UsbService.java,unregisterForDisplayPortEvents,Yes, because it enforces the `MANAGE_USB` permission.
/com/android/server/usb/UsbService.java,dump,Yes, because the method checks for dump permission before proceeding.
/com/android/server/usb/UsbSerialReader.java,getSerial,Yes, because it checks permissions (e.g., `checkPermission` method) related to USB access, which typically requires specific permissions in the Android manifest.
/com/android/server/usb/UsbSettingsManager.java,getSettingsForProfileGroup,Yes, it likely requires permissions because it deals with user profiles and settings management.
/com/android/server/usb/UsbSettingsManager.java,remove,Yes, this method likely requires permissions due to its functionality involving user management, which typically requires specific permissions in Android to protect user data and privacy.
/com/android/server/usb/UsbSettingsManager.java,dump,Yes, because it dumps all settings of all users, which may include sensitive user information.
/com/android/server/usb/UsbDeviceManager.java,onReceive,Yes, this method likely requires permissions related to USB access, such as `android.permission.USB_PERMISSION`, to interact with USB hardware resources.
/com/android/server/usb/UsbDeviceManager.java,onReceive,Yes, this method likely requires permissions because it interacts with USB devices, which typically requires specific permissions (like `android.permission.USB_ACCESSORY` or `android.permission.USB_PERMISSION`) to access hardware features in Android.
/com/android/server/usb/UsbDeviceManager.java,startAccessoryMode,Yes, it likely requires permissions as it involves USB accessory management, which typically requires specific permissions like `android.permission.USB_ACCESSORY`.
/com/android/server/usb/UsbDeviceManager.java,setAdbEnabled,Yes, this method likely requires permissions as enabling ADB (Android Debug Bridge) involves modifying system settings, which typically require elevated permissions.
/com/android/server/usb/UsbDeviceManager.java,isUsbTransferAllowed,Yes, it requires permissions related to user restrictions, as it checks for USB file transfer restrictions.
/com/android/server/usb/UsbDeviceManager.java,broadcastUsbAccessoryHandshake,Yes, the method likely requires permissions to broadcast intents related to USB accessory management, specifically for receiving USB accessory events.
/com/android/server/usb/UsbDeviceManager.java,finishBoot,Yes, this method likely requires permissions related to USB functionality and device management, given its references to USB states and accessory handling.
/com/android/server/usb/UsbDeviceManager.java,updateUsbNotification,Yes, the `updateUsbNotification` method requires permissions because it interacts with notifications and may require specific permissions related to managing notifications, particularly manipulating user notifications in Android.
/com/android/server/usb/UsbDeviceManager.java,isAdbEnabled,Yes, this method likely requires permission because accessing ADB (Android Debug Bridge) status may involve sensitive operations that require user consent.
/com/android/server/usb/UsbDeviceManager.java,updateAdbNotification,Yes, this method likely requires permissions because it interacts with the notification manager, which typically requires the `POST_NOTIFICATIONS` permission in Android.
/com/android/server/usb/UsbDeviceManager.java,getChargingFunctions,Yes, the method interacts with USB functionality, which may require permissions related to USB access.
/com/android/server/usb/UsbDeviceManager.java,setSystemProperty,Yes, because modifying system properties typically requires system-level permissions.
/com/android/server/usb/UsbDeviceManager.java,putGlobalSettings,Yes, because the method interacts with global settings, which typically requires permissions like `WRITE_SETTINGS` in Android.
/com/android/server/usb/UsbDeviceManager.java,setEnabledFunctions,Yes, it likely requires permissions to manage USB functions, as changes to USB settings typically involve hardware access.
/com/android/server/usb/UsbDeviceManager.java,applyAdbFunction,Yes, this method likely requires permissions because it involves ADB (Android Debug Bridge) functions that typically need special permissions to access or modify device settings.
/com/android/server/usb/UsbDeviceManager.java,trySetEnabledFunctions,Yes, this method likely requires permissions related to USB configuration and management.
/com/android/server/usb/UsbDeviceManager.java,openAccessory,Yes, because it involves opening a USB accessory which typically requires permission to access USB devices.
/com/android/server/usb/UsbPermissionManager.java,getPermissionsForUser,Yes, the method likely requires permissions because it involves user-specific data and USB permissions management, which are generally sensitive operations that require explicit permissions in Android.
/com/android/server/usb/UsbPermissionManager.java,usbAccessoryRemoved,Yes, because it interacts with USB accessories and may involve broadcasting, which typically requires permissions related to USB access and broadcast.
/com/android/server/usb/UsbPermissionManager.java,dump,Yes, the method likely requires permissions because it interacts with `UserManager` and accesses user permissions, which typically requires permission checks for security and privacy reasons (e.g., `android.permission.GET_ACCOUNTS` or similar).
/com/android/server/usb/UsbDirectMidiDevice.java,create,Yes, this method likely requires permissions related to USB access, as it involves creating an `UsbDirectMidiDevice`, which typically requires permission to communicate with USB devices.
/com/android/server/usb/UsbDirectMidiDevice.java,calculateDefaultMidiProtocol,Yes, because it uses `UsbManager` and `UsbDeviceConnection`, which typically require USB permissions in an Android app (like `android.permission.USB_PERMISSION`).
/com/android/server/usb/UsbDirectMidiDevice.java,openLocked,Yes, the method `openLocked` likely requires permissions. It interacts with USB devices, which usually necessitates permissions such as `android.permission.USB_PERMISSION`.
/com/android/server/usb/UsbDirectMidiDevice.java,run,Yes, this method likely requires permissions related to USB operations, as it involves interacting with `UsbRequest` and potentially managing USB connections and data transfers, which typically need explicit user permissions in Android.
/com/android/server/usb/UsbDirectMidiDevice.java,register,Yes, the method likely requires permissions because it interacts with USB devices and MIDI functionality, which typically necessitates specific permissions in Android, such as `android.permission.USB_PERMISSION` or similar related permissions for accessing USB hardware.
/com/android/server/usb/UsbDirectMidiDevice.java,updateUsbInterface,Yes, because accessing USB interfaces typically requires permission to interact with connected USB devices in Android.
/com/android/server/usb/hal/gadget/UsbGadgetHal.java,setCurrentUsbFunctions,Yes, this method likely requires permissions related to USB access, as it deals with USB gadget configuration and interactions.
/com/android/server/usb/hal/gadget/UsbGadgetAidl.java,setCurrentUsbFunctions,Yes, this method likely requires permissions because it seems to interact with USB functions, which typically requires specific system-level permissions in Android.
/com/android/server/usb/hal/gadget/UsbGadgetAidl.java,setCurrentUsbFunctionsCb,Yes, the method interacts with USB functions, which typically requires permissions such as "android.permission.MANAGE_USB" or other related USB permissions depending on the specific actions being performed.
/com/android/server/usb/hal/gadget/UsbGadgetHidl.java,setCurrentUsbFunctions,Yes, because interacting with USB functions typically requires permissions to access hardware resources on the device.
/com/android/server/usb/hal/gadget/UsbGadgetHalInstance.java,getInstance,Yes, this method likely requires permissions related to USB device access, such as `android.permission.USB_PERMISSION`, as it interacts with USB devices and services.
/com/android/server/usb/hal/port/UsbPortHal.java,switchDataRole,Yes, this method likely requires permissions related to managing USB devices or roles, as it involves switching USB port data roles.
/com/android/server/usb/hal/port/UsbPortHidl.java,enableUsbData,Yes, because enabling USB data typically requires permissions related to USB access in the Android system.
/com/android/server/usb/descriptors/UsbDescriptor.java,getUsbDescriptorString,Yes, this method requires permissions to access USB devices in Android.
/com/android/server/usb/descriptors/UsbMidiBlockParser.java,calculateMidiType,Yes, the method requires USB permissions to access and communicate with USB devices.
/com/android/server/usb/descriptors/UsbDescriptorParser.java,allocDescriptor,Yes, this method requires permissions because it interacts with USB descriptors, which typically requires specific permissions (e.g., `android.permission.USB_PERMISSION`) to access USB devices in Android.
/com/android/server/usb/descriptors/UsbDescriptorParser.java,getInterfaceDescriptorsForClass,Yes, because it interacts with USB descriptors which typically require USB-related permissions in Android.
/com/android/server/usb/descriptors/UsbDescriptorParser.java,getACInterfaceDescriptors,Yes, this method requires permission, specifically for USB access in Android, which is generally controlled by permissions like `android.permission.USB_PERMISSION`. This is needed for applications to communicate with USB devices.
/com/android/server/usb/descriptors/UsbDescriptorParser.java,calculateNumLegacyMidiPorts,Yes, it requires permissions related to USB access as it interacts with USB descriptors and endpoints.
/com/android/server/soundtrigger_middleware/SoundTriggerDuplicateModelHandler.java,reboot,Yes, it likely requires permissions as rebooting a device typically requires elevated privileges or specific permissions in Android.
/com/android/server/soundtrigger_middleware/SoundTriggerHalEnforcer.java,reboot,Yes, the `reboot` method likely requires permissions related to device management or system-level operations, as rebooting a device typically requires elevated privileges.
/com/android/server/soundtrigger_middleware/SoundTriggerHw2Compat.java,reboot,Yes, the `reboot` method likely requires permissions because it typically involves system-level operations that affect device state, such as restarting the device.
/com/android/server/soundtrigger_middleware/SoundTriggerHw2Compat.java,startRecognition,Yes, this method likely requires permissions related to hardware access (audio recognition).
/com/android/server/soundtrigger_middleware/SoundTriggerHalWatchdog.java,reboot,Yes, because rebooting a device typically requires special permissions.
/com/android/server/soundtrigger_middleware/SoundTriggerHalMaxModelLimiter.java,reboot,Yes, the method `reboot` in the Android SDK typically requires permissions related to device management or administrator privileges to allow for a device reboot.
/com/android/server/soundtrigger_middleware/ISoundTriggerHal.java,startRecognition,Yes, likely requires permissions as it deals with sound recognition.
/com/android/server/soundtrigger_middleware/SoundTriggerHw3Compat.java,reboot,Yes, the `reboot` method likely requires permissions since rebooting a device typically requires elevated privileges in Android.
/com/android/server/soundtrigger_middleware/SoundTriggerMiddlewarePermission.java,listModules,Yes, the method requires permissions because it involves enforcing a permission check (`enforcePermissionForPreflight`) related to capturing audio.
/com/android/server/soundtrigger_middleware/SoundTriggerMiddlewarePermission.java,attach,Yes, the method likely requires permissions since it involves enforcing permissions for preflight, indicating that it may perform actions that require user consent or elevated privileges.
/com/android/server/soundtrigger_middleware/SoundTriggerMiddlewarePermission.java,enforcePermissionsForPreflight,Yes, the method enforces permissions related to audio recording and hotword capture, which typically require specific permissions in an Android context.
/com/android/server/soundtrigger_middleware/SoundTriggerMiddlewarePermission.java,enforcePermissionsForDataDelivery,Yes, the method involves permission checks for receiving data.
/com/android/server/soundtrigger_middleware/SoundTriggerMiddlewarePermission.java,enforcePermissionForDataDelivery,Yes, because the method checks permissions related to data delivery.
/com/android/server/soundtrigger_middleware/SoundTriggerMiddlewarePermission.java,enforceSoundTriggerRecordAudioPermissionForDataDelivery,Yes, this method requires permission to access audio recording capabilities, as it checks for the `RECORD_AUDIO` permission.
/com/android/server/soundtrigger_middleware/SoundTriggerMiddlewarePermission.java,enforcePermissionForPreflight,Yes, this method checks for permissions and can throw a `SecurityException` if the required permission is not granted, indicating that permission checks are involved.
/com/android/server/soundtrigger_middleware/SoundTriggerMiddlewarePermission.java,loadModel,Yes, the method calls `enforcePermissions`, indicating that it checks for required permissions before executing the `loadModel` operation.
/com/android/server/soundtrigger_middleware/SoundTriggerMiddlewarePermission.java,loadPhraseModel,Yes, this method calls `enforcePermissions`, indicating that it requires certain permissions to be granted.
/com/android/server/soundtrigger_middleware/SoundTriggerMiddlewarePermission.java,forceRecognitionEvent,Yes, it appears that the method involves enforcing permissions before performing its action, indicating that permissions are required.
/com/android/server/soundtrigger_middleware/SoundTriggerMiddlewarePermission.java,setModelParameter,Yes, it utilizes `enforcePermissions`, indicating permission checks are performed.
/com/android/server/soundtrigger_middleware/SoundTriggerMiddlewarePermission.java,getModelParameter,Yes, the method enforces permissions, indicating that it requires appropriate permissions to execute.
/com/android/server/soundtrigger_middleware/SoundTriggerMiddlewarePermission.java,queryModelParameterSupport,Yes, the method calls `enforcePermissions`, indicating that it requires permission checks.
/com/android/server/soundtrigger_middleware/SoundTriggerMiddlewarePermission.java,onRecognition,Yes, it likely requires permissions because it includes a method call to `enforcePermissions`, which typically checks for necessary permissions before proceeding.
/com/android/server/soundtrigger_middleware/SoundTriggerMiddlewarePermission.java,onPhraseRecognition,Yes, the method likely requires permissions related to audio or voice recognition since it involves phrase recognition.
/com/android/server/soundtrigger_middleware/SoundTriggerHalConcurrentCaptureHandler.java,reboot,Yes, because the `reboot` method typically requires system-level permissions to restart the device.
/com/android/server/soundtrigger_middleware/SoundTriggerModule.java,loadModel,Yes, this method likely requires permissions because it interacts with audio sessions, which typically necessitate permissions related to audio recording or playback in Android.
/com/android/server/soundtrigger_middleware/SoundTriggerModule.java,loadPhraseModel,Yes, the method may require permissions related to audio session management in the Android SDK.
/com/android/server/soundtrigger_middleware/SoundTriggerModule.java,startRecognition,Yes, this method likely requires permissions for audio recording or speech recognition, as it involves starting a recognition process that typically interacts with the device's microphone.
/com/android/server/adb/AdbDebuggingManager.java,sendBroadcastWithDebugPermission,Yes, requires 'MANAGE_DEBUGGING' permission for sending broadcasts.
/com/android/server/adb/AdbDebuggingManager.java,onReceive,Yes, this method requires permissions because it interacts with network state and Wi-Fi settings, which typically necessitate permissions like `ACCESS_WIFI_STATE` and `CHANGE_WIFI_STATE`.
/com/android/server/adb/AdbDebuggingManager.java,setupNotifications,Yes, because setting up notifications generally requires permissions related to notifying the user (e.g., `android.permission.NOTIFICATION_SERVICE`).
/com/android/server/adb/AdbDebuggingManager.java,handleMessage,Yes, this method requires permissions.
/com/android/server/adb/AdbDebuggingManager.java,registerForAuthTimeChanges,Yes, it requires permissions to access content from the `ContentResolver`.
/com/android/server/adb/AdbDebuggingManager.java,getCurrentWifiApInfo,Yes, this method requires permissions because it accesses Wi-Fi state information, including SSID and BSSID, which typically requires the `ACCESS_WIFI_STATE` permission.
/com/android/server/adb/AdbDebuggingManager.java,onPairingResult,Yes, because the method sends broadcasts which may require specific permissions like `SEND_BROADCAST`.
/com/android/server/adb/AdbDebuggingManager.java,sendPairingPortToUI,Yes, it requires permissions because it involves sending a broadcast, which typically requires the appropriate permissions in Android for security and privacy purposes.
/com/android/server/adb/AdbDebuggingManager.java,sendPairedDevicesToUI,Yes, the method likely requires permissions because it involves sending a broadcast with a context that may need specific permissions to access or modify certain device states or data.
/com/android/server/adb/AdbDebuggingManager.java,updateUIPairCode,Yes, the method requires permission to send broadcasts, as it calls `sendBroadcastWithDebugPermission`.
/com/android/server/adb/AdbDebuggingManager.java,startConfirmationForNetwork,Yes, this method likely requires permissions because it interacts with user and system components (like `ActivityManager`, `UserManager`, and possibly launching activities/services), which typically necessitate permissions in Android.
/com/android/server/adb/AdbDebuggingManager.java,writeKeys,Yes, this method likely requires permissions as it involves file operations (reading/writing files) which typically necessitate permissions such as `WRITE_EXTERNAL_STORAGE`.
/com/android/server/adb/AdbDebuggingManager.java,setAdbEnabled,Yes, this method requires permissions because it controls ADB debugging, which may expose sensitive data and could allow for unauthorized access to the device.
/com/android/server/adb/AdbDebuggingManager.java,allowWirelessDebugging,Yes, requires permissions. This method allows wireless debugging, which typically involves sensitive operations that require appropriate permissions for network access.
/com/android/server/adb/AdbDebuggingManager.java,getAdbWirelessPort,Yes, this method likely requires permissions to access ADB (Android Debug Bridge) functionality, which involves managing devices over a network.
/com/android/server/adb/AdbDebuggingManager.java,getPairedDevices,Yes, this method likely requires permissions. It deals with retrieving information about paired devices, which typically needs permissions for accessing Bluetooth data in Android.
/com/android/server/adb/AdbDebuggingManager.java,unpairDevice,Yes, this method likely requires permissions because it involves unpairing devices, which can affect device connectivity and user security.
/com/android/server/adb/AdbDebuggingManager.java,dump,Yes, the method likely requires permissions. It deals with USB debugging state and accesses sensitive information such as user keys and keystore, which generally necessitates permissions for security and privacy reasons.
/com/android/server/adb/AdbDebuggingManager.java,getSystemKeysFromFile,Yes, this method likely requires permissions because it involves accessing the file system (reading a file), which typically necessitates storage permissions in Android.
/com/android/server/adb/AdbDebuggingManager.java,isTrustedNetwork,Yes, requires user permission for wireless debugging on the network.
/com/android/server/adb/AdbService.java,registerContentObservers,Yes, because it involves registering content observers which typically requires permissions to access specific settings or data (like ADB settings, etc.).
/com/android/server/adb/AdbService.java,onChange,Yes, because the method interacts with ADB (Android Debug Bridge), which typically requires permissions to access certain features, especially for network and USB configurations.
/com/android/server/adb/AdbService.java,systemReady,Yes, because it interacts with system properties and settings which may require specific permissions for accessing and modifying them.
/com/android/server/adb/AdbService.java,allowDebugging,Yes, requires permission to manage debugging.
/com/android/server/adb/AdbService.java,denyDebugging,Yes, requires permission to manage debugging.
/com/android/server/adb/AdbService.java,clearDebuggingKeys,Yes, because it enforces the `MANAGE_DEBUGGING` permission.
/com/android/server/adb/AdbService.java,isAdbWifiSupported,Yes, because it enforces the "MANAGE_DEBUGGING" permission which is required to check if ADB over Wi-Fi or Ethernet is supported.
/com/android/server/adb/AdbService.java,isAdbWifiQrSupported,Yes, the method requires permissions because it enforces the "MANAGE_DEBUGGING" permission to check if secure ADB over Wi-Fi and device pairing by QR code is supported.
/com/android/server/adb/AdbService.java,allowWirelessDebugging,Yes, because it enforces the `MANAGE_DEBUGGING` permission which is required to allow wireless debugging.
/com/android/server/adb/AdbService.java,denyWirelessDebugging,Yes, because it uses `enforceCallingOrSelfPermission` with `MANAGE_DEBUGGING`, which requires specific permissions.
/com/android/server/adb/AdbService.java,getPairedDevices,Yes, the method requires the `MANAGE_DEBUGGING` permission to enforce calling or self permission for accessing paired devices.
/com/android/server/adb/AdbService.java,unpairDevice,Yes, the method requires the `MANAGE_DEBUGGING` permission to enforce calling or self permission.
/com/android/server/adb/AdbService.java,enablePairingByPairingCode,Yes, because it checks for the permission `MANAGE_DEBUGGING` which requires specific permissions to be granted.
/com/android/server/adb/AdbService.java,enablePairingByQrCode,Yes, requires permission to manage debugging (`android.Manifest.permission.MANAGE_DEBUGGING`).
/com/android/server/adb/AdbService.java,disablePairing,Yes, the method calls `enforceCallingOrSelfPermission` with `MANAGE_DEBUGGING`, which requires `MANAGE_DEBUGGING` permission.
/com/android/server/adb/AdbService.java,getAdbWirelessPort,Yes, the method requires the `MANAGE_DEBUGGING` permission to enforce calling or self-permission checks.
/com/android/server/adb/AdbService.java,onPortReceived,Yes, the method deals with ADB settings which typically require permissions related to modifying system settings.
/com/android/server/adb/AdbService.java,broadcastPortInfo,Yes, the method likely requires permissions because it involves sending a broadcast, which typically requires appropriate permissions to ensure that only authorized applications can listen for or send broadcasts.
/com/android/server/adb/AdbService.java,setAdbdEnabledForTransport,Yes, this method likely requires permissions to enable or disable ADB (Android Debug Bridge) for different transport types (e.g., USB, Wi-Fi), which can control access to device functionalities.
/com/android/server/adb/AdbService.java,setAdbEnabled,Yes, this method likely requires permissions because it manipulates ADB (Android Debug Bridge) settings, which involves debugging capabilities and potentially modifying system properties.
/com/android/server/adb/AdbService.java,handleShellCommand,Yes, this method likely requires permissions because it involves executing shell commands, which generally requires specific permissions related to system-level access or communication with the operating system.
/com/android/server/adb/AdbService.java,dump,Yes, this method requires permissions because it includes a check for dump permission using `checkDumpPermission`.
/com/android/server/timezonedetector/TimeZoneDetectorStrategy.java,setTimeZoneState,Yes, this method likely requires permissions to modify system settings, specifically related to time zones.
/com/android/server/timezonedetector/TimeZoneDetectorInternal.java,updateConfigurationForDpm,Yes, because it is for device policy management which typically requires specific permissions to access and modify configurations.
/com/android/server/timezonedetector/TimeZoneDetectorInternal.java,setManualTimeZoneForDpm,Yes, this method likely requires device policy manager permissions to set the time zone for a device, as indicated by the comment about it being for device policy manager only.
/com/android/server/timezonedetector/TimeZoneDetectorService.java,getCapabilitiesAndConfig,Yes, the method requires permissions because it enforces permission checks (specifically `enforceManageTimeZoneDetectorPermission`) before accessing capabilities and configuration related to time zones.
/com/android/server/timezonedetector/TimeZoneDetectorService.java,updateConfiguration,Yes, this method requires permissions because it calls `enforceManageTimeZoneDetectorPermission`, which checks for a specific permission needed to manage time zone configurations.
/com/android/server/timezonedetector/TimeZoneDetectorService.java,addListener,Yes, this method requires permissions because it calls `enforceManageTimeZoneDetectorPermission`, indicating that specific permissions are needed to manage time zone detection settings in Android.
/com/android/server/timezonedetector/TimeZoneDetectorService.java,removeListener,Yes, this method requires permissions. It enforces a permission check for managing time zone detection.
/com/android/server/timezonedetector/TimeZoneDetectorService.java,handleLocationAlgorithmEvent,Yes, the method involves handling geolocation events, which typically require permission to access location data.
/com/android/server/timezonedetector/TimeZoneDetectorService.java,getTimeZoneState,Yes, the method calls another method `enforceManageTimeZoneDetectorPermission`, which suggests that it checks for a permission related to managing time zone detection.
/com/android/server/timezonedetector/TimeZoneDetectorService.java,setTimeZoneState,Yes, this method likely requires permissions since it involves managing timezone settings, which can affect user data and system configurations.
/com/android/server/timezonedetector/TimeZoneDetectorService.java,confirmTimeZone,Yes, the method appears to call `enforceManageTimeZoneDetectorPermission`, indicating that it requires a permission related to managing time zone settings.
/com/android/server/timezonedetector/TimeZoneDetectorService.java,setManualTimeZone,Yes, the method enforces a permission related to managing time zone settings.
/com/android/server/timezonedetector/TimeZoneDetectorService.java,suggestManualTimeZone,Yes, the method uses `enforceSuggestManualTimeZonePermission`, which implies a permission is required to suggest a manual timezone.
/com/android/server/timezonedetector/TimeZoneDetectorService.java,suggestTelephonyTimeZone,Yes, the method calls `enforceSuggestTelephonyTimeZonePermission`, indicating that it requires a specific permission related to telephony.
/com/android/server/timezonedetector/TimeZoneDetectorService.java,isTelephonyTimeZoneDetectionSupported,Yes, it requires permissions because it enforces "Manage Time Zone Detector" permission.
/com/android/server/timezonedetector/TimeZoneDetectorService.java,isGeoTimeZoneDetectionSupported,Yes, because it calls a method (`enforceManageTimeZoneDetectorPermission`) that likely checks for permissions related to managing time zone detection.
/com/android/server/timezonedetector/TimeZoneDetectorService.java,enableTelephonyFallback,Yes, this method likely requires permissions because it enforces a specific permission (`enforceManageTimeZoneDetectorPermission`) related to managing time zone settings.
/com/android/server/timezonedetector/TimeZoneDetectorService.java,generateMetricsState,Yes, it calls `enforceManageTimeZoneDetectorPermission`, which indicates a permission check is required.
/com/android/server/timezonedetector/TimeZoneDetectorService.java,dump,Yes, this method requires permissions because it calls `checkDumpPermission`, which indicates that a permission check is necessary before executing certain operations.
/com/android/server/timezonedetector/TimeZoneDetectorService.java,enforceManageTimeZoneDetectorPermission,Yes, it requires permission to enforce the MANAGE_TIME_AND_ZONE_DETECTION permission.
/com/android/server/timezonedetector/TimeZoneDetectorService.java,enforceSuggestGeolocationTimeZonePermission,Yes, because the method enforces a permission related to suggesting geolocation time zone.
/com/android/server/timezonedetector/TimeZoneDetectorService.java,enforceSuggestTelephonyTimeZonePermission,Yes, it suggests that a specific permission ("suggest telephony time and time zone") is enforced in the method.
/com/android/server/timezonedetector/TimeZoneDetectorService.java,enforceSuggestManualTimeZonePermission,Yes, the method checks for the permission 'SUGGEST_MANUAL_TIME_AND_ZONE', indicating it requires permission to enforce calling that permission.
/com/android/server/timezonedetector/DeviceActivityMonitorImpl.java,onChange,Yes, because it accesses the airplane mode state, which requires `READ_SETTINGS` permission.
/com/android/server/timezonedetector/ConfigurationInternal.java,getLocationEnabledSetting,Yes, accessing user's location typically requires location permissions in Android.
/com/android/server/timezonedetector/ConfigurationInternal.java,getGeoDetectionEnabledBehavior,Yes, this method likely requires permissions related to location services since it references methods that check for geo-detection support and location settings.
/com/android/server/timezonedetector/ConfigurationInternal.java,setGeoDetectionRunInBackgroundEnabled,Yes, the method deals with location services, which typically require permissions for accessing location data.
/com/android/server/timezonedetector/ConfigurationInternal.java,setAutoDetectionEnabledSetting,Yes, it likely requires permission to change system settings, as it involves modifying time zone settings.
/com/android/server/timezonedetector/ConfigurationInternal.java,setLocationEnabledSetting,Yes, it likely requires permissions to modify location settings.
/com/android/server/timezonedetector/EnvironmentImpl.java,setDeviceTimeZoneAndConfidence,Yes, this method likely requires permissions to modify system settings, such as the device's time zone.
/com/android/server/timezonedetector/MetricsTimeZoneDetectorState.java,getUserLocationEnabledSetting,Yes, because accessing user location typically requires location permissions.
/com/android/server/timezonedetector/location/LocationTimeZoneManagerService.java,start,Yes, this method requires permission because it calls `enforceManageTimeZoneDetectorPermission`, which likely checks for a permission related to time zone management.
/com/android/server/timezonedetector/location/LocationTimeZoneManagerService.java,startWithTestProviders,Yes, the method requires permissions because it invokes a method named `enforceManageTimeZoneDetectorPermission`, which suggests that it checks for a specific permission related to managing time zone detection.
/com/android/server/timezonedetector/location/LocationTimeZoneManagerService.java,stop,Yes, this method requires permissions to enforce manage time zone detector permission.
/com/android/server/timezonedetector/location/LocationTimeZoneManagerService.java,clearRecordedProviderStates,Yes, this method likely requires permissions because it enforces a permission check (`enforceManageTimeZoneDetectorPermission`).
/com/android/server/timezonedetector/location/LocationTimeZoneManagerService.java,getStateForTests,Yes, the method requires permissions because it calls `enforceManageTimeZoneDetectorPermission`, which indicates that a specific permission is needed to access the method's functionality related to managing time zone detection.
/com/android/server/timezonedetector/location/LocationTimeZoneManagerService.java,dump,Yes, this method requires permissions because it calls `checkDumpPermission`, indicating that it needs permission to perform a dump operation.
/com/android/server/timezonedetector/location/LocationTimeZoneManagerService.java,enforceManageTimeZoneDetectorPermission,Yes, the method checks for the "manage time and time zone detection" permission.
/com/android/server/audio/SettingsAdapter.java,getGlobalInt,Yes, this method requires permissions to access global settings on the device.
/com/android/server/audio/SettingsAdapter.java,getGlobalString,Yes, this method requires permissions. It accesses global settings, which typically requires specific permissions like `READ_SETTINGS`.
/com/android/server/audio/SettingsAdapter.java,putGlobalInt,Yes, it requires WRITE_SETTINGS permission to modify global settings.
/com/android/server/audio/SettingsAdapter.java,putGlobalString,Yes, this method likely requires permissions because it modifies global system settings, which typically necessitates special permissions to ensure security and privacy.
/com/android/server/audio/SettingsAdapter.java,getSystemIntForUser,Yes, because accessing system settings typically requires specific permissions in Android.
/com/android/server/audio/SettingsAdapter.java,putSystemIntForUser,Yes, it requires permissions because it interacts with system settings.
/com/android/server/audio/SettingsAdapter.java,getSecureIntForUser,Yes, this method requires permissions because it interacts with sensitive system settings that typically need permissions to access.
/com/android/server/audio/SettingsAdapter.java,getSecureStringForUser,Yes, this method requires permissions because it accesses secure settings that typically need permissions to read.
/com/android/server/audio/SettingsAdapter.java,putSecureIntForUser,Yes, it likely requires permissions to modify secure settings.
/com/android/server/audio/SettingsAdapter.java,putSecureStringForUser,Yes, it requires permissions to access and modify secure system settings.
/com/android/server/audio/RecordingActivityMonitor.java,getActiveRecordingConfigurations,Yes, this method likely requires permissions as it deals with audio recording configurations, which typically need specific permissions (like RECORD_AUDIO) to access audio information on devices.
/com/android/server/audio/RecordingActivityMonitor.java,createRecordingConfiguration,Yes, because creating a recording configuration typically involves managing audio recording, which requires permissions like RECORD_AUDIO in Android.
/com/android/server/audio/DefaultAudioPolicyFacade.java,getAudioPolicyOrInit,Yes, requires permissions. This method interacts with audio policies, which typically requires permissions related to audio management in Android.
/com/android/server/audio/AudioSystemAdapter.java,isMicrophoneMuted,Yes, this method requires permissions because it accesses microphone status, which typically needs microphone-related permissions in Android.
/com/android/server/audio/AudioSystemAdapter.java,muteMicrophone,Yes, it likely requires permissions because muting the microphone can affect user privacy and requires specific permissions to access audio input.
/com/android/server/audio/AudioSystemAdapter.java,setStreamVolumeIndexAS,Yes, this method likely requires permissions because it modifies the audio stream volume, which typically requires audio control permissions in Android.
/com/android/server/audio/AudioSystemAdapter.java,setPhoneState,Yes, this method likely requires permissions because it interacts with the audio system, which often involves sensitive user data and system resources.
/com/android/server/audio/AudioSystemAdapter.java,setAllowedCapturePolicy,Yes, this method likely requires permissions because it deals with audio capture policies, which are sensitive and typically associated with user privacy.
/com/android/server/audio/AudioSystemAdapter.java,setUidDeviceAffinities,Yes, the method interfaces with audio routing, which typically requires permissions related to audio settings or device access in Android.
/com/android/server/audio/AudioSystemAdapter.java,setUserIdDeviceAffinities,Yes, this method likely requires permissions as it deals with audio system settings which typically require specific permissions to modify or access.
/com/android/server/audio/AudioSystemAdapter.java,setPreferredMixerAttributes,Yes, this method likely requires permissions to modify audio settings or interact with audio mixers, as it involves setting preferred attributes for audio mixing.
/com/android/server/audio/SystemServerAdapter.java,sendMicrophoneMuteChangedIntent,Yes, because broadcasting intents can require permissions depending on the context and recipient of the intent.
/com/android/server/audio/SystemServerAdapter.java,sendDeviceBecomingNoisyIntent,Yes, this method requires permissions because it involves sending a broadcast intent, which typically requires permissions to ensure that only authorized applications can send or receive certain broadcast messages.
/com/android/server/audio/SystemServerAdapter.java,broadcastStickyIntentToCurrentProfileGroup,Yes, because sending broadcasts generally requires permissions depending on the type of intent and the receivers involved.
/com/android/server/audio/SystemServerAdapter.java,registerUserStartedReceiver,Yes, this method likely requires permissions because it involves broadcasting intents related to user profiles, which could require specific permissions for user data and broadcasting actions in Android.
/com/android/server/audio/SoundEffectsHelper.java,onPlaySoundEffect,Yes, this method requires permission to play sound effects, specifically for handling audio playback in Android.
/com/android/server/telecom/TelecomLoaderService.java,onServiceConnected,Yes, because it interacts with telecom services and manages permissions related to default SIM call manager functionalities.
/com/android/server/telecom/TelecomLoaderService.java,connectToTelecom,Yes, this method likely requires permissions because it involves binding to a service, which typically requires declaring the appropriate permissions (e.g., `BIND_TELECOM_SERVICE`) in the AndroidManifest.
/com/android/server/telecom/TelecomLoaderService.java,registerDefaultAppProviders,Yes, this method requires permissions. It interacts with SMS and dialer applications, which typically require SMS and phone permissions in Android.
/com/android/server/telecom/TelecomLoaderService.java,registerDefaultAppNotifier,Yes, this method likely requires permissions because it interacts with `RoleManager`, which manages permissions related to roles in the Android system. Specifically, operations involving user permissions typically require certain permissions to be declared in the app's manifest.
/com/android/server/telecom/TelecomLoaderService.java,onReceive,Yes, the method interacts with user permissions related to SIM call management, which typically require specific permissions.
/com/android/server/telecom/TelecomLoaderService.java,updateSimCallManagerPermissions,Yes, the method likely requires permissions to manage SIM call manager settings and to interact with telecom services.
/com/android/server/telecom/InternalServiceRepository.java,exemptAppTemporarilyForEvent,Yes, because it likely interacts with device power management, which requires specific permissions to modify app settings.
/com/android/server/accounts/AccountsDb.java,create,Yes, this method requires permissions related to file access (to read or delete database files).
/com/android/server/accounts/AccountsDb.java,findAuthtokenForAllAccounts,Yes, the method likely requires permissions because it deals with authentication tokens and accounts, which typically involve sensitive user information that necessitates proper permissions for access (like `GET_ACCOUNTS` or similar).
/com/android/server/accounts/AccountsDb.java,findAuthTokensByAccount,Yes, this method likely requires permissions to access sensitive user data, such as authentication tokens associated with user accounts.
/com/android/server/accounts/AccountsDb.java,deleteAuthtokensByAccountIdAndType,Yes, it likely requires permissions, as it involves deleting authentication tokens linked to an account, which typically necessitates access to sensitive user data.
/com/android/server/accounts/AccountsDb.java,insertAuthToken,Yes, it likely requires permissions to handle sensitive information such as authentication tokens.
/com/android/server/accounts/AccountsDb.java,renameCeAccount,Yes, because it likely involves accessing and modifying a database, which typically requires permissions related to storage or data management in Android.
/com/android/server/accounts/AccountsDb.java,deleteAuthTokensByAccountId,Yes, because accessing and modifying data in a database typically requires permissions such as `WRITE_EXTERNAL_STORAGE` or `WRITE_DATABASE`.
/com/android/server/accounts/AccountsDb.java,findAccountPasswordByNameAndType,Yes, because it accesses account passwords which typically requires permissions related to account management or data access.
/com/android/server/accounts/AccountsDb.java,insertCeAccount,Yes, because it likely involves accessing and modifying account information, which typically requires permissions related to user accounts or databases.
/com/android/server/accounts/AccountsDb.java,migratePreNDbToDe,Yes, because it interacts with a database which typically requires permissions like `WRITE_EXTERNAL_STORAGE` and `READ_EXTERNAL_STORAGE`.
/com/android/server/accounts/AccountsDb.java,insertSharedAccount,Yes, because managing accounts typically requires permissions related to account management in Android.
/com/android/server/accounts/AccountsDb.java,deleteSharedAccount,Yes, this method requires permissions because it interacts with the database to delete account information, which typically requires permissions related to data access and modifications.
/com/android/server/accounts/AccountsDb.java,renameSharedAccount,Yes, because renaming an account likely involves accessing and modifying account information, which typically requires permission related to accounts and possibly database access.
/com/android/server/accounts/AccountsDb.java,getSharedAccounts,Yes, this method may require permissions because it interacts with a database, potentially accessing sensitive user account information.
/com/android/server/accounts/AccountsDb.java,updateAccountLastAuthenticatedTime,Yes, this method likely requires permissions, as it interacts with a database (using SQLiteDatabase) which generally requires permissions related to data access in Android.
/com/android/server/accounts/AccountsDb.java,findAllDeAccounts,Yes, it likely requires permissions because it accesses a database (SQLite) which typically requires permissions for reading/writing data.
/com/android/server/accounts/AccountsDb.java,insertDeAccount,Yes, this method likely requires permissions to access and manipulate account information, as it involves database operations related to user accounts.
/com/android/server/accounts/AccountsDb.java,insertGrant,Yes, this method requires permissions because it involves database operations that typically require appropriate permissions in Android (e.g., WRITE_EXTERNAL_STORAGE or WRITE_DATABASE).
/com/android/server/accounts/AccountsDb.java,setAccountVisibility,Yes, because it appears to involve accessing and modifying database records related to account visibility, which may require specific permissions to manage user accounts and access their data.
/com/android/server/accounts/AccountsDb.java,findAccountVisibility,Yes, this method likely requires permissions because it interacts with accounts and databases, which typically require special permissions in Android for privacy and security reasons.
/com/android/server/accounts/AccountsDb.java,findAllAccountGrants,Yes, this method requires permissions because it accesses account access grants, which typically requires relevant permissions to ensure user privacy and security.
/com/android/server/accounts/AccountsDb.java,calculateDebugTableInsertionPoint,Yes, this method requires permissions. It interacts with a SQLite database, which typically requires permissions to access data storage in Android, such as `WRITE_EXTERNAL_STORAGE` or `READ_EXTERNAL_STORAGE`.
/com/android/server/accounts/AccountsDb.java,create,Yes, because accessing and modifying databases typically requires permissions related to storage and account management in Android.
/com/android/server/accounts/AccountsDb.java,resetDatabase,Yes, because accessing and modifying the database may require permissions such as `WRITE_EXTERNAL_STORAGE` or `WRITE_DATABASE`.
/com/android/server/accounts/AccountManagerService.java,onOpChanged,Yes, the method deals with application operations and account access which likely require permissions related to accessing accounts and package information.
/com/android/server/accounts/AccountManagerService.java,cancelAccountAccessRequestNotificationIfNeeded,Yes, this method likely requires permissions because it interacts with user accounts, which typically requires appropriate permissions to access account information in Android.
/com/android/server/accounts/AccountManagerService.java,addAccountExplicitlyWithVisibility,Yes, the method likely requires permissions to add accounts, typically needing `android.permission.ACCOUNT_MANAGER`.
/com/android/server/accounts/AccountManagerService.java,getAccountsAndVisibilityForPackage,Yes, this method likely requires permissions because it involves accessing user accounts, which typically requires specific permissions in Android (e.g., GET_ACCOUNTS).
/com/android/server/accounts/AccountManagerService.java,getPackagesAndVisibilityForAccount,Yes, this method likely requires permissions because it involves accessing account details and user accounts, which typically necessitates the relevant permissions for security and privacy reasons in Android.
/com/android/server/accounts/AccountManagerService.java,getAccountVisibility,Yes, this method requires permissions because it checks the visibility of accounts and uses user-specific information, which typically requires proper permissions (like accessing user accounts).
/com/android/server/accounts/AccountManagerService.java,resolveAccountVisibility,Yes, because it involves checking permissions related to account visibility and managing user accounts, which typically require specific permissions in the Android SDK.
/com/android/server/accounts/AccountManagerService.java,setAccountVisibility,Yes, requires permissions due to accessing and modifying account visibility, which typically involves sensitive user data.
/com/android/server/accounts/AccountManagerService.java,updateAccountVisibilityLocked,Yes, this method likely requires permissions related to account management and visibility updates in an Android context.
/com/android/server/accounts/AccountManagerService.java,registerAccountListener,Yes, this method likely requires permissions because it interacts with user accounts, which generally necessitates permission to access sensitive user data.
/com/android/server/accounts/AccountManagerService.java,notifyPackage,Yes, because sending broadcast intents may require permissions related to accessing accounts or specific package visibility.
/com/android/server/accounts/AccountManagerService.java,sendAccountsChangedBroadcast,Yes, this method likely requires permissions to send broadcasts, particularly related to account changes in the system, which often requires specific permissions to access account data.
/com/android/server/accounts/AccountManagerService.java,sendAccountRemovedBroadcast,Yes, permissions are required because sending broadcasts related to account management typically requires specific permissions related to accessing accounts and user data.
/com/android/server/accounts/AccountManagerService.java,getUidsOfInstalledOrUpdatedPackagesAsUser,Yes, this method likely requires permissions because it interacts with installed packages and their associated information, which generally requires specific access permissions in Android (e.g., `PACKAGE_USAGE_STATS` or related permissions).
/com/android/server/accounts/AccountManagerService.java,getUserAccounts,Yes, the method likely requires permissions related to user account management, such as managing users or accessing user accounts.
/com/android/server/accounts/AccountManagerService.java,purgeUserData,Yes, this method likely requires permissions to access and manipulate user data, as it appears to deal with user accounts and data management.
/com/android/server/accounts/AccountManagerService.java,syncSharedAccounts,Yes, this method likely requires permissions to access account information.
/com/android/server/accounts/AccountManagerService.java,getPassword,Yes, this method requires permissions. It accesses sensitive account information, which typically requires permissions for security reasons.
/com/android/server/accounts/AccountManagerService.java,getPreviousName,Yes, because it interacts with user accounts and may require access to user data, which typically necessitates permissions.
/com/android/server/accounts/AccountManagerService.java,getUserData,Yes, because it interacts with user accounts, which typically requires permissions related to account access in Android (e.g., `GET_ACCOUNTS`).
/com/android/server/accounts/AccountManagerService.java,getAuthenticatorTypes,Yes, this method requires permissions because it deals with user authentication types, which typically involves accessing user-related data and resources that are protected by permissions in Android.
/com/android/server/accounts/AccountManagerService.java,isCrossUser,Yes, the method checks for the permission "INTERACT_ACROSS_USERS_FULL" which requires specific permissions to allow actions across users.
/com/android/server/accounts/AccountManagerService.java,addAccountExplicitly,Yes, this method requires permissions because adding an account explicitly typically requires relevant account management permissions in Android.
/com/android/server/accounts/AccountManagerService.java,copyAccountToUser,Yes, calling `copyAccountToUser` requires the `INTERACT_ACROSS_USERS_FULL` permission, as indicated by the method throwing a `SecurityException` if the calling UID is not allowed to interact across users.
/com/android/server/accounts/AccountManagerService.java,accountAuthenticated,Yes, because it likely interacts with user accounts and checks permissions for account modifications, which typically require specific permissions in Android.
/com/android/server/accounts/AccountManagerService.java,run,Yes, this method likely requires permissions because it involves accessing account information (specifically, retrieving accounts) which typically requires `GET_ACCOUNTS` permission in Android.
/com/android/server/accounts/AccountManagerService.java,addAccountInternal,Yes, this method requires permissions because it involves adding accounts, which typically requires the "android.permission.WRITE_ACCOUNT" permission in the Android SDK.
/com/android/server/accounts/AccountManagerService.java,addAccountToLinkedRestrictedUsers,Yes, this method likely requires permissions because it involves managing user accounts, which typically requires specific permissions to access and modify user information in Android.
/com/android/server/accounts/AccountManagerService.java,hasFeatures,Yes, the method requires permissions, specifically to check for account features and access user accounts.
/com/android/server/accounts/AccountManagerService.java,renameAccount,Yes, this method requires permissions to rename an account, as it involves managing user accounts which typically requires specific permissions in Android.
/com/android/server/accounts/AccountManagerService.java,renameAccountInternal,Yes, the method may require permissions to modify user account information and send notifications related to account changes.
/com/android/server/accounts/AccountManagerService.java,removeAccountAsUser,Yes, the method `removeAccountAsUser` likely requires permissions, specifically related to modifying user accounts, which typically involves having proper user and account management permissions to prevent unauthorized access or modifications.
/com/android/server/accounts/AccountManagerService.java,removeAccountExplicitly,Yes, this method requires permissions because it involves removing an account, which typically requires specific permissions due to security and privacy concerns in the Android framework.
/com/android/server/accounts/AccountManagerService.java,removeAccountInternal,Yes, it likely requires permissions because it involves account management operations, which typically requires authorization to modify user accounts.
/com/android/server/accounts/AccountManagerService.java,removeAccountInternal,Yes, it requires permissions, as it involves modifying user accounts and interacting with potentially sensitive user data, which typically requires appropriate permissions in Android.
/com/android/server/accounts/AccountManagerService.java,invalidateAuthToken,Yes, because it involves user account authentication, which typically requires permissions like `AUTHENTICATE_ACCOUNTS`.
/com/android/server/accounts/AccountManagerService.java,invalidateAuthTokenLocked,Yes, because modifying auth tokens typically requires permissions related to user accounts and authentication.
/com/android/server/accounts/AccountManagerService.java,peekAuthToken,Yes, because it involves accessing authentication tokens, which typically requires permissions related to account management and user data privacy.
/com/android/server/accounts/AccountManagerService.java,setAuthToken,Yes, this method likely requires permissions because it is manipulating authentication tokens, which usually involves sensitive user account data. Proper permissions are needed to access and modify such information.
/com/android/server/accounts/AccountManagerService.java,setPassword,Yes, the method requires permissions because it involves manipulating account passwords, which typically requires sensitive permissions such as those related to account management or security.
/com/android/server/accounts/AccountManagerService.java,setPasswordInternal,Yes, this method requires permissions. It involves interacting with user account data, including setting a password, which typically necessitates permissions related to account management (like `USE_CREDENTIALS` or similar permissions in Android).
/com/android/server/accounts/AccountManagerService.java,clearPassword,Yes, the method likely requires permissions because it attempts to clear passwords for an account, which involves sensitive data management.
/com/android/server/accounts/AccountManagerService.java,setUserData,Yes, this method likely requires permissions. It manipulates user account data and checks for account management status, which typically necessitates permissions related to account management or user data access in Android.
/com/android/server/accounts/AccountManagerService.java,getAuthTokenLabel,Yes, this method likely requires permissions because it operates within the Android AccountManager system, which generally requires appropriate permissions to access user accounts and their tokens.
/com/android/server/accounts/AccountManagerService.java,getAuthToken,Yes, this method requires permissions because it deals with account management and authentication tokens, which typically necessitate user consent and specific permissions to ensure privacy and security.
/com/android/server/accounts/AccountManagerService.java,run,Yes, the method seems to be related to authentication processes, which typically require permissions to handle sensitive user information securely.
/com/android/server/accounts/AccountManagerService.java,calculatePackageSignatureDigest,Yes, because it interacts with the `PackageManager` to retrieve package signatures, which requires appropriate permissions to access app information.
/com/android/server/accounts/AccountManagerService.java,newGrantCredentialsPermissionIntent,Yes, this method likely requires permissions related to user accounts and authentication, as it deals with `Account`, `authTokenType`, and associated user information.
/com/android/server/accounts/AccountManagerService.java,addAccount,Yes, the method requires permissions because it involves adding an account, which typically necessitates `MANAGE_ACCOUNTS` permission in Android to modify account settings.
/com/android/server/accounts/AccountManagerService.java,addAccountAsUser,Yes, this method likely requires permissions. It involves adding an account, which typically requires user permissions such as `MANAGE_ACCOUNTS`.
/com/android/server/accounts/AccountManagerService.java,run,Yes, this method likely requires permissions because it involves adding an account, which typically necessitates permissions related to account management in Android.
/com/android/server/accounts/AccountManagerService.java,startAddAccountSession,Yes, because adding an account usually requires permissions related to account management, such as "android.permission.MANAGE_ACCOUNTS".
/com/android/server/accounts/AccountManagerService.java,finishSessionAsUser,Yes, it requires permissions due to cross-user operations and account management.
/com/android/server/accounts/AccountManagerService.java,confirmCredentialsAsUser,Yes, this method likely requires permissions to confirm user account credentials.
/com/android/server/accounts/AccountManagerService.java,updateCredentials,Yes, because it deals with user accounts, which typically require permissions related to account access.
/com/android/server/accounts/AccountManagerService.java,startUpdateCredentialsSession,Yes, because it calls `checkPermissionAndNote` with `GET_PASSWORD` permission, which requires specific user permissions.
/com/android/server/accounts/AccountManagerService.java,hasAccountAccess,Yes, this method requires permissions because it checks account access, which typically involves sensitive user data and may require permissions to access accounts.
/com/android/server/accounts/AccountManagerService.java,getPackageNameForUid,Yes, this method requires permissions because it accesses information about packages and applications based on a UID, which typically requires specific permissions to ensure privacy and security in Android.
/com/android/server/accounts/AccountManagerService.java,hasAccountAccess,Yes, the method checks for account access permissions, which typically require specific permissions (e.g., accessing accounts).
/com/android/server/accounts/AccountManagerService.java,createRequestAccountAccessIntentSenderAsUser,Yes, the method likely requires permissions related to accessing account information, as indicated by the use of `Account` and user handles, which often require specific permissions in Android for security and privacy reasons.
/com/android/server/accounts/AccountManagerService.java,newRequestAccountAccessIntent,Yes, because the method involves accessing account credentials, which typically requires permissions, such as `GET_ACCOUNTS` or `USE_CREDENTIALS`.
/com/android/server/accounts/AccountManagerService.java,someUserHasAccount,Yes, this method requires permissions because it checks for accounts across users, which typically requires special system permissions.
/com/android/server/accounts/AccountManagerService.java,getAccounts,Yes, the method likely requires permissions to access user accounts. This is inferred from the context that account management typically involves user data, which generally requires specific permissions for security and privacy reasons.
/com/android/server/accounts/AccountManagerService.java,getAccountsAsUser,Yes, this method likely requires permissions because it involves retrieving account information, which typically necessitates specific permissions in Android for accessing user data.
/com/android/server/accounts/AccountManagerService.java,getAccountsAsUserForPackage,Yes, the method requires permissions because it checks for the `INTERACT_ACROSS_USERS_FULL` permission and throws a `SecurityException` if the permission is not granted.
/com/android/server/accounts/AccountManagerService.java,addSharedAccountsFromParentUser,Yes, this method requires permissions because it calls `checkManageOrCreateUsersPermission`, indicating that user management permissions are needed.
/com/android/server/accounts/AccountManagerService.java,addSharedAccountAsUser,Yes, this method likely requires permissions as it involves manipulating shared accounts and possibly accessing user data.
/com/android/server/accounts/AccountManagerService.java,renameSharedAccountAsUser,Yes, this method likely requires permissions to modify user accounts, which involves accessing sensitive user data.
/com/android/server/accounts/AccountManagerService.java,removeSharedAccountAsUser,Yes, this method likely requires permissions because it involves modifying accounts which typically need specific account management permissions in Android.
/com/android/server/accounts/AccountManagerService.java,removeSharedAccountAsUser,Yes, this method likely requires permissions because it interacts with user accounts and potentially modifies shared account data, which typically necessitates account management permissions in Android.
/com/android/server/accounts/AccountManagerService.java,getAccountsForPackage,Yes, the method requires permissions because it accesses account information, which typically necessitates user consent and appropriate permissions to protect sensitive data.
/com/android/server/accounts/AccountManagerService.java,getAccountsByTypeForPackage,Yes, this method likely requires permissions because it interacts with user accounts and queries package-related information, which typically involves sensitive user data and operations that require user permissions in Android.
/com/android/server/accounts/AccountManagerService.java,getAccountByTypeAndFeatures,Yes, because accessing account information typically requires permissions like `GET_ACCOUNTS` in Android.
/com/android/server/accounts/AccountManagerService.java,getAccountsByFeatures,Yes, this method requires permissions because it deals with account management, which typically requires user permissions to access accounts or features associated with them in the Android operating system.
/com/android/server/accounts/AccountManagerService.java,onAccountAccessed,Yes, it may require permissions because it interacts with accounts and accesses user data, which typically requires appropriate permissions in Android.
/com/android/server/accounts/AccountManagerService.java,onResult,Yes, this method likely requires permissions related to account management and accessing user account information, which typically necessitates specific permissions in Android (e.g., `GET_ACCOUNTS` or `MANAGE_ACCOUNTS`).
/com/android/server/accounts/AccountManagerService.java,dump,Yes, this method requires permissions because it checks for permissions related to dumping information, specifically using `checkDumpPermission`.
/com/android/server/accounts/AccountManagerService.java,doNotification,Yes, this method likely requires permissions related to notifications and user accounts, as it interacts with user accounts and creates notifications specific to account actions.
/com/android/server/accounts/AccountManagerService.java,installNotification,Yes, this method likely requires permissions because it deals with notifications, which typically require the `POST_NOTIFICATIONS` permission in Android.
/com/android/server/accounts/AccountManagerService.java,cancelNotification,Yes, because cancelling notifications typically requires the `android.permission.AUTHENTICATED_NOTIFICATION_LISTENER` permission in Android.
/com/android/server/accounts/AccountManagerService.java,isPermittedForPackage,Yes, it requires permissions because it checks app permissions using methods like `checkPermission` and `checkOpNoThrow`.
/com/android/server/accounts/AccountManagerService.java,checkPermissionAndNote,Yes, the method checks for permissions, which requires the necessary permissions to be granted for the calling app to perform certain actions.
/com/android/server/accounts/AccountManagerService.java,isPrivileged,Yes, this method likely requires permissions to access package information related to the calling UID.
/com/android/server/accounts/AccountManagerService.java,permissionIsGranted,Yes, the method requires permissions because it checks access to an account based on the caller's permissions and UID.
/com/android/server/accounts/AccountManagerService.java,checkGetAccountsPermission,Yes, because it checks permissions related to accessing accounts (GET_ACCOUNTS and GET_ACCOUNTS_PRIVILEGED).
/com/android/server/accounts/AccountManagerService.java,checkReadContactsPermission,Yes, it checks if the READ_CONTACTS permission is granted.
/com/android/server/accounts/AccountManagerService.java,accountTypeManagesContacts,Yes, this method requires permissions because it involves checking for the `WRITE_CONTACTS` permission related to managing contacts.
/com/android/server/accounts/AccountManagerService.java,checkManageUsersPermission,Yes, requires MANAGE_USERS permission to function properly.
/com/android/server/accounts/AccountManagerService.java,checkManageOrCreateUsersPermission,Yes, the method checks for `MANAGE_USERS` and `CREATE_USERS` permissions, which are required for its operation.
/com/android/server/accounts/AccountManagerService.java,checkReadAccountsPermitted,Yes, because it checks permissions related to account access, likely requiring specific permissions to function properly.
/com/android/server/accounts/AccountManagerService.java,canUserModifyAccounts,Yes, this method likely requires permission because it deals with user account modification, which typically involves sensitive user data and actions.
/com/android/server/accounts/AccountManagerService.java,canUserModifyAccountsForType,Yes, this method likely requires permissions because it involves checking account management, which typically necessitates permissions related to account management or device administration in Android.
/com/android/server/accounts/AccountManagerService.java,isProfileOwner,Yes, this method likely requires permissions as it is related to checking the profile owner state, which typically involves accessing device administration features that require specific permissions in Android.
/com/android/server/accounts/AccountManagerService.java,updateAppPermission,Yes, this method interacts with app permissions, which typically require specific permissions to be declared in the AndroidManifest.
/com/android/server/accounts/AccountManagerService.java,readCachedTokenInternal,Yes, this method likely requires permissions to access user accounts and their tokens.
/com/android/server/accounts/AccountManagerService.java,readAuthTokenInternal,Yes, it requires permissions to read authentication tokens.
/com/android/server/accounts/AccountManagerService.java,requestAccountAccess,Yes, this method likely requires permissions because it deals with account access, which typically requires user consent and appropriate permissions to access accounts and related sensitive information on Android.
/com/android/server/accounts/AccountManagerService.java,hasAccountAccess,Yes, it likely requires permissions related to accessing account information or performing operations on accounts, as it involves checking account access with an `Account` and a user ID (`uid`).
/com/android/server/accounts/AccountManagerService.java,getPreNDatabaseName,Yes, because this method interacts with file storage (user directories and database files) which may require permissions like `READ_EXTERNAL_STORAGE` or `WRITE_EXTERNAL_STORAGE`.
/com/android/server/accounts/AccountManagerBackupHelper.java,apply,Yes, the method requires permissions related to accessing user accounts and package information, which are typically protected actions in Android.
/com/android/server/accounts/AccountManagerBackupHelper.java,backupAccountAccessPermissions,Yes, this method likely requires permissions because it interacts with user accounts and package information, which typically require specific permissions in Android (e.g., ACCOUNT_MANAGER, GET_ACCOUNTS).
/com/android/server/accounts/AccountManagerBackupHelper.java,restoreAccountAccessPermissions,Yes, this method likely requires permissions because it deals with restoring app permissions, which typically involves operations that need approval and could affect user data security.
/com/android/server/accounts/AccountManagerBackupHelper.java,onPackageAdded,Yes, this method likely requires permissions because it involves managing app permissions through `mRestorePendingAppPermissions`, which indicates it interacts with app permission management features that require specific permissions in Android.
/com/android/server/people/PeopleService.java,enforceSystemRootOrSystemUI,Yes, this method checks for system or root permissions, implying it operates under specific permission constraints.
/com/android/server/people/PeopleService.java,removeRecentConversation,Yes, this method likely requires permissions since it involves modifying conversation data, which generally entails user privacy considerations.
/com/android/server/people/PeopleService.java,removeAllRecentConversations,Yes, it may require permissions to manage user data related to conversations.
/com/android/server/people/PeopleService.java,isConversation,Yes, because the method calls `enforceHasReadPeopleDataPermission`, which typically requires permission to access user data.
/com/android/server/people/PeopleService.java,enforceHasReadPeopleDataPermission,Yes, because it checks for the `READ_PEOPLE_DATA` permission and throws an exception if it is not granted.
/com/android/server/people/PeopleService.java,getStatuses,Yes, the method likely requires permissions because it involves retrieving conversation statuses which may access sensitive user data.
/com/android/server/people/PeopleService.java,registerConversationListener,Yes, this method likely requires permissions because it involves registering a listener for conversations, which may involve accessing sensitive user information or system resources.
/com/android/server/people/prediction/SharesheetModelScorer.java,findSharingForegroundApp,Yes, the method may require permissions to access usage statistics, which typically are protected and require specific permissions in Android.
/com/android/server/people/data/CallLogQueryHelper.java,querySince,Yes, because querying the call log database requires the READ_CALL_LOG permission.
/com/android/server/people/data/PackageData.java,deleteDataForConversation,Yes, because it involves deleting conversation data, which typically requires permissions related to managing contacts and SMS/calls.
/com/android/server/people/data/ConversationInfo.java,getBackupPayload,Yes, this method likely requires permissions because it accesses contact-related fields (like `mContactUri`, `mContactPhoneNumber`) and notification settings (like `mNotificationChannelId`), which typically necessitate permissions in Android.
/com/android/server/people/data/ConversationInfo.java,setContactStarred,Yes, because setting a contact as starred may require permissions to access contacts.
/com/android/server/people/data/ContactsQueryHelper.java,query,Yes, because querying the Contacts database requires permissions to access contacts data.
/com/android/server/people/data/ContactsQueryHelper.java,querySince,Yes, it requires permissions. It queries the Contacts database, which necessitates access permissions for reading contacts.
/com/android/server/people/data/ContactsQueryHelper.java,queryWithPhoneNumber,Yes, this method likely requires permissions to access contacts on the device, as it involves querying phone numbers through the Contacts provider.
/com/android/server/people/data/ContactsQueryHelper.java,queryWithEmail,Yes, this method likely requires permission to access contacts, as it interacts with `ContactsContract.CommonDataKinds.Email`, which involves querying contact data.
/com/android/server/people/data/ContactsQueryHelper.java,queryWithUri,Yes, this method likely requires permissions, as it interacts with Contacts, which typically requires permission to access contact data.
/com/android/server/people/data/ContactsQueryHelper.java,queryContact,Yes, because querying contacts typically requires permission to access contacts data in Android.
/com/android/server/people/data/ContactsQueryHelper.java,queryPhoneNumber,Yes, this method requires permissions because it queries phone numbers from the contacts database, which typically requires READ_CONTACTS permission in Android.
/com/android/server/people/data/UsageStatsQueryHelper.java,querySince,Yes, this method likely requires permissions because it interacts with `UsageStatsManagerInternal`, which typically requires specific usage access permissions to query usage stats on Android devices.
/com/android/server/people/data/UsageStatsQueryHelper.java,queryAppMovingToForegroundEvents,Yes, this method likely requires permissions related to accessing usage statistics on the device.
/com/android/server/people/data/UsageStatsQueryHelper.java,queryAppUsageStats,Yes, this method requires permissions because it queries usage statistics of apps, which typically requires `PACKAGE_USAGE_STATS` permission in Android.
/com/android/server/people/data/DataManager.java,initialize,Yes, this method likely requires permissions because it interacts with system services (like `ShortcutServiceInternal`, `PackageManagerInternal`, `NotificationManagerInternal`, and `UserManager`) and involves registering a `BroadcastReceiver`, which usually requires specific permissions depending on the actions it listens for.
/com/android/server/people/data/DataManager.java,addOrUpdateStatus,Yes, this method likely requires permissions to access and modify conversation status, which can involve sensitive user data and interactions.
/com/android/server/people/data/DataManager.java,queryAppUsageStats,Yes, this method requires permissions because querying app usage stats typically requires `PACKAGE_USAGE_STATS` permission in Android.
/com/android/server/people/data/DataManager.java,pruneDataForUser,Yes, it likely requires permissions to access and prune user data and packages.
/com/android/server/people/data/DataManager.java,getBackupPayload,Yes, this method likely requires permissions related to accessing user data or backup data, which are sensitive.
/com/android/server/people/data/DataManager.java,setupUser,Yes, this method requires permissions as it involves accessing user data, managing default dialers and SMS apps, and registering content observers which typically require specific permissions in Android like `READ_CONTACTS`, `READ_CALL_LOG`, and others depending on the operations being performed.
/com/android/server/people/data/DataManager.java,cleanupUser,Yes, the method requires permissions because it interacts with user data, content observers, and system services, which typically require appropriate permissions to access in Android.
/com/android/server/people/data/DataManager.java,updateDefaultDialer,Yes, this method likely requires permissions because it interacts with the `TelecomManager` to set the default dialer which is a sensitive operation that typically requires specific permissions in Android, such as `SET_DEFAULT_DIALER`.
/com/android/server/people/data/DataManager.java,updateDefaultSmsApp,Yes, because updating the default SMS app requires permissions to change SMS settings.
/com/android/server/people/data/DataManager.java,getCallLogContentObserverForTesting,Yes, it likely requires permissions to access call log data.
/com/android/server/people/data/DataManager.java,accept,Yes, it likely requires permissions because the method interacts with SMS-related functionality and gets the default SMS app, which typically requires SMS permissions.
/com/android/server/people/data/DataManager.java,onNotificationPosted,Yes, this method requires permissions related to notifications and possibly interactions with conversations and packages.
/com/android/server/people/data/DataManager.java,onReceive,Yes, because it interacts with user data and default applications, which typically require permissions.
/com/android/server/people/data/DataManager.java,createCallLogQueryHelper,Yes, this method likely requires permissions to access the call log due to the use of `CallLogQueryHelper`, which is related to call log data.
/com/android/server/people/data/UserData.java,deletePackageData,Yes, because deleting package data typically requires permissions to modify or access the app's data or storage.
/com/android/server/people/data/UserData.java,setDefaultDialer,Yes, this method requires permissions because it likely involves setting the default dialer, which is a sensitive operation related to phone functionality.
/com/android/server/people/data/UserData.java,setDefaultSmsApp,Yes, this method likely requires permissions because it sets the default SMS app, which is a sensitive operation involving user messaging privacy.
/com/android/server/people/data/ConversationStatusExpirationBroadcastReceiver.java,scheduleExpiration,Yes, it likely requires permissions because it interacts with system services (specifically `AlarmManager`) which typically requires permissions such as `SET_ALARM` or `SCHEDULE_EXACT_ALARM`.
/com/android/server/people/data/AbstractProtoDiskReadWriter.java,delete,Yes, it likely requires permissions to delete files from storage in Android.
/com/android/server/people/data/AbstractProtoDiskReadWriter.java,writeTo,Yes, the method likely requires permissions to write to external storage or files, as it involves file operations.
/com/android/server/people/data/SmsQueryHelper.java,querySince,Yes, because querying the SMS database requires SMS permissions.
/com/android/server/people/data/EventHistoryImpl.java,loadIndexesFromDisk,Yes, this method likely requires file read permissions to load data from disk.
/com/android/server/people/data/MmsQueryHelper.java,querySince,Yes, because querying the MMS database typically requires permissions to access contacts and messages.
/com/android/server/people/data/MmsQueryHelper.java,getMmsAddress,Yes, it likely requires permissions related to accessing MMS or SMS data, as it queries the MMS address table and uses a `Cursor`.
/com/android/server/people/data/ConversationStore.java,deleteConversation,Yes, it likely requires permissions related to accessing or modifying contacts or notifications, based on interaction with `Uri`, `getContactUri`, and `NotificationChannelId`.
/com/android/server/people/data/ConversationStore.java,getConversationByContactUri,Yes, this method likely requires permissions to access contacts, as it processes a `Uri` related to a contact.
/com/android/server/people/data/ConversationStore.java,updateConversationsInMemory,Yes, because the method interacts with `contactUri`, `phoneNumber`, and `notificationChannelId`, which generally require permissions related to contact access and notifications in Android.
/com/android/server/people/data/DataMaintenanceService.java,scheduleJob,Yes, this method likely requires permissions related to job scheduling, such as `android.permission.SCHEDULE_EXACT_ALARM` or `android.permission.ACCESS_BACKGROUND_LOCATION`, depending on the specific job configurations and the Android version.
/com/android/server/job/GrantedUriPermissions.java,revoke,Yes, this method likely requires permissions because it interacts with `UriGrantsManagerInternal` to revoke URI permissions, which typically necessitates specific permissions for managing sensitive data.
/com/android/server/job/GrantedUriPermissions.java,createFromIntent,Yes, because this method deals with granting URI permissions which typically requires explicit user consent or permissions in Android.
/com/android/server/job/GrantedUriPermissions.java,createFromClip,Yes, it requires permissions because it deals with URI permissions and grants, which typically involve user privacy and security in Android.
/com/android/server/job/GrantedUriPermissions.java,grantClip,Yes, this method likely requires permissions because it deals with clipboard access and potential URI permissions, which typically require explicit user consent or application permissions in Android.
/com/android/server/job/GrantedUriPermissions.java,grantUri,Yes, this method requires permissions because it involves granting URI permissions, which typically requires specific permissions to access content or interact with other apps.
/com/android/server/job/GrantedUriPermissions.java,grantItem,Yes, this method likely requires permissions to grant URI permissions to another package, which involves access to potentially sensitive data.
/com/android/server/job/JobSchedulerShellCommand.java,checkPermission,Yes, because it checks permissions related to `CHANGE_APP_IDLE_STATE`, which requires appropriate permissions to access.
/com/android/server/job/JobSchedulerShellCommand.java,runJob,Yes, the method requires permissions because it calls `checkPermission`, which typically checks if the app has the necessary permissions to perform certain actions related to scheduled jobs.
/com/android/server/job/JobSchedulerShellCommand.java,timeout,Yes, the method requires permissions because it invokes the `checkPermission` which typically checks for specific permissions associated with the user or operation.
/com/android/server/job/JobSchedulerShellCommand.java,cancelJob,Yes, the method likely requires permissions because it appears to interact with user job management, which typically needs specific permissions in Android (e.g., `android.permission.ACCESS_JOB_SCHEDULE`).
/com/android/server/job/JobSchedulerShellCommand.java,monitorBattery,Yes, this method involves checking permissions to monitor battery usage, which typically requires specific permissions in an Android application (e.g., ACCESS_BATTERY_STATS).
/com/android/server/job/JobSchedulerShellCommand.java,getEstimatedNetworkBytes,Yes, this method likely requires permissions because it contains a call to `checkPermission`, indicating that it is checking for specific permissions related to accessing network bytes, which typically involves sensitive information or resources in Android.
/com/android/server/job/JobSchedulerShellCommand.java,getTransferredNetworkBytes,Yes, the method calls `checkPermission` which typically requires specific permissions to be granted in Android.
/com/android/server/job/JobSchedulerShellCommand.java,getJobState,Yes, the method checks for permissions using `checkPermission`, which requires appropriate permissions to access certain resources or perform certain actions.
/com/android/server/job/JobSchedulerShellCommand.java,doHeartbeat,Yes, it checks for permissions before executing the heartbeat command.
/com/android/server/job/JobSchedulerShellCommand.java,resetExecutionQuota,Yes, because it appears to check permissions related to user execution quotas, which typically requires specific permissions in Android.
/com/android/server/job/JobSchedulerShellCommand.java,resetScheduleQuota,Yes, the method checks for permission with `checkPermission`, indicating that it requires specific permissions to execute.
/com/android/server/job/JobSchedulerShellCommand.java,stop,Yes, the method likely requires permissions because it includes a call to `checkPermission`, indicating that it checks for user or operation permissions before executing potentially sensitive actions.
/com/android/server/job/JobSchedulerShellCommand.java,triggerDockState,Yes, this method appears to require permissions because it checks for permission using `checkPermission`.
/com/android/server/job/JobStore.java,prepare,Yes, the method may require permissions because it interacts with file operations (specifically listing files in a directory), which typically requires read permissions on the file system in Android.
/com/android/server/job/controllers/StorageController.java,onReceiveInternal,Yes, this method requires permissions because it handles storage-related events and actions, which typically require the `READ_EXTERNAL_STORAGE` or `WRITE_EXTERNAL_STORAGE` permissions in Android.
/com/android/server/job/controllers/TimeController.java,setDelayExpiredAlarmLocked,Yes, the method sets an alarm and requires permissions related to setting alarms, like `SET_ALARM`.
/com/android/server/job/controllers/TimeController.java,setDeadlineExpiredAlarmLocked,Yes, this method requires permissions because it sets an alarm, which typically needs `SET_ALARM` permission in Android.
/com/android/server/job/controllers/JobStatus.java,prepareLocked,Yes, this method likely requires permissions. It interacts with clipboard data and may involve accessing URI permissions, which typically requires specific permissions like `READ_EXTERNAL_STORAGE` or `WRITE_EXTERNAL_STORAGE`.
/com/android/server/job/controllers/idle/CarIdlenessTracker.java,startTracking,Yes, the method requires permissions because it uses `ACTION_SCREEN_ON`, `ACTION_SCREEN_OFF`, and possibly other actions that typically require system-level permissions to receive or handle broadcasts related to system events.
/com/android/server/wallpaper/WallpaperUtils.java,getWallpaperFiles,Yes, this method may require permissions to access wallpaper files. Accessing file storage may need specific permissions, such as `READ_EXTERNAL_STORAGE`.
/com/android/server/wallpaper/WallpaperManagerService.java,onStart,Yes, this method likely requires permissions because it deals with wallpaper services, which typically need the `SET_WALLPAPER` permission in Android.
/com/android/server/wallpaper/WallpaperManagerService.java,updateWallpapers,Yes, the method `updateWallpapers` likely requires permissions because it involves updating wallpapers, which typically requires permissions related to accessing or modifying system settings or storage in Android.
/com/android/server/wallpaper/WallpaperManagerService.java,updateWallpapersLegacy,Yes, this method likely requires permissions because it interacts with wallpaper settings, which typically requires specific permissions such as `SET_WALLPAPER` to modify the wallpaper on an Android device.
/com/android/server/wallpaper/WallpaperManagerService.java,sendResult,Yes, this method likely requires permission to change the wallpaper, as it involves notifying the system about a wallpaper change.
/com/android/server/wallpaper/WallpaperManagerService.java,ensureStatusHandled,Yes, this method likely requires permissions because it involves setting display dimensions and padding, which may require user approval or specific permissions related to modifying system settings or wallpaper attributes.
/com/android/server/wallpaper/WallpaperManagerService.java,connectLocked,Yes, this method likely requires permissions because it involves connecting to a wallpaper service, which typically requires specific permissions related to accessing and modifying wallpaper settings in Android.
/com/android/server/wallpaper/WallpaperManagerService.java,setWallpaper,Yes, this method requires permissions because setting a wallpaper typically requires `SET_WALLPAPER` permission in Android.
/com/android/server/wallpaper/WallpaperManagerService.java,complete,Yes, this method likely requires permissions related to accessing or modifying wallpapers, as it deals with wallpaper changes and system flags associated with them.
/com/android/server/wallpaper/WallpaperManagerService.java,doPackagesChangedLocked,Yes, it appears this method may require permissions related to wallpaper management, as it deals with wallpaper components and their modifications.
/com/android/server/wallpaper/WallpaperManagerService.java,onReceive,Yes, this method likely requires permissions related to user management, specifically for monitoring user removal (e.g., `android.permission.MANAGE_USERS`).
/com/android/server/wallpaper/WallpaperManagerService.java,clearWallpaperData,Yes, this method likely requires permissions because it involves modifying wallpaper data, which typically requires specific permissions in Android to protect user privacy.
/com/android/server/wallpaper/WallpaperManagerService.java,onRemoveUser,Yes, this method likely requires permissions related to user management and file handling, such as accessing user data and modifying wallpaper files.
/com/android/server/wallpaper/WallpaperManagerService.java,switchUser,Yes, because managing user accounts typically requires permissions related to user account access and management in Android.
/com/android/server/wallpaper/WallpaperManagerService.java,clearWallpaper,Yes, this method requires permissions to clear the wallpaper, specifically the `SET_WALLPAPER` permission.
/com/android/server/wallpaper/WallpaperManagerService.java,clearWallpaperLocked,Yes, this method likely requires permissions because it deals with wallpaper management, which typically requires specific permissions (like `SET_WALLPAPER` or `SET_LOCK_SCREEN_WALLPAPER`) in Android.
/com/android/server/wallpaper/WallpaperManagerService.java,hasCrossUserPermission,Yes, this method checks for the `INTERACT_ACROSS_USERS_FULL` permission, which requires specific permissions to operate.
/com/android/server/wallpaper/WallpaperManagerService.java,hasNamedWallpaper,Yes, the method likely requires permissions to access user profiles or wallpaper data, especially due to the mention of cross-user permission checks.
/com/android/server/wallpaper/WallpaperManagerService.java,setDimensionHints,Yes, the method requires permissions because it involves setting dimension hints for the wallpaper, which typically requires the `SET_WALLPAPER_HINTS` permission.
/com/android/server/wallpaper/WallpaperManagerService.java,setDisplayPadding,Yes, the method requires permissions because it checks for `SET_WALLPAPER_HINTS` permission before proceeding.
/com/android/server/wallpaper/WallpaperManagerService.java,getWallpaper,Yes, this method likely requires permissions because accessing wallpapers typically requires `SET_WALLPAPER` or similar permissions to protect user privacy and system integrity.
/com/android/server/wallpaper/WallpaperManagerService.java,getWallpaperWithFeature,Yes, the method requires permissions. It checks for the `READ_WALLPAPER_INTERNAL` permission through a call to `checkPermissionReadImages`.
/com/android/server/wallpaper/WallpaperManagerService.java,hasPermission,Yes, this method checks for permissions, indicating it requires relevant permissions to function correctly.
/com/android/server/wallpaper/WallpaperManagerService.java,getWallpaperInfoWithFlags,Yes, this method requires permissions because it checks for `READ_WALLPAPER_INTERNAL` permission to access wallpaper information.
/com/android/server/wallpaper/WallpaperManagerService.java,getWallpaperInfoFile,Yes, this method likely requires permissions to access wallpaper information, which can involve reading from storage or other sensitive user data.
/com/android/server/wallpaper/WallpaperManagerService.java,getWallpaperIdForUser,Yes, this method requires permissions because it involves retrieving wallpaper information, which typically requires the `READ_WALLPAPER` permission in Android.
/com/android/server/wallpaper/WallpaperManagerService.java,registerWallpaperColorsCallback,Yes, this method requires permissions because it interacts with wallpaper-related callbacks, which typically fall under "SET_WALLPAPER" and other system-level permissions in Android.
/com/android/server/wallpaper/WallpaperManagerService.java,notifyWakingUp,Yes, it requires permissions because it interacts with the wallpaper engine, which typically requires permissions related to wallpaper management and possibly waking up the device.
/com/android/server/wallpaper/WallpaperManagerService.java,setLockWallpaperCallback,Yes, it requires permissions because the method includes a permission check (checkPermission) for a system-level action.
/com/android/server/wallpaper/WallpaperManagerService.java,getActiveWallpapers,Yes, this method requires permissions. It deals with wallpaper data, which typically requires permissions related to accessing or modifying the device's wallpaper settings.
/com/android/server/wallpaper/WallpaperManagerService.java,setWallpaperDimAmount,Yes, it requires permission to change wallpaper settings.
/com/android/server/wallpaper/WallpaperManagerService.java,setWallpaperDimAmountForUid,Yes, because it checks for permission using `checkPermission`, specifically requiring `SET_WALLPAPER_DIM_AMOUNT`.
/com/android/server/wallpaper/WallpaperManagerService.java,getWallpaperDimAmount,Yes, because it calls `checkPermission` which suggests that it verifies if the necessary permissions are granted.
/com/android/server/wallpaper/WallpaperManagerService.java,getWallpaperColors,Yes, it requires permissions because it interacts with user-specific wallpaper data.
/com/android/server/wallpaper/WallpaperManagerService.java,setWallpaper,Yes, the method `setWallpaper` requires permissions because it involves setting the wallpaper, which is restricted by the `SET_WALLPAPER` permission in the Android manifest.
/com/android/server/wallpaper/WallpaperManagerService.java,updateWallpaperBitmapLocked,Yes, because updating wallpaper typically requires permissions like `SET_WALLPAPER`.
/com/android/server/wallpaper/WallpaperManagerService.java,setWallpaperComponentChecked,Yes, it likely requires permissions related to setting wallpapers (e.g., `SET_WALLPAPER`).
/com/android/server/wallpaper/WallpaperManagerService.java,setWallpaperComponent,Yes, because setting the wallpaper component typically requires `SET_WALLPAPER` permission.
/com/android/server/wallpaper/WallpaperManagerService.java,setWallpaperComponent,Yes, the method `setWallpaperComponent` likely requires permission to change the wallpaper, which is a protected action in Android that typically needs the `SET_WALLPAPER` permission.
/com/android/server/wallpaper/WallpaperManagerService.java,setWallpaperComponentInternal,Yes, requires permission. The method checks for the permission `SET_WALLPAPER_COMPONENT` needed to change the wallpaper component.
/com/android/server/wallpaper/WallpaperManagerService.java,setWallpaperComponentInternalLegacy,Yes, this method requires permissions because it checks for the `SET_WALLPAPER_COMPONENT` permission, which is necessary for setting wallpaper components in Android.
/com/android/server/wallpaper/WallpaperManagerService.java,bindWallpaperComponentLocked,Yes, the method `bindWallpaperComponentLocked` requires `BIND_WALLPAPER` permission to bind the wallpaper service.
/com/android/server/wallpaper/WallpaperManagerService.java,updateCurrentWallpapers,Yes, this method requires permissions as it deals with wallpaper data, which typically requires specific permissions to change or access wallpapers in Android (e.g., `SET_WALLPAPER`).
/com/android/server/wallpaper/WallpaperManagerService.java,checkPermission,Yes, because the method checks for permissions and throws a SecurityException if permissions are not granted.
/com/android/server/wallpaper/WallpaperManagerService.java,isWallpaperSupported,Yes, because it checks for the OP_WRITE_WALLPAPER AppOp which typically requires specific permissions to manage wallpapers.
/com/android/server/wallpaper/WallpaperManagerService.java,isSetWallpaperAllowed,Yes, this method likely requires permissions because it checks user restrictions related to setting the wallpaper, which typically requires specific permissions in Android.
/com/android/server/wallpaper/WallpaperManagerService.java,getWallpaperSafeLocked,Yes, this method likely requires permissions because it interacts with the user's wallpaper data, which typically requires specific permissions like `SET_WALLPAPER` or `CHANGE_LIVE_WALLPAPER`.
/com/android/server/wallpaper/WallpaperManagerService.java,dump,Yes, this method likely requires permissions because it performs operations that check for dump permissions via `checkDumpPermission`, indicating protected or sensitive data may be accessed.
/com/android/server/wallpaper/WallpaperDataParser.java,getLockWallpaperData,Yes, because accessing lock screen wallpaper data typically requires permissions related to storage or wallpaper management.
/com/android/server/wallpaper/WallpaperDataParser.java,migrateFromOld,Yes, it requires permissions to access the filesystem for wallpaper operations.
/com/android/server/wallpaper/WallpaperDataParser.java,saveSettingsLocked,Yes, the method `saveSettingsLocked` likely requires permissions related to writing wallpaper settings.
/com/android/server/wallpaper/WallpaperDataParser.java,writeWallpaperAttributes,Yes, because this method is related to writing wallpaper attributes, which typically requires permissions to access or modify system resources like wallpapers in Android.
/com/android/server/wallpaper/WallpaperDataParser.java,restoreNamedResourceLocked,Yes, this method likely requires permissions to access and modify wallpaper resources, as it deals with wallpaper data and file I/O operations.
/com/android/server/integrity/AppIntegrityManagerServiceImpl.java,updateRuleSet,Yes, the method requires permissions because it involves writing and pushing rule sets, which typically requires specific permissions in Android, especially related to data modification or security settings.
/com/android/server/integrity/AppIntegrityManagerServiceImpl.java,getMultiApkInfo,Yes, it likely requires permissions because it interacts with the file system and accesses package information.
/com/android/server/integrity/AppIntegrityManagerServiceImpl.java,getInstallationPath,Yes, this method may require permissions to access file paths and read files from the device storage.
/com/android/server/integrity/AppIntegrityManagerServiceImpl.java,getCallerPackageNameOrThrow,Yes, this method requires permissions. It checks the calling UID and restricts access to certain packages, indicating that permissions are needed to call it securely.
/com/android/server/integrity/AppIntegrityManagerServiceImpl.java,integrityCheckIncludesRuleProvider,Yes, this method likely requires permissions. It accesses `Settings.Global`, which can involve reading system settings that may need appropriate permissions (e.g., `READ_SETTINGS`).
/com/android/server/integrity/AppIntegrityManagerServiceImpl.java,getPackageListForUid,Yes, this method requires permissions because it accesses package information associated with a specific UID, which typically requires `PACKAGE_USAGE_STATS` or other related permissions in Android.
/com/android/server/integrity/IntegrityFileManager.java,writeRules,Yes, this method likely requires permissions because it involves writing to persistent storage, which usually necessitates filesystem permissions in Android.
/com/android/server/sip/SipWakeLock.java,acquire,Yes, this method likely requires permissions because it involves acquiring a wake lock, which typically necessitates the `WAKE_LOCK` permission in Android applications.
/com/android/server/sip/SipWakeLock.java,acquire,Yes, this method requires permissions because it interacts with a `WakeLock`, which requires the `WAKE_LOCK` permission in Android.
/com/android/server/sip/SipService.java,start,Yes, this method requires permissions. It involves starting a SIP service, which typically requires specific permissions related to SIP usage in Android.
/com/android/server/sip/SipService.java,getProfiles,Yes, the method likely requires permissions because it checks if the calling package can use the SIP service, which typically requires specific permissions in Android.
/com/android/server/sip/SipService.java,open,Yes, this method likely requires permissions related to SIP (Session Initiation Protocol) usage, as it involves creating groups and making calls, which typically necessitate specific network or telephony permissions.
/com/android/server/sip/SipService.java,open3,Yes, because the method appears to handle SIP (Session Initiation Protocol) profiles, which typically requires specific permissions such as `USE_SIP`.
/com/android/server/sip/SipService.java,createSession,Yes, the method likely requires permissions to access network resources for SIP (Session Initiation Protocol) operations, which are typically restricted in Android.
/com/android/server/sip/SipService.java,createGroup,Yes, this method likely requires permissions related to SIP (Session Initiation Protocol) usage, such as `USE_SIP` or similar.
/com/android/server/sip/SipService.java,notifyProfileAdded,Yes, this method requires permissions because it sends a broadcast using `sendBroadcast`, and it references `USE_SIP` which is a permission defined in the Android framework.
/com/android/server/sip/SipService.java,notifyProfileRemoved,Yes, because it involves sending a broadcast which requires the `USE_SIP` permission.
/com/android/server/sip/SipService.java,canUseSip,Yes, this method requires permissions because it checks for the "USE_SIP" permission using `enforceCallingOrSelfPermission`.
/com/android/server/sip/SipService.java,onRinging,Yes, because it involves managing SIP sessions and sending broadcasts, which typically require permissions related to network and telephony capabilities.
/com/android/server/sip/SipService.java,onReceive,Yes, requires permissions related to network access, specifically to access network information.
/com/android/server/sip/SipService.java,registerReceivers,Yes, because it appears to register a broadcast receiver for connectivity changes, which typically requires permissions related to network state (e.g., `ACCESS_NETWORK_STATE`).
/com/android/server/sip/SipService.java,updateWakeLocks,Yes, this method requires permissions. It involves managing Wi-Fi locks, which require `android.permission.WAKE_LOCK` and possibly other connectivity-related permissions.
/com/android/server/sip/SipService.java,onConnectivityChanged,Yes, this method requires permissions. It deals with network connectivity changes, which typically requires access to network state permissions (`ACCESS_NETWORK_STATE`).
/com/android/server/sip/SipSessionGroup.java,makeCall,Yes, because making a call typically requires permission to access telephony services.
/com/android/server/sip/SipSessionGroup.java,answerCall,Yes, the method likely requires permissions related to making calls or managing communication sessions in Android, such as `android.permission.CALL_PHONE` or related permissions for handling SIP (Session Initiation Protocol) calls.
/com/android/server/sip/SipSessionGroup.java,endCall,Yes, this method likely requires permissions to end a call, as it involves an action related to telephony.
/com/android/server/sip/SipSessionGroup.java,outgoingCall,Yes, this method likely requires permissions related to making outgoing calls on an Android device.
/com/android/server/sip/SipSessionGroup.java,inCall,Yes, this method likely requires permissions related to managing calls or SIP sessions, as it involves handling call events and potentially interacting with the user's call status and actions.
/com/android/server/sip/SipSessionGroup.java,establishCall,Yes, this method likely requires permissions related to making calls or managing sessions, such as `CALL_PHONE` or related telephony permissions.
/com/android/server/sip/SipHelper.java,sendRegister,Yes, the method `sendRegister` likely requires permissions related to network access, specifically permissions for SIP (Session Initiation Protocol) communication.
/com/android/server/sip/SipHelper.java,sendInvite,Yes, this method involves sending an INVITE request for SIP (Session Initiation Protocol), which typically requires network permissions to operate.
/com/android/server/sip/SipWakeupTimer.java,scheduleNext,Yes, because it involves setting a PendingIntent and utilizing AlarmManager, which typically requires permissions related to alarms and broadcasts in Android, such as `SET_ALARM` and `RECEIVE_BOOT_COMPLETED`.
/com/android/server/trust/TrustAgentWrapper.java,lockUser,Yes, this method likely requires permissions because it involves locking a user, which is a sensitive operation typically needing security permissions.
/com/android/server/trust/TrustAgentWrapper.java,addEscrowToken,Yes, this method likely requires permissions because it involves managing an escrow token, which typically requires specific security or privacy permissions in Android to protect sensitive data.
/com/android/server/trust/TrustAgentWrapper.java,onUserRequestedUnlock,Yes, this method likely requires permissions, as it interacts with a TrustAgentService which typically handles secure operations related to user unlocking.
/com/android/server/trust/TrustAgentWrapper.java,setSecurityWindowTimer,Yes, the method interacts with `AlarmManager`, which requires the `SET_ALARM` permission.
/com/android/server/os/NativeTombstoneManager.java,onReceive,Yes, the method may require permissions to access user-related data and perform operations related to package management, depending on the context of its use.
/com/android/server/os/NativeTombstoneManager.java,collectTombstones,Yes, this method likely requires permissions related to accessing tombstone information, which is sensitive data.
/com/android/server/os/SchedulingPolicyService.java,requestPriority,Yes, the method checks for specific permissions related to thread handling and priority settings, indicating that certain permissions are required to execute the functionality within.
/com/android/server/os/SchedulingPolicyService.java,requestCpusetBoost,Yes, the method involves checking calling UIDs against a specific UID (MEDIA_UID) to ensure the caller has the appropriate permissions to perform sensitive operations related to process management, indicating that permission checks are needed.
/com/android/server/os/SchedulingPolicyService.java,enableCpusetBoost,Yes, it requires permissions to modify process behavior, which may involve system-level changes.
/com/android/server/os/DeviceIdentifiersPolicyService.java,onStart,Yes, it likely requires permissions because it interacts with the `DeviceIdentifiersPolicy` which may involve accessing device identifiers, necessitating permissions like `READ_PHONE_STATE` or similar.
/com/android/server/os/DeviceIdentifiersPolicyService.java,getSerial,Yes, this method requires permissions. It checks for `READ_DEVICE_IDENTIFIERS`, indicating sensitive information access is required.
/com/android/server/os/DeviceIdentifiersPolicyService.java,getSerialForPackage,Yes, because it checks the calling package's permissions to access device identifiers.
/com/android/server/display/ScreenOffBrightnessSensorController.java,setLightSensorEnabled,Yes, this method likely requires permissions. It interacts with the light sensor, which typically requires the `android.permission.READ_SENSOR` or similar permission to access sensor data.
/com/android/server/display/BrightnessSetting.java,setBrightness,Yes, this method requires permissions because it modifies the device's brightness, which is a sensitive setting that requires appropriate user permissions in Android.
/com/android/server/display/BrightnessSetting.java,setBrightnessNitsForDefaultDisplay,Yes, this method likely requires permissions to change display brightness settings.
/com/android/server/display/ColorFade.java,captureScreen,Yes, because capturing the screen requires permissions for security reasons.
/com/android/server/display/ColorFade.java,createSurfaceControl,Yes, this method likely requires permissions because it deals with creating a SurfaceControl, which typically involves accessing system resources or drawing operations that may require permissions such as "SYSTEM_ALERT_WINDOW" or similar.
/com/android/server/display/BrightnessIdleJob.java,scheduleJob,Yes, this method likely requires permissions because it involves scheduling jobs with the `JobScheduler`, which typically requires specific permissions related to background execution or job management in Android.
/com/android/server/display/DisplayPowerProximityStateController.java,onSensorChanged,Yes, the method `onSensorChanged` requires permissions related to sensor usage. Specifically, if it involves proximity sensors, it typically requires the `ACCESS_FINE_LOCATION` or `BODY_SENSORS` permission, depending on the sensor type being used.
/com/android/server/display/DisplayPowerProximityStateController.java,updateProximityState,Yes, because it likely interacts with proximity sensors, which may require certain permissions for usage in Android.
/com/android/server/display/DisplayPowerProximityStateController.java,sendOnProximityPositiveWithWakelock,Yes, requires permission to use wake lock.
/com/android/server/display/DisplayPowerProximityStateController.java,sendOnProximityNegativeWithWakelock,Yes, it likely requires permission to acquire a wakelock.
/com/android/server/display/DisplayPowerProximityStateController.java,setProximitySensorEnabled,Yes, because it manages the proximity sensor, which requires permission to access sensor data.
/com/android/server/display/DisplayPowerProximityStateController.java,handleProximitySensorEvent,Yes, this method likely requires permissions to access the proximity sensor and possibly manage wake locks for power management during its operations.
/com/android/server/display/AutomaticBrightnessController.java,getAutomaticScreenBrightness,Yes, it requires permissions to access system settings related to screen brightness and potentially ambient light detection.
/com/android/server/display/AutomaticBrightnessController.java,setScreenBrightnessByUser,Yes, this method likely requires permissions because it involves setting screen brightness, which typically requires user permissions in Android to access and modify system settings.
/com/android/server/display/AutomaticBrightnessController.java,setLightSensorEnabled,Yes, it likely requires permissions because it interacts with the light sensor, which typically necessitates sensor-related permissions in Android.
/com/android/server/display/AutomaticBrightnessController.java,run,Yes, it requires permissions. The method interacts with `ActivityManager` and retrieves information about the foreground app, which typically requires permissions such as `android.permission.GET_TASKS` or `android.permission.PACKAGE_USAGE_STATS`.
/com/android/server/display/PersistentDataStore.java,applyWifiDisplayAlias,Yes, the method likely requires permissions related to accessing Wi-Fi displays, as it interacts with `WifiDisplay` objects and potentially retrieves device information (like addresses and names) which typically requires relevant permissions in Android.
/com/android/server/display/PersistentDataStore.java,rememberWifiDisplay,Yes, because the method appears to interact with Wi-Fi displays, which typically requires network-related permissions to function properly in the Android environment.
/com/android/server/display/PersistentDataStore.java,setBrightnessNitsForDefaultDisplay,Yes, this method likely requires permissions to modify brightness settings on the device.
/com/android/server/display/PersistentDataStore.java,setBrightnessConfigurationForUser,Yes, it likely requires permissions because it involves changing brightness settings, which typically requires system-level permissions in Android.
/com/android/server/display/PersistentDataStore.java,setBrightnessConfigurationForDisplayLocked,Yes, this method likely requires permissions because it involves configuring display brightness, which typically requires special system permissions related to device settings or displays in Android.
/com/android/server/display/PersistentDataStore.java,load,Yes, the method likely requires permissions since it involves file operations such as reading and parsing XML, which typically require storage permissions.
/com/android/server/display/PersistentDataStore.java,save,Yes, this method involves writing data, which typically requires permissions related to file access or storage.
/com/android/server/display/PersistentDataStore.java,setBrightness,Yes, setting brightness typically requires device permissions.
/com/android/server/display/PersistentDataStore.java,setBrightnessConfiguration,Yes, it requires permissions related to adjusting the device's brightness settings.
/com/android/server/display/PersistentDataStore.java,setBrightnessConfigurationForUser,Yes, the method likely requires permissions related to modifying brightness settings or accessing user configurations.
/com/android/server/display/DisplayDeviceConfig.java,loadConfigFromDirectory,Yes, because it accesses files from a directory which typically requires file read/write permissions in Android.
/com/android/server/display/DisplayDeviceConfig.java,getProximitySensor,Yes, the method `getProximitySensor` likely requires permissions to access sensor data on an Android device for privacy and security reasons.
/com/android/server/display/DisplayDeviceConfig.java,initFromFile,Yes, the method requires permissions because it reads from a file on the device, which typically requires file read permissions (e.g., `READ_EXTERNAL_STORAGE`).
/com/android/server/display/BrightnessMappingStrategy.java,setAutoBrightnessAdjustment,Yes, because it likely requires permission to modify device settings like brightness.
/com/android/server/display/BrightnessMappingStrategy.java,setAutoBrightnessAdjustment,Yes, it likely requires permission because it involves adjusting auto-brightness settings, which typically needs system-level permissions in Android.
/com/android/server/display/DisplayPowerControllerInterface.java,setBrightnessConfiguration,Yes, it likely requires permissions because updating display brightness configurations may interfere with user settings and device functionality, which typically requires specific permissions.
/com/android/server/display/DisplayManagerShellCommand.java,onCommand,Yes, the method involves commands that manipulate system settings like brightness, logging, and display modes, which typically require permissions in Android.
/com/android/server/display/DisplayManagerShellCommand.java,setBrightness,Yes, this method requires permissions because it involves setting the screen brightness, which typically requires the `WRITE_SETTINGS` permission in Android.
/com/android/server/display/DisplayPowerState.java,setScreenState,Yes, this method likely requires permissions. It controls the screen state which typically requires system-level permissions to modify display settings in Android.
/com/android/server/display/DisplayPowerState.java,setScreenBrightness,Yes, because setting the display brightness typically requires the `WRITE_SETTINGS` permission in Android.
/com/android/server/display/BrightnessThrottler.java,startObserving,Yes, because it appears to access thermal status data, which may require specific system permissions.
/com/android/server/display/HighBrightnessModeController.java,setAutoBrightnessEnabled,Yes, because modifying system settings like auto-brightness typically requires permission to change system settings in Android.
/com/android/server/display/OverlayDisplayAdapter.java,run,Yes, this method requires permissions because it accesses settings through `ContentResolver` and registers a `ContentObserver`, which typically requires permissions for accessing specific settings or content.
/com/android/server/display/WakelockController.java,acquireWakelock,Yes, because acquiring a wakelock requires the `WAKE_LOCK` permission in Android.
/com/android/server/display/WakelockController.java,releaseAll,Yes, because releasing wake locks typically requires the `android.permission.WAKE_LOCK` permission.
/com/android/server/display/WakelockController.java,acquireWakelockInternal,Yes, it requires permissions because acquiring a wake lock typically needs the `WAKE_LOCK` permission in Android to prevent the device from entering sleep mode.
/com/android/server/display/LocalDisplayAdapter.java,requestDisplayStateLocked,Yes, this method likely requires permissions because it deals with display states and brightness settings, which are typically protected and require specific permissions to modify (like `WRITE_SETTINGS` or similar).
/com/android/server/display/LocalDisplayAdapter.java,setDisplayBrightness,Yes, the method likely requires permission to change the display brightness settings on the device.
/com/android/server/display/LocalDisplayAdapter.java,setDisplayBrightness,Yes, this method likely requires permissions to modify display brightness settings, as altering system-level display settings typically requires specific permissions for security and privacy reasons.
/com/android/server/display/LocalDisplayAdapter.java,setDisplayBrightness,Yes, this method likely requires permissions to modify the display brightness settings.
/com/android/server/display/LocalDisplayAdapter.java,setBacklight,Yes, the method likely requires permissions to modify display brightness settings.
/com/android/server/display/WifiDisplayAdapter.java,registerLocked,Yes, this method likely requires permissions as it involves actions related to wireless display connectivity and broadcasting, which typically need specific permissions in Android, such as `CHANGE_WIFI_STATE` or `ACCESS_WIFI_STATE`.
/com/android/server/display/WifiDisplayController.java,retrieveWifiP2pManagerAndChannel,Yes, this method likely requires permissions because it accesses the `WifiP2pManager` service, which typically requires permissions related to Wi-Fi or networking in Android.
/com/android/server/display/WifiDisplayController.java,updateSettings,Yes, the method likely requires permissions because it accesses `Settings.Global`, which typically requires appropriate permissions to read or write settings such as Wi-Fi display configurations.
/com/android/server/display/WifiDisplayController.java,updateWfdEnableState,Yes, this method likely requires permissions because it involves Wi-Fi Direct functionality, which typically mandates location permissions to access nearby devices and manage connections.
/com/android/server/display/WifiDisplayController.java,updateScanState,Yes, because it likely interacts with Wi-Fi or peer discovery features, which require location and Wi-Fi permissions.
/com/android/server/display/WifiDisplayController.java,tryDiscoverPeers,Yes, this method likely requires permissions related to discovering peers in Wi-Fi Direct, such as ACCESS_FINE_LOCATION or ACCESS_COARSE_LOCATION, due to the nature of peer discovery operations in Android.
/com/android/server/display/WifiDisplayController.java,requestPeers,Yes, because the method interacts with Wi-Fi Direct, which requires specific permissions in Android (e.g., `ACCESS_WIFI_STATE`, `CHANGE_WIFI_STATE`, and potentially `INTERNET`).
/com/android/server/display/WifiDisplayController.java,connect,Yes, this method likely requires permissions because it involves connecting to a Wi-Fi Direct device, which generally requires location permissions to discover nearby devices.
/com/android/server/display/WifiDisplayController.java,handleConnectionChanged,Yes, this method likely requires permissions related to network state or Wi-Fi direct operations, since it handles network information and device connections.
/com/android/server/display/WifiDisplayController.java,onGroupInfoAvailable,Yes, this method requires permissions as it interacts with the WiFi Direct (P2P) functionality, which typically requires location permissions in Android for network discovery and connectivity.
/com/android/server/display/WifiDisplayController.java,onReceive,Yes, this method requires permissions for handling Wi-Fi P2P (Peer-to-Peer) actions, which typically requires certain network-related permissions like `ACCESS_WIFI_STATE` and potentially `CHANGE_WIFI_STATE`.
/com/android/server/display/VirtualDisplayAdapter.java,createVirtualDisplayLocked,Yes, this method requires permissions because it involves creating a virtual display, which typically requires permissions related to displaying content on the screen and accessing media projection features.
/com/android/server/display/VirtualDisplayAdapter.java,resizeVirtualDisplayLocked,Yes, this method likely requires permissions related to managing virtual displays and window management, which are sensitive operations in Android that typically need specific permissions.
/com/android/server/display/VirtualDisplayAdapter.java,releaseVirtualDisplayLocked,Yes, this method likely requires permissions related to managing display devices, as it deals with releasing virtual displays.
/com/android/server/display/brightness/strategy/AutomaticBrightnessStrategy.java,setUseAutoBrightness,Yes, because changing display settings typically requires permissions to access system settings.
/com/android/server/display/brightness/strategy/AutomaticBrightnessStrategy.java,updatePendingAutoBrightnessAdjustments,Yes, this method likely requires permission to modify system settings, particularly for auto-brightness adjustments.
/com/android/server/display/brightness/strategy/AutomaticBrightnessStrategy.java,setTemporaryAutoBrightnessAdjustment,Yes, this method likely requires permissions related to modifying system settings, such as `WRITE_SETTINGS`.
/com/android/server/display/brightness/strategy/AutomaticBrightnessStrategy.java,putAutoBrightnessAdjustmentSetting,Yes, because it involves modifying system settings (auto brightness adjustment), which requires `WRITE_SETTINGS` permission.
/com/android/server/display/brightness/strategy/AutomaticBrightnessStrategy.java,getAutoBrightnessAdjustmentSetting,Yes, because it involves accessing system settings, which typically requires permissions like `WRITE_SETTINGS` or `READ_SETTINGS`.
/com/android/server/incident/PendingReports.java,authorizeReportImpl,Yes, the method likely requires permissions to check if the calling package has access to the necessary resources or operations it is trying to perform, especially when dealing with incident reporting and user consent.
/com/android/server/incident/PendingReports.java,sendBroadcast,Yes, because sending broadcasts often requires specific permissions to ensure that only authorized apps can receive the broadcast.
/com/android/server/incident/PendingReports.java,sendBroadcast,Yes, this method likely requires permissions to send broadcasts, particularly if it's sending intents that interact with other apps or system components, such as `android.Manifest.permission.APPROVE_INCIDENT_REPORTS`.
/com/android/server/incident/PendingReports.java,isPackageInUid,Yes, this method likely requires permissions to access package information, which is often restricted to ensure security and privacy.
/com/android/server/incident/IncidentCompanionService.java,authorizeReport,Yes, the method requires permissions because it mentions that the caller must have DUMP and USAGE_STATS permissions to retrieve data.
/com/android/server/incident/IncidentCompanionService.java,cancelAuthorization,Yes, the method requires permission to enforce request authorization.
/com/android/server/incident/IncidentCompanionService.java,sendReportReadyBroadcast,Yes, this method requires permissions because it involves sending a broadcast and utilizes `sendBroadcastAsUserMultiplePermissions`, which typically requires appropriate permissions to ensure only authorized components can send broadcasts, particularly for sensitive actions.
/com/android/server/incident/IncidentCompanionService.java,getPendingReports,Yes, this method likely requires permissions since it involves accessing pending reports, which may contain sensitive user data.
/com/android/server/incident/IncidentCompanionService.java,approveReport,Yes, this method involves authorization checks, suggesting it requires permissions to approve a report.
/com/android/server/incident/IncidentCompanionService.java,denyReport,Yes, the method likely requires permissions as it includes an enforcement call to `enforceAuthorizePermission`, indicating that it checks for the appropriate permission before proceeding with the action.
/com/android/server/incident/IncidentCompanionService.java,getIncidentReportList,Yes, this method likely requires permissions as it deals with fetching incident reports, which typically involves sensitive information and access control in Android.
/com/android/server/incident/IncidentCompanionService.java,deleteIncidentReports,Yes, the method likely requires permissions related to accessing and deleting incident reports, as indicated by the call to `enforceAccessReportsPermissions`.
/com/android/server/incident/IncidentCompanionService.java,deleteAllIncidentReports,Yes, it requires permissions to access and delete incident reports.
/com/android/server/incident/IncidentCompanionService.java,getIncidentReport,Yes, this method requires permissions because it uses `enforceAccessReportsPermissions`, which typically checks for specific permissions related to accessing incident reports in the Android system.
/com/android/server/incident/IncidentCompanionService.java,dump,Yes, this method appears to require permissions, as it includes a method call (`checkDumpPermission`) to verify if the necessary permissions are granted before performing its operations.
/com/android/server/incident/IncidentCompanionService.java,dumpRestrictedImages,Yes, this method likely requires permissions because it interacts with restricted images, which typically involves sensitive data that necessitates special permissions in Android.
/com/android/server/incident/IncidentCompanionService.java,enforceRequestAuthorizationPermission,Yes, this method seems to involve permission checks (specifically `enforceCallingOrSelfPermission`) which typically requires Android permissions to access certain features or data.
/com/android/server/incident/IncidentCompanionService.java,enforceAuthorizePermission,Yes, this method involves checking permissions (specifically `APPROVE_INCIDENT_REPORTS`) before proceeding with functionality, indicating that permission checks are required.
/com/android/server/incident/IncidentCompanionService.java,enforceAccessReportsPermissions,Yes, the method requires permissions because it checks for `APPROVE_INCIDENT_REPORTS`, `DUMP`, and `PACKAGE_USAGE_STATS` permissions to enforce access to incident reports.
/com/android/server/locksettings/SyntheticPasswordManager.java,getWeaverService,Yes, because it mentions that "Does not have permissions to get AIDL weaver service" and could throw a `SecurityException`.
/com/android/server/locksettings/SyntheticPasswordManager.java,removeUser,Yes, because modifying user accounts generally requires permission checks related to user privacy and security in Android.
/com/android/server/locksettings/SyntheticPasswordManager.java,newSidForUser,Yes, this method likely requires permissions to manage user authentication information, specifically related to passwords and security.
/com/android/server/locksettings/SyntheticPasswordManager.java,createLskfBasedProtector,Yes, this method requires permissions because it interacts with the `GateKeeperService`, which is related to user credentials and security features on the device.
/com/android/server/locksettings/SyntheticPasswordManager.java,verifyFrpCredential,Yes, this method likely requires permissions because it deals with credential verification, which typically involves sensitive data and operations requiring user consent or security permissions in the Android framework.
/com/android/server/locksettings/SyntheticPasswordManager.java,migrateFrpPasswordLocked,Yes, this method likely requires permissions related to accessing user credentials and data manipulation.
/com/android/server/locksettings/SyntheticPasswordManager.java,unlockLskfBasedProtector,Yes, this method likely requires permissions since it interacts with sensitive user authentication data and systems such as the Gatekeeper service.
/com/android/server/locksettings/SyntheticPasswordManager.java,refreshPinLengthOnDisk,Yes, this method likely requires permissions to access and modify user security data, such as PIN length.
/com/android/server/locksettings/SyntheticPasswordManager.java,unlockTokenBasedProtector,Yes, it likely requires permissions because it deals with sensitive authentication data and user identity validation.
/com/android/server/locksettings/SyntheticPasswordManager.java,unlockTokenBasedProtectorInternal,Yes, this method likely requires permissions because it interacts with secure elements like `IGateKeeperService` and handles user authentication, which typically necessitates sensitive permissions for security-related operations in Android.
/com/android/server/locksettings/SyntheticPasswordManager.java,unwrapSyntheticPasswordBlob,Yes, this method may require permissions because it deals with sensitive user data and cryptographic operations related to synthetic passwords, which typically involve secure storage and access permissions.
/com/android/server/locksettings/SyntheticPasswordManager.java,verifyChallengeInternal,Yes, this method likely requires permissions because it interacts with `IGateKeeperService`, which is associated with gatekeeper authentication and credential verification, typically needing sensitive permissions for security operations.
/com/android/server/locksettings/SyntheticPasswordManager.java,getPasswordMetrics,Yes, access to user password metrics typically requires permissions related to sensitive user data and security.
/com/android/server/locksettings/ManagedProfilePasswordCache.java,storePassword,Yes, because it deals with sensitive user credentials (passwords) and encryption, which typically requires permissions to ensure security and privacy.
/com/android/server/locksettings/ManagedProfilePasswordCache.java,retrievePassword,Yes, this method likely requires permissions because it deals with retrieving sensitive information (user passwords) and accessing encryption keys, which typically necessitates permissions related to security and privacy in the Android framework.
/com/android/server/locksettings/ManagedProfilePasswordCache.java,removePassword,Yes, the method requires permissions because it involves manipulating user passwords and interacting with security features that typically require specific permissions to ensure user data privacy and security.
/com/android/server/locksettings/RebootEscrowProviderHalImpl.java,getRebootEscrow,Yes, this method likely requires permissions related to accessing device hardware or services, such as the ability to interact with the reboot escrow feature.
/com/android/server/locksettings/RebootEscrowProviderHalImpl.java,getAndClearRebootEscrowKey,Yes, this method likely requires permissions because it interacts with reboot escrow data, which may involve sensitive device management operations necessitating specific permissions for security reasons.
/com/android/server/locksettings/ResumeOnRebootServiceProvider.java,resolveService,Yes, the method requires permissions because it interacts with services that may require specific permissions declared in the AndroidManifest.xml (e.g., accessing services, using system properties).
/com/android/server/locksettings/ResumeOnRebootServiceProvider.java,bindToService,Yes, the method `bindToService` requires permissions because it involves binding to a service, which typically requires the appropriate permission declarations in the Android manifest to allow access to the specific service being linked.
/com/android/server/locksettings/RebootEscrowManager.java,isNetworkConnected,Yes, this method requires permission because it accesses network state information which typically requires the `ACCESS_NETWORK_STATE` permission in Android.
/com/android/server/locksettings/RebootEscrowManager.java,requestNetworkWithInternet,Yes, this method requires permissions because it involves requesting network connectivity, which typically requires the `ACCESS_NETWORK_STATE` and `INTERNET` permissions in Android.
/com/android/server/locksettings/RebootEscrowManager.java,getWakeLock,Yes, this method requires permissions because it involves acquiring a WakeLock, which necessitates the `android.permission.WAKE_LOCK` permission in Android.
/com/android/server/locksettings/RebootEscrowManager.java,loadRebootEscrowDataOnInternet,Yes, requires permissions related to network access.
/com/android/server/locksettings/RebootEscrowManager.java,restoreRebootEscrowForUser,Yes, this method likely requires permissions because it interacts with user-specific data related to reboot escrow, which typically involves sensitive information and may require system-level permissions to manage security and privacy for user data.
/com/android/server/locksettings/RebootEscrowManager.java,callToRebootEscrowIfNeeded,Yes, the method likely requires permissions because it involves user-specific data handling (`userId`) and potentially sensitive operations related to encryption and keystores.
/com/android/server/locksettings/LockSettingsShellCommand.java,onCommand,Yes, because the method has commands related to user credentials and secure device settings, which typically require permissions such as `USE_BIOMETRIC`, `USE_FINGERPRINT`, or similar security permissions in Android.
/com/android/server/locksettings/LockSettingsShellCommand.java,getOldCredential,Yes, this method likely requires permissions related to access to secure lock settings or credentials, as it interacts with user credentials and lock pattern utilities.
/com/android/server/locksettings/LockSettingsShellCommand.java,runSetPattern,Yes, the method likely requires permissions because it manipulates lock screen credentials, which typically involves sensitive user data and requires proper authorization to access or modify security-related features.
/com/android/server/locksettings/LockSettingsShellCommand.java,runSetPassword,Yes, because setting a password typically involves sensitive data access and requires permissions to modify device security settings.
/com/android/server/locksettings/LockSettingsShellCommand.java,runSetPin,Yes, this method likely requires permissions related to setting a lock credential.
/com/android/server/locksettings/LockSettingsShellCommand.java,runSetResumeOnRebootProviderPackage,Yes, the method involves a call to `enforcePermission`, which indicates that it checks or enforces a permission requirement.
/com/android/server/locksettings/RebootEscrowProviderServerBasedImpl.java,storeRebootEscrowKey,Yes, this method may require permissions related to storage access, as it involves writing data (the reboot escrow key) to a storage mechanism (`mStorage`).
/com/android/server/locksettings/BiometricDeferredQueue.java,addPendingLockoutResetForUser,Yes, this method requires permissions because it involves biometric operations which typically require specific permissions related to biometric authentication and user security management.
/com/android/server/locksettings/BiometricDeferredQueue.java,processPendingLockoutsForFingerprint,Yes, because it involves fingerprint management, which typically requires permissions for accessing hardware security features like fingerprints.
/com/android/server/locksettings/LockSettingsStrongAuth.java,handleScheduleNonStrongBiometricTimeout,Yes, the method uses the AlarmManager, which typically requires permissions related to alarms (e.g., `SET_ALARM`).
/com/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager.java,initRecoveryService,Yes, it requires permissions because the method checks for recovery key store permission using `checkRecoverKeyStorePermission`.
/com/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager.java,initRecoveryServiceWithSigFile,Yes, the method checks for recovery key store permission.
/com/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager.java,getKeyChainSnapshot,Yes, this method likely requires permissions because it checks for a specific permission (`checkRecoverKeyStorePermission`) before executing and returning sensitive data related to application keys.
/com/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager.java,setSnapshotCreatedPendingIntent,Yes, the method checks for permissions related to the key store, requiring permission to modify or access sensitive data.
/com/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager.java,setServerParams,Yes, it requires permissions because it uses the `checkRecoverKeyStorePermission` method, indicating that access to the key store is controlled through permissions.
/com/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager.java,setRecoveryStatus,Yes, this method requires permissions because it calls the `checkRecoverKeyStorePermission` method, indicating access control related to key recovery operations.
/com/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager.java,getRecoveryStatus,Yes, the method checks for key store permissions before returning recovery statuses.
/com/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager.java,setRecoverySecretTypes,Yes, the method requires permissions because it calls `checkRecoverKeyStorePermission`, which implies that certain permissions are needed to access or modify the recovery secrets list for a user.
/com/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager.java,getRecoverySecretTypes,Yes, this method checks for permissions related to recovering the key store, indicating it requires appropriate permissions to access recovery data.
/com/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager.java,startRecoverySession,Yes, this method requires permissions, specifically to check for the recover key store permission as indicated by the method call `checkRecoverKeyStorePermission`.
/com/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager.java,startRecoverySessionWithCertPath,Yes, because the method involves a recovery session that may require secure data handling and specific permissions related to accessing cryptographic keys or storage of recovery data.
/com/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager.java,closeSession,Yes, it requires permissions because it calls a method to check for permissions (`checkRecoverKeyStorePermission`).
/com/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager.java,removeKey,Yes, the method may require permissions since it calls `checkRecoverKeyStorePermission`, which implies checking for access rights related to the key store.
/com/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager.java,generateKeyWithMetadata,Yes, this method likely requires permissions to access the keystore and manage cryptographic keys.
/com/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager.java,importKey,Yes, this method requires permissions to access and import cryptographic keys in the system keystore.
/com/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager.java,importKeyWithMetadata,Yes, this method requires permissions to access the keystore.
/com/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager.java,getKey,Yes, the method requires permissions because it checks for key store access permissions.
/com/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager.java,lockScreenSecretAvailable,Yes, this method likely requires permissions because it deals with sensitive user credential information and interactions with security features of the Android system.
/com/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager.java,lockScreenSecretChanged,Yes, it requires permissions because it deals with changing lock screen credentials, which typically requires system-level permissions related to security and user authentication.
/com/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager.java,startRemoteLockscreenValidation,Yes, because it involves verifying lock screen credentials, which requires permission to access the device's lock settings.
/com/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager.java,validateRemoteLockscreen,Yes, because the method interacts with remote credentials and involves secure operations that likely require user permissions for security and privacy.
/com/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager.java,createLockscreenCredential,Yes, it requires permissions for accessing and modifying locks on the device.
/com/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager.java,checkVerifyRemoteLockscreenPermission,Yes, because it checks for the "CHECK_REMOTE_LOCKSCREEN" permission.
/com/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager.java,checkRecoverKeyStorePermission,Yes, it requires permission because it enforces the "RecoverKeyStore" permission for the caller.
/com/android/server/locksettings/recoverablekeystore/PlatformKeyManager.java,getInstance,Yes, this method may require permissions to write to /data/system, as indicated by the potential `SecurityException` if the caller does not have the necessary permission.
/com/android/server/locksettings/recoverablekeystore/PlatformKeyManager.java,isDeviceLocked,Yes, it likely requires permissions linked to accessing the device's lock state.
/com/android/server/locksettings/recoverablekeystore/PlatformKeyManager.java,getDecryptKey,Yes, the method involves handling sensitive key material related to decryption which typically requires permissions related to device security and user authentication.
/com/android/server/locksettings/recoverablekeystore/PlatformKeyManager.java,getDecryptKeyInternal,Yes, this method likely requires permissions related to accessing security-sensitive materials, specifically for key retrieval and decryption purposes.
/com/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb.java,insertKey,Yes, requires permissions because it involves inserting data into a database, which typically requires WRITE permissions for storage access in Android.
/com/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb.java,setUserSerialNumber,Yes, this method likely requires permissions related to database access (e.g., `WRITE_EXTERNAL_STORAGE` or similar), as it updates user metadata in a database.
/com/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb.java,setActiveRootOfTrust,Yes, it likely requires permissions related to database access and user profile management.
/com/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb.java,setLong,Yes, because it appears to interact with a database, which typically requires permissions to access the data stored on the device.
/com/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb.java,setBytes,Yes, this method likely requires permissions to access the database.
/com/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb.java,setBytes,Yes, this method likely requires permissions because it interacts with a database, which involves reading or writing sensitive data that generally requires explicit permissions in Android.
/com/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb.java,getLong,Yes, because the method involves accessing a database which may require specific permissions (e.g., READ_EXTERNAL_STORAGE or WRITE_EXTERNAL_STORAGE) depending on its implementation context in Android.
/com/android/server/locksettings/recoverablekeystore/storage/ApplicationKeyStorage.java,makeKeystoreEngineGrantString,Yes, because it interacts with the KeyStore, which typically requires permissions related to security and cryptography.
/com/android/server/locksettings/recoverablekeystore/storage/CleanupManager.java,registerRecoveryAgent,Yes, because it involves registering a recovery agent, which typically requires permissions related to user management and system security.
/com/android/server/sensorprivacy/AllSensorStateController.java,persist,Yes, because it involves file writing which requires permissions to access storage.
/com/android/server/sensorprivacy/CameraPrivacyLightController.java,onOpActiveChanged,Yes, the method likely requires permissions related to camera and phone call access, based on the operations involved with `AppOpsManager.OPSTR_CAMERA` and `AppOpsManager.OPSTR_PHONE_CALL_CAMERA`.
/com/android/server/sensorprivacy/CameraPrivacyLightController.java,updateSensorListener,Yes, this method likely requires permissions because it involves registering and unregistering a sensor listener, which typically requires access to sensor data that may be protected by permissions in Android.
/com/android/server/sensorprivacy/SensorPrivacyService.java,onBootPhase,Yes, this method requires permissions because it interacts with system services that may require specific permissions, such as camera access and system settings.
/com/android/server/sensorprivacy/SensorPrivacyService.java,onUserRestrictionsChanged,Yes, it requires permissions to manage user restrictions related to camera and microphone toggles.
/com/android/server/sensorprivacy/SensorPrivacyService.java,onOpNoted,Yes, this method requires permissions because it involves operations related to the camera and microphone, which typically require specific permissions in Android (e.g., CAMERA and RECORD_AUDIO).
/com/android/server/sensorprivacy/SensorPrivacyService.java,onSensorUseStarted,Yes, this method interacts with system services and activities that require permissions related to sensor privacy, which implies it may require specific permissions to utilize those sensors.
/com/android/server/sensorprivacy/SensorPrivacyService.java,showSensorUseReminderNotification,Yes, this method likely requires permissions to show notifications, especially related to sensor usage, as it involves potentially sensitive information about user activity and sensor access.
/com/android/server/sensorprivacy/SensorPrivacyService.java,setSensorPrivacy,Yes, it requires permissions because it involves managing sensor privacy settings, which typically needs specific permissions for security reasons.
/com/android/server/sensorprivacy/SensorPrivacyService.java,setToggleSensorPrivacy,Yes, this method requires permissions because it includes a call to `enforceManageSensorPrivacyPermission`, indicating that managing sensor privacy is involved, which typically necessitates specific permissions in Android.
/com/android/server/sensorprivacy/SensorPrivacyService.java,setToggleSensorPrivacyUnchecked,Yes, this method likely requires permissions because it appears to interact with sensor privacy settings, which generally requires user permissions to access and modify.
/com/android/server/sensorprivacy/SensorPrivacyService.java,canChangeToggleSensorPrivacy,Yes, this method requires permissions because it checks whether the microphone and camera toggles can be changed, which typically involves user permissions related to privacy or device management.
/com/android/server/sensorprivacy/SensorPrivacyService.java,setToggleSensorPrivacyForProfileGroup,Yes, this method likely requires permission because it references `enforceManageSensorPrivacyPermission`, which implies a need for certain permissions related to managing sensor privacy settings.
/com/android/server/sensorprivacy/SensorPrivacyService.java,enforceManageSensorPrivacyPermission,Yes, changing sensor privacy requires the permission "MANAGE_SENSOR_PRIVACY".
/com/android/server/sensorprivacy/SensorPrivacyService.java,enforceObserveSensorPrivacyPermission,Yes, the method requires the "OBSERVE_SENSOR_PRIVACY" permission to observe changes to sensor privacy state.
/com/android/server/sensorprivacy/SensorPrivacyService.java,enforcePermission,Yes, because the method checks for permissions and throws a SecurityException if the permission is not granted.
/com/android/server/sensorprivacy/SensorPrivacyService.java,isSensorPrivacyEnabled,Yes, it requires permission because it enforces sensor privacy permissions.
/com/android/server/sensorprivacy/SensorPrivacyService.java,isToggleSensorPrivacyEnabled,Yes, this method likely requires permission to observe sensor privacy settings, as indicated by the call to `enforceObserveSensorPrivacyPermission`.
/com/android/server/sensorprivacy/SensorPrivacyService.java,addSensorPrivacyListener,Yes, this method requires permissions because it enforces observing the sensor privacy permission before registering a listener.
/com/android/server/sensorprivacy/SensorPrivacyService.java,addToggleSensorPrivacyListener,Yes, because it enforces a permission related to observing sensor privacy.
/com/android/server/sensorprivacy/SensorPrivacyService.java,removeSensorPrivacyListener,Yes, the method requires permissions because it involves enforcing a sensor privacy permission (`enforceObserveSensorPrivacyPermission`).
/com/android/server/sensorprivacy/SensorPrivacyService.java,removeToggleSensorPrivacyListener,Yes, the method requires permissions because it involves enforcing sensor privacy permissions through the `enforceObserveSensorPrivacyPermission` method.
/com/android/server/sensorprivacy/SensorPrivacyService.java,suppressToggleSensorPrivacyReminders,Yes, this method requires permissions because it calls `enforceManageSensorPrivacyPermission`, which indicates that specific permissions are necessary to manage sensor privacy settings.
/com/android/server/sensorprivacy/SensorPrivacyService.java,requiresAuthentication,Yes, this method appears to require permissions related to sensor privacy, as it invokes `enforceObserveSensorPrivacyPermission`, which suggests that checking or enforcing a permission is involved.
/com/android/server/sensorprivacy/SensorPrivacyService.java,userSwitching,Yes, it likely requires permissions related to microphone and camera access.
/com/android/server/sensorprivacy/SensorPrivacyService.java,setGlobalRestriction,Yes, because it interacts with audio and camera operations, which typically require permissions like RECORD_AUDIO and CAMERA.
/com/android/server/sensorprivacy/SensorPrivacyService.java,registerSettingsObserver,Yes, because it interacts with system settings, which typically requires permissions in Android.
/com/android/server/sensorprivacy/SensorPrivacyService.java,onChange,Yes, it likely requires microphone permissions as it references the MICROPHONE.
/com/android/server/sensorprivacy/SensorPrivacyService.java,dump,Yes, the method checks for "checkDumpPermission", which indicates that it requires permission to perform dumpsys operations.
/com/android/server/sensorprivacy/SensorPrivacyService.java,onCommand,Yes, the method interacts with system permissions, specifically for toggling sensor privacy settings, which typically requires appropriate permissions in Android.
/com/android/server/sensorprivacy/SensorPrivacyService.java,setPhysicalToggleSensorPrivacy,Yes, this method likely requires permissions because it manipulates privacy settings related to sensor toggling, which typically involves user data and hardware access.
/com/android/server/sensorprivacy/SensorPrivacyService.java,onEmergencyCall,Yes, this method likely requires permissions because it interacts with microphone settings and potentially toggles sensor privacy, which typically requires user permissions for microphone access in Android applications.
/com/android/server/sensorprivacy/SensorPrivacyService.java,onCall,Yes, this method likely requires permissions because it involves accessing the microphone, which typically requires permission in an Android application.
/com/android/server/dreams/DreamController.java,startDream,Yes, this method likely requires permissions because it involves starting a "dream" service, which may require `BIND_DREAM_SERVICE` or similar permissions to ensure that only authorized applications can manage and interact with such services.
/com/android/server/alarm/TareBill.java,getAppropriateBill,Yes, this method likely requires permissions because it deals with alarms and scheduling tasks, which typically require specific permissions in the Android SDK, such as setting alarms or accessing alarm information.
/com/android/server/alarm/MetricsHelper.java,reasonToStatsReason,Yes, because it references various alarm-related permissions and reasons that likely require user consent or permission to operate.
/com/android/server/rollback/RollbackStore.java,backupPackageCodePath,Yes, the method likely requires permissions because it accesses and modifies package files, which typically requires storage-related permissions in Android.
/com/android/server/rollback/RollbackStore.java,removeFile,Yes, the method requires permissions because it deletes files, which typically necessitates storage permissions in Android.
/com/android/server/rollback/AppDataRollbackHelper.java,snapshotAppData,Yes, because it involves managing user data, which typically requires permission for data access and storage operations.
/com/android/server/rollback/AppDataRollbackHelper.java,restoreAppData,Yes, there are likely permissions required. The method involves restoring app data, which typically requires special permissions related to user data and storage access.
/com/android/server/rollback/AppDataRollbackHelper.java,doRestoreOrWipe,Yes, this method involves restoring or wiping app data, which generally requires specific permissions (like `WRITE_EXTERNAL_STORAGE` or `MANAGE_EXTERNAL_STORAGE`) depending on the context it operates in.
/com/android/server/rollback/AppDataRollbackHelper.java,destroyApexDeSnapshots,Yes, this method likely requires permissions because it performs a deletion operation on device-encrypted data, which typically necessitates elevated privileges.
/com/android/server/rollback/AppDataRollbackHelper.java,commitPendingBackupAndRestoreForUser,Yes, requires permission. This method involves operations related to backups and restores, which typically require specific permissions in Android, such as `android.permission.BACKUP` or `android.permission.RESTORE`.
/com/android/server/rollback/LocalIntentReceiver.java,send,Yes, it requires permissions to ensure that the sending of the intent is allowed, as indicated by the 'requiredPermission' parameter.
/com/android/server/rollback/Rollback.java,enableForPackage,Yes, enabling rollback for packages may require permissions related to package management and storage access in Android.
/com/android/server/rollback/Rollback.java,commit,Yes, this method requires permissions. It interacts with the package manager and performs actions related to package installation and rollback, which typically require specific permissions like `MANAGE_ROLLBACKS`.
/com/android/server/devicestate/DeviceStateNotificationController.java,showNotification,Yes, this method requires permissions. It displays notifications, which typically requires the `POST_NOTIFICATIONS` permission in Android 13 (API level 33) and higher.
/com/android/server/searchui/SearchUiManagerService.java,enforceCallingPermissionForManagement,Yes, it likely requires permissions because it involves enforcing a calling permission related to management actions (MANAGE_SEARCH_UI).
/com/android/server/searchui/SearchUiManagerService.java,runForUserLocked,Yes, this method requires permissions. It checks for user permissions and throws a SecurityException if the caller lacks the necessary permissions to run the specified functionality.
/com/android/server/graphics/fonts/FontManagerShellCommand.java,onCommand,Yes, this method requires permissions. It checks the calling UID to determine if it's being invoked by either the root user or the shell user, which typically involves permissions related to system-level commands or operations that require elevated privileges.
/com/android/server/graphics/fonts/FontManagerShellCommand.java,dump,Yes, this method requires permissions due to the invocation of `checkDumpPermission`, which typically indicates that it needs to verify permissions to perform certain operations in a secure context.
/com/android/server/graphics/fonts/FontManagerShellCommand.java,installCert,Yes, it requires permissions because only a debuggable device or root user can execute this method, indicating a need for specific security privileges.
/com/android/server/graphics/fonts/FontManagerShellCommand.java,update,Yes, the method likely requires permissions to read files, as it deals with file paths and attempts to open files using a shell command, which generally requires filesystem access permissions.
/com/android/server/graphics/fonts/FontManagerShellCommand.java,execCommand,Yes, this method likely requires permissions as it executes shell commands, which typically necessitate elevated privileges (e.g., `INTERNET`, `WRITE_EXTERNAL_STORAGE` for file operations, or `ACCESS_FINE_LOCATION` for commands that access system resources).
/com/android/server/graphics/fonts/UpdatableFontDir.java,installFontFile,Yes, this method requires permissions because it involves writing to system storage and altering system font files.
/com/android/server/graphics/fonts/UpdatableFontDir.java,writePersistentConfig,Yes, this method likely requires permissions because it involves writing to a file, which typically requires file system access permissions in Android.
/com/android/server/graphics/fonts/OtfFontFileParser.java,mmap,Yes, this method requires permissions because it involves file operations, specifically accessing and manipulating a file. In Android, accessing files typically requires permission to read or write to storage.
/com/android/server/backup/FullBackupJob.java,schedule,Yes, this method may require permissions to schedule jobs or access backup services, depending on the context and system services being used.
/com/android/server/backup/SliceBackupHelper.java,applyRestoredPayload,Yes, this method likely requires permissions to access the slice manager service and perform operations that involve user data or interactions.
/com/android/server/backup/BackupAgentTimeoutParametersTest.java,putStringAndNotify,Yes, it requires permissions. Modifying settings typically requires `WRITE_SETTINGS` permission.
/com/android/server/backup/BackupAgentTimeoutParameters.java,getSettingValue,Yes, because accessing settings may require permissions related to reading system settings.
/com/android/server/backup/UserBackupManagerFilePersistedSettings.java,readBackupEnableState,Yes, because it involves reading a file which may require filesystem access permissions.
/com/android/server/backup/BackupPasswordManager.java,hasBackupPassword,Yes, SecurityException is thrown if the caller does not have BACKUP permission.
/com/android/server/backup/BackupPasswordManager.java,backupPasswordMatches,Yes, because it throws a SecurityException if the caller does not have BACKUP permission.
/com/android/server/backup/BackupPasswordManager.java,setBackupPassword,Yes, the method `setBackupPassword` requires the `android.Manifest.permission.BACKUP` permission to be called without raising a `SecurityException`.
/com/android/server/backup/BackupManagerServiceRoboTest.java,setUp,Yes, this method appears to involve user permissions management (e.g., granting permissions and managing users), which typically requires specific permissions in the Android manifest.
/com/android/server/backup/BackupManagerServiceRoboTest.java,testIsUserReadyForBackup_withoutPermission_throwsSecurityException,Yes, the method requires permission because it checks for `INTERACT_ACROSS_USERS_FULL` permission to handle user interactions across different users, which is a system-level permission.
/com/android/server/backup/BackupManagerServiceRoboTest.java,testIsUserReadyForBackup_withPermission_callsMethodForUser,Yes, the method requires the INTERACT_ACROSS_USERS_FULL permission as it deals with user interactions across different user IDs.
/com/android/server/backup/BackupManagerServiceRoboTest.java,testSetBackupEnabled_withoutPermission_throwsSecurityExceptionForNonCallingUser,Yes, this method requires permissions because it tests the interaction of backup services with user permissions, specifically needing the `INTERACT_ACROSS_USERS_FULL` permission.
/com/android/server/backup/BackupManagerServiceRoboTest.java,testSetBackupEnabled_withPermission_propagatesForNonCallingUser,Yes, the method requires the `INTERACT_ACROSS_USERS_FULL` permission because it performs actions that involve user IDs and requires specific permissions to interact across different user profiles.
/com/android/server/backup/BackupManagerServiceRoboTest.java,testBackupNow_withoutPermission_throwsSecurityExceptionForNonCallingUser,Yes, this method requires permissions because it verifies that the caller must have the `INTERACT_ACROSS_USERS_FULL` permission to prevent a `SecurityException`.
/com/android/server/backup/BackupManagerServiceRoboTest.java,testBackupNow_withPermission_propagatesForNonCallingUser,Yes, the method requires the INTERACT_ACROSS_USERS_FULL permission to operate correctly in the context of backing up data across different user accounts.
/com/android/server/backup/BackupManagerServiceRoboTest.java,testRequestBackup_withoutPermission_throwsSecurityExceptionForNonCallingUser,Yes, the method tests the behavior of backup services which requires the `INTERACT_ACROSS_USERS_FULL` permission to ensure security across user contexts.
/com/android/server/backup/BackupManagerServiceRoboTest.java,testRequestBackup_withPermission_propagatesForNonCallingUser,Yes, it requires the `INTERACT_ACROSS_USERS_FULL` permission as noted in the javadoc comment.
/com/android/server/backup/BackupManagerServiceRoboTest.java,testCancelBackups_withoutPermission_throwsSecurityExceptionForNonCallingUser,Yes, this method requires permissions because it verifies that a `SecurityException` is thrown if the caller lacks `INTERACT_ACROSS_USERS_FULL` permission.
/com/android/server/backup/BackupManagerServiceRoboTest.java,testCancelBackups_withPermission_propagatesForNonCallingUser,Yes, it requires permission due to the mention of `INTERACT_ACROSS_USERS_FULL`, which is a permission needed for interacting across user profiles.
/com/android/server/backup/BackupManagerServiceRoboTest.java,testAdbBackup_withoutPermission_throwsSecurityExceptionForNonCallingUser,Yes, the method requires permissions, specifically the `INTERACT_ACROSS_USERS_FULL` permission to test access across different user contexts.
/com/android/server/backup/BackupManagerServiceRoboTest.java,testAdbBackup_withPermission_propagatesForNonCallingUser,Yes, requires `INTERACT_ACROSS_USERS_FULL` permission for interacting across user contexts.
/com/android/server/backup/BackupManagerServiceRoboTest.java,testAdbRestore_withoutPermission_throwsSecurityExceptionForNonCallingUser,Yes, it requires the `INTERACT_ACROSS_USERS_FULL` permission to interact with backup services across different users.
/com/android/server/backup/BackupManagerServiceRoboTest.java,testAdbRestore_withPermission_propagatesForNonCallingUser,Yes, the method involves the use of the `INTERACT_ACROSS_USERS_FULL` permission, as indicated in the Javadoc comment.
/com/android/server/backup/BackupManagerServiceRoboTest.java,testDump_users_dumpsListOfRegisteredUsers,Yes, this method likely requires permissions to interact with the backup service and manage user data.
/com/android/server/backup/BackupManagerServiceRoboTest.java,grantDumpPermissions,Yes, it likely requires permissions because it involves granting permissions related to DUMP and PACKAGE_USAGE_STATS, which typically require specific Android permissions.
/com/android/server/backup/BackupManagerServiceRoboTest.java,testGetServiceForUserIfCallerHasPermission_withPermission_worksForNonCallingUser,Yes, because it mentions the requirement for `INTERACT_ACROSS_USERS_FULL` permission to function correctly.
/com/android/server/backup/BackupManagerServiceRoboTest.java,setCallerAndGrantInteractUserPermission,Yes, because it deals with user permissions and interacts across users.
/com/android/server/backup/UserBackupPreferences.java,getExcludedRestoreKeysForPackage,Yes, this method likely requires permissions to access shared preferences related to a specific package.
/com/android/server/backup/KeyValueAdbBackupEngine.java,backupOnePackage,Yes, this method likely requires permissions related to backup and restore operations, such as `android.permission.BACKUP`.
/com/android/server/backup/KeyValueAdbBackupEngine.java,bindToAgent,Yes, this method likely requires permissions as it involves binding to a backup agent, which typically involves accessing sensitive data or system resources related to backup operations in Android.
/com/android/server/backup/KeyValueAdbBackupEngine.java,invokeAgentForAdbBackup,Yes, this method likely requires permissions because it involves backup operations, which typically require specific permissions (e.g., `BIND_BACKUP` and `BACKUP`).
/com/android/server/backup/KeyValueAdbBackupEngine.java,run,Yes, the method involves backup functionality which typically requires `WRITE_EXTERNAL_STORAGE` and `BACKUP` permissions.
/com/android/server/backup/BackupManagerConstants.java,getSettingValue,Yes, it likely requires permissions to access secure settings.
/com/android/server/backup/UsageStatsBackupHelper.java,getBackupPayload,Yes, the method involves accessing Usage Stats through the UsageStatsManager, which requires the "android.permission.PACKAGE_USAGE_STATS" permission.
/com/android/server/backup/ProcessedPackagesJournal.java,loadFromDisk,Yes, this method likely requires permission to access the file system, as it involves reading from a file (as indicated by the use of `File` and `DataInputStream`).
/com/android/server/backup/BackupManagerConstantsTest.java,putStringAndNotify,Yes, this method requires permissions because it interacts with `Settings.Secure`, which typically requires permissions to read and write secure system settings.
/com/android/server/backup/AppGrammaticalGenderBackupHelper.java,performBackup,Yes, this method likely requires permissions related to backup and restore operations in Android, as it deals with performing a backup function.
/com/android/server/backup/PermissionBackupHelper.java,getBackupPayload,Yes, it requires permissions to handle backup operations, specifically for runtime permissions related to backup.
/com/android/server/backup/PermissionBackupHelper.java,applyRestoredPayload,Yes, it appears to require permission related to restoring runtime permissions.
/com/android/server/backup/SystemBackupAgent.java,onRestore,Yes, this method likely requires permissions related to backup and restoration of application data, specifically access to system files.
/com/android/server/backup/SystemBackupAgent.java,onRestoreFile,Yes, this method may require permissions because it involves restoring files, which typically requires permissions to access storage resources.
/com/android/server/backup/PreferredActivityBackupHelper.java,getBackupPayload,Yes, this method likely requires permissions. It interacts with backup data and requires permissions related to backup and restore operations in Android.
/com/android/server/backup/KeyValueAdbRestoreEngine.java,run,Yes, this method likely requires permissions because it involves restoring data, which typically necessitates permissions related to file access and possibly backup/restore.
/com/android/server/backup/KeyValueAdbRestoreEngine.java,invokeAgentForAdbRestore,Yes, requires permissions. It's involved in backup and restore operations, which typically require permissions to access storage or backup data.
/com/android/server/backup/PackageManagerBackupAgent.java,getStorableApplications,Yes, the method gets information about installed packages which typically requires permissions to access package information on the device.
/com/android/server/backup/PackageManagerBackupAgent.java,onBackup,Yes, this method likely requires permissions related to backup and restore operations, as it handles backup data for applications.
/com/android/server/backup/AccountSyncSettingsBackupHelper.java,performBackup,Yes, this method requires permissions because it handles backup of account sync settings, which typically requires specific permissions for accessing and modifying account data.
/com/android/server/backup/AccountSyncSettingsBackupHelper.java,serializeAccountSyncSettingsToJSON,Yes, this method requires permissions because it interacts with account information and sync settings, which typically requires appropriate permissions (like `GET_ACCOUNTS`, `MANAGE_ACCOUNTS`, `USE_CREDENTIALS` in Android).
/com/android/server/backup/AccountSyncSettingsBackupHelper.java,restoreEntity,Yes, this method requires permissions because it interacts with account sync settings and uses `ContentResolver`, which necessitates permissions related to account management and synchronization.
/com/android/server/backup/AccountSyncSettingsBackupHelper.java,getAccounts,Yes, this method likely requires permissions because it fetches accounts, which typically requires access to user data and account information.
/com/android/server/backup/AccountSyncSettingsBackupHelper.java,restoreExistingAccountSyncSettingsFromJSON,Yes, because the method manipulates sync settings for accounts, which typically requires permissions related to account management and sync operations.
/com/android/server/backup/DataChangedJournal.java,addPackage,Yes, this method likely requires permissions related to file access, as it involves writing to a journal file using `RandomAccessFile`.
/com/android/server/backup/DataChangedJournal.java,listJournals,Yes, accessing files in a directory typically requires permissions such as `READ_EXTERNAL_STORAGE` in Android.
/com/android/server/backup/NotificationBackupHelper.java,getBackupPayload,Yes, because it interacts with the notification manager, which typically requires specific permissions to access notification services in Android.
/com/android/server/backup/AccountManagerBackupHelper.java,applyRestoredPayload,Yes, this method may require permissions because it interacts with account access, which typically requires specific permissions for accessing user accounts and their data in Android.
/com/android/server/backup/transport/BackupTransportClient.java,currentDestinationString,Yes, the method likely requires permissions related to backup and restore operations in Android, as it interacts with backup transport.
/com/android/server/backup/transport/BackupTransportClient.java,clearBackupData,Yes, this method likely requires permissions because it deals with backup data, which typically involves sensitive user data and operations that are protected by permissions in the Android SDK.
/com/android/server/backup/transport/BackupTransportClient.java,performBackup,Yes, this method likely requires permissions because it is related to performing a backup operation, which typically involves accessing sensitive data.
/com/android/server/backup/transport/BackupTransportClient.java,getCurrentRestoreSet,Yes, the method involves backup and restore operations, which typically require permissions related to data backup and restore in Android (e.g., `android.permission.BACKUP`).
/com/android/server/backup/transport/BackupTransportClient.java,startRestore,Yes, this method likely requires permissions related to backup and restore operations in Android, as it interacts with backup transport.
/com/android/server/backup/transport/BackupTransportClient.java,getRestoreData,Yes, this method likely requires permissions related to accessing backup data, as indicated by its connection to the `IBackupTransport` interface and operations involving data restoration.
/com/android/server/backup/transport/BackupTransportClient.java,performFullBackup,Yes, this method likely requires permissions because it performs a full backup of a package, which typically requires specific backup-related permissions in Android (e.g., `android.permission.BACKUP`).
/com/android/server/backup/transport/BackupTransportClient.java,sendBackupData,Yes, requires permissions to access backup data.
/com/android/server/backup/transport/BackupTransportClient.java,getBackupQuota,Yes, this method likely requires permissions related to backup operations, as it involves retrieving backup quotas, which typically requires specific backup permissions in Android.
/com/android/server/backup/transport/BackupTransportClient.java,getNextFullRestoreDataChunk,Yes, this method likely requires permissions related to backup and restore operations, as it interacts with backup transport and data restoration processes.
/com/android/server/backup/internal/SetupObserver.java,onChange,Yes, this method likely requires permissions related to user setup and backup services. Specifically, it interacts with user settings and backup management, which usually necessitate permissions for accessing sensitive user data and modifying backup states.
/com/android/server/backup/internal/BackupHandler.java,handleMessage,Yes, this method likely requires permissions because it deals with backup and restore operations, which typically require specific permissions in Android, such as `READ_EXTERNAL_STORAGE` and `WRITE_EXTERNAL_STORAGE`.
/com/android/server/backup/internal/SetupObserverTest.java,changeSetupCompleteSettingForUser,Yes, the method interacts with system settings, which typically requires permissions.
/com/android/server/backup/internal/PerformClearTask.java,run,Yes, because it appears to deal with backup data management and potentially requires permissions related to accessing and modifying backup data on the device.
/com/android/server/backup/utils/DataStreamFileCodec.java,serialize,Yes, it likely requires permissions to access the file system for serialization.
/com/android/server/backup/utils/TarBackupReader.java,chooseRestorePolicy,Yes, this method likely requires permissions related to accessing backup and restore functionalities, particularly involving the `PackageManager` and user data.
/com/android/server/backup/utils/RestoreUtils.java,installApk,Yes, this method requires permissions. It installs an APK, which typically requires `REQUEST_INSTALL_PACKAGES` permission on newer Android versions.
/com/android/server/backup/utils/RestoreUtils.java,send,Yes, this method requires permissions, as indicated by the parameter `requiredPermission`, which suggests a permission check is needed for sending intents securely.
/com/android/server/backup/utils/RandomAccessFileUtils.java,getRandomAccessFile,Yes, because accessing files in storage may require permissions such as READ_EXTERNAL_STORAGE or WRITE_EXTERNAL_STORAGE.
/com/android/server/backup/utils/RandomAccessFileUtils.java,writeBoolean,Yes, this method requires permissions because it involves writing to a file, which typically requires file system permissions in Android.
/com/android/server/backup/utils/RandomAccessFileUtils.java,readBoolean,Yes, the method requires permissions because it accesses a file, which typically requires storage permissions in Android.
/com/android/server/backup/testing/PackageData.java,fullBackupPackage,Yes, this method likely requires permission to perform a backup operation on a package, which typically needs appropriate backup-related permissions in Android.
/com/android/server/backup/testing/TransportData.java,backupTransport,Yes, this method likely requires permissions to access backup services and user account information.
/com/android/server/backup/keyvalue/KeyValueBackupTaskTest.java,setUpAgent,Yes, this method requires permissions because it interacts with the `PackageManager`, modifies package states, and sends broadcasts, which typically require permissions like `PACKAGE_USAGE_STATS`, `CHANGE_COMPONENT_ENABLED_STATE`, or `BROADCAST_STICKY`.
/com/android/server/backup/keyvalue/KeyValueBackupTaskTest.java,createKeyValueBackupTask,Yes, this method likely requires permissions because it interacts with the backup manager service, which typically requires specific permissions to access and manage backups.
/com/android/server/backup/fullbackup/AppMetadataBackupWriter.java,backupManifest,Yes, the method likely requires permissions related to file writing (such as WRITE_EXTERNAL_STORAGE), as it involves creating and writing to files.
/com/android/server/backup/fullbackup/AppMetadataBackupWriter.java,backupWidget,Yes, it likely requires permissions for file access, specifically to write to storage.
/com/android/server/backup/fullbackup/AppMetadataBackupWriter.java,backupApk,Yes, this method requires permissions because it involves backing up the app's APK, which typically requires storage or backup permissions to access and write files.
/com/android/server/backup/fullbackup/FullBackupObbConnection.java,backupObbs,Yes, because backing up OBB files typically requires specific permissions related to storage access.
/com/android/server/backup/fullbackup/FullBackupObbConnection.java,restoreObbFile,Yes, this method likely requires permissions related to backup and restore operations, as it interacts with backup data.
/com/android/server/backup/fullbackup/FullBackupEngine.java,run,Yes, this method likely requires permissions. The code references operations related to backup, which typically require permissions such as `android.permission.BACKUP`, especially for managing app data backups.
/com/android/server/backup/fullbackup/FullBackupEngine.java,backupOnePackage,Yes, this method likely requires permissions because it involves backup operations, which typically require specific permissions (like `android.permission.BACKUP`).
/com/android/server/backup/fullbackup/AppMetadataBackupWriterTest.java,setUp,Yes, this method requires permissions because it interacts with application files and package manager, which typically require permissions such as `READ_EXTERNAL_STORAGE` or `WRITE_EXTERNAL_STORAGE`.
/com/android/server/backup/fullbackup/AppMetadataBackupWriterTest.java,createFile,Yes, because creating a file may require storage permissions.
/com/android/server/backup/fullbackup/AppMetadataBackupWriterTest.java,createApkFileAndWrite,Yes, this method likely requires permissions to write to external storage or internal storage, depending on the context in which it is used.
/com/android/server/backup/fullbackup/AppMetadataBackupWriterTest.java,createObbFileAndWrite,Yes, writing to files in external storage typically requires permissions.
/com/android/server/backup/fullbackup/AppMetadataBackupWriterTest.java,createObbDirForPackage,Yes, this method requires permissions because it interacts with external storage, which typically requires `WRITE_EXTERNAL_STORAGE` permission in Android.
/com/android/server/backup/fullbackup/PerformAdbBackupTask.java,run,Yes, this method likely requires permissions because it deals with backup operations which typically necessitate permissions to access app data, manage backups, or handle external storage.
/com/android/server/backup/fullbackup/PerformFullTransportBackupTask.java,newWithCurrentTransport,Yes, this method likely requires permissions related to backup operations in Android, as it works with backup manager services and transport connections, which involve accessing and managing user data.
/com/android/server/backup/fullbackup/PerformFullTransportBackupTask.java,run,Yes, this method likely requires permissions. It appears to involve backup operations, which typically necessitate permissions such as `android.permission.BACKUP` or similar references within the Android SDK related to data storage and transfer.
/com/android/server/backup/fullbackup/PerformFullTransportBackupTask.java,preflightFullBackup,Yes, this method likely requires permissions related to backup operations in Android, such as `android.permission.BACKUP` or other relevant backup-related permissions.
/com/android/server/backup/params/RestoreParams.java,createForRestorePackages,Yes, it likely requires permissions due to its role in backup and restore processes involving user data.
/com/android/server/backup/restore/PerformUnifiedRestoreTask.java,startRestore,Yes, handling backups and restores typically requires specific permissions related to data access and management in Android.
/com/android/server/backup/restore/PerformUnifiedRestoreTask.java,dispatchNextRestore,Yes, this method requires permissions related to backup and restore operations in Android.
/com/android/server/backup/restore/PerformUnifiedRestoreTask.java,restoreKeyValue,Yes, this method likely requires permissions, as it deals with backup and restore operations, which typically require specific permissions in Android (e.g., WRITE_EXTERNAL_STORAGE, BACKUP, RESTORE).
/com/android/server/backup/restore/PerformUnifiedRestoreTask.java,initiateOneRestore,Yes, this method likely requires permissions related to backup and restore capabilities, as it appears to be part of a backup restore process in the Android framework.
/com/android/server/backup/restore/PerformUnifiedRestoreTask.java,run,Yes, this method requires permissions because it interacts with backup and restore operations, which typically require specific permissions in Android to access and manipulate app data and files.
/com/android/server/backup/restore/PerformUnifiedRestoreTask.java,finalizeRestore,Yes, because this method deals with backing up and restoring data which typically requires specific permissions (like `BACKUP` and potentially others).
/com/android/server/backup/restore/ActiveRestoreSession.java,getAvailableRestoreSets,Yes, requires permission. The method enforces the permission "android.Manifest.permission.BACKUP" to access backup-related functionalities.
/com/android/server/backup/restore/ActiveRestoreSession.java,restoreAll,Yes, the method requires permissions because it enforces the `android.Manifest.permission.BACKUP.performRestore` permission for restoring data.
/com/android/server/backup/restore/ActiveRestoreSession.java,restorePackages,Yes, this method requires permissions because it invokes `enforceCallingOrSelfPermission` with the permission `android.Manifest.permission.PERFORM_RESTORE`, which mandates that the caller must have this permission to successfully execute the method.
/com/android/server/backup/restore/ActiveRestoreSession.java,restorePackage,Yes, because it checks for permissions related to restoring packages, which requires appropriate access rights.
/com/android/server/backup/restore/FullRestoreEngine.java,restoreOneFile,Yes, the method likely requires permissions related to restoring app data and manipulating packages, which involves sensitive operations that typically require specific permissions in the Android manifest.
/com/android/server/backup/restore/PerformAdbRestoreTask.java,run,Yes, it requires permissions because it involves operations related to backup and restore, which typically require `BACKUP` and `RESTORE` permissions in Android.
/com/android/server/backup/restore/AdbRestoreFinishedRunnable.java,run,Yes, the method likely requires permissions related to backup and restore functionality in Android, such as `android.permission.BACKUP`.
/com/android/server/backup/restore/ActiveRestoreSessionTest.java,testGetAvailableRestoreSets_withoutPermission,Yes, the method involves backup-related functionality which typically requires specific permissions like `android.Manifest.permission.BACKUP`.
/com/android/server/backup/restore/ActiveRestoreSessionTest.java,testGetAvailableRestoreSets_forNullObserver,Yes, because it implies the use of backup-related functionality, which typically requires permissions related to data backup (e.g., `android.permission.BACKUP`).
/com/android/server/backup/restore/ActiveRestoreSessionTest.java,testRestoreAll,Yes, this method likely requires permissions because it involves operations related to backup and restore, which typically require specific permissions in Android to access user data.
/com/android/server/backup/restore/ActiveRestoreSessionTest.java,testRestoreAll_whenSinglePackageSession,Yes, because it involves operations related to backup and restore, which require permissions such as `android.Manifest.permission.BACKUP`.
/com/android/server/backup/restore/ActiveRestoreSessionTest.java,testRestoreAll_whenSessionEnded,Yes, this method likely requires permissions related to backup and restore operations in Android, as it appears to involve interacting with backup services and restore sessions.
/com/android/server/backup/restore/ActiveRestoreSessionTest.java,testRestorePackages_for2Packages_createsSystemRestoreTask,Yes, the method involves restoring packages which typically requires permissions related to backup and restore operations in Android, like `BACKUP`.
/com/android/server/backup/restore/ActiveRestoreSessionTest.java,testRestorePackages_for1Package,Yes, this method involves backup and restore functionality, which typically requires permissions such as `android.permission.BACKUP`.
/com/android/server/backup/restore/ActiveRestoreSessionTest.java,testRestorePackage_whenCallerIsNotPackageAndPermissionGranted,Yes, requires permission. The method references `android.Manifest.permission.BACKUP`, indicating that it requires the backup permission to function properly.
/com/android/server/backup/restore/ActiveRestoreSessionTest.java,testRestorePackage_whenCallerIsNotPackageAndPermissionDenied,Yes, it likely requires permissions because it involves backup and restore operations, which generally require specific permissions like `android.permission.BACKUP`.
/com/android/server/backup/restore/ActiveRestoreSessionTest.java,setUpPackage,Yes, this method likely requires permissions because it involves package management tasks such as installing packages and accessing application information, which typically require specific permissions in Android.
/com/android/server/backup/restore/ActiveRestoreSessionTest.java,createActiveRestoreSession,Yes, this method likely requires permissions related to backup and restore operations in Android, as it interacts with backup services.
/com/android/server/broadcastradio/aidl/BroadcastRadioServiceImpl.java,openSession,Yes, this method may require permissions related to accessing radio hardware or services, particularly when opening a session for radio functionality.
/com/android/server/broadcastradio/hal1/BroadcastRadioService.java,openTuner,Yes, because it manipulates tuner functionality, which typically requires permissions like accessing radio services.
/com/android/server/broadcastradio/hal2/BroadcastRadioService.java,openSession,Yes, the method likely requires permissions related to accessing radio features or modules, as it interacts with audio sessions and requires validation of user context.
/com/android/server/accessibility/RestrictedLockUtilsInternal.java,checkIfAccessibilityServiceDisallowed,Yes, this method likely requires permissions because it deals with accessibility services and device policy management, which typically require special permissions in Android for security and privacy reasons.
/com/android/server/accessibility/RestrictedLockUtilsInternal.java,checkIfInputMethodDisallowed,Yes, because it interacts with the DevicePolicyManager, which typically requires device administration permissions.
/com/android/server/accessibility/RestrictedLockUtilsInternal.java,getManagedProfileId,Yes, this method likely requires permissions because it interacts with user profiles and managed profiles, which typically necessitate specific permissions related to user data and configuration in Android.
/com/android/server/accessibility/CaptioningManagerImpl.java,setSystemAudioCaptioningEnabled,Yes, this method requires permissions because it modifies system settings (like audio captioning), which typically require specific permissions in Android (e.g., `WRITE_SETTINGS`).
/com/android/server/accessibility/CaptioningManagerImpl.java,setSystemAudioCaptioningUiEnabled,Yes, it likely requires permissions to modify system settings.
/com/android/server/accessibility/FingerprintGestureDispatcher.java,handleMessage,Yes, this method likely requires permissions because it interacts with the fingerprint service, which typically requires authentication permissions to access sensitive user data (e.g., `USE_FINGERPRINT`).
/com/android/server/accessibility/AbstractAccessibilityServiceConnection.java,getPendingIntentActivity,Yes, because it interacts with activities and intents, which may require the appropriate permissions based on the activity being launched.
/com/android/server/accessibility/AbstractAccessibilityServiceConnection.java,setDynamicallyConfigurableProperties,Yes, this method likely requires permissions because it deals with dynamic configurations for accessibility services, which typically need special permissions to interact with user interface elements and accessibility features.
/com/android/server/accessibility/AbstractAccessibilityServiceConnection.java,setServiceInfo,Yes, this method likely requires permissions because it deals with accessibility service information, which typically requires specific permissions in Android.
/com/android/server/accessibility/AbstractAccessibilityServiceConnection.java,getWindows,Yes, this method requires permissions because it checks for accessibility access and rights to the current user, indicating sensitive operations related to user privacy and system accessibility.
/com/android/server/accessibility/AbstractAccessibilityServiceConnection.java,getWindow,Yes, this method requires permissions. It includes checks for `hasRightsToCurrentUserLocked` and `checkAccessibilityAccess`, indicating that it needs permissions related to accessibility features.
/com/android/server/accessibility/AbstractAccessibilityServiceConnection.java,findAccessibilityNodeInfosByViewId,Yes, this method requires permissions because it involves accessing accessibility services.
/com/android/server/accessibility/AbstractAccessibilityServiceConnection.java,findAccessibilityNodeInfosByText,Yes, this method requires permissions due to accessibility access checks for security reasons in Android.
/com/android/server/accessibility/AbstractAccessibilityServiceConnection.java,findAccessibilityNodeInfoByAccessibilityId,Yes, this method requires permissions. Specifically, it checks access rights related to accessibility services, which generally require appropriate permissions to interact with UI elements from other applications.
/com/android/server/accessibility/AbstractAccessibilityServiceConnection.java,findFocus,Yes, this method likely requires permissions because it deals with accessibility services and accessing information related to user focus and interaction, which typically involve sensitive user data and functionality that requires elevated permissions in Android.
/com/android/server/accessibility/AbstractAccessibilityServiceConnection.java,focusSearch,Yes, the method likely requires permissions because it checks for accessibility rights and security policies to ensure that the calling process is authorized to access accessibility node information.
/com/android/server/accessibility/AbstractAccessibilityServiceConnection.java,performAccessibilityAction,Yes, it requires permissions related to accessibility access and potentially others depending on the context of use.
/com/android/server/accessibility/AbstractAccessibilityServiceConnection.java,performGlobalAction,Yes, this method requires permission because it performs a system action that could affect the user's experience or device state, typically requiring appropriate permissions to ensure security and user consent.
/com/android/server/accessibility/AbstractAccessibilityServiceConnection.java,isFingerprintGestureDetectionAvailable,Yes, this method likely requires permissions to access fingerprint features on the device.
/com/android/server/accessibility/AbstractAccessibilityServiceConnection.java,getCurrentMagnificationRegion,Yes, this method likely requires permissions related to accessibility and control over magnification features, as it involves methods like `canControlMagnification`.
/com/android/server/accessibility/AbstractAccessibilityServiceConnection.java,takeScreenshotOfWindow,Yes, this method likely requires permissions because it is related to taking a screenshot of a window, which typically requires special permissions in Android, such as `WRITE_EXTERNAL_STORAGE` or `SYSTEM_ALERT_WINDOW`.
/com/android/server/accessibility/AbstractAccessibilityServiceConnection.java,takeScreenshot,Yes, it requires permissions. Taking screenshots typically requires permissions such as "READ_EXTERNAL_STORAGE" or "WRITE_EXTERNAL_STORAGE" depending on the method used for taking and storing the screenshot.
/com/android/server/accessibility/AbstractAccessibilityServiceConnection.java,dump,Yes, it requires permissions because it calls a method to check dump permissions (`checkDumpPermission`), which implies that the method needs to ensure the caller has the appropriate permission to access the sensitive dump information.
/com/android/server/accessibility/AbstractAccessibilityServiceConnection.java,notifyAccessibilityEvent,Yes, this method requires permissions because it interacts with accessibility features, which typically require granting specific permissions in the Android system to ensure user privacy and security.
/com/android/server/accessibility/AbstractAccessibilityServiceConnection.java,notifyAccessibilityEventInternal,Yes, this method requires permissions because it involves notifying accessibility services, which typically require specific permissions related to accessibility features.
/com/android/server/accessibility/AbstractAccessibilityServiceConnection.java,setAnimationScale,Yes, the method likely requires permissions to modify system settings, specifically for altering animation scales in the global settings.
/com/android/server/accessibility/AbstractAccessibilityServiceConnection.java,attachAccessibilityOverlayToWindow,Yes, this method likely requires permissions because it interacts with accessibility services, which usually require specific permissions to ensure user privacy and security.
/com/android/server/accessibility/ProxyManager.java,registerProxy,Yes, this method likely requires permissions to interact with system services and manage accessibility features.
/com/android/server/accessibility/ProxyManager.java,getInstalledAndEnabledServiceInfosLocked,Yes, this method likely requires permissions because it interacts with accessibility services, which typically need user consent and appropriate permissions to access installed services on a device.
/com/android/server/accessibility/AccessibilityServiceConnection.java,disableSelf,Yes, because the method appears to interact with accessibility services and system settings, which typically require specific permissions like `BIND_ACCESSIBILITY_SERVICE`.
/com/android/server/accessibility/AccessibilityServiceConnection.java,hasRightsToCurrentUserLocked,Yes, the method checks for permissions using `hasPermission` for `INTERACT_ACROSS_USERS` and `INTERACT_ACROSS_USERS_FULL`, which require specific permissions.
/com/android/server/accessibility/AccessibilityServiceConnection.java,switchToInputMethod,Yes, this method likely requires permissions as it interacts with input methods and user identities, which typically necessitates certain permissions in Android.
/com/android/server/accessibility/AccessibilityServiceConnection.java,setInputMethodEnabled,Yes, this method likely requires permissions related to managing input methods, such as enabling or disabling an input method in the system settings.
/com/android/server/accessibility/AccessibilityUserState.java,setUserOverridesHardKeyboardSetting,Yes, this method likely requires permissions because it interacts with secure settings (Settings.Secure) that usually need special permissions to access or modify.
/com/android/server/accessibility/AccessibilityUserState.java,saveSoftKeyboardValueToSettings,Yes, this method likely requires permissions to modify secure settings (Settings.Secure), which usually involves modifying system settings and typically requires `WRITE_SECURE_SETTINGS` permission.
/com/android/server/accessibility/AccessibilityUserState.java,getSecureIntForUser,Yes, this method likely requires permissions to access secure settings in Android, specifically related to user data.
/com/android/server/accessibility/AccessibilityUserState.java,putSecureIntForUser,Yes, because it interacts with `Settings.Secure`, which requires permissions to modify secure settings.
/com/android/server/accessibility/AutoclickController.java,start,Yes, this method requires permissions because it uses a ContentResolver, which typically requires permissions to access specific data or settings on the device.
/com/android/server/accessibility/AutoclickController.java,onChange,Yes, the method accesses system settings and may require permissions related to reading system settings, such as `android.permission.READ_SETTINGS`.
/com/android/server/accessibility/ProxyAccessibilityServiceConnection.java,dump,Yes, this method requires permissions because it calls `checkDumpPermission`, which typically verifies if the caller has the proper permissions to access or manipulate certain data or features, especially in sensitive scenarios like accessing device status or settings.
/com/android/server/accessibility/MotionEventInjector.java,injectEvents,Yes, because injecting events typically requires permissions related to accessibility services or input injection.
/com/android/server/accessibility/PolicyWarningUIController.java,onNonA11yCategoryServiceBound,Yes, this method likely requires alarm-related permissions, as it sets a 24-hour alarm. Specifically, it may need `SET_ALARM` permission in Android.
/com/android/server/accessibility/PolicyWarningUIController.java,createPendingIntent,Yes, the method likely requires permissions because it creates a `PendingIntent`, which can be used to trigger actions requiring specific permissions in an Android app, such as starting a service or sending broadcasts.
/com/android/server/accessibility/PolicyWarningUIController.java,onReceive,Yes, this method requires permissions. It handles accessibility notifications, which typically require specific permissions related to accessibility services in Android.
/com/android/server/accessibility/PolicyWarningUIController.java,trySendNotification,Yes, this method likely requires permissions because it involves sending notifications, which typically necessitates certain permissions like `POST_NOTIFICATIONS` in Android.
/com/android/server/accessibility/PolicyWarningUIController.java,sendNotification,Yes, this method requires permissions. It deals with sending notifications, which typically requires the `android.permission.POST_NOTIFICATIONS` permission in Android.
/com/android/server/accessibility/PolicyWarningUIController.java,getEnabledServiceInfos,Yes, requires permissions. This method accesses accessibility service information, which typically requires `BIND_ACCESSIBILITY_SERVICE` permission in Android.
/com/android/server/accessibility/UiAutomationManager.java,registerUiTestAutomationServiceLocked,Yes, it requires permissions because it involves accessibility services, which typically require specific user permissions to access functionalities related to user interaction and accessibility features in Android.
/com/android/server/accessibility/UiAutomationManager.java,dump,Yes, it requires permission to access dump information, as indicated by the call to `checkDumpPermission`.
/com/android/server/accessibility/UiAutomationManager.java,setInputMethodEnabled,Yes, this method likely requires permissions to modify input method settings.
/com/android/server/accessibility/AccessibilityWindowManager.java,setAccessibilityWindowAttributes,Yes, because it deals with accessibility attributes which typically require certain permissions to modify system-level settings.
/com/android/server/accessibility/AccessibilityWindowManager.java,populateReportedWindowLocked,Yes, this method likely requires permissions related to accessing window information or user interface elements.
/com/android/server/accessibility/AccessibilityWindowManager.java,addAccessibilityInteractionConnection,Yes, this method likely requires permissions because it deals with accessibility features, user interactions, and can affect other applications, which typically necessitates handling permissions for security reasons.
/com/android/server/accessibility/AccessibilitySecurityPolicy.java,resolveValidReportedPackageLocked,Yes, it requires permissions because it checks for `ACT_AS_PACKAGE_FOR_ACCESSIBILITY` permission before proceeding.
/com/android/server/accessibility/AccessibilitySecurityPolicy.java,canRetrieveWindowContentLocked,Yes, because accessing the content of windows might require permissions related to accessibility services.
/com/android/server/accessibility/AccessibilitySecurityPolicy.java,canTakeScreenshotLocked,Yes, because taking screenshots generally requires permissions related to capturing screen content in Android.
/com/android/server/accessibility/AccessibilitySecurityPolicy.java,canEnableDisableInputMethod,Yes, because it throws a SecurityException if the input method is not in the same package as the accessibility service.
/com/android/server/accessibility/AccessibilitySecurityPolicy.java,resolveProfileParentLocked,Yes, this method likely requires permissions because it accesses user profile information, which typically necessitates user-related permissions in Android.
/com/android/server/accessibility/AccessibilitySecurityPolicy.java,resolveCallingUserIdEnforcingPermissionsLocked,Yes, it requires permissions because it enforces checks for the `INTERACT_ACROSS_USERS` and `INTERACT_ACROSS_USERS_FULL` permissions to interact across different user profiles.
/com/android/server/accessibility/AccessibilitySecurityPolicy.java,isRetrievalAllowingWindowLocked,Yes, because it interacts with window states and accessibility features that may require permissions related to user privacy and window management.
/com/android/server/accessibility/AccessibilitySecurityPolicy.java,enforceCallingPermission,Yes, the method enforces permission checks, indicating that it requires specific permissions to be granted for the operation to proceed.
/com/android/server/accessibility/AccessibilitySecurityPolicy.java,hasPermission,Yes, the method checks if the caller has a specific permission.
/com/android/server/accessibility/AccessibilitySecurityPolicy.java,canRegisterService,Yes, this method requires permission because it checks whether an accessibility service can register, which involves the permission `BIND_ACCESSIBILITY_SERVICE`.
/com/android/server/accessibility/AccessibilitySecurityPolicy.java,checkAccessibilityAccess,Yes, because it involves checking access for accessibility operations, which typically requires specific permissions related to accessibility services.
/com/android/server/accessibility/AccessibilitySecurityPolicy.java,enforceCallingOrSelfPermission,Yes, because it checks for the caller's permission before allowing access.
/com/android/server/accessibility/magnification/MagnificationFeatureFlagBase.java,setFeatureFlagEnabled,Yes, requires shell permissions for testing.
/com/android/server/accessibility/magnification/FullScreenMagnificationGestureHandler.java,setScaleAndClearIfNeeded,Yes, the method requires permission to access the `Vibrator` service for vibration functionality.
/com/android/server/accessibility/magnification/FullScreenMagnificationGestureHandler.java,register,Yes, this method likely requires permissions because it registers a broadcast receiver that listens for system intents, which may require specific permissions depending on the actions it listens for (e.g., ACTION_SCREEN_OFF).
/com/android/server/accessibility/magnification/MagnificationProcessor.java,setMagnificationConfig,Yes, because it involves modifying the display's magnification settings, which typically requires system-level permissions.
/com/android/server/accessibility/magnification/WindowMagnificationConnectionWrapper.java,enableWindowMagnification,Yes, this method likely requires permissions because it relates to enabling window magnification, which is a feature tied to accessibility services and may require specific permissions to modify user interface settings.
/com/android/server/accessibility/magnification/WindowMagnificationConnectionWrapper.java,disableWindowMagnification,Yes, it likely requires permissions because it interacts with accessibility features, which typically require specific permissions in Android.
/com/android/server/accessibility/magnification/WindowMagnificationPromptController.java,showNotificationIfNeeded,Yes, because it shows a notification, which typically requires notification permissions in Android.
/com/android/server/accessibility/magnification/WindowMagnificationPromptController.java,onDestroy,Yes, because it uses `getContentResolver()` and `unregisterContentObserver()`, which may require permissions related to content providers.
/com/android/server/accessibility/magnification/WindowMagnificationPromptController.java,isWindowMagnificationPromptEnabled,Yes, requires permission to access settings related to window magnification.
/com/android/server/accessibility/magnification/WindowMagnificationPromptController.java,createPendingIntent,Yes, this method requires permissions because it involves creating a `PendingIntent`, which typically requires certain permissions depending on the action being performed (e.g., sending broadcasts or starting activities).
/com/android/server/accessibility/magnification/WindowMagnificationPromptController.java,registerReceiverIfNeeded,Yes, this method requires permissions because it registers a receiver for actions that are defined in the context of the Android permission system (e.g., managing accessibility).
/com/android/server/accessibility/gestures/EventDispatcher.java,sendMotionEvent,Yes, this method likely requires permissions related to injecting input events, as it processes motion events, which could involve sensitive interactions with the user interface.
/com/android/server/accessibility/gestures/EventDispatcher.java,sendAccessibilityEvent,Yes, it requires permissions because accessibility events can interact with user input and assistive technologies, which typically require specific permissions to manage user's accessibility data.
/com/android/server/uri/UriPermission.java,grantModes,Yes, it requires permissions because it involves granting URI permissions, which generally requires explicit user permission to access shared resources.
/com/android/server/uri/UriPermission.java,revokeModes,Yes, this method likely requires permissions related to URI permissions, particularly for reading and writing.
/com/android/server/uri/UriPermissionOwner.java,removeUriPermissions,Yes, the method likely requires permissions to remove URI permissions, specifically `FLAG_GRANT_READ_URI_PERMISSION` and `FLAG_GRANT_WRITE_URI_PERMISSION` for accessing shared URIs.
/com/android/server/uri/UriPermissionOwner.java,removeUriPermission,Yes, it requires permission to manage URI permissions.
/com/android/server/uri/UriPermissionOwner.java,removeUriPermission,Yes, because the method deals with URI permissions, which typically require specific permissions to access or modify.
/com/android/server/uri/UriPermissionOwner.java,dumpDebug,Yes, permissions are required because the method interacts with UriPermissions, which involves read and write permissions management.
/com/android/server/uri/UriMetricsHelper.java,registerPuller,Yes, this method likely requires permissions to access system services related to the `StatsManager` and to report persistent URI permissions. Accessing system statistics and performing activities that affect system monitoring often necessitate specific permissions in Android.
/com/android/server/uri/GrantUri.java,resolve,Yes, the method likely requires permissions because it involves processing a `Uri`, which often requires access to content (like files or data) that may be protected by permissions in Android.
/com/android/server/uri/UriGrantsManagerInternal.java,revokeUriPermission,Yes, because it involves revoking URI permissions, which typically requires specific permissions related to URI access.
/com/android/server/uri/UriGrantsManagerInternal.java,checkUriPermission,Yes, this method likely requires permissions to check the URI permissions related to the provided `grantUri` for the specified `uid`.
/com/android/server/uri/UriGrantsManagerInternal.java,checkGrantUriPermissionFromIntent,Yes, because it checks for permission related to the given Intent data.
/com/android/server/uri/UriGrantsManagerInternal.java,revokeUriPermissionFromOwner,Yes, it likely requires permissions to revoke URI permissions from other apps.
/com/android/server/uri/UriGrantsManagerInternal.java,revokeUriPermissionFromOwner,Yes, this method likely requires permissions to manage URI permissions associated with content providers.
/com/android/server/blob/BlobMetadata.java,removeDataForUser,Yes, this method likely requires permissions because it manipulates data for specific users, which can involve sensitive user information.
/com/android/server/blob/BlobMetadata.java,checkCallerCanAccessBlobsAcrossUsers,Yes, this method likely requires permissions because it checks for access to "blobs across users," which suggests it involves user data that is typically protected by permissions in Android.
/com/android/server/blob/BlobMetadata.java,isPackageInstalledOnUser,Yes, this method may require permissions related to accessing package information on the user's device, specifically permissions to query installed packages.
/com/android/server/blob/BlobMetadata.java,shouldAttributeToLeasee,Yes, the method seems to check for permissions related to leasee statistics, which implies it may require specific permissions to access that information.
/com/android/server/blob/BlobMetadata.java,shouldAttributeToLeasee,Yes, it may require permissions as it references `callerHasStatsPermission`, which suggests checking for some kind of permission before accessing user information related to leases.
/com/android/server/blob/BlobMetadata.java,openForRead,Yes, this method likely requires permissions because it deals with file descriptors and reading from blobs, which typically involve storage access permissions in Android.
/com/android/server/blob/BlobStoreConfig.java,prepareBlobsDir,Yes, it requires permissions to access the file system, specifically for creating directories.
/com/android/server/blob/BlobStoreUtils.java,getPackageResources,Yes, the method requires permissions because it interacts with `PackageManager` which may need permissions to access application resources.
/com/android/server/timedetector/TimeDetectorStrategy.java,setTimeState,Yes, because it involves changing the system time, which typically requires specific permissions.
/com/android/server/timedetector/TimeDetectorInternal.java,updateConfigurationForDpm,Yes, this method is intended for device policy management and likely requires permissions related to device administration or policy management.
/com/android/server/timedetector/TimeDetectorInternal.java,setManualTimeForDpm,Yes, it likely requires permissions because it involves setting the device's time, which typically necessitates system-level permissions.
/com/android/server/timedetector/TimeDetectorService.java,getTimeCapabilitiesAndConfig,Yes, this method requires permissions because it includes a call to `enforceManageTimeDetectorPermission`, indicating a permission check is necessary.
/com/android/server/timedetector/TimeDetectorService.java,updateConfiguration,Yes, this method likely requires permissions related to user identity or configuration changes, as it interacts with user-related data.
/com/android/server/timedetector/TimeDetectorService.java,addListener,Yes, the method calls `enforceManageTimeDetectorPermission`, indicating that a specific permission check is performed, which implies that permissions are required for the operation.
/com/android/server/timedetector/TimeDetectorService.java,removeListener,Yes, because it enforces a permission check with `enforceManageTimeDetectorPermission`.
/com/android/server/timedetector/TimeDetectorService.java,getTimeState,Yes, this method requires permissions because it calls `enforceManageTimeDetectorPermission`, which indicates it checks for necessary permissions before proceeding.
/com/android/server/timedetector/TimeDetectorService.java,setTimeState,Yes, because it enforces a permission (`manageTimeDetector`).
/com/android/server/timedetector/TimeDetectorService.java,confirmTime,Yes, this method requires permissions because it invokes `enforceManageTimeDetectorPermission`, which suggests that a specific permission is needed to access the functionality related to time management.
/com/android/server/timedetector/TimeDetectorService.java,setManualTime,Yes, because it references `enforceManageTimeDetectorPermission`, which implies a permission check is required to execute this method.
/com/android/server/timedetector/TimeDetectorService.java,suggestTelephonyTime,Yes, the method calls `enforceSuggestTelephonyTimePermission`, indicating a permission check is required for its execution.
/com/android/server/timedetector/TimeDetectorService.java,suggestManualTime,Yes, the method involves "enforceSuggestManualTimePermission", indicating it checks for specific permissions before execution.
/com/android/server/timedetector/TimeDetectorService.java,suggestNetworkTime,Yes, it suggests permission checks are required for network time suggestions.
/com/android/server/timedetector/TimeDetectorService.java,clearLatestNetworkTime,Yes, because it calls `enforceSuggestNetworkTimePermission`, indicating a permission check is needed.
/com/android/server/timedetector/TimeDetectorService.java,suggestGnssTime,Yes, because it includes permission checks for suggesting GNSS time, indicating that specific permissions are required to execute this method.
/com/android/server/timedetector/TimeDetectorService.java,suggestExternalTime,Yes, it requires permissions because it includes a call to `enforceSuggestExternalTimePermission`, indicating that permission checks are necessary.
/com/android/server/timedetector/TimeDetectorService.java,setNetworkTimeForSystemClockForTests,Yes, requires permissions. The method enforces a network time permission, which is necessary to set the network time for testing.
/com/android/server/timedetector/TimeDetectorService.java,clearNetworkTimeForSystemClockForTests,Yes, it requires permissions because it enforces a permission check for network time access.
/com/android/server/timedetector/TimeDetectorService.java,dump,Yes, the method checks for dump permissions, indicating that specific permissions are required for invoking it.
/com/android/server/timedetector/TimeDetectorService.java,enforceSuggestTelephonyTimePermission,Yes, because it references the permission `SUGGEST_TELEPHONY_TIME_AND_ZONE` which indicates a requirement for telephony-related permissions.
/com/android/server/timedetector/TimeDetectorService.java,enforceSuggestManualTimePermission,Yes, because it enforces the permission "SUGGEST_MANUAL_TIME_AND_ZONE".
/com/android/server/timedetector/TimeDetectorService.java,enforceSuggestNetworkTimePermission,Yes, because it checks for the permission to set time.
/com/android/server/timedetector/TimeDetectorService.java,enforceSuggestGnssTimePermission,Yes, it requires permission to enforce calling permission for setting GNSS time.
/com/android/server/timedetector/TimeDetectorService.java,enforceSuggestExternalTimePermission,Yes, this method checks for a permission related to suggesting time from an external source, implying it requires a permission check.
/com/android/server/timedetector/TimeDetectorService.java,enforceManageTimeDetectorPermission,Yes, this method checks for the "manage time and time zone detection" permission, indicating that it requires a specific permission to operate.
/com/android/server/timedetector/EnvironmentImpl.java,acquireWakeLock,Yes, because acquiring a wake lock typically requires the `WAKE_LOCK` permission.
/com/android/server/timedetector/EnvironmentImpl.java,setSystemClock,Yes, this method likely requires permissions because it appears to modify system time, which typically requires elevated privileges or specific permissions in Android.
/com/android/server/profcollect/ProfcollectForwardingService.java,packAndUploadReport,Yes, the method likely requires permission to send broadcasts, as it calls `sendBroadcast`. This operation typically requires permissions in Android, depending on the intent being sent.
/com/android/server/appbinding/AppBindingService.java,getGlobalSettingString,Yes, accessing global settings typically requires permissions such as `READ_SETTINGS`.
/com/android/server/appbinding/AppBindingService.java,dump,Yes, this method requires permissions. It includes a check for dump permission, suggesting that access to sensitive information is controlled by specific permissions in the Android framework.
/com/android/server/appbinding/AppBindingUtils.java,findService,Yes, the method requires permissions because it deals with finding services that may be protected by specific permissions (`servicePermission`).
/com/android/server/appbinding/finders/CarrierMessagingClientServiceFinder.java,getServicePermission,Yes, requires permission to bind to the carrier messaging client service.
/com/android/server/appbinding/finders/CarrierMessagingClientServiceFinder.java,getTargetPackage,Yes, this method likely requires permissions because it interacts with user-specific roles, which may involve sensitive user data.
/com/android/server/appbinding/finders/AppServiceFinder.java,getServicePermission,Yes, it returns the permission that a service must be protected with.
/com/android/server/lights/LogicalLight.java,setBrightness,Yes, because changing the display brightness typically requires the `WRITE_SETTINGS` permission.
/com/android/server/lights/LogicalLight.java,setBrightness,Yes, because setting the brightness of a display typically requires system permissions.
/com/android/server/lights/LightsService.java,getLights,Yes, getLights requires the CONTROL_DEVICE_LIGHTS_PERMISSION to access device lights.
/com/android/server/lights/LightsService.java,setLightStates,Yes, requires CONTROL_DEVICE_LIGHTS permission to modify light states.
/com/android/server/lights/LightsService.java,getLightState,Yes, the method requires the `CONTROL_DEVICE_LIGHTS` permission to access device light states.
/com/android/server/lights/LightsService.java,openSession,Yes, this method requires the CONTROL_DEVICE_LIGHTS permission.
/com/android/server/lights/LightsService.java,closeSession,Yes, CONTROL_DEVICE_LIGHTS permission is required to close the session.
/com/android/server/lights/LightsService.java,dump,Yes, the method calls `checkDumpPermission`, which typically requires permission checks to access specific system information.
/com/android/server/lights/LightsService.java,setBrightness,Yes, this method likely requires permissions because it modifies the device's screen brightness settings, which typically requires the "WRITE_SETTINGS" permission in Android.
/com/android/server/lights/LightsService.java,get,Yes, this method likely requires permissions because it interacts with service management and binder operations, which typically involve system-level access and may require specific permissions in an Android context.
/com/android/server/coverage/CoverageService.java,onDump,Yes, this method requires permissions because it deals with file operations, specifically writing data to a file in the file system.
/com/android/server/stats/StatsHelper.java,sendStatsdReadyBroadcast,Yes, because it involves sending a broadcast which typically requires permission.
/com/android/server/stats/pull/IonMemoryUtil.java,readProcessSystemIonHeapSizesFromDebugfs,Yes, this method likely requires permissions because it accesses system files located in `/sys/kernel/debug/`, which typically requires special permissions to read.
/com/android/server/stats/pull/IonMemoryUtil.java,readFile,Yes, this method likely requires permissions to read files from storage.
/com/android/server/stats/pull/SettingsStatsUtil.java,logGlobalSettings,Yes, the method requires permissions because it interacts with system settings (Settings.Global) and accesses user-specific data (userId).
/com/android/server/stats/pull/SettingsStatsUtil.java,logSystemSettings,Yes, because it interacts with system settings, which typically requires permissions such as `READ_SETTINGS` or `WRITE_SETTINGS`.
/com/android/server/stats/pull/SettingsStatsUtil.java,logSecureSettings,Yes, this method requires permissions. It interacts with secure settings, which typically requires specific permissions (like `READ_SECURE_SETTINGS`) to access sensitive data within the Android system.
/com/android/server/policy/PhoneWindowManager.java,observe,Yes, because it involves accessing system settings which typically requires permissions like `android.permission.READ_SETTINGS` or `android.permission.WRITE_SETTINGS`.
/com/android/server/policy/PhoneWindowManager.java,onWakeUp,Yes, the method likely requires permissions because it appears to manipulate device wake states and trigger haptic feedback, which may involve system-level actions that require specific permissions.
/com/android/server/policy/PhoneWindowManager.java,getStatusBarService,Yes, this method likely requires permissions to access system services like the status bar.
/com/android/server/policy/PhoneWindowManager.java,getAudioManagerInternal,Yes, because accessing `AudioManagerInternal` typically requires permissions related to audio management in Android.
/com/android/server/policy/PhoneWindowManager.java,sleepDefaultDisplayFromPowerButton,Yes, this method requires permission because it interacts with power management features, particularly related to putting the device to sleep, which typically requires specific permissions to manage power states on Android devices.
/com/android/server/policy/PhoneWindowManager.java,powerMultiPressAction,Yes, this method requires permissions due to its operations related to `Settings.Global` and `PowerManager`, which typically require specific permissions like modifying system settings and controlling power states in Android.
/com/android/server/policy/PhoneWindowManager.java,launchTargetActivityOnMultiPressPower,Yes, the method likely requires permissions as it involves launching an activity, especially with user-related actions like dismissing the keyguard and resolving activities, which typically need permissions in Android.
/com/android/server/policy/PhoneWindowManager.java,getLidBehavior,Yes, accessing `Settings.Global` typically requires permissions, such as `READ_SETTINGS`.
/com/android/server/policy/PhoneWindowManager.java,powerLongPress,Yes, the method likely requires permissions because it involves handling power button interactions, possibly affecting system actions like shutdown and launching assist features, which typically require special permissions in Android.
/com/android/server/policy/PhoneWindowManager.java,toggleTalkBack,Yes, because it likely interacts with accessibility services, which usually requires specific permissions in Android for user privacy and security.
/com/android/server/policy/PhoneWindowManager.java,getTalkbackComponent,Yes, this method likely requires permissions because it interacts with the AccessibilityManager and checks for installed accessibility services, which usually requires the `BIND_ACCESSIBILITY_SERVICE` permission in Android.
/com/android/server/policy/PhoneWindowManager.java,switchRecentTask,Yes, this method likely requires permissions because it interacts with recent tasks and may modify the activity stack, which typically requires appropriate permissions in Android to manage task visibility and operations.
/com/android/server/policy/PhoneWindowManager.java,handleScreenShot,Yes, because taking a screenshot typically requires the permission to write to external storage to save the image.
/com/android/server/policy/PhoneWindowManager.java,isAutoUserSetupComplete,Yes, this method requires permissions because it involves accessing shared settings (Settings.Secure) which typically requires the appropriate permissions in Android.
/com/android/server/policy/PhoneWindowManager.java,isTvUserSetupComplete,Yes, because it accesses secure settings that typically require permissions related to reading system settings.
/com/android/server/policy/PhoneWindowManager.java,launchAllAppsViaA11y,Yes, this method likely requires permissions because it involves invoking accessibility services, which typically necessitate user permissions to access accessibility features.
/com/android/server/policy/PhoneWindowManager.java,toggleNotificationPanel,Yes, this method likely requires permissions because it interacts with the status bar service, which typically requires system-level permissions related to modifying system UI components.
/com/android/server/policy/PhoneWindowManager.java,showSystemSettings,Yes, because accessing system settings typically requires permissions to ensure user privacy and security.
/com/android/server/policy/PhoneWindowManager.java,handleLongPressOnHome,Yes, this method likely requires permissions because it interacts with system-level functionality like launching applications and toggling the notification panel, which may require specific permissions defined in the Android manifest.
/com/android/server/policy/PhoneWindowManager.java,updateSettings,Yes, because the method engages with `ContentResolver` and accesses system settings, which requires appropriate permissions.
/com/android/server/policy/PhoneWindowManager.java,checkAddPermission,Yes, this method requires permissions because it checks for the "SYSTEM_ALERT_WINDOW" permission and evaluates the calling context's ability to add overlay windows.
/com/android/server/policy/PhoneWindowManager.java,toggleMicrophoneMuteFromKey,Yes, this method likely requires permission to access the microphone, as it involves toggling microphone privacy settings.
/com/android/server/policy/PhoneWindowManager.java,interceptBugreportGestureTv,Yes, this method likely requires permissions because it handles bug reporting, which usually involves sensitive data and user privacy.
/com/android/server/policy/PhoneWindowManager.java,requestBugreportForTv,Yes, the method likely requires permissions because it involves accessing system properties and interacting with the ActivityManager to request a bug report, which typically requires specific permissions in Android (like `WRITE_EXTERNAL_STORAGE` or `READ_LOGS`).
/com/android/server/policy/PhoneWindowManager.java,startVoiceAssistIntent,Yes, this method likely requires permissions to start a voice assistant activity, as it involves user interaction with the assistive technology.
/com/android/server/policy/PhoneWindowManager.java,startActivityAsUser,Yes, the method may require permissions to start activities, especially if they involve accessing resources or data that could be sensitive or restricted.
/com/android/server/policy/PhoneWindowManager.java,launchHomeFromHotKey,Yes, because it interacts with the keyguard and the home action, which may require permissions related to device security and user interface control.
/com/android/server/policy/PhoneWindowManager.java,notifyCameraLensCoverSwitchChanged,Yes, it appears this method interacts with the camera functionality and device wake states, which typically requires permissions for camera access and possibly device wake lock permissions in Android.
/com/android/server/policy/PhoneWindowManager.java,launchVoiceAssistWithWakeLock,Yes, this method likely requires permissions because it involves launching a voice assistant, which may access sensitive user data or features like audio input.
/com/android/server/policy/PhoneWindowManager.java,wakeUp,Yes, this method likely requires permissions to modify system settings (like theater mode) and potentially to wake the device.
/com/android/server/policy/PhoneWindowManager.java,exitKeyguardSecurely,Yes, this method requires permissions because it interacts with the lock screen security features.
/com/android/server/policy/PhoneWindowManager.java,isKeyguardShowing,Yes, this method may require permission to access the keyguard state, which typically involves security-sensitive information about the device's lock screen status.
/com/android/server/policy/PhoneWindowManager.java,isKeyguardSecure,Yes, the method checks if the keyguard is secure, which typically requires `USE_KEYGUARD` permission.
/com/android/server/policy/PhoneWindowManager.java,dismissKeyguardLw,Yes, this method likely requires permissions because it interacts with the keyguard, which typically involves secure device settings that may require specific permissions (e.g., `DISABLE_KEYGUARD`).
/com/android/server/policy/PhoneWindowManager.java,sendCloseSystemWindows,Yes, because `sendCloseSystemWindows` typically requires permissions to manipulate system UI and windows.
/com/android/server/policy/PhoneWindowManager.java,lockNow,Yes, the method requires permission to enforce the calling or self permission for accessing device power features.
/com/android/server/policy/PhoneWindowManager.java,goHome,Yes, this method likely requires permissions as it interacts with system services like `ActivityManager` and performs operations related to navigating to the home screen, which may need certain permissions in Android.
/com/android/server/policy/PhoneWindowManager.java,performHapticFeedback,Yes, the method `performHapticFeedback` likely requires vibration permissions to access the vibrator hardware and perform haptic feedback operations.
/com/android/server/policy/GlobalKeyManager.java,handleGlobalKey,Yes, the method involves broadcasting an intent, which typically requires permissions such as `BROADCAST` or specific permissions related to the action being broadcasted.
/com/android/server/policy/AppOpsPolicy.java,startOperation,Yes, this method likely requires permissions because it appears to interact with operation codes and UID, which are typically associated with sensitive actions in Android.
/com/android/server/policy/AppOpsPolicy.java,resolveLocationOp,Yes, it references location operations (OP_FINE_LOCATION, OP_COARSE_LOCATION), which require corresponding location permissions in Android.
/com/android/server/policy/AppOpsPolicy.java,resolveRecordAudioOp,Yes, because it involves recording audio operations which typically require permissions like RECORD_AUDIO in Android.
/com/android/server/policy/AppOpsPolicy.java,resolveUid,Yes, it likely requires permissions, as it involves methods related to audio recording and camera access, which generally require specific permissions in Android (e.g., RECORD_AUDIO, CAMERA).
/com/android/server/policy/SoftRestrictedPermissionPolicy.java,forPermission,Yes, this method likely requires permissions, specifically for accessing storage related permissions such as `READ_EXTERNAL_STORAGE` and `WRITE_EXTERNAL_STORAGE`. It interacts with permission flags and app info, which typically necessitate appropriate permissions in Android.
/com/android/server/policy/SoftRestrictedPermissionPolicy.java,mayAllowExtraAppOp,Yes, it likely requires permissions due to references to storage-related properties like `hasWriteMediaStorageGrantedForUid` and `hasLegacyExternalStorage`, which indicate it may interact with external storage.
/com/android/server/policy/SoftRestrictedPermissionPolicy.java,hasWriteMediaStorageGrantedForUid,Yes, this method checks if the WRITE_MEDIA_STORAGE permission is granted for a specific UID.
/com/android/server/policy/LegacyGlobalActions.java,onToggle,Yes, because it may change airplane mode settings which require specific permissions.
/com/android/server/policy/LegacyGlobalActions.java,onPress,Yes, the method likely requires permission to execute specific actions related to user interactions or system actions, such as 'ACTION_BUGREPORT_FROM_POWER_MENU_INTERACTIVE'.
/com/android/server/policy/LegacyGlobalActions.java,run,Yes, it likely requires permissions since it involves requesting an interactive bug report, which typically requires specific system permissions in Android.
/com/android/server/policy/LegacyGlobalActions.java,onPress,Yes, the method starts an activity using an intent, which typically requires the permission to access certain system features, depending on the target activity.
/com/android/server/policy/LegacyGlobalActions.java,onPress,Yes, because the method `performEmergencyCall` typically requires phone call permissions in Android.
/com/android/server/policy/LegacyGlobalActions.java,getAssistAction,Yes, the method starts an activity which typically requires permissions like `INTERNET`, depending on the intent's action.
/com/android/server/policy/LegacyGlobalActions.java,getVoiceAssistAction,Yes, it likely requires permissions to start an activity with a voice assistant, which may involve accessing user data or device capabilities.
/com/android/server/policy/LegacyGlobalActions.java,onPress,Yes, the method interacts with device locking and requires appropriate permissions to perform such actions, typically related to device administration or security.
/com/android/server/policy/LegacyGlobalActions.java,addUsersToMenu,Yes, this method likely requires permissions because it interacts with user management services (like `UserManager` and user switching), which typically require specific permissions in Android (e.g., `INTERACT_ACROSS_USERS`).
/com/android/server/policy/LegacyGlobalActions.java,onPress,Yes, this method likely requires permissions because it involves switching users via `ActivityManager`, which typically needs specific permissions in Android (e.g., `android.permission.MANAGE_USERS`).
/com/android/server/policy/LegacyGlobalActions.java,onToggle,Yes, because changing ringer mode usually requires the `MODIFY_AUDIO_SETTINGS` permission.
/com/android/server/policy/LegacyGlobalActions.java,onClick,Yes, this method likely requires permissions. It involves setting the ringer mode, which typically requires `MODIFY_AUDIO_SETTINGS` permission in Android.
/com/android/server/policy/LegacyGlobalActions.java,onReceive,Yes, this method likely requires permissions because it involves system-level actions such as changing airplane mode and responding to system dialog intents, which typically require specific permissions to execute.
/com/android/server/policy/LegacyGlobalActions.java,changeAirplaneModeSystemSetting,Yes, the method requires permissions because it changes the airplane mode setting, which is a sensitive action requiring appropriate system permissions in Android.
/com/android/server/policy/PermissionPolicyService.java,onPackageChanged,Yes, this method likely requires permissions because it interacts with package permissions and app operations, which typically necessitate specific permissions to manage or modify app behavior in the Android environment.
/com/android/server/policy/PermissionPolicyService.java,onPackageRemoved,Yes, because the method interacts with user ID and application permissions, which typically require permission to access in an Android environment.
/com/android/server/policy/PermissionPolicyService.java,onReceive,Yes, the method likely requires permissions related to accessing user settings or user data, as it interacts with `Settings.Secure` and `ContentResolver`.
/com/android/server/policy/PermissionPolicyService.java,onCarrierPrivilegesChanged,Yes, the method may require permissions related to accessing telephony services and granting permissions to carrier services, depending on the context in which it is called.
/com/android/server/policy/PermissionPolicyService.java,onReceive,Yes, because the method refers to telephony services, which typically require permissions related to phone state or carrier settings.
/com/android/server/policy/PermissionPolicyService.java,onStartUser,Yes, the method involves granting or upgrading default runtime permissions, which requires permission handling in Android.
/com/android/server/policy/PermissionPolicyService.java,grantOrUpgradeDefaultRuntimePermissionsIfNeeded,Yes, the method likely requires permissions because it involves granting or upgrading runtime permissions, which typically requires appropriate system permissions in Android to modify user permissions.
/com/android/server/policy/PermissionPolicyService.java,synchronizePermissionsAndAppOpsForUser,Yes, this method likely requires permissions as it deals with synchronizing permissions and app operations, which usually needs elevated access in Android.
/com/android/server/policy/PermissionPolicyService.java,addAppOps,Yes, because the method deals with app permissions and operations related to them.
/com/android/server/policy/PermissionPolicyService.java,shouldGrantAppOp,Yes, this method involves checking for permissions (specifically if certain permissions are granted, revoked, or restricted), which requires the application to have the appropriate permissions granted to it in order to perform those checks.
/com/android/server/policy/PermissionPolicyService.java,setUidModeIgnoredIfNotAllowed,Yes, this method likely requires permissions as it deals with operations related to user identifiers (UID) and app operations, which typically require specific permissions in Android for security and privacy.
/com/android/server/policy/PermissionPolicyService.java,onActivityManagerReady,Yes, this method likely requires permissions as it involves interaction with an internal service and may interact with activity management, which generally requires specific permissions in Android.
/com/android/server/policy/PermissionPolicyService.java,checkStartActivity,Yes, the method checks for permissions related to starting activities based on the calling application and action. It involves activity launching, which typically requires permissions.
/com/android/server/policy/PermissionPolicyService.java,showNotificationPromptIfNeeded,Yes, this method likely requires permissions related to showing notifications or accessing user settings, as it involves prompting notifications based on a package name and user ID.
/com/android/server/policy/PermissionPolicyService.java,showNotificationPromptIfNeeded,Yes, it likely requires permissions because it involves showing a notification permission request, which typically requires the appropriate permissions in Android to prompt the user.
/com/android/server/policy/PermissionPolicyService.java,shouldForceShowNotificationPermissionRequest,Yes, requires permissions. The method checks for notification permissions for a package, indicating that it requires relevant permissions to access notification settings.
/com/android/server/policy/SideFpsEventHandler.java,onFingerprintSensorReady,Yes, this method likely requires permissions because it interacts with the fingerprint sensor, which usually requires specific permissions such as "USE_FINGERPRINT" or "USE_BIOMETRIC".
/com/android/server/policy/SideFpsEventHandler.java,onAllAuthenticatorsRegistered,Yes, because the method interacts with biometric features via `fingerprintManager`, which typically requires permissions such as `USE_BIOMETRIC` or `USE_FINGERPRINT`.
/com/android/server/policy/PowerAction.java,onLongPress,Yes, the method involves checking user restrictions, which may require permissions related to accessing user data or managing system services.
/com/android/server/policy/DisplayFoldController.java,create,Yes, this method likely requires permissions because it interacts with system services (WindowManagerInternal and DisplayManagerInternal) which typically require specific permissions in Android to access.
/com/android/server/policy/RestartAction.java,onLongPress,Yes, the method requires permissions because it interacts with the UserManager to check user restrictions, which typically requires specific user permissions in Android.
/com/android/server/policy/keyguard/KeyguardServiceWrapper.java,setKeyguardEnabled,Yes, this method likely requires permissions to modify the keyguard state, which typically involves security-sensitive changes.
/com/android/server/policy/keyguard/KeyguardServiceWrapper.java,dismissKeyguardToLaunch,Yes, this method likely requires permission to dismiss the keyguard, as it involves interacting with the device's security features.
/com/android/server/policy/keyguard/KeyguardServiceDelegate.java,bindService,Yes, this method requires permissions because binding a service typically involves interacting with components that may require specific permissions defined in the AndroidManifest.xml, especially for services that can influence the system or require user data.
/com/android/server/policy/keyguard/KeyguardServiceDelegate.java,verifyUnlock,Yes, it likely requires permissions related to keyguard access as it interacts with keyguard service.
/com/android/server/policy/keyguard/KeyguardServiceDelegate.java,setKeyguardEnabled,Yes, this method likely requires permissions because it involves setting the keyguard state, which typically requires system-level permissions to control security-related features on Android devices.
/com/android/server/policy/keyguard/KeyguardServiceDelegate.java,doKeyguardTimeout,Yes, it likely requires permissions because it interacts with the keyguard service, which usually involves system-level security controls.
/com/android/server/policy/keyguard/KeyguardServiceDelegate.java,dismissKeyguardToLaunch,Yes, this method likely requires permissions related to controlling the keyguard (lock screen) functionality.
/com/android/server/policy/role/RoleServicePlatformHelperImpl.java,readFile,Yes, the method likely requires permissions to read files from storage.
/com/android/server/policy/role/RoleServicePlatformHelperImpl.java,readFromLegacySettings,Yes, the method likely requires permissions as it interacts with `ContentResolver` and accesses `Settings.Secure`, which usually involves permissions for accessing settings and content in Android.
/com/android/server/policy/role/RoleServicePlatformHelperImpl.java,computePackageStateHash,Yes, because it interacts with package-related data which may require permissions such as `QUERY_PACKAGES` or similar, depending on what the method accesses.
/com/android/server/twilight/TwilightService.java,onBootPhase,Yes, this method may require permissions because it interacts with system services like `AlarmManager` and `LocationManager`, which typically require specific permissions to operate (e.g., `SET_ALARM` for alarms and `ACCESS_FINE_LOCATION` for location services).
/com/android/server/twilight/TwilightService.java,startListening,Yes, because it involves location updates which typically require permission to access location services.
/com/android/server/twilight/TwilightService.java,stopListening,Yes, the method interacts with the `LocationManager` and potentially unregisters a `BroadcastReceiver`, which may require specific permissions like `ACCESS_FINE_LOCATION` or `ACCESS_COARSE_LOCATION`, and permissions related to receiving broadcasts.
/com/android/server/twilight/TwilightService.java,onLocationChanged,Yes, this method likely requires permissions related to location access, such as ACCESS_FINE_LOCATION or ACCESS_COARSE_LOCATION, as it handles location updates (the 'onLocationChanged' method indicates it's responding to changes in location).
/com/android/server/credentials/ProviderSession.java,enforceRemoteEntryRestrictions,Yes, it requires permissions because it checks for the `PROVIDE_REMOTE_CREDENTIALS` permission using the `checkPermission` method, indicating that this method's functionality depends on permission checks.
/com/android/server/credentials/GetRequestSession.java,launchUiWithProviderData,Yes, because it references `Manifest.permission.CREDENTIAL_MANAGER_SET_ALLOWED_PROVIDERS` which implies a permission check is necessary.
/com/android/server/credentials/CreateRequestSession.java,launchUiWithProviderData,Yes, this method requires permissions because it checks for the `CREDENTIAL_MANAGER_SET_ALLOWED_PROVIDERS` permission using `hasPermission`.
/com/android/server/credentials/PrepareGetRequestSession.java,onProviderStatusChanged,Yes, the method likely requires permissions because it checks for `CREDENTIAL_MANAGER_QUERY_CANDIDATE_CREDENTIALS` permission related to accessing credential data.
/com/android/server/credentials/ProviderRegistryGetSession.java,createNewSession,Yes, this method likely requires permissions as it interacts with user data and possibly other applications.
/com/android/server/companion/PackageUtils.java,getPackageInfo,Yes, this method requires permissions because it accesses package information, which typically requires the `GET_PACKAGE_SIZE` or similar permissions in an Android context.
/com/android/server/companion/PackageUtils.java,enforceUsesCompanionDeviceFeature,Yes, this method requires permissions because it checks for the use of a specific companion device feature, which generally involves permissions related to device connections or interactions in Android.
/com/android/server/companion/PackageUtils.java,getCompanionServicesForUser,Yes, requires permission because it references `android.permission.BIND_COMPANION_DEVICE_SERVICE`.
/com/android/server/companion/DataStoreUtils.java,writeToFileSafely,Yes, the method writes to a file, which typically requires storage permissions in Android.
/com/android/server/companion/CompanionApplicationController.java,bindCompanionApplication,Yes, the method requires the permission "android.permission.BIND_COMPANION_DEVICE_SERVICE".
/com/android/server/companion/CompanionApplicationController.java,removePackage,Yes, this method likely requires permission to remove a package, which typically involves modifying the app's installed packages.
/com/android/server/companion/RolesUtils.java,isRoleHolder,Yes, this method requires permissions. It interacts with the `RoleManager`, which typically requires specific permissions to read roles and access user information in the Android environment.
/com/android/server/companion/RolesUtils.java,addRoleHolderForAssociation,Yes, this method requires permissions to manage role holders, which involves user access controls.
/com/android/server/companion/CompanionDeviceServiceConnector.java,newInstance,Yes, it likely requires permissions. This method involves binding to a service, which typically requires permission to interact with components outside the app.
/com/android/server/companion/PersistentDataStore.java,persistStateForUser,Yes, this method likely requires permissions to write or modify data on the disk, especially since it involves persisting data specific to a user.
/com/android/server/companion/AssociationRequestsProcessor.java,processNewAssociationRequest,Yes, it requires permissions. The method processes incoming association requests, which typically involves access to sensitive data or features, hence enforcing permissions is necessary for security and privacy.
/com/android/server/companion/AssociationRequestsProcessor.java,processAssociationRequestApproval,Yes, this method likely requires permissions because it enforces permissions for an association request, which typically involves sensitive operations that require user consent or system-level permissions in Android.
/com/android/server/companion/AssociationRequestsProcessor.java,createPendingIntent,Yes, the method `createPendingIntent` may require permissions related to creating pending intents for actions such as starting activities or accessing particular services.
/com/android/server/companion/PermissionsUtils.java,enforcePermissionsForAssociation,Yes, this method likely requires permissions because it involves enforcing permissions related to device profiles and potentially self-managed permissions based on the context and parameters provided.
/com/android/server/companion/PermissionsUtils.java,enforceRequestDeviceProfilePermissions,Yes, it requires permissions because it checks if the app holds specific permissions related to a device profile.
/com/android/server/companion/PermissionsUtils.java,enforceRequestSelfManagedPermission,Yes, this method checks for a specific permission (`REQUEST_COMPANION_SELF_MANAGED`) and throws a `SecurityException` if the permission is not granted.
/com/android/server/companion/PermissionsUtils.java,checkCallerCanInteractWithUserId,Yes, this method checks for the `INTERACT_ACROSS_USERS` permission.
/com/android/server/companion/PermissionsUtils.java,enforceCallerCanInteractWithUserId,Yes, the method checks for the `INTERACT_ACROSS_USERS` permission, which requires permissions to ensure that the caller can interact across different user profiles.
/com/android/server/companion/PermissionsUtils.java,checkCallerCanManageCompanionDevice,Yes, the method checks for the "MANAGE_COMPANION_DEVICES" permission, which requires explicit permissions to manage companion devices in an Android context.
/com/android/server/companion/PermissionsUtils.java,enforceCallerCanManageCompanionDevice,Yes, it requires permissions because it checks for the "MANAGE_COMPANION_DEVICES" permission to enforce caller access.
/com/android/server/companion/PermissionsUtils.java,enforceCallerCanManageAssociationsForPackage,Yes, it likely requires permissions because it checks if the caller has the necessary permissions to manage associations for a specific package.
/com/android/server/companion/PermissionsUtils.java,checkCallerCanManageAssociationsForPackage,Yes, this method requires permissions. It checks for `Manifest.permission.MANAGE_COMPANION_DEVICES` and may also require `Manifest.permission.INTERACT_ACROSS_USERS` if the caller belongs to a different user.
/com/android/server/companion/PermissionsUtils.java,getAppOpsService,Yes, because it interacts with the service manager to obtain app operation services, which typically requires certain permissions.
/com/android/server/companion/InactiveAssociationsRemovalService.java,schedule,Yes, requires permissions. Scheduling jobs may require permissions related to background processing and possibly battery optimizations.
/com/android/server/companion/transport/CompanionTransportManager.java,sendMessage,Yes, this method likely requires permissions because it involves sending messages to remote devices, which typically requires network or inter-device communication permissions in Android.
/com/android/server/companion/transport/CompanionTransportManager.java,enforceCallerCanTransportSystemData,Yes, because it calls `enforceCallingOrSelfPermission` which checks for permissions.
/com/android/server/companion/transport/CompanionTransportManager.java,detachSystemDataTransport,Yes, because the method likely involves managing system data transport, which may require specific permissions for accessing or modifying system-level resources.
/com/android/server/companion/datatransfer/SystemDataTransferProcessor.java,resolveAssociation,Yes, because the method mentions throwing exceptions if the caller doesn't have adequate permissions, indicating that permission checks are involved.
/com/android/server/companion/datatransfer/SystemDataTransferProcessor.java,buildPermissionTransferUserConsentIntent,Yes, this method likely requires permissions because it involves creating a PendingIntent for a permission sync user consent dialog, which typically involves user permissions to access sensitive data or change settings.
/com/android/server/companion/datatransfer/SystemDataTransferProcessor.java,startSystemDataTransfer,Yes, the method involves starting a data transfer which requires user consent and possibly interacts with user data, implying permission management and user consent checks.
/com/android/server/companion/datatransfer/SystemDataTransferProcessor.java,onReceivePermissionRestore,Yes, because it involves applying permissions which typically requires permission management.
/com/android/server/companion/datatransfer/SystemDataTransferProcessor.java,onReceiveResult,Yes, because it interacts with permission requests and system data transfer.
/com/android/server/companion/datatransfer/contextsync/CallMetadataSyncInCallService.java,processCallControlAction,Yes, this method likely requires permissions because it involves managing call control actions such as accept, reject, mute, and end calls. These actions typically require the `CALL_PHONE` or `MODIFY_AUDIO_SETTINGS` permissions in Android.
/com/android/server/companion/datatransfer/contextsync/CallMetadataSyncInCallService.java,onCallRemoved,Yes, this method likely requires permissions. It interacts with telecommunication calls and user data, which typically require specific permissions in Android, such as `READ_CALL_LOG` or `MODIFY_PHONE_STATE`.
/com/android/server/companion/datatransfer/contextsync/CallMetadataSyncInCallService.java,doSilence,Yes, this method likely requires permissions related to modifying the ringer settings (e.g., silencing the ringer), which typically involves using the `TelecomManager`.
/com/android/server/companion/datatransfer/contextsync/CallMetadataSyncConnectionService.java,onCreate,Yes, because the method references `AudioManager`, `TelecomManager`, and `CompanionDeviceManagerServiceInternal`, which typically require specific permissions in the Android manifest to access system services related to audio, telecom, and device management functionalities.
/com/android/server/companion/datatransfer/contextsync/CallMetadataSyncConnectionService.java,onCreateIncomingConnection,Yes, this method likely requires permissions related to handling phone calls in Android SDK (e.g., CALL_PHONE, READ_PHONE_STATE).
/com/android/server/companion/datatransfer/contextsync/CallMetadataSyncConnectionService.java,onCreateOutgoingConnection,Yes, it likely requires permissions related to telephony and making calls, such as `CALL_PHONE` or similar, as the method handles outgoing connections and manipulates call data.
/com/android/server/companion/datatransfer/contextsync/CallMetadataSyncConnectionService.java,sendCallAction,Yes, this method likely requires permissions to manage calls or communication features on the device, such as sending call actions.
/com/android/server/companion/datatransfer/contextsync/CallMetadataSyncConnectionService.java,update,Yes, because it appears to interact with call management and audio capabilities, which typically require permissions in Android (like `CALL_PHONE`, `MODIFY_AUDIO_SETTINGS`).
/com/android/server/companion/datatransfer/contextsync/CrossDeviceSyncController.java,onBootCompleted,Yes, because it involves actions related to the telecom services which often require permissions such as `READ_PHONE_STATE` or `BIND_TELECOM_SERVICE`.
/com/android/server/companion/datatransfer/contextsync/CrossDeviceSyncController.java,syncToAllDevicesForUserId,Yes, this method likely requires permissions to access and sync user data with associated devices.
/com/android/server/companion/datatransfer/contextsync/CrossDeviceSyncController.java,processCallDataFromSync,Yes, the method likely requires permissions related to handling call data in the Telecom context, such as access to call logs or call state.
/com/android/server/companion/datatransfer/contextsync/CrossDeviceSyncController.java,createCallControlMessage,Yes, this method likely requires permissions because it interacts with telecommunications features, which typically require user consent and permissions in Android (e.g., `android.permission.CALL_PHONE` or `android.permission.READ_PHONE_STATE`).
/com/android/server/companion/datatransfer/contextsync/CrossDeviceSyncController.java,createCallCreateMessage,Yes, this method requires permissions because it involves creating a call, which typically requires permissions related to telephony services in Android (e.g., `CALL_PHONE` permission).
/com/android/server/companion/datatransfer/contextsync/CrossDeviceSyncController.java,updateCalls,Yes, this method likely requires permissions, as it deals with adding calls to Telecom, which typically requires specific permissions to interact with telephony services (e.g., `android.permission.READ_PHONE_STATE`, `android.permission.MANAGE_OWN_CALLS`).
/com/android/server/companion/datatransfer/contextsync/CrossDeviceSyncController.java,registerPhoneAccount,Yes, this method likely requires permissions because it involves registering a PhoneAccount, which typically necessitates permissions related to telecom operations, such as `BIND_TELECOM_CONNECTION_SERVICE`.
/com/android/server/companion/datatransfer/contextsync/CrossDeviceCall.java,updateCallDetails,Yes, because managing call details typically requires permissions related to telephony and call state.
/com/android/server/companion/presence/CompanionDevicePresenceMonitor.java,init,Yes, this method requires permissions because it involves Bluetooth functionality and accessing BluetoothAdapter, which typically requires the BLUETOOTH and possibly BLUETOOTH_ADMIN permissions in Android.
/com/android/server/companion/presence/CompanionDevicePresenceMonitor.java,onBluetoothCompanionDeviceDisconnected,Yes, because it involves Bluetooth device connections, which typically require BLUETOOTH and potentially BLUETOOTH_ADMIN permissions.
/com/android/server/companion/presence/BleCompanionDeviceScanner.java,init,Yes, this method requires permissions because it involves Bluetooth operations, which generally require the appropriate Bluetooth permissions in Android (e.g., `BLUETOOTH` and `BLUETOOTH_ADMIN`).
/com/android/server/companion/presence/BleCompanionDeviceScanner.java,checkBleState,Yes, this method requires permissions because it involves Bluetooth operations, specifically checking the state of Bluetooth Low Energy (BLE) devices, which typically requires `BLUETOOTH` and `BLUETOOTH_ADMIN` permissions in Android.
/com/android/server/companion/presence/BleCompanionDeviceScanner.java,startScan,Yes, it likely requires permissions for Bluetooth scanning and location access.
/com/android/server/companion/presence/BleCompanionDeviceScanner.java,registerBluetoothStateBroadcastReceiver,Yes, it requires permissions. The method interacts with Bluetooth state changes, which typically requires Bluetooth permissions in Android (e.g., `BLUETOOTH`, `BLUETOOTH_ADMIN`).
/com/android/server/companion/presence/BleCompanionDeviceScanner.java,onReceive,Yes, this method likely requires permissions related to Bluetooth operations in Android, as it deals with Bluetooth adapter states and actions.
/com/android/server/companion/presence/BleCompanionDeviceScanner.java,onScanResult,Yes, this method likely requires permissions.
/com/android/server/companion/presence/BluetoothCompanionDeviceConnectionListener.java,onDeviceConnected,Yes, the method likely requires Bluetooth permissions to access and connect to Bluetooth devices.
/com/android/server/companion/presence/BluetoothCompanionDeviceConnectionListener.java,onDeviceConnectivityChanged,Yes, this method requires permissions because it interacts with Bluetooth devices.
/com/android/server/companion/virtual/CameraAccessController.java,startObservingIfNeeded,Yes, it likely requires permissions to access the camera.
/com/android/server/companion/virtual/CameraAccessController.java,startBlocking,Yes, this method likely requires permissions because it involves controlling camera access, which typically requires appropriate permissions in Android (e.g., CAMERA permission).
/com/android/server/companion/virtual/VirtualDeviceManagerService.java,removeVirtualDevice,Yes, because removing a virtual device may affect user settings or configurations, likely requiring appropriate permissions for access to those resources.
/com/android/server/companion/virtual/VirtualDeviceManagerService.java,createVirtualDevice,Yes, the method requires permissions to enforce calling or self permission for creating a virtual device.
/com/android/server/companion/virtual/VirtualDeviceManagerService.java,createVirtualDisplay,Yes, this method requires permissions because it includes checks for the calling UID and validates the package name against the calling context, which typically requires appropriate permissions to ensure security.
/com/android/server/companion/virtual/VirtualDeviceManagerService.java,dump,Yes, because it calls `checkDumpAndUsageStatsPermission`, which implies permission checking is required.
/com/android/server/media/BluetoothProfileMonitor.java,start,Yes, because the method involves Bluetooth functionality, which requires Bluetooth permissions.
/com/android/server/media/BluetoothProfileMonitor.java,isProfileSupported,Yes, this method requires permissions because it interacts with Bluetooth profiles, which typically require location and Bluetooth permissions in Android.
/com/android/server/media/BluetoothProfileMonitor.java,getGroupId,Yes, this method requires permissions because it interacts with Bluetooth profiles and devices, which typically require Bluetooth permissions in Android.
/com/android/server/media/MediaServerUtils.java,checkDumpPermission,Yes, this method requires the `DUMP` permission to verify if the caller holds it.
/com/android/server/media/RemoteDisplayProviderProxy.java,bind,Yes, because it involves binding a service which typically requires permissions related to foreground service access.
/com/android/server/media/BluetoothRouteController.java,createInstance,Yes, this method requires permissions. It interacts with Bluetooth services, which require the appropriate Bluetooth permissions in Android.
/com/android/server/media/BluetoothRouteController.java,start,Yes, requires permissions for Bluetooth access.
/com/android/server/media/BluetoothRouteController.java,transferTo,Yes, it likely requires Bluetooth permissions to transfer output to a Bluetooth route.
/com/android/server/media/BluetoothRouteController.java,updateVolumeForDevices,Yes, because it involves modifying audio settings for Bluetooth devices, which typically requires appropriate permissions.
/com/android/server/media/SystemMediaRoute2Provider.java,start,Yes, this method likely requires permissions because it registers a receiver for system-wide changes (like volume or Bluetooth state), which typically requires permissions for accessing such system events or features in Android.
/com/android/server/media/SystemMediaRoute2Provider.java,setRouteVolume,Yes, this method likely requires permissions because it involves changing the volume of audio streams, which typically requires the `MODIFY_AUDIO_SETTINGS` permission in Android.
/com/android/server/media/SystemMediaRoute2Provider.java,updateVolume,Yes, this method likely requires permissions because it interacts with audio management features, which may involve changing volume levels and accessing audio devices.
/com/android/server/media/SystemMediaRoute2Provider.java,onReceive,Yes, it may require permissions related to audio volume control in Android, such as `MODIFY_AUDIO_SETTINGS`.
/com/android/server/media/MediaRoute2ProviderServiceProxy.java,bind,Yes, because binding a service may require `BIND_AUTO_CREATE` or `BIND_FOREGROUND_SERVICE` permissions depending on the service type.
/com/android/server/media/MediaSessionRecordImpl.java,sendMediaButton,Yes, it may require permissions to send media button events, especially related to interacting with system services or key events.
/com/android/server/media/LegacyBluetoothRouteController.java,start,Yes, because it involves Bluetooth functionalities which typically require permissions such as `BLUETOOTH` and `BLUETOOTH_ADMIN`.
/com/android/server/media/LegacyBluetoothRouteController.java,stop,Yes, this method requires permissions because it unregisters receivers for system broadcasts, which typically requires certain permissions in the Android framework.
/com/android/server/media/LegacyBluetoothRouteController.java,transferTo,Yes, it requires permissions for Bluetooth operations, such as enabling and managing Bluetooth devices.
/com/android/server/media/LegacyBluetoothRouteController.java,clearActiveDevices,Yes, this method likely requires Bluetooth permissions since it involves interacting with Bluetooth devices.
/com/android/server/media/LegacyBluetoothRouteController.java,buildBluetoothRoutes,Yes, because accessing Bluetooth devices typically requires the `BLUETOOTH` and possibly `BLUETOOTH_ADMIN` permissions in an Android application.
/com/android/server/media/LegacyBluetoothRouteController.java,updateVolumeForDevices,Yes, this method likely requires permissions as it manipulates audio volume and interacts with audio devices, which typically requires `MODIFY_AUDIO_SETTINGS` permission.
/com/android/server/media/LegacyBluetoothRouteController.java,createBluetoothRoute,Yes, it requires permissions because it interacts with Bluetooth devices which typically requires Bluetooth permissions in Android (e.g., BLUETOOTH and BLUETOOTH_ADMIN).
/com/android/server/media/LegacyBluetoothRouteController.java,addActiveDevices,Yes, this method requires permissions. It interacts with Bluetooth devices, which typically requires `BLUETOOTH` and `BLUETOOTH_ADMIN` permissions in Android.
/com/android/server/media/LegacyBluetoothRouteController.java,onServiceConnected,Yes, because managing Bluetooth connections typically requires permissions like `BLUETOOTH` and `BLUETOOTH_ADMIN`.
/com/android/server/media/LegacyBluetoothRouteController.java,onReceive,Yes, the method likely requires permissions because it interacts with Bluetooth state, which generally requires specific permissions in Android (e.g., `BLUETOOTH` or `BLUETOOTH_ADMIN`).
/com/android/server/media/LegacyBluetoothRouteController.java,onReceive,Yes, this method requires permissions. It interacts with Bluetooth devices, which typically requires permissions such as `BLUETOOTH` and `BLUETOOTH_ADMIN`.
/com/android/server/media/LegacyBluetoothRouteController.java,handleConnectionStateChanged,Yes, it likely requires Bluetooth permissions to handle the connection state of Bluetooth devices.
/com/android/server/media/AudioPoliciesDeviceRouteController.java,updateVolume,Yes, this method likely requires permissions related to managing audio or media volume.
/com/android/server/media/VolumeCtrl.java,run,Yes, because this method involves adjusting the audio volume, which typically requires permissions like `MODIFY_AUDIO_SETTINGS` to change the audio settings on an Android device.
/com/android/server/media/RemoteDisplayProviderWatcher.java,start,Yes, it likely requires permissions. The method interacts with packages, which may involve actions like registering receivers for package-related broadcasts that typically need permissions.
/com/android/server/media/RemoteDisplayProviderWatcher.java,verifyServiceTrusted,Yes, because the method checks for specific permissions (BIND_REMOTE_DISPLAY and REMOTE_DISPLAY_PROVIDER) in the service manifest and verifies them against granted permissions.
/com/android/server/media/AudioPoliciesBluetoothRouteController.java,start,Yes, it requires permissions to access Bluetooth features and to register receivers for Bluetooth state changes.
/com/android/server/media/AudioPoliciesBluetoothRouteController.java,stop,Yes, the method unregisters receivers which typically requires permission to access the corresponding broadcasts.
/com/android/server/media/AudioPoliciesBluetoothRouteController.java,selectRoute,Yes, likely requires permissions related to Bluetooth operations, such as accessing Bluetooth devices and managing connections.
/com/android/server/media/AudioPoliciesBluetoothRouteController.java,updateConnectivityStateForDevicesInTheSameGroup,Yes, this method likely requires permissions related to Bluetooth connectivity since it deals with updating the connectivity state of Bluetooth devices.
/com/android/server/media/AudioPoliciesBluetoothRouteController.java,transferTo,Yes, this method likely requires Bluetooth permissions to access Bluetooth devices and manage audio routing.
/com/android/server/media/AudioPoliciesBluetoothRouteController.java,updateBluetoothRoutes,Yes, this method likely requires permissions because it interacts with Bluetooth devices, which typically necessitates Bluetooth-related permissions in Android, such as ACCESS_BLUETOOTH or BLUETOOTH_ADMIN.
/com/android/server/media/AudioPoliciesBluetoothRouteController.java,getAllBluetoothRoutes,Yes, this method likely requires permissions because it involves accessing Bluetooth routes, which typically requires Bluetooth-related permissions in Android (e.g., `BLUETOOTH` or `BLUETOOTH_ADMIN`).
/com/android/server/media/AudioPoliciesBluetoothRouteController.java,createBluetoothRoute,Yes, this method requires permissions because it interacts with Bluetooth devices, which typically require the `BLUETOOTH` and `BLUETOOTH_ADMIN` permissions in Android.
/com/android/server/media/AudioPoliciesBluetoothRouteController.java,onReceive,Yes, the method interacts with Bluetooth state, which typically requires permissions related to Bluetooth access in Android, such as `BLUETOOTH` and `BLUETOOTH_ADMIN`.
/com/android/server/media/AudioPoliciesBluetoothRouteController.java,onReceive,Yes, this method likely requires permissions related to Bluetooth operations, such as `BLUETOOTH` and `BLUETOOTH_ADMIN`, to handle active device changes and connection states.
/com/android/server/media/MediaSession2Record.java,adjustVolume,Yes, this method likely requires permissions to adjust the volume, as it involves modifying system settings.
/com/android/server/media/MediaSessionService.java,onStart,Yes, because it uses `registerReceiver` which requires permission to access system notifications.
/com/android/server/media/MediaSessionService.java,enforcePhoneStatePermission,Yes, the method enforces the MODIFY_PHONE_STATE permission, which is necessary for its operation.
/com/android/server/media/MediaSessionService.java,updateActiveSessionListeners,Yes, because the method enforces media permissions which generally require specific permissions to be declared in Android.
/com/android/server/media/MediaSessionService.java,tempAllowlistTargetPkgIfPossible,Yes, this method requires permissions because it involves operations that can affect other applications, such as managing temporary allowlists and checking permissions related to foreground services.
/com/android/server/media/MediaSessionService.java,enforceMediaPermissions,Yes, the method requires permissions because it checks for `android.Manifest.permission.MEDIA_CONTENT_CONTROL` permission to authorize the caller.
/com/android/server/media/MediaSessionService.java,hasStatusBarServicePermission,Yes, this method checks for permission related to the status bar service, implying that it requires permission to access that service.
/com/android/server/media/MediaSessionService.java,enforceStatusBarServicePermission,Yes, because it checks for status bar service permissions, suggesting that permission is required for access.
/com/android/server/media/MediaSessionService.java,hasMediaControlPermission,Yes, the method checks for `MEDIA_CONTENT_CONTROL` permission, indicating it requires permission to access media controls.
/com/android/server/media/MediaSessionService.java,hasEnabledNotificationListener,Yes, this method likely requires permissions related to accessing notifications, as it deals with checking notification listeners for a specific package and user.
/com/android/server/media/MediaSessionService.java,createSessionInternal,Yes, this method requires permissions. It involves media session creation, which typically requires permissions like `MEDIA_CONTENT_CONTROL`.
/com/android/server/media/MediaSessionService.java,onShellCommand,Yes, this method may require permissions. It involves executing shell commands, which typically require specific permissions to prevent unauthorized access and maintain system security.
/com/android/server/media/MediaSessionService.java,createSession,Yes, it likely requires permissions because it deals with creating a session, which typically involves accessing system resources or user-specific functionality that requires explicit permission checks.
/com/android/server/media/MediaSessionService.java,getMediaKeyEventSession,Yes, because it involves enforcing media permissions as indicated in the method call `enforceMediaPermissions`.
/com/android/server/media/MediaSessionService.java,getMediaKeyEventSessionPackageName,Yes, the method interacts with media sessions, which typically requires permissions related to media playback and control.
/com/android/server/media/MediaSessionService.java,dispatchMediaKeyEvent,Yes, this method requires permissions because it directly interacts with media key events, which typically require system-level permissions to manage media control features and handle user input from hardware devices.
/com/android/server/media/MediaSessionService.java,addOnMediaKeyEventDispatchedListener,Yes, because it requires "MEDIA_CONTENT_CONTROL" permission to add the listener.
/com/android/server/media/MediaSessionService.java,removeOnMediaKeyEventDispatchedListener,Yes, MEDIA_CONTENT_CONTROL permission is required to remove the listener.
/com/android/server/media/MediaSessionService.java,addOnMediaKeyEventSessionChangedListener,Yes, permission is required because this method involves media operations that typically require permissions to interact with media resources securely.
/com/android/server/media/MediaSessionService.java,setOnVolumeKeyLongPressListener,Yes, requires permission. The method checks for the `SET_VOLUME_KEY_LONG_PRESS_LISTENER` permission before proceeding.
/com/android/server/media/MediaSessionService.java,setOnMediaKeyListener,Yes, the method requires the "SET_MEDIA_KEY_LISTENER" permission to function correctly, as it checks for this permission with `checkPermission`.
/com/android/server/media/MediaSessionService.java,dispatchVolumeKeyEventToSessionAsSystemService,Yes, this method requires permissions because it interacts with media sessions and volume adjustments, which typically need specific permissions to ensure only authorized applications can modify audio settings.
/com/android/server/media/MediaSessionService.java,dispatchAdjustVolume,Yes, this method likely requires permissions as it interacts with volume adjustment, which often involves audio settings that require certain permissions in Android.
/com/android/server/media/MediaSessionService.java,registerRemoteSessionCallback,Yes, this method requires permissions because it calls `enforceStatusBarServicePermission`, which verifies whether the calling process has the necessary permissions to perform the operation related to volume changes.
/com/android/server/media/MediaSessionService.java,unregisterRemoteSessionCallback,Yes, this method requires permissions because it enforces a service permission check (`enforceStatusBarServicePermission`).
/com/android/server/media/MediaSessionService.java,dump,Yes, this method requires permissions because it checks for a dump permission before proceeding with its operations.
/com/android/server/media/MediaSessionService.java,isTrusted,Yes, the method requires permissions because it checks for either `MEDIA_CONTENT_CONTROL` permission or an enabled notification listener to determine if the controller's package is trusted.
/com/android/server/media/MediaSessionService.java,verifySessionsRequest,Yes, this method likely requires permissions because it involves handling user IDs and enforcing media permissions, which typically necessitate appropriate permissions in Android to access user or media resources securely.
/com/android/server/media/MediaSessionService.java,handleIncomingUser,Yes, requires permissions for user interactions and checking permissions within the context.
/com/android/server/media/MediaSessionService.java,dispatchAdjustVolumeLocked,Yes, this method likely requires permissions because it interacts with audio volume settings, which usually require permission to manage audio settings or modify system settings on Android devices.
/com/android/server/media/MediaSessionService.java,run,Yes, it requires permissions because it involves adjusting volume levels, which typically requires `MODIFY_AUDIO_SETTINGS` permission in Android.
/com/android/server/media/MediaSessionService.java,startVoiceInput,Yes, the method likely requires permissions related to accessing the device's voice input and possibly wake locks, depending on the implementation.
/com/android/server/media/MediaSessionService.java,acquireWakeLockLocked,Yes, the method likely requires permissions to acquire a wake lock, which is sensitive and can affect battery life.
/com/android/server/media/AudioPoliciesBluetoothRouteControllerTest.java,setUp,Yes, this method likely requires permissions related to Bluetooth access in Android, as it involves obtaining a `BluetoothManager` and manipulating Bluetooth profiles.
/com/android/server/media/AudioPoliciesBluetoothRouteControllerTest.java,updateVolumeForDevice_setVolumeForA2DPTo25_selectedRouteVolumeIsUpdated,Yes, requires Bluetooth permissions to access and modify Bluetooth device settings, including volume control.
/com/android/server/media/MediaRoute2ProviderWatcher.java,start,Yes, the method involves registering a broadcast receiver, which typically requires permissions to receive specific broadcast actions.
/com/android/server/media/MediaResourceMonitorService.java,notifyResourceGranted,Yes, the method `notifyResourceGranted` requires permissions because it interacts with system resources and broadcasts, specifically needing the `RECEIVE_MEDIA_RESOURCE_USAGE` permission to send broadcasts related to media resource usage.
/com/android/server/media/MediaResourceMonitorService.java,getPackageNamesFromPid,Yes, this method requires permissions. It accesses running app processes, which typically requires the `GET_RUNNING_APP_PROCESSES` permission.
/com/android/oemextensions/ImageCaptureExtenderImplStub.java,init,Yes, because it interacts with the camera and requires permission to access camera features.
/com/android/oemextensions/PreviewExtenderImplStub.java,onEnableSession,Yes, this method likely requires permissions related to camera access, as it interacts with camera characteristics and capture requests.
/com/android/oemextensions/PreviewExtenderImplStub.java,init,Yes, requires camera permissions. The method interacts with camera functionalities (CameraManager and CameraCharacteristics).
/com/android/oemextensions/SimpleSessionProcessorStub.java,initSession,Yes, this method likely requires permissions related to camera access, such as `CAMERA`, as it initializes a camera session using a `cameraId` and output surfaces.
/com/android/oemextensions/SimpleSessionProcessorStub.java,startRepeating,Yes, this method likely requires permissions related to camera access or capture functionality, as it involves camera operations and callbacks related to capturing images or video.
/com/android/oemextensions/SimpleSessionProcessorStub.java,startCapture,Yes, this method likely requires permissions related to camera access.
/com/android/oemextensions/AdvancedExtenderImplStub.java,init,Yes, because accessing camera properties typically requires camera permissions in Android (e.g., `CAMERA`).
/com/android/oemextensions/AdvancedExtenderImplStub.java,getSupportedPreviewOutputResolutions,Yes, this method likely requires the CAMERA permission to access camera characteristics.
/com/android/oemextensions/AdvancedExtenderImplStub.java,getSupportedCaptureOutputResolutions,Yes, this method likely requires permissions to access camera features.
/com/android/calendarcommon2/RecurrenceSet.java,populateComponent,Yes, it likely requires permissions as it interacts with Calendar data, which typically requires permission to access the user's calendar information in Android.
/com/android/calendarcommon2/RecurrenceSet.java,populateComponent,Yes, this method interacts with calendar events which typically requires permissions to access calendar data, such as `READ_CALENDAR` or `WRITE_CALENDAR`.
/com/android/soundpicker/RingtoneOverlayService.java,updateRingtones,Yes, this method likely requires permissions because it interacts with system sounds and modifies ringtones, notifications, and alarms, which generally need specific permissions like WRITE_EXTERNAL_STORAGE or MODIFY_AUDIO_SETTINGS in Android.
/com/android/soundpicker/RingtoneOverlayService.java,copyResourceAndSetAsSound,Yes, this method requires permissions. It accesses external storage to copy a resource, which typically requires `WRITE_EXTERNAL_STORAGE` permission in Android.
/com/android/soundpicker/RingtoneOverlayService.java,scanFile,Yes, requires permissions to access file storage.
/com/android/soundpicker/RingtoneOverlayService.java,set,Yes, this method likely requires permissions because it involves setting a ringtone, which typically requires specific permissions like `android.permission.WRITE_SETTINGS` or other ringtone-related permissions in Android.
/com/android/soundpicker/RingtoneReceiver.java,onReceive,Yes, this method requires permissions because it initializes resource ringtones, which typically requires permission to modify system settings or access resources on the device.
/com/android/soundpicker/RingtoneReceiver.java,initResourceRingtones,Yes, this method likely requires permissions because it starts a service (`RingtoneOverlayService`) within the `initResourceRingtones` method, which typically necessitates permission to start background services.
/com/android/soundpicker/RingtonePickerActivity.java,doInBackground,Yes, this method likely requires permissions because it interacts with the ringtone manager, which generally requires permissions to modify system settings or access external storage.
/com/android/soundpicker/RingtonePickerActivity.java,run,Yes, this method likely requires permissions to access and play ringtones in Android. Accessing ringtones involves `READ_EXTERNAL_STORAGE` and possibly `WRITE_EXTERNAL_STORAGE` permissions, depending on the implementation of the ringtone management.
/com/android/soundpicker/RingtonePickerActivity.java,getCurrentlySelectedRingtoneUri,Yes, this method requires permissions because it deals with ringtone management, which typically requires access to read audio files.
/com/android/soundpicker/RingtonePickerActivity.java,stopAnyPlayingRingtone,Yes, this method likely requires permissions to modify or stop audio playback, such as stopping ringtones or notifications.
/com/android/networkstack/tethering/companionproxy/io/EventManagerImpl.java,scheduleAlarm,Yes, this method likely requires permissions related to scheduling alarms in the Android system. Specifically, it may require `SET_ALARM` permission to allow the app to schedule alarms.
/com/android/networkstack/tethering/companionproxy/io/AndroidOsAccess.java,read,Yes, the method reads data from a file descriptor, which typically requires read permissions to access the underlying file system resource.
/com/android/networkstack/tethering/companionproxy/io/AndroidOsAccess.java,write,Yes, this method requires permissions due to file writing operations.
/com/android/networkstack/tethering/companionproxy/io/EventManager.java,scheduleAlarm,Yes, this method likely requires permissions to schedule alarms in Android.
/com/android/networkstack/tethering/companionproxy/io/FakeOsAccess.java,read,Yes, this method requires permissions to read from a file.
/com/android/networkstack/tethering/companionproxy/io/FakeOsAccess.java,write,Yes, the method likely requires permissions to write to a file. Writing to files typically necessitates permissions such as `WRITE_EXTERNAL_STORAGE` in Android.
/com/android/networkstack/tethering/companionproxy/io/FakeOsAccess.java,registerFilePair,Yes, this method likely requires permissions to access file system resources (files).
/com/android/networkstack/tethering/companionproxy/bt/GattDiscoveryClient.java,start,Yes, requires Bluetooth permissions to operate the GATT server.
/com/android/networkstack/tethering/companionproxy/bt/GattDiscoveryClient.java,createGattService,Yes, because it involves Bluetooth operations, which typically require permissions like `BLUETOOTH` and `BLUETOOTH_ADMIN`.
/com/android/networkstack/tethering/companionproxy/bt/GattDiscoveryClient.java,onCharacteristicWriteRequest,Yes, this method requires permissions related to Bluetooth access, as it involves writing to a Bluetooth characteristic, which typically necessitates Bluetooth permissions in Android.
/com/android/networkstack/tethering/companionproxy/bt/GattDiscoveryClient.java,sendSuccessResponse,Yes, this method likely requires Bluetooth permissions, as it interacts with Bluetooth devices and uses a BluetoothGattServer.
/com/android/networkstack/tethering/companionproxy/bt/GattDiscoveryClient.java,sendFailureResponse,Yes, this method may require Bluetooth permissions to communicate with Bluetooth devices.
/com/android/networkstack/tethering/companionproxy/bt/GattDiscoveryClientTest.java,openGattServer,Yes, because interacting with Bluetooth requires appropriate permissions to ensure user privacy and security (e.g., `BLUETOOTH`, `BLUETOOTH_ADMIN`).
/com/android/common/Search.java,getSuggestions,Yes, the method requires permissions to access the content provider for search suggestions, specifically for querying the data associated with the specified authority.
/com/android/common/NetworkConnectivityListener.java,onReceive,Yes, because it handles connectivity actions, which typically require permission such as ACCESS_NETWORK_STATE or ACCESS_WIFI_STATE.
/com/android/common/NetworkConnectivityListener.java,startListening,Yes, because it listens for network connectivity state changes, which typically requires the `ACCESS_NETWORK_STATE` permission in Android.
/com/android/common/userhappiness/UserHappinessSignals.java,userAcceptedImeText,Yes, this method requires permissions because it sends a broadcast, which typically requires certain permissions within the Android framework.
/com/android/common/contacts/BaseEmailAddressAdapter.java,performFiltering,Yes, this method likely requires permissions due to its interaction with `ContentResolver` and querying email content, which typically requires permissions like `READ_CONTACTS` or `READ_EMAIL`.
/com/android/common/contacts/BaseEmailAddressAdapter.java,performFiltering,Yes, the method requires permissions because it interacts with the content resolver to query data (possibly requiring permissions related to accessing the user's contacts or email).
/com/android/common/content/SQLiteContentProvider.java,updateInTransaction,Yes, this method likely requires permissions because it interacts with a content provider, which typically necessitates permission to read or write data.
/com/android/common/content/SQLiteContentProvider.java,updateInTransaction,Yes, because it involves updating data in a database which typically requires permissions to access the data.
/com/android/common/content/SQLiteContentProvider.java,deleteInTransaction,Yes, because it involves deleting data, which typically requires appropriate permissions in Android.
/com/android/common/content/SQLiteContentProvider.java,insert,Yes, this method likely requires permissions because it involves inserting data into a database, which typically requires permission to access storage or a content provider in Android.
/com/android/common/content/SQLiteContentProvider.java,bulkInsert,Yes, this method requires permissions for accessing and modifying data in a Content Provider.
/com/android/common/content/SQLiteContentProvider.java,update,Yes, requires permissions. The method appears to perform a database update operation, which typically requires WRITE permission for the corresponding content provider in Android.
/com/android/common/content/SQLiteContentProvider.java,delete,Yes, this method likely requires permission to access the content provider for database operations.
/com/android/common/content/SQLiteContentProvider.java,applyBatch,Yes, this method requires permissions because it interacts with a ContentProvider, which normally requires permissions to read or write data.
/com/android/common/content/SyncStateContentProviderHelper.java,delete,Yes, because accessing a SQLiteDatabase for deletion operations typically requires WRITE_EXTERNAL_STORAGE or similar database permissions.
/com/android/common/content/SyncStateContentProviderHelper.java,update,Yes, this method likely requires permissions to access the SQLite database, which typically involves modifying data stored in a database, so appropriate permissions are needed for database operations in an Android application.
/com/android/common/content/SyncStateContentProviderHelper.java,onAccountsChanged,Yes, this method likely requires permissions. It interacts with accounts and databases, which generally necessitate permissions related to account access and database access in Android.
/com/android/packageinstaller/PackageInstalledNotificationUtils.java,postAppInstalledNotification,Yes, because posting notifications typically requires the `android.permission.POST_NOTIFICATIONS` permission in Android.
/com/android/packageinstaller/PackageInstallerActivity.java,onActivityResult,Yes, because it involves starting a package installation activity, which requires the "REQUEST_INSTALL_PACKAGES" permission.
/com/android/packageinstaller/PackageInstallerActivity.java,isInstallRequestFromUnknownSource,Yes, this method checks for the `INSTALL_PACKAGES` permission, which is a critical operation requiring permission in Android.
/com/android/packageinstaller/PackageInstallerActivity.java,initiateInstall,Yes, this method likely requires permissions because it involves operations related to package management and installation, which typically require specific permissions like INSTALL_PACKAGES or similar.
/com/android/packageinstaller/PackageInstallerActivity.java,checkIfAllowedAndInitiateInstall,Yes, the method likely requires permissions related to installing packages, as it involves checking if an installation is allowed and initiating one.
/com/android/packageinstaller/PackageInstallerActivity.java,handleUnknownSources,Yes, it requires permissions. The method interacts with the 'REQUEST_INSTALL_PACKAGES' permission, which is needed for app installation activities.
/com/android/packageinstaller/PackageInstallerActivity.java,processPackageUri,Yes, requires permissions because it interacts with package management and querying package information which typically requires permissions such as `QUERY_ALL_PACKAGES`.
/com/android/packageinstaller/PackageInstallerActivity.java,register,Yes, this method may require permissions because it references `OPSTR_REQUEST_INSTALL_PACKAGES`, which relates to installing packages from unknown sources.
/com/android/packageinstaller/InstallStart.java,onCreate,Yes, this method requires permissions because it checks for permissions like `INSTALL_PACKAGES` and `MANAGE_DOCUMENTS` which are related to managing app installations and file management in Android.
/com/android/packageinstaller/InstallStart.java,canPackageQuery,Yes, this method likely requires permissions because it interacts with the `PackageManager`, which typically requires specific permissions to access package information and content providers in Android.
/com/android/packageinstaller/InstallStart.java,checkDevicePolicyRestriction,Yes, this method likely requires permissions related to device policies and user restrictions, as it interacts with the `UserManager` to check restrictions on app installations and unknown sources.
/com/android/packageinstaller/InstallStart.java,startAdminSupportDetailsActivity,Yes, this method likely requires permissions because it interacts with the `DevicePolicyManager`, which typically requires specific device administration privileges in Android.
/com/android/packageinstaller/PackageUtil.java,getPackageInfo,Yes, this method requires permissions. It accesses package information which typically necessitates the `QUERY_ALL_PACKAGES` or similar permissions in Android.
/com/android/packageinstaller/UninstallerActivity.java,onCreate,Yes, because it checks for the permissions `REQUEST_DELETE_PACKAGES` and `DELETE_PACKAGES`.
/com/android/packageinstaller/UninstallerActivity.java,startUninstallProgress,Yes, because uninstalling an app typically requires the `DELETE_PACKAGES` permission.
/com/android/packageinstaller/UninstallerActivity.java,startUninstallProgress,Yes, this method requires permissions because it involves uninstalling applications, which typically requires permission to manage applications.
/com/android/packageinstaller/UninstallerActivity.java,getPackageNameForUid,Yes, because it retrieves package names based on UID, which may require permission to access package information.
/com/android/packageinstaller/UninstallUninstalling.java,onCreate,Yes, the method likely requires permissions. It interacts with the package manager and system services related to user management and application uninstalling, which typically necessitate permissions like `PACKAGE_USAGE_STATS`, `REQUEST_DELETE_PACKAGES`, or similar.
/com/android/packageinstaller/UninstallFinish.java,onReceive,Yes, this method requires permissions related to uninstalling applications and managing notifications.
/com/android/packageinstaller/UninstallFinish.java,addDeviceManagerButton,Yes, because accessing device policy management typically requires specific permissions related to device administration.
/com/android/packageinstaller/InstallInstalling.java,onCreate,Yes, the method may require permissions as it interacts with the PackageManager and PackageInstaller, which could involve installing or accessing applications, potentially needing permissions like `REQUEST_INSTALL_PACKAGES`.
/com/android/packageinstaller/InstallStaging.java,openAssetFileDescriptor,Yes, it requires permissions. The method interacts with a URI, likely accessing content that may require read permissions to storage or a specific content provider.
/com/android/packageinstaller/InstallStaging.java,createSessionParams,Yes, the method may require permissions related to package installation and handling, particularly involving the `PackageInstaller` and its session parameters, which typically requires appropriate permissions to install or manage applications on the device.
/com/android/packageinstaller/InstallStaging.java,doInBackground,Yes, this method requires permissions because it interacts with content URIs and file streams, which typically require read/write permissions in Android.
/com/android/packageinstaller/television/UninstallAlertFragment.java,onCreateGuidance,Yes, this method likely requires permissions. It interacts with `PackageManager` and `UserManager`, which typically require permissions related to app management and user data.
/com/android/packageinstaller/television/UninstallAppProgressFragment.java,onClick,Yes, because starting a new activity may require permission if it accesses restricted features or settings.
/com/android/packageinstaller/handheld/UninstallAlertDialogFragment.java,getAppDataSizeForUser,Yes, because it interacts with the `StorageStatsManager` and accesses application data, which typically requires permissions related to storage access.
/com/android/packageinstaller/handheld/UninstallAlertDialogFragment.java,onCreateDialog,Yes, this method may require permissions related to accessing app information or managing users, specifically possibly needing permission to interact with the package manager and user profiles.
/com/android/packageinstaller/wear/WearPackageInstallerService.java,handleMessage,Yes, because the method involves installing and uninstalling packages, which typically requires specific permissions in Android (e.g., INSTALL_PACKAGES and DELETE_PACKAGES).
/com/android/packageinstaller/wear/WearPackageInstallerService.java,installPackage,Yes, this method likely requires permissions because it deals with installing packages, which typically requires specific permissions (like `REQUEST_INSTALL_PACKAGES` or similar) in Android.
/com/android/packageinstaller/wear/WearPackageInstallerService.java,uninstallPackage,Yes, this method requires permissions because it involves uninstalling a package, which typically requires specific permissions such as `REQUEST_DELETE_PACKAGES` in Android.
/com/android/packageinstaller/wear/WearPackageInstallerService.java,checkPermissions,Yes, the method involves checking permissions related to packages, which typically requires explicit permissions in an Android environment.
/com/android/packageinstaller/wear/WearPackageInstallerService.java,doesWearHaveUngrantedPerms,Yes, because the method interacts with permissions data, which typically requires permissions to access and manipulate.
/com/android/packageinstaller/wear/WearPackageInstallerService.java,getLock,Yes, this method requires permissions. Specifically, using `PowerManager` to acquire a `WakeLock` generally requires the `WAKE_LOCK` permission in the Android manifest.
/com/android/packageinstaller/wear/WearPackageInstallerService.java,buildNotification,Yes, it requires permissions because it involves creating a notification, which typically requires the `POST_NOTIFICATIONS` permission in Android 13 and above.
/com/android/packageinstaller/wear/WearPackageInstallerService.java,getLabelAndUpdateNotification,Yes, this method likely requires permissions to display notifications to the user, typically needing `android.permission.ACCESS_NOTIFICATION_POLICY` or similar permissions based on the context.
/com/android/packageinstaller/wear/PackageInstallerImpl.java,install,Yes, this method likely requires permissions related to package installation, which is a sensitive operation in Android.
/com/android/packageinstaller/wear/PackageInstallerImpl.java,innerCreateSession,Yes, this method likely requires permissions related to package installation or management, as it involves session creation for package installation, which typically needs specific permissions in Android (like `INSTALL_PACKAGES`).
/com/android/packageinstaller/wear/PackageInstallerImpl.java,getCommitCallback,Yes, the method likely requires permissions related to broadcasting intents and package management, as it interacts with `BroadcastReceiver` and session management for installation.
/com/android/packageinstaller/wear/PackageInstallerImpl.java,handleCommitCallback,Yes, this method likely requires permissions related to package installation or access to package information.
/com/android/packageinstaller/wear/WearPackageUtil.java,getIconFile,Yes, the method requires permissions to access the file system to create or modify directories/files.
/com/android/packageinstaller/wear/WearPackageUtil.java,getFileFromFd,Yes, this method likely requires permissions because it deals with file handling, which typically necessitates storage-related permissions in Android, such as reading from or writing to external storage.
/com/android/packageinstaller/wear/InstallTask.java,execute,Yes, this method requires permissions because it potentially interacts with file I/O operations, which generally require storage permissions in Android.
/com/android/bluetoothmidiservice/BluetoothMidiService.java,addBluetoothDevice,Yes, this method likely requires permissions because it involves adding a Bluetooth device, which typically requires Bluetooth-related permissions in Android, such as `BLUETOOTH` and possibly `BLUETOOTH_ADMIN`.
/com/android/bluetoothmidiservice/BluetoothMidiDevice.java,onConnectionStateChange,Yes, this method requires permissions because it deals with Bluetooth GATT operations, which typically require specific Bluetooth permissions in Android (such as `BLUETOOTH` and `BLUETOOTH_ADMIN`).
/com/android/bluetoothmidiservice/BluetoothMidiDevice.java,onServicesDiscovered,Yes, this method requires permissions because it interacts with Bluetooth services and characteristics, which typically require Bluetooth permissions in Android applications.
/com/android/bluetoothmidiservice/BluetoothMidiDevice.java,onCharacteristicRead,Yes, this method likely requires permissions related to Bluetooth communication. Specifically, accessing Bluetooth characteristics often requires permissions such as `BLUETOOTH`, `BLUETOOTH_ADMIN`, and potentially `ACCESS_FINE_LOCATION` for Bluetooth scanning on newer Android versions.
/com/android/bluetoothmidiservice/BluetoothMidiDevice.java,writePacket,Yes, this method requires permissions related to Bluetooth operations, specifically for accessing Bluetooth GATT (Generic Attribute Profile) features.
/com/android/bluetoothmidiservice/BluetoothMidiDevice.java,run,Yes, this method likely requires permissions as it appears to interact with MIDI events, which may involve accessing Bluetooth or audio related features that are protected by specific permissions in Android.
/com/android/bluetoothmidiservice/BluetoothMidiDevice.java,close,Yes, the method interacts with Bluetooth devices, which typically requires Bluetooth permissions in Android (e.g., `BLUETOOTH`, `BLUETOOTH_ADMIN`).
/com/android/bluetoothmidiservice/BluetoothMidiDevice.java,openBluetoothDevice,Yes, this method likely requires permissions because it involves interacting with Bluetooth devices, which typically requires location-related permissions in Android (such as `ACCESS_FINE_LOCATION` or `ACCESS_COARSE_LOCATION`).
/com/android/ims/RcsFeatureManager.java,isAvailable,Yes, this method likely requires permissions because it queries the availability of IMS (IP Multimedia Subsystem) RCS (Rich Communication Services) capabilities, which typically involves accessing telephony services that require specific permissions in Android (e.g., READ_PHONE_STATE).
/com/android/ims/ImsUt.java,queryCallBarring,Yes, the method `queryCallBarring` likely requires permissions related to managing call barring, such as access to telephony services (`READ_PHONE_STATE` or similar), as it deals with querying call barring configurations.
/com/android/ims/ImsUt.java,queryCLIR,Yes, because this method likely interacts with telephony services, which typically require permissions such as `READ_PHONE_STATE` or similar.
/com/android/ims/ImsUt.java,updateCallBarring,Yes, this method likely requires permissions related to modifying call barring settings in the Android system.
/com/android/ims/ImsUt.java,updateCallBarring,Yes, it likely requires permissions related to modifying call barring configurations.
/com/android/ims/ImsUt.java,updateCallBarring,Yes, this method likely requires permissions because it modifies call barring settings, which generally involve sensitive aspects of device telephony.
/com/android/ims/ImsUt.java,updateCallForward,Yes, this method likely requires permissions because it modifies call forwarding settings, which involves telecommunications functionality that typically requires specific permissions in the Android Manifest, such as `CALL_PHONE` or `MODIFY_PHONE_STATE`.
/com/android/ims/ImsUt.java,updateCallWaiting,Yes, this method requires permissions because it modifies the configuration of call waiting, which is sensitive and requires user consent.
/com/android/ims/ImsUt.java,updateCLIR,Yes, this method likely requires permissions because it updates the configuration of a CLIR (Caller Line Identification Restriction) supplementary service, which typically involves modifying network settings that generally necessitate specific permissions in Android.
/com/android/ims/ImsUt.java,updateCOLP,Yes, the method interacts with a supplementary service that may require specific permissions related to telephony or networking.
/com/android/ims/ImsConfig.java,setConfig,Yes, this method likely requires permissions as it interacts with the ImsService configuration, which typically involves system-level settings that may require special permissions to modify.
/com/android/ims/ImsConfig.java,setConfig,Yes, this method likely requires permissions related to modifying ImsService configurations.
/com/android/ims/MmTelFeatureConnection.java,sendSms,Yes, sending SMS typically requires `SEND_SMS` permission in Android.
/com/android/ims/internal/ImsVideoCallProviderWrapper.java,changeCallDataUsage,Yes, this method likely requires permission to manage call data usage, which is sensitive information.
/com/android/ims/internal/ImsVideoCallProviderWrapper.java,onSetCamera,Yes, this method likely requires permissions to access the camera.
/com/android/ims/rcs/uce/UceController.java,requestCapabilities,Yes, this method may require permission to access contacts since it deals with obtaining contact capabilities.
/com/android/ims/rcs/uce/UceController.java,requestAvailability,Yes, this method likely requires permissions because it deals with retrieving contact's capabilities, which typically involves accessing sensitive user data (contacts) in Android.
/com/android/ims/rcs/uce/options/OptionsController.java,sendCapabilitiesRequest,Yes, because accessing contact capabilities typically requires permission to read contacts.
/com/android/ims/rcs/uce/eab/EabUtil.java,getContactFromEab,Yes, because it retrieves contacts from the EAB database, which generally requires READ_CONTACTS permission.
/com/android/ims/rcs/uce/eab/EabUtil.java,getCapabilityFromEab,Yes, because it accesses the EAB database, which typically requires permissions to read contacts or data.
/com/android/ims/rcs/uce/eab/EabUtil.java,removeContactFromEab,Yes, the method likely requires permissions to access and modify the EAB (Exchange Address Book) database, which typically involves managing contacts in the device's contact list.
/com/android/ims/rcs/uce/eab/EabUtil.java,getEabContactId,Yes, because it interacts with contacts data, which typically requires READ_CONTACTS permission in Android.
/com/android/ims/rcs/uce/eab/EabUtil.java,getEabCommonId,Yes, it likely requires permissions. It accesses a content resolver and queries data, which typically requires permissions in Android (e.g., READ_CONTACTS).
/com/android/ims/rcs/uce/eab/EabUtil.java,removeContactCapabilities,Yes, the method interacts with contacts data and requires permissions related to accessing and modifying contact information in the Android system.
/com/android/ims/rcs/uce/eab/EabController.java,getAvailability,Yes, because accessing contact information typically requires permissions related to reading contacts.
/com/android/ims/rcs/uce/eab/EabController.java,getAvailabilityIncludingExpired,Yes, because it retrieves contact information which may require permission to access contacts.
/com/android/ims/rcs/uce/eab/EabProvider.java,query,Yes, the method likely requires permissions to access contacts or other related data in the database.
/com/android/ims/rcs/uce/eab/EabProvider.java,insert,Yes, this method requires permissions because it interacts with a database and potentially modifies data in a content provider, which typically requires specific permissions (e.g., WRITE_EXTERNAL_STORAGE, WRITE_CONTACTS).
/com/android/ims/rcs/uce/eab/EabProvider.java,bulkInsert,Yes, the `bulkInsert` method likely requires permissions. It interacts with content URIs, which typically necessitate permissions to access or modify the underlying data.
/com/android/ims/rcs/uce/eab/EabProvider.java,delete,Yes, it requires permissions to modify data, specifically for database operations involving URIs.
/com/android/ims/rcs/uce/eab/EabProvider.java,update,Yes, this method requires permissions because it interacts with the database and may need to access sensitive user data, which typically requires permissions in Android (like WRITE or READ_EXTERNAL_STORAGE depending on context).
/com/android/ims/rcs/uce/eab/EabProvider.java,getReadableDatabase,Yes, this method requires permissions because it accesses a database, which typically requires READ permissions in Android.
/com/android/ims/rcs/uce/eab/EabControllerImpl.java,getAvailability,Yes, because accessing contact information typically requires permissions related to contacts (e.g., READ_CONTACTS).
/com/android/ims/rcs/uce/eab/EabControllerImpl.java,getAvailabilityIncludingExpired,Yes, the method interacts with contacts, which typically requires permissions like `READ_CONTACTS` in Android.
/com/android/ims/rcs/uce/eab/EabControllerImpl.java,saveCapabilities,Yes, because it interacts with contacts and requires access to the contacts database.
/com/android/ims/rcs/uce/eab/EabControllerImpl.java,cleanupOrphanedRows,Yes, because it interacts with a content provider which typically requires permissions for accessing and modifying data.
/com/android/ims/rcs/uce/eab/EabControllerImpl.java,generateEabResult,Yes, because the method interacts with a `Uri` and queries data, which typically requires permissions to access contacts or similar data in Android.
/com/android/ims/rcs/uce/eab/EabControllerImpl.java,generateEabResultIncludingExpired,Yes, this method likely requires permissions. The method interacts with URIs and queries data, which typically requires permissions such as `READ_CONTACTS` or similar to access contact data in Android.
/com/android/ims/rcs/uce/eab/EabControllerImpl.java,createNewBuilder,Yes, because it handles `Uri` and `Cursor`, which likely require permissions related to accessing contacts or databases.
/com/android/ims/rcs/uce/eab/EabControllerImpl.java,insertNewContact,Yes, the method `insertNewContact` likely requires permissions to access and modify contact data in the device's contacts database.
/com/android/ims/rcs/uce/eab/EabControllerImpl.java,deleteOldPresenceCapability,Yes, the method requires permissions because it interacts with a content resolver, which typically requires permissions to access data in other applications.
/com/android/ims/rcs/uce/eab/EabControllerImpl.java,insertNewPresenceCapability,Yes, it likely requires permissions to access and modify presence capabilities related to contacts, which typically involve accessing contacts or related data in Android.
/com/android/ims/rcs/uce/eab/EabControllerImpl.java,insertEmptyTuple,Yes, this method likely requires permissions because it interacts with the Content Provider to insert data into a database, which generally requires appropriate permissions in Android.
/com/android/ims/rcs/uce/eab/EabControllerImpl.java,insertAllTuples,Yes, this method likely requires permissions because it interacts with content providers (e.g., `getContentResolver` and `bulkInsert`), which generally need permissions to access data in Android applications.
/com/android/ims/rcs/uce/eab/EabControllerImpl.java,deleteOldOptionCapability,Yes, because it accesses the content resolver which typically requires READ_CONTACTS or WRITE_CONTACTS permissions.
/com/android/ims/rcs/uce/eab/EabControllerImpl.java,insertNewOptionCapability,Yes, because inserting data into a content provider typically requires the `WRITE_EXTERNAL_STORAGE` or appropriate permissions related to the specific content URI being accessed.
/com/android/ims/rcs/uce/eab/EabControllerImpl.java,cleanupCapabilities,Yes, this method likely requires permissions. It accesses content providers using `getContentResolver()` to delete data. Accessing these providers typically requires specific permissions defined in the AndroidManifest.xml (e.g., `READ`/`WRITE` permissions).
/com/android/ims/rcs/uce/eab/EabControllerImpl.java,getRcsCommonIdList,Yes, this method likely requires permissions because it interacts with a content provider (using `getContentResolver` and querying a URI), which generally requires permissions in Android for accessing data.
/com/android/ims/rcs/uce/eab/EabControllerImpl.java,getNonRcsCommonIdList,Yes, it requires permissions because it involves querying a content resolver, which typically necessitates certain permissions to access data from other apps or the system.
/com/android/ims/rcs/uce/eab/EabControllerImpl.java,formatNumber,Yes, the method requires permission to access the `TelephonyManager` service which may be tied to user data.
/com/android/ims/rcs/uce/eab/EabContactSyncController.java,syncContactToEabProvider,Yes, the method likely requires permissions because it interacts with the Contacts provider, which typically requires permissions to read or modify contacts data in Android.
/com/android/ims/rcs/uce/eab/EabContactSyncController.java,handleContactDeletedCase,Yes, it requires permissions. It interacts with the contacts provider to delete contacts, which requires `WRITE_CONTACTS` permission.
/com/android/ims/rcs/uce/eab/EabContactSyncController.java,handlePhoneNumberDeletedCase,Yes, because it interacts with the contact provider to delete phone numbers, which requires permissions related to contacts (e.g., `WRITE_CONTACTS`).
/com/android/ims/rcs/uce/eab/EabContactSyncController.java,handlePhoneNumberInsertedCase,Yes, because it interacts with contacts and phone numbers, which typically requires permissions such as `READ_CONTACTS` and `WRITE_CONTACTS`.
/com/android/ims/rcs/uce/eab/EabContactSyncController.java,formatNumber,Yes, the method likely requires permissions because it utilizes `TelephonyManager` to access SIM information, which generally requires the `READ_PHONE_STATE` permission in Android.
/com/android/ims/rcs/uce/eab/EabBulkCapabilityUpdater.java,setTimeAlert,Yes, this method likely requires permissions because it interacts with the `AlarmManager`, which typically requires the `SET_ALARM` permission in Android to set alarms.
/com/android/ims/rcs/uce/eab/EabBulkCapabilityUpdater.java,getBooleanCarrierConfig,Yes, this method likely requires permissions because it interacts with the carrier configuration, which typically involves accessing sensitive information that is subject to permission checks in Android.
/com/android/ims/rcs/uce/eab/EabBulkCapabilityUpdater.java,getExpiredContactList,Yes, the method involves querying the content provider using `getContentResolver().query()`, which typically requires permissions related to accessing contacts or data like `READ_CONTACTS`.
/com/android/ims/rcs/uce/eab/EabBulkCapabilityUpdater.java,registerContactProviderListener,Yes, it likely requires permissions because it interacts with the contacts provider, which typically requires appropriate permissions to access.
/com/android/ims/rcs/uce/util/UceUtils.java,isEabProvisioned,Yes, this method may require permissions because it interacts with system services and carrier configurations, which typically require specific permissions (like `READ_PHONE_STATE` or `READ_CARRIER_PHONE_APPS`) to access.
/com/android/ims/rcs/uce/util/UceUtils.java,isNumberBlocked,Yes, the method requires permissions to access blocked number information.
/com/android/ims/rcs/uce/util/UceUtils.java,getContactNumber,Yes, this method requires permissions because it accesses contact information through a URI.
/com/android/ims/rcs/uce/presence/pidfparser/PidfParserUtils.java,getTupleContact,Yes, this method likely requires permissions to access contacts.
/com/android/ims/rcs/uce/presence/publish/DeviceCapabilityInfo.java,updateImsRcsRegistered,Yes, this method likely requires permissions related to modifying or accessing network registration statuses.
/com/android/ims/rcs/uce/presence/publish/DeviceCapabilityInfo.java,updateMobileData,Yes, the method may require permissions because it modifies mobile data settings, which typically requires specific permissions related to network and data usage in Android.
/com/android/ims/rcs/uce/presence/publish/PublishUtils.java,getDeviceContactUri,Yes, this method likely requires permissions to access telephony and contacts, such as reading phone state or accessing SIM information, as it interacts with the TelephonyManager and retrieves contact URIs.
/com/android/ims/rcs/uce/presence/publish/PublishUtils.java,getContactUriFromIsim,Yes, this method likely requires permissions to access telephony-related information, such as getting the ISIM domain and IMPUs from the `TelephonyManager`.
/com/android/ims/rcs/uce/presence/publish/PublishUtils.java,getContactUriFromLine1Number,Yes, it requires permissions. Accessing contacts or phone state may require permissions such as `READ_CONTACTS` or `READ_PHONE_STATE`.
/com/android/ims/rcs/uce/presence/publish/DeviceCapabilityListener.java,initialize,Yes, the method likely requires permissions because it interacts with system services such as `ImsMmTelManager`, `ImsRcsManager`, and `ProvisioningManager`, which usually require specific permissions to operate in Android.
/com/android/ims/rcs/uce/presence/publish/DeviceCapabilityListener.java,registerReceivers,Yes, this method requires permissions because it includes references to `registerReceiver` with the `MODIFY_PHONE_STATE` permission and accesses settings through `registerContentObserver`, which typically requires specific permissions in Android.
/com/android/ims/rcs/uce/presence/publish/DeviceCapabilityListener.java,getMobileDataObserver,Yes, needs permission to access mobile data settings.
/com/android/ims/rcs/uce/request/UceRequestManager.java,getAvailabilityFromCache,Yes, the method takes a `Uri` parameter, which typically requires permission to access the content at that URI, depending on its source (e.g., file, contact, etc.).
/com/android/gallery3d/common/BitmapUtils.java,createVideoThumbnail,Yes, the method `createVideoThumbnail` requires permission to access files, as it deals with retrieving video data from a file path specified by `filePath`. This typically requires read access to external storage in Android.
/com/android/gallery3d/exif/ExifInterface.java,readExif,Yes, this method requires permissions to read files from storage.
/com/android/gallery3d/exif/ExifInterface.java,writeExif,Yes, the method `writeExif` requires permissions to write to storage.
/com/android/gallery3d/exif/ExifInterface.java,writeExif,Yes, because it involves writing a jpeg image to a file, which requires file write permissions.
/com/android/gallery3d/exif/ExifInterface.java,writeExif,Yes, writing to a file in Android requires the appropriate file access permissions.
/com/android/gallery3d/exif/ExifInterface.java,getExifWriterStream,Yes, this method requires permissions because it writes to a file, which typically needs storage permissions in Android.
/com/android/gallery3d/exif/ExifInterface.java,rewriteExif,Yes, it requires permissions to access and modify files on the device, specifically for reading and writing files.
/com/android/gallery3d/exif/ExifInterface.java,forceRewriteExif,Yes, the method likely requires permissions to access and modify files on the device's storage.
/com/android/gallery3d/exif/ExifInterface.java,forceRewriteExif,Yes, because it deals with file operations which typically require storage permissions.
/com/android/gallery3d/exif/ExifInterface.java,addGpsTags,Yes, this method likely requires permissions because it deals with GPS tags, which typically necessitate location-related permissions in Android.
/com/android/vcard/VCardComposer.java,initWithRawContactsEntityUri,Yes, because it queries the Contacts content provider and requires permission to read contacts.
/com/android/vcard/VCardComposer.java,init,Yes, the method likely requires permissions to access contacts data.
/com/android/vcard/VCardComposer.java,init,Yes, because accessing a `Uri` may require permissions to read or write data, depending on the content the `Uri` points to.
/com/android/vcard/VCardComposer.java,init,Yes, because it interacts with contacts data, which typically requires permission to access contacts in Android.
/com/android/vcard/VCardComposer.java,init,Yes, because it accesses contacts data, which requires permissions such as READ_CONTACTS.
/com/android/vcard/VCardComposer.java,getRawContactEntitlesInfo,Yes, this method likely requires permissions to access contact information.
/com/android/vcard/VCardComposer.java,createOneEntryInternal,Yes, this method likely requires permissions because it involves accessing contact data, which typically requires user permissions (e.g., `READ_CONTACTS` or `WRITE_CONTACTS`).
/com/android/vcard/VCardComposer.java,buildVCard,Yes, this method requires permissions. It deals with contact information, which typically requires permission to access user contacts in Android.
/com/android/vcard/VCardEntryCommitter.java,onEntryCreated,Yes, this method likely requires permissions because it interacts with a `ContentResolver`, which typically requires permissions for data operations in Android (e.g., reading/writing contacts or other content).
/com/android/vcard/VCardEntryCommitter.java,pushIntoContentResolver,Yes, because the method interacts with a ContentResolver, which typically requires permissions to access shared data (e.g., READ_CONTACTS, WRITE_CONTACTS).
/com/android/carrierdefaultapp/SlicePurchaseActivity.java,setupWebView,Yes, because the method involves using a `WebView`, which typically requires permissions for internet access.
/com/android/carrierdefaultapp/ProvisionObserver.java,onStartJob,Yes, because the method uses `ConnectivityManager` which may require permissions like `ACCESS_NETWORK_STATE` or `INTERNET`.
/com/android/carrierdefaultapp/ProvisionObserver.java,isProvisioned,Yes, this method requires permissions to access the device's settings, specifically to read the global settings.
/com/android/carrierdefaultapp/ProvisionObserver.java,isDeferredForProvision,Yes, because it interacts with system services and may require permissions related to job scheduling and accessing settings.
/com/android/carrierdefaultapp/CarrierActionUtils.java,applyCarrierAction,Yes, the method likely requires permissions to interact with carrier actions, such as enabling/disabling radio or network properties.
/com/android/carrierdefaultapp/CarrierActionUtils.java,onRegisterDefaultNetworkAvail,Yes, the method interacts with `TelephonyManager`, which typically requires permissions related to accessing network state or phone state, such as `ACCESS_NETWORK_STATE` or `READ_PHONE_STATE`.
/com/android/carrierdefaultapp/CarrierActionUtils.java,onEnableRadio,Yes, this method likely requires permissions to access the `TelephonyManager` for operations related to enabling radio functionality, which typically involves accessing phone state and potentially modifying system settings.
/com/android/carrierdefaultapp/CarrierActionUtils.java,getNotification,Yes, it likely requires permissions. The method uses `TelephonyManager`, which generally requires permissions related to phone state (like `READ_PHONE_STATE`) to access information about the telephony services.
/com/android/carrierdefaultapp/SlicePurchaseBroadcastReceiver.java,onDisplayPerformanceBoostNotification,Yes, this method requires permissions. It interacts with notifications, which generally requires the `POST_NOTIFICATIONS` permission on Android 13 and higher.
/com/android/carrierdefaultapp/CaptivePortalLoginActivity.java,testForCaptivePortal,Yes, this method likely requires permissions because it involves network operations (specifically, making HTTP connections) which generally require `INTERNET` permission in Android.
/com/android/carrierdefaultapp/CaptivePortalLoginActivity.java,run,Yes, this method likely requires permissions because it initiates network operations by using `HttpURLConnection`, which typically requires Internet permissions in the Android manifest.
/com/android/carrierdefaultapp/CaptivePortalLoginActivity.java,requestNetworkForCaptivePortal,Yes, this method likely requires internet permissions to access and manage network capabilities.
/com/android/carrierdefaultapp/CaptivePortalLoginActivity.java,shouldOverrideUrlLoading,Yes, this method requires permissions because it involves launching an intent with the `ACTION_DIAL` action, which can require permission to handle phone dialing.
/com/android/commands/requestsync/RequestSync.java,invoke,Yes, this method likely requires permissions because it involves synchronization operations that typically require permission to access or modify data in the user's account or device settings.
/com/android/commands/requestsync/RequestSync.java,invoke,Yes, it likely requires permissions because it involves `ContentResolver.addPeriodicSync`, which typically needs permissions related to content providers (e.g., `android.permission.WRITE_SYNC_SETTINGS`).
/com/android/commands/requestsync/RequestSync.java,invoke,Yes, because it involves a method (`removePeriodicSync`) that likely interacts with content providers, which may require permissions to access certain data or perform specific operations.
/com/android/commands/uiautomator/EventsCommand.java,run,Yes, this method likely requires permissions because it involves UI automation, which typically needs specific permissions on Android devices to interact with UI components and accessibility features.
/com/android/commands/uiautomator/DumpCommand.java,run,Yes, this method requires permissions. It interacts with UI automation and possibly touches system resources, which typically necessitates permissions for accessing UI elements and services.
/com/android/commands/sm/Sm.java,runUnmount,Yes, because unmounting a volume typically requires storage permissions.
/com/android/commands/am/Am.java,onOpenFile,Yes, this method requires permissions because it deals with file operations, which typically require storage permissions in Android.
/com/android/commands/am/Am.java,runAmCmd,Yes, it likely requires permissions to execute system commands or access certain features of the Android system, such as Activity Manager, which typically involves protected permissions.
/com/android/commands/am/Instrument.java,readLogcat,Yes, this method likely requires permissions. It interacts with the logcat, which typically requires specific permissions to access system logs on Android devices.
/com/android/commands/content/Content.java,execute,Yes, the method likely requires permissions to access a content provider and perform related actions involving the ActivityManager and binder IPC.
/com/android/commands/content/Content.java,onExecute,Yes, the method involves file operations which typically require permissions related to reading or writing to storage (e.g., `WRITE_EXTERNAL_STORAGE` or `READ_EXTERNAL_STORAGE`).
/com/android/commands/svc/UsbCommand.java,run,Yes, it requires permissions to access USB services and manage USB ports in the Android environment.
/com/android/commands/svc/PowerCommand.java,longHelp,Yes, this method involves operations related to system power management (e.g., rebooting, shutting down), which typically require specific permissions such as `REBOOT` or `SHUTDOWN`.
/com/android/commands/svc/PowerCommand.java,run,Yes, because the method interacts with system services related to power management (such as rebooting, shutting down, and setting stay-on settings), which typically require specific permissions in Android.
/com/android/commands/svc/NfcCommand.java,run,Yes, requires NFC permissions to enable or disable NFC operations.
/com/android/commands/uinput/Device.java,injectEvent,Yes, it likely requires permission because it deals with injecting input events, which usually requires special permissions for security reasons in Android.
/com/android/commands/telecom/Telecom.java,onRun,Yes, this method likely requires permissions because it accesses Telecom Manager, Telephony Service, and User Manager, which typically require specific permissions (like `READ_PHONE_STATE` or `BIND_TELECOM_SERVICE`) in Android applications.
/com/android/commands/telecom/Telecom.java,runRegisterSimPhoneAccount,Yes, it likely requires permissions because it involves registering a phone account, which typically requires permissions related to managing phone accounts and potentially accessing telephony services.
/com/android/commands/telecom/Telecom.java,runSetUserSelectedOutgoingPhoneAccount,Yes, setting a user-selected outgoing phone account typically requires permissions related to managing phone calls, such as `android.permission.SET_OUTGOING_CALLS`.
/com/android/commands/telecom/Telecom.java,runSetDefaultDialer,Yes, because setting a default dialer requires permissions related to managing phone calls.
/com/android/commands/telecom/Telecom.java,runSetSimCount,Yes, the method likely requires permissions as it references setting the SIM count and may involve modifications to telephony settings, which typically require appropriate permissions.
/com/android/commands/appwidget/AppWidget.java,run,Yes, the method interacts with the AppWidgetService which may require specific permissions to bind app widgets.
/com/android/commands/bu/AdbBackupTest.java,testRun_whenUserNotSpecified_callsAdbBackupAsSystemUser,Yes, this method likely requires permissions related to backup services on the device, as it interacts with ADB backup functionality and system user operations.
/com/android/commands/bu/Backup.java,run,Yes, the method likely requires permissions because it interacts with the Backup Manager, which usually requires specific permissions to perform backup and restore operations.
/com/android/commands/bu/Backup.java,doBackup,Yes, this method likely requires permissions related to backup operations, such as accessing storage or performing backups, which are sensitive actions in Android.
/com/android/wifitrackerlib/OsuWifiEntry.java,getMacAddress,Yes, because accessing the MAC address typically requires permissions related to network access or device identifiers in Android.
/com/android/wifitrackerlib/OsuWifiEntry.java,canConnect,Yes, the method likely requires permissions related to Wi-Fi status or connectivity, as it checks if the device can connect to a Wi-Fi network.
/com/android/wifitrackerlib/OsuWifiEntry.java,updateScanResultInfo,Yes, this method likely requires permissions related to network access (like `ACCESS_WIFI_STATE`), as it deals with Wi-Fi scan results and potentially retrieving connection states.
/com/android/wifitrackerlib/HotspotNetworkDetailsTracker.java,updateStartInfo,Yes, this method likely requires permissions because it accesses network-related information and capabilities, which typically require ACCESS_NETWORK_STATE and/or ACCESS_WIFI_STATE permissions in Android.
/com/android/wifitrackerlib/WifiEntry.java,getMacAddress,Yes, it requires permissions to access the MAC address for privacy reasons.
/com/android/wifitrackerlib/WifiEntry.java,setMeteredChoice,Yes, it likely requires permissions to modify network settings.
/com/android/wifitrackerlib/WifiEntry.java,getWifiInfoDescription,Yes, the method likely requires permissions because it involves accessing Wi-Fi information, which typically necessitates permissions such as `ACCESS_WIFI_STATE` in Android.
/com/android/wifitrackerlib/MergedCarrierEntry.java,getSsid,Yes, access to Wi-Fi information requires `ACCESS_WIFI_STATE` permission.
/com/android/wifitrackerlib/MergedCarrierEntry.java,getMacAddress,Yes, because getting the MAC address may require `ACCESS_WIFI_STATE` permission in Android.
/com/android/wifitrackerlib/MergedCarrierEntry.java,connect,Yes, this method likely requires permissions because it involves connecting to a Wi-Fi network, which typically necessitates `ACCESS_WIFI_STATE` and `CHANGE_WIFI_STATE` permissions in Android.
/com/android/wifitrackerlib/MergedCarrierEntry.java,setEnabled,Yes, it likely requires permissions to enable/disable network services.
/com/android/wifitrackerlib/StandardNetworkDetailsTracker.java,conditionallyUpdateScanResults,Yes, because it interacts with Wi-Fi state and scan results, requiring internet or Wi-Fi permissions.
/com/android/wifitrackerlib/StandardNetworkDetailsTracker.java,conditionallyUpdateConfig,Yes, because it interacts with WiFi configurations which typically require certain permissions in Android, such as `CHANGE_WIFI_STATE` or `ACCESS_WIFI_STATE`.
/com/android/wifitrackerlib/PasspointNetworkDetailsTracker.java,updateStartInfo,Yes, this method likely requires permissions because it interacts with network capabilities and link properties, which typically require network-related permissions in Android (e.g., ACCESS_NETWORK_STATE, ACCESS_WIFI_STATE).
/com/android/wifitrackerlib/PasspointNetworkDetailsTracker.java,conditionallyUpdateScanResults,Yes, this method likely requires permissions because it interacts with Wi-Fi state and scan results, which generally require location permissions in Android (ACCESS_FINE_LOCATION or ACCESS_COARSE_LOCATION).
/com/android/wifitrackerlib/SavedNetworkTracker.java,getSavedWifiEntries,Yes, this method likely requires permissions related to accessing Wi-Fi networks, as it deals with saved network entries.
/com/android/wifitrackerlib/SavedNetworkTracker.java,getSubscriptionWifiEntries,Yes, because accessing Wi-Fi entries typically requires location permissions in Android.
/com/android/wifitrackerlib/SavedNetworkTracker.java,getCertificateRequesterNames,Yes, because it accesses Wi-Fi configurations which require the appropriate network permissions.
/com/android/wifitrackerlib/SavedNetworkTracker.java,getAllWifiEntries,Yes, this method likely requires permissions related to accessing Wi-Fi entries, which may include permissions like `ACCESS_WIFI_STATE` or similar in Android.
/com/android/wifitrackerlib/SavedNetworkTracker.java,handleOnStart,Yes, because it interacts with network configurations and capabilities, which typically requires permissions related to network access (e.g., ACCESS_NETWORK_STATE, CHANGE_NETWORK_STATE).
/com/android/wifitrackerlib/SavedNetworkTracker.java,handleScanResultsAvailableAction,Yes, this method likely requires permissions. It handles Wi-Fi scanning results, which typically necessitates location permissions due to the nature of Wi-Fi scanning in Android.
/com/android/wifitrackerlib/SavedNetworkTracker.java,handleConfiguredNetworksChangedAction,Yes, this method likely requires permissions related to managing Wi-Fi configurations, such as `ACCESS_NETWORK_STATE` or `CHANGE_WIFI_STATE`, to handle network changes effectively.
/com/android/wifitrackerlib/SavedNetworkTracker.java,handleNetworkStateChangedAction,Yes, because it handles network state changes which typically requires access to network state information.
/com/android/wifitrackerlib/ScanResultUpdater.java,getScanResults,Yes, because retrieving scan results typically requires location permissions on Android devices.
/com/android/wifitrackerlib/ScanResultUpdater.java,getScanResults,Yes, this method likely requires permissions because it deals with scan results which may involve accessing Wi-Fi or network information.
/com/android/wifitrackerlib/PasspointWifiEntry.java,getSsid,Yes, because accessing the SSID typically requires the `ACCESS_WIFI_STATE` permission in Android.
/com/android/wifitrackerlib/PasspointWifiEntry.java,getAllUtf8Ssids,Yes, this method likely requires permissions because it deals with retrieving scan results, which typically involves accessing the device's Wi-Fi data or network state.
/com/android/wifitrackerlib/PasspointWifiEntry.java,getMacAddress,Yes, this method requires permissions because it accesses the device's MAC address, which typically requires permissions related to network state (e.g., ACCESS_WIFI_STATE) in Android.
/com/android/wifitrackerlib/PasspointWifiEntry.java,connect,Yes, the method likely requires permissions related to Wi-Fi access and connection management in Android.
/com/android/wifitrackerlib/PasspointWifiEntry.java,disconnect,Yes, the method likely requires permissions related to Wi-Fi operations, such as disconnecting from a network.
/com/android/wifitrackerlib/PasspointWifiEntry.java,getStandardString,Yes, it likely requires permissions related to accessing Wi-Fi information, such as `ACCESS_WIFI_STATE`.
/com/android/wifitrackerlib/PasspointWifiEntry.java,updateScanResultInfo,Yes, it likely requires permissions related to accessing Wi-Fi configurations and scanning.
/com/android/modules/utils/BasicShellCommandHandler.java,exec,Yes, this method requires permissions. It interacts with file descriptors and executing commands, which typically necessitates permissions related to file access and possibly executing commands in Android.
/com/android/modules/utils/BasicShellCommandHandler.java,onCommand,Yes, because it mentions that no permission checking has been done, indicating that security verification is required for executing commands.
/com/android/photos/BitmapRegionTileSource.java,regenerateInputStream,Yes, the method requires permission to access the content resolver, which may involve reading data from external storage or other protected resources.
/com/android/photos/BitmapRegionTileSource.java,readExif,Yes, this method likely requires permissions to access the EXIF data from an image file, as it involves reading external storage or files.
/com/android/wallpaperbackup/WallpaperBackupAgentTest.java,mockRestoredLiveWallpaperFile,Yes, because the method involves file operations which typically require storage permissions.
/com/android/wallpaperbackup/WallpaperBackupAgent.java,onFullBackup,Yes, this method likely requires permissions because it involves backing up data, which typically requires storage-related permissions in Android.
/com/android/wallpaperbackup/WallpaperBackupAgent.java,backupWallpaperInfoFile,Yes, because it interacts with wallpaper data which typically requires permissions like `READ_EXTERNAL_STORAGE` or `WRITE_EXTERNAL_STORAGE`.
/com/android/wallpaperbackup/WallpaperBackupAgent.java,backupSystemWallpaperFile,Yes, this method likely requires permissions, as it involves accessing and manipulating wallpaper data, which usually requires specific permissions in Android.
/com/android/wallpaperbackup/WallpaperBackupAgent.java,backupFile,Yes, this method likely requires permissions to access and manage backup files, which usually involves storage permissions in Android.
/com/android/wallpaperbackup/WallpaperBackupAgent.java,updateWallpaperComponent,Yes, this method requires permissions because it involves updating the wallpaper component, which typically requires `SET_WALLPAPER` permission in Android.
/com/android/wallpaperbackup/WallpaperBackupAgent.java,getWallpaperPackageMonitor,Yes, this method likely requires permissions because it deals with setting and applying live wallpapers, which typically necessitates specific user permissions related to wallpaper management (e.g., `SET_WALLPAPER` permission).
/com/android/wallpaperbackup/WallpaperBackupAgent.java,onPackageAdded,Yes, this method may require permissions related to package management and wallpaper management in Android, as it handles package additions and modifies wallpaper settings.
/com/android/vpndialogs/AlwaysOnDisconnectedDialog.java,onCreate,Yes, because it interacts with system services like VpnManager, which requires specific permissions to access.
/com/android/vpndialogs/ConfirmDialog.java,onClick,Yes, this method likely requires permissions related to managing VPN configurations. Specifically, `prepareVpn` and `setVpnPackageAuthorization` suggest changes to VPN settings, which typically require appropriate permissions in Android.
/com/android/future/usb/UsbManager.java,getAccessory,Yes, this method requires permissions because accessing USB accessories typically requires the `android.permission.USB_PERMISSION` to ensure that your app can communicate with USB devices securely.
/com/android/future/usb/UsbManager.java,getAccessoryList,Yes, this method requires permissions because accessing USB accessories typically requires specific permissions to interact with hardware devices.
/com/android/future/usb/UsbManager.java,openAccessory,Yes, because it accesses USB accessories, which typically require permissions like `android.permission.USB_PERMISSION`.
/com/android/future/usb/UsbManager.java,hasPermission,Yes, this method checks for permissions related to accessing a USB accessory, indicating that it requires certain permissions to be granted.
/com/android/future/usb/UsbManager.java,requestPermission,Yes, because it requests temporary permission to access a device, which typically requires user consent.
/com/android/testutils/DumpTestUtils.java,dumpService,Yes, because it appears to require the "DUMP" permission from `android.Manifest.permission`.
/com/android/testutils/DumpTestUtils.java,dumpService,Yes, the method requires the DUMP permission to access service dumping functionality.
/com/android/testutils/DumpTestUtils.java,dumpServiceWithShellPermission,Yes, the method requires permissions because it adopts the DUMP permission via `adoptShellPermissionIdentity`.
/com/android/testutils/async/FakeOsAccess.java,read,Yes, this method requires permissions because it involves reading from a file descriptor, which typically necessitates file access permissions in Android.
/com/android/testutils/async/FakeOsAccess.java,write,Yes, this method requires permissions. It operates on a `FileDescriptor`, which typically requires file access permissions in Android.
/com/android/smspush/WapPushManager.java,updatePackage,Yes, likely requires permissions. The method deals with updating a package, which generally requires permissions related to app modifications or database access in Android context.
/com/android/smspush/WapPushManager.java,deletePackage,Yes, this method likely requires permissions because it involves database operations that may affect user data or the application's state, which typically requires appropriate permissions in Android.
/com/android/smspush/WapPushManager.java,migrateWapPushManDBIfNeeded,Yes, this method requires permissions because it involves accessing and migrating database information, which typically requires specific storage permissions in Android.
/com/android/systemui/SlicePermissionActivity.java,onCreate,Yes, because it involves getting the URI and resolving a content provider, which typically requires `READ_EXTERNAL_STORAGE` or `READ_CONTENT_PROVIDER` permissions in Android.
/com/android/systemui/SlicePermissionActivity.java,onClick,Yes, because it involves granting permissions and requires user consent or interaction.
/com/android/systemui/SliceBroadcastRelayHandler.java,start,Yes, this method requires permissions because it involves registering a broadcast receiver, which requires appropriate permissions in Android.
/com/android/systemui/SliceBroadcastRelayHandler.java,handleIntent,Yes, the method interacts with components that may require permissions, such as handling broadcasts and accessing URIs, which often need specific permissions in Android.
/com/android/systemui/SliceBroadcastRelayHandler.java,register,Yes, because registering a broadcast receiver typically requires the `RECEIVE_BOOT_COMPLETED` or similar permissions depending on the intent filters involved.
/com/android/systemui/SliceBroadcastRelayHandler.java,onReceive,Yes, because the method involves broadcasting intents, which may require permissions depending on the actions being performed.
/com/android/systemui/SystemUIApplication.java,onReceive,Yes, this method likely requires permissions because it handles the "BOOT_COMPLETED" broadcast, which typically requires the "android.permission.RECEIVE_BOOT_COMPLETED" permission.
/com/android/systemui/ForegroundServicesUserState.java,addOp,Yes, this method likely requires permissions because it appears to interact with app operations (mAppOps), which may involve checking or modifying application permissions or operations that are sensitive to user privacy.
/com/android/systemui/ForegroundServicesUserState.java,removeOp,Yes, this method likely requires permissions because it interacts with app operations, which typically necessitate specific permissions in Android to ensure security and privacy.
/com/android/systemui/ForegroundServicesUserState.java,removeNotification,Yes, this method likely requires permissions to modify or remove notifications, which typically necessitates user consent or specific app permissions in the Android environment.
/com/android/systemui/LatencyTester.java,registerForBroadcasts,Yes, it requires permissions because it involves broadcasting and receiving intents, which typically necessitates permissions, such as those related to handling specific actions.
/com/android/systemui/LatencyTester.java,onReceive,Yes, this method interacts with biometric features, which typically require permissions for accessing fingerprint or face recognition capabilities in Android.
/com/android/systemui/ForegroundServiceController.java,getAppOps,Yes, this method likely requires permissions related to accessing app operations for a specified user and package.
/com/android/systemui/ForegroundServiceController.java,onAppOpChanged,Yes, this method likely requires permissions related to app operations and user data access, as it is modifying app ops based on the user and package name.
/com/android/systemui/SysuiRestartReceiver.java,onReceive,Yes, because it interacts with system-level components like NotificationManager and may require permissions related to process management or notifications.
/com/android/systemui/ForegroundServiceNotificationListener.java,updateUserState,Yes, because it interacts with foreground services and notifications, which typically require specific permissions in Android.
/com/android/systemui/ForegroundServicesDialog.java,onClick,Yes, this method involves launching an activity to display application details settings, which may require permissions related to accessing application settings or launching activities.
/com/android/systemui/power/PowerUI.java,start,Yes, this method requires permissions because it interacts with system settings and observes device state changes, which typically requires appropriate permissions for accessing sensitive data or system resources.
/com/android/systemui/power/PowerUI.java,init,Yes, this method likely requires permissions because it involves registering a broadcast receiver, which typically requires specific permissions related to the actions being listened to, such as battery status changes.
/com/android/systemui/power/PowerUI.java,doSkinThermalEventListenerRegistration,Yes, this method likely requires permissions related to accessing thermal services and managing settings, as it interacts with `IThermalService` and modifies global settings related to temperature warnings.
/com/android/systemui/power/PowerUI.java,doUsbThermalEventListenerRegistration,Yes, this method likely requires permissions because it interacts with the USB thermal service, which may need specific permissions related to accessing hardware features or services in Android.
/com/android/systemui/power/PowerUI.java,showWarnOnThermalShutdown,Yes, because it accesses system settings (BOOT_COUNT) and the content resolver, which typically require permissions.
/com/android/systemui/power/PowerNotificationWarnings.java,showAutoSaverSuggestionNotification,Yes, this method likely requires permission to send notifications, specifically the `POST_NOTIFICATIONS` permission in Android, to properly display the suggestion notification.
/com/android/systemui/power/PowerNotificationWarnings.java,pendingBroadcast,Yes, this method requires permissions because it creates a `PendingIntent` for a broadcast, which typically requires permission to send broadcasts.
/com/android/systemui/power/PowerNotificationWarnings.java,settings,Yes, it likely requires permissions as it involves launching an `Intent`, which usually needs appropriate permissions depending on the action being invoked (e.g., accessing system settings might require specific permissions).
/com/android/systemui/power/PowerNotificationWarnings.java,onClick,Yes, this method requires permissions because it starts an activity using an `Intent`, which may involve permissions depending on what the activity does (e.g., accessing the internet, reading contacts, etc.).
/com/android/systemui/power/PowerNotificationWarnings.java,onClick,Yes, the method involves starting an activity (using `startActivity`), which typically requires permissions depending on what the activity does, such as accessing the internet or other resources.
/com/android/systemui/power/PowerNotificationWarnings.java,onClick,Yes, this method involves starting an activity with an Intent, which typically requires the permission to start activities or access the system dialogs, depending on what the Intent does.
/com/android/systemui/power/PowerNotificationWarnings.java,startBatterySaverSchedulePage,Yes, because starting a battery saver schedule page may require permissions related to modifying system settings or accessing device settings.
/com/android/systemui/power/PowerNotificationWarnings.java,init,Yes, because it registers a receiver which typically requires permissions related to the actions being registered (e.g., DEVICE_POWER).
/com/android/systemui/wifi/WifiDebuggingActivity.java,onCreate,Yes, this method likely requires permissions because it interacts with system services like `WifiManager`, which usually requires specific permissions related to Wi-Fi access in Android (e.g., `ACCESS_WIFI_STATE`, `CHANGE_WIFI_STATE`).
/com/android/systemui/wifi/WifiDebuggingActivity.java,onReceive,Yes, this method likely requires permissions because it handles WiFi state changes and checks network connectivity, which typically require `ACCESS_WIFI_STATE` and `CHANGE_WIFI_STATE` permissions in Android.
/com/android/systemui/wifi/WifiDebuggingActivity.java,onStart,Yes, this method requires permissions because it registers a broadcast receiver for Wi-Fi state changes, which typically requires `ACCESS_WIFI_STATE` and/or `CHANGE_WIFI_STATE` permissions in the Android manifest.
/com/android/systemui/wifi/WifiDebuggingActivity.java,onClick,Yes, because it interacts with the ADB service which typically requires permissions.
/com/android/systemui/wifi/WifiDebuggingSecondaryUserActivity.java,onReceive,Yes, because it interacts with Wi-Fi state and network information, which requires permissions such as `ACCESS_WIFI_STATE` and possibly `ACCESS_NETWORK_STATE`.
/com/android/systemui/wifi/WifiDebuggingSecondaryUserActivity.java,onStart,Yes, because the method appears to register a broadcast receiver which typically requires permissions related to network state changes.
/com/android/systemui/settings/brightness/BrightnessController.java,startObserving,Yes, this method likely requires permissions related to accessing system settings or content providers (e.g., modifying display brightness).
/com/android/systemui/settings/brightness/BrightnessController.java,run,Yes, this method likely requires permissions. It appears to access system settings, specifically related to screen brightness, which typically requires `WRITE_SETTINGS` or similar permissions in Android.
/com/android/systemui/settings/brightness/BrightnessController.java,run,Yes, this method likely requires permissions because it interacts with user restrictions and system control features that typically need elevated privileges in Android.
/com/android/systemui/biometrics/UdfpsController.java,onAodInterrupt,Yes, this method likely requires permissions related to fingerprint scanning, as it interacts with the fingerprint sensor.
/com/android/systemui/biometrics/BiometricNotificationDialogFactory.java,createReenrollDialog,Yes, this method likely requires permissions related to biometric functionality, as it involves handling biometric data (e.g., fingerprints, facial recognition) which generally requires permissions such as `USE_BIOMETRIC` or `USE_FINGERPRINT`.
/com/android/systemui/biometrics/BiometricNotificationDialogFactory.java,onReenrollDialogConfirm,Yes, this method likely requires permissions related to biometric enrollment (e.g., fingerprint or facial recognition) in an Android app.
/com/android/systemui/biometrics/BiometricNotificationDialogFactory.java,reenrollFingerprint,Yes, this method requires permissions because it involves fingerprint management and enrollment, which typically requires `USE_FINGERPRINT` or similar permissions in an Android app.
/com/android/systemui/biometrics/BiometricNotificationDialogFactory.java,onRemovalSucceeded,Yes, this method likely requires permissions to handle fingerprint enrollment, which involves sensitive user data.
/com/android/systemui/biometrics/BiometricNotificationBroadcastReceiver.java,onReceive,Yes, this method likely requires permissions related to biometric authentication, as it appears to handle biometric reenrollment actions which typically need specific permissions (like USE_BIOMETRIC).
/com/android/systemui/biometrics/BiometricNotificationService.java,start,Yes, this method requires permissions because it registers a broadcast receiver which typically requires the `RECEIVE_BOOT_COMPLETED` or related permissions based on the context of usage.
/com/android/systemui/biometrics/BiometricNotificationService.java,showNotification,Yes, this method requires permissions because it involves showing notifications, which typically requires the `POST_NOTIFICATIONS` permission in Android.
/com/android/systemui/tuner/PowerNotificationControlsFragment.java,isEnabled,Yes, because it accesses a setting from `Settings.Secure`, which may require permissions to read secure settings in Android.
/com/android/systemui/tuner/TunerServiceImpl.java,setValue,Yes, this method likely requires permissions because it interacts with `Settings.Secure`, which typically requires permissions to read or write secure settings in Android.
/com/android/systemui/tuner/TunerServiceImpl.java,getValue,Yes, the method interacts with `Settings.Secure`, which typically requires permission to access certain secure settings in Android.
/com/android/systemui/tuner/TunerServiceImpl.java,getValue,Yes, this method likely requires permissions to access settings, which may involve accessing user data via `mContentResolver`.
/com/android/systemui/tuner/TunerServiceImpl.java,setValue,Yes, this method likely requires permissions to modify system settings, specifically for accessing and changing secure settings represented by `Settings.Secure`.
/com/android/systemui/tuner/TunerServiceImpl.java,addTunable,Yes, this method interacts with `Settings.Secure` and uses a `ContentResolver`, which typically requires permissions related to accessing secure settings and content providers.
/com/android/systemui/tuner/TunerServiceImpl.java,reregisterAll,Yes, this method likely requires permissions. It involves a `ContentResolver` and registers a content observer, which typically requires permissions to access specific content providers.
/com/android/systemui/tuner/TunerServiceImpl.java,clearAllFromUser,Yes, it requires permissions to access `ContentResolver` and modify settings, likely needing `WRITE_SETTINGS` or similar permissions.
/com/android/systemui/tuner/TunerServiceImpl.java,setTunerEnabled,Yes, because it interacts with the PackageManager to enable or disable a component, which typically requires permissions related to modifying system settings.
/com/android/systemui/tuner/TunerServiceImpl.java,isTunerEnabled,Yes, this method likely requires permissions related to accessing package settings or the tuner component, as it interacts with the `PackageManager`.
/com/android/systemui/tuner/PluginFragment.java,onCreate,Yes, this method likely requires permissions because it registers a broadcast receiver, which typically needs permissions to receive certain types of broadcasts in an Android application.
/com/android/systemui/tuner/PluginFragment.java,loadPrefs,Yes, this method requires permissions. It interacts with `PackageManager` and accesses preferences, which may require explicit permissions for certain actions (e.g., querying or modifying installed packages).
/com/android/systemui/tuner/LockscreenFragment.java,getActivityinfo,Yes, this method requires permissions because it interacts with the package manager and accesses activity information, which typically requires the `QUERY_ALL_PACKAGED` or `GET_PACKAGE_SIZE` permissions in Android.
/com/android/systemui/tuner/ShortcutParser.java,getShortcuts,Yes, this method likely requires permissions to access shortcuts or any related data associated with the device's settings or applications.
/com/android/systemui/tuner/ShortcutParser.java,create,Yes, this method likely requires permissions because it interacts with shortcuts and potentially other components that may require user permissions for access.
/com/android/systemui/tuner/BatteryPreference.java,persistString,Yes, the method likely requires permissions to modify system settings using `Settings.System.putInt()`, which typically requires `WRITE_SETTINGS` permission in Android.
/com/android/systemui/assist/AssistDisclosure.java,show,Yes, this method likely requires permissions because it involves adding a view to the window manager, which typically requires specific permissions such as `SYSTEM_ALERT_WINDOW` or `SYSTEM_ALERT_WINDOW` for overlays and UI elements shown over other applications.
/com/android/systemui/assist/AssistManager.java,startAssist,Yes, the method likely requires permissions because it interacts with phone state and involves various components associated with assistant services, which typically require explicit user permissions in Android (like `READ_PHONE_STATE`).
/com/android/systemui/assist/AssistManager.java,startAssistActivity,Yes, this method likely requires permissions. It interacts with the assist functionality and possibly starts an activity that could involve user data or sensitive actions, which typically require specific permissions in Android (e.g., for accessing assist services).
/com/android/systemui/assist/PhoneStateMonitor.java,getCurrentDefaultHome,Yes, this method may require permissions to access information about the default home component and activities.
/com/android/systemui/assist/PhoneStateMonitor.java,isKeyguardLocked,Yes, this method requires permissions because it accesses the `KeyguardManager`, which typically requires permission to access device security settings (e.g., `android.permission.DISABLE_KEYGUARD`).
/com/android/systemui/screenshot/TakeScreenshotService.java,handleRequest,Yes, this method requires permissions because it involves taking screenshots, which typically requires user permissions related to screen capture or storage access.
/com/android/systemui/screenshot/ActionProxyReceiver.java,onReceive,Yes, this method requires permissions because it interacts with system windows and potentially sensitive user data (screenshots).
/com/android/systemui/screenshot/ScreenshotController.java,handleScreenshot,Yes, this method likely requires permissions because it involves taking and handling screenshots, which typically requires "WRITE_EXTERNAL_STORAGE" or similar permissions in Android to save images to the device's storage.
/com/android/systemui/screenshot/ScreenshotController.java,saveScreenshotAndToast,Yes, the method likely requires permissions to save a screenshot, as it involves accessing device storage.
/com/android/systemui/screenshot/ScreenshotController.java,saveScreenshotInWorkerThread,Yes, this method likely requires permissions because it saves a screenshot to the media store, which usually requires write permissions to external storage.
/com/android/systemui/screenshot/ScrollCaptureController.java,run,Yes, this method likely requires permissions because it involves accessing system settings (like `getContentResolver` and `Settings.Secure`) and performing a scroll capture which may involve image data, requiring permissions related to storage or privacy.
/com/android/systemui/screenshot/SaveImageInBackgroundTask.java,createEditAction,Yes, because it involves handling URIs and creating intents, which typically require permissions for reading/writing data.
/com/android/systemui/screenshot/SaveImageInBackgroundTask.java,getUserHandleOfForegroundApplication,Yes, this method likely requires permissions because it interacts with user-specific information (like user handles) that typically require system-level permissions in Android for privacy and security reasons.
/com/android/systemui/screenshot/LongScreenshotActivity.java,doEdit,Yes, because it interacts with `Uri` which requires permissions related to reading or writing to external storage.
/com/android/systemui/screenshot/ScreenshotNotificationsController.java,notifyScreenshotError,Yes, this method requires permissions because it involves sending notifications, which typically requires the `POST_NOTIFICATIONS` permission in Android.
/com/android/systemui/screenshot/ImageExporter.java,exportToRawFile,Yes, it requires permissions because it writes a Bitmap to a file, which typically requires storage permissions on Android.
/com/android/systemui/screenshot/ImageExporter.java,export,Yes, because exporting images to MediaStore typically requires `WRITE_EXTERNAL_STORAGE` permission on Android.
/com/android/systemui/screenshot/ImageExporter.java,createEntry,Yes, this method likely requires permissions. It appears to interact with `MediaStore.Images`, which typically necessitates permissions such as `READ_EXTERNAL_STORAGE` or `WRITE_EXTERNAL_STORAGE` to access and modify images in the external storage.
/com/android/systemui/screenshot/ImageExporter.java,writeImage,Yes, because it involves writing data to a URI which typically requires write permissions on external storage.
/com/android/systemui/screenshot/ImageExporter.java,writeExif,Yes, it likely requires permissions to access and modify media files (e.g., WRITE_EXTERNAL_STORAGE).
/com/android/systemui/screenshot/ImageExporter.java,publishEntry,Yes, the method likely requires permissions related to accessing or modifying media storage, since it involves the `ContentResolver` and updating `Uri` in the context of media data.
/com/android/systemui/screenshot/ImageExporter.java,createMetadata,Yes, this method interacts with MediaStore to create metadata, which typically requires permissions like WRITE_EXTERNAL_STORAGE or READ_EXTERNAL_STORAGE in Android.
/com/android/systemui/screenshot/ScreenshotServiceErrorReceiver.java,onReceive,Yes, this method may require permissions to access certain system services like `WindowManager` and to show notifications, especially related to screenshots.
/com/android/systemui/screenshot/DeleteScreenshotReceiver.java,onReceive,Yes, because the method interacts with the device's content resolver to delete data, which typically requires permissions such as `WRITE_EXTERNAL_STORAGE` or relevant permissions related to the data being modified.
/com/android/systemui/screenshot/ImageLoader.java,load,Yes, this method requires permissions. It accesses images via a URI, which typically requires READ_EXTERNAL_STORAGE permission.
/com/android/systemui/screenshot/ImageLoader.java,load,Yes, the method requires permissions because it must have filesystem permissions to read the specified file/path.
/com/android/systemui/screenshot/appclips/AppClipsViewModel.java,performScreenshot,Yes, because taking a screenshot typically requires the permission to write external storage or manipulate screen content, depending on the Android version and context.
/com/android/systemui/screenshot/appclips/AppClipsViewModel.java,saveScreenshotThenFinish,Yes, this method likely requires permissions because it saves a `Drawable` to storage, which generally requires write permissions in Android.
/com/android/systemui/screenshot/appclips/AppClipsTrampolineActivity.java,onDestroy,Yes, it requires permissions because it sends a broadcast which typically requires specific permissions in Android.
/com/android/systemui/screenshot/appclips/AppClipsTrampolineActivity.java,maybeStartActivityForWPUser,Yes, it likely requires permission to start an activity as a user since it involves user management and possibly sensitive information.
/com/android/systemui/screenshot/appclips/AppClipsScreenshotHelperService.java,onBind,Yes, this method requires permissions related to taking screenshots or accessing app clip functionality, which typically involves sensitive user data.
/com/android/systemui/screenshot/appclips/AppClipsScreenshotHelperService.java,takeScreenshot,Yes, this method likely requires permissions, such as the permission to capture screenshots, which is sensitive in nature.
/com/android/systemui/screenshot/appclips/AppClipsService.java,onBind,Yes, the method requires permissions related to managing user profiles and screen capture functionalities.
/com/android/systemui/screenshot/appclips/AppClipsActivity.java,onCreate,Yes, this method requires permissions because it registers a broadcast receiver, which typically requires declaring permissions in the AndroidManifest.xml.
/com/android/systemui/screenshot/appclips/AppClipsActivity.java,setResultThenFinish,Yes, because it involves granting URI permissions and manipulating URIs, which typically requires specific permissions in Android (e.g., `READ_EXTERNAL_STORAGE`).
/com/android/systemui/keyguard/WorkLockActivityController.java,startActivityAsUser,Yes, this method likely requires permissions because it involves starting an activity, which typically requires appropriate permissions in Android, such as `START_ACTIVITY` permissions, especially when starting activities for different users.
/com/android/systemui/keyguard/KeyguardSliceProvider.java,onBindSlice,Yes, this method likely requires permissions because it interacts with system resources (like alarms and media) and uses a `Uri`, which typically requires permissions to access external content or system data.
/com/android/systemui/keyguard/KeyguardSliceProvider.java,addNextAlarmLocked,Yes, this method likely requires permissions related to accessing alarms, as it mentions an `mNextAlarm` and involves alarm-related functionalities.
/com/android/systemui/keyguard/KeyguardSliceProvider.java,updateNextAlarm,Yes, this method likely requires permission related to managing alarms, such as `SET_ALARM`.
/com/android/systemui/keyguard/KeyguardSliceProvider.java,registerClockUpdate,Yes, this method requires permissions because it registers a broadcast receiver, which typically requires permission to receive specific broadcasts related to date and time changes.
/com/android/systemui/keyguard/WakefulnessLifecycle.java,dispatchStartedGoingToSleep,Yes, this method may require permissions because it interacts with system services that could involve sensitive operations like changing wakefulness states or accessing wallpaper services, which typically require specific permissions in Android.
/com/android/systemui/keyguard/WorkLockActivity.java,goToHomeScreen,Yes, the method `goToHomeScreen` requires permissions to start activities, specifically the `INTERNET` permission if interacting with external URLs. Additionally, launching home activities can imply a need for the relevant intent permissions depending on the implementation context in the Android system.
/com/android/systemui/keyguard/WorkLockActivity.java,getKeyguardManager,Yes, this method requires permissions because it interacts with the KeyguardManager, which may require specific permissions related to device security and lockscreen features.
/com/android/systemui/net/NetworkOverLimitActivity.java,onCreate,Yes, this method may require permissions because it involves dialog creation and manipulating window types, including system alert type, which often requires specific permissions in the Android manifest (e.g., `SYSTEM_ALERT_WINDOW`).
/com/android/systemui/net/NetworkOverLimitActivity.java,snoozePolicy,Yes, this method interacts with `NetworkPolicyManager`, which typically requires permissions related to network access or policy management.
/com/android/systemui/flags/FeatureFlagsDebug.java,init,Yes, the method requires permissions because it involves registering a receiver (`registerReceiver`), which typically requires permissions for actions related to broadcasts in the Android system.
/com/android/systemui/util/Utils.java,isHeadlessRemoteDisplayProvider,Yes, it requires permission because it checks for the privileged `REMOTE_DISPLAY_PROVIDER` permission.
/com/android/systemui/util/AlarmTimeout.java,schedule,Yes, this method requires permissions because it schedules an alarm, which typically requires `SET_ALARM` or related permissions in Android.
/com/android/systemui/util/NotificationChannels.java,createAll,Yes, this method requires permissions because it interacts with the `NotificationManager` and creates notification channels, which typically require permissions to show notifications or manage notification settings.
/com/android/systemui/util/DeviceConfigProxy.java,setProperty,Yes, this method likely requires permissions because it modifies device configuration properties, which generally requires specific permissions in Android to ensure security and control over device settings.
/com/android/systemui/util/settings/SecureSettingsImpl.java,getStringForUser,Yes, it likely requires permissions to access user-related settings.
/com/android/systemui/util/settings/SecureSettingsImpl.java,putStringForUser,Yes, it requires permissions because it interacts with `Settings.Secure`, which typically needs permissions to modify secure settings in Android.
/com/android/systemui/util/settings/SecureSettingsImpl.java,putStringForUser,Yes, this method likely requires permissions to access user-specific settings and modify them, particularly since it deals with user handles and possibly security-sensitive information.
/com/android/systemui/util/settings/SecureSettingsImpl.java,putString,Yes, this method likely requires permission to modify secure settings in the Android system, which typically requires specific permissions such as `WRITE_SECURE_SETTINGS`.
/com/android/systemui/util/settings/GlobalSettingsImpl.java,getStringForUser,Yes, it likely requires permissions because it interacts with system settings, which typically requires appropriate permissions to access or modify.
/com/android/systemui/util/settings/GlobalSettingsImpl.java,putStringForUser,Yes, this method likely requires permissions because it interacts with settings (Settings.Global) that typically require specific permissions in Android to modify user settings.
/com/android/systemui/util/settings/GlobalSettingsImpl.java,putString,Yes, it requires permissions to access and modify settings in the Android system.
/com/android/systemui/util/settings/SettingsProxy.java,registerContentObserver,Yes, because registering a content observer typically involves monitoring changes to data, which may require specific permissions related to the content being observed.
/com/android/systemui/util/settings/SettingsProxy.java,registerContentObserver,Yes, it requires permissions because registering a content observer typically requires access to specific content providers, which may require permissions declared in the AndroidManifest.
/com/android/systemui/util/settings/SettingsProxy.java,registerContentObserver,Yes, the method `registerContentObserver` requires permissions because it involves observing changes to content in a URI, which typically necessitates the appropriate permissions to access that content.
/com/android/systemui/util/settings/SettingsProxy.java,registerContentObserverForUser,Yes, requires permissions to access the specified URI content.
/com/android/systemui/util/settings/SettingsProxy.java,registerContentObserverForUser,Yes, the method likely requires permissions related to accessing or observing content changes, as it deals with `ContentResolver` and `ContentObserver`, which typically involve managing system resources and data access.
/com/android/systemui/util/settings/SettingsProxy.java,registerContentObserverForUser,Yes, it requires permission to access or observe changes in the data represented by the `Uri`.
/com/android/systemui/util/settings/SettingsProxy.java,putLong,Yes, because modifying secure settings typically requires specific permissions to ensure app security and privacy.
/com/android/systemui/util/settings/SystemSettingsImpl.java,getStringForUser,Yes, it likely requires permissions because it accesses system settings, which typically necessitate permissions in Android.
/com/android/systemui/util/settings/SystemSettingsImpl.java,putStringForUser,Yes, this method likely requires permissions because it interacts with `Settings.System`, which typically requires permissions to read or write system settings in Android.
/com/android/systemui/util/sensors/AsyncSensorManager.java,registerListenerImpl,Yes, this method likely requires permissions to access the sensor hardware in an Android device.
/com/android/systemui/util/sensors/ThresholdSensorImpl.java,registerInternal,Yes, it likely requires permissions because it registers a sensor listener, which typically requires specific permissions (like accessing the device's sensors).
/com/android/systemui/util/sensors/SensorModule.java,providePrimaryProximitySensor,Yes, the method likely requires permission to access the device's proximity sensor.
/com/android/systemui/util/wakelock/WakeLock.java,createPartial,Yes, it requires permissions because creating a `WakeLock` typically requires the `WAKE_LOCK` permission.
/com/android/systemui/util/wakelock/WakeLock.java,createPartial,Yes, this method requires permissions because it involves creating a `WakeLock`, which typically requires the `WAKE_LOCK` permission in Android.
/com/android/systemui/util/wakelock/WakeLock.java,createWakeLock,Yes, WakeLocks require the permission `android.permission.WAKE_LOCK` to function properly.
/com/android/systemui/util/wakelock/WakeLock.java,createWakeLockInner,Yes, this method requires permissions because acquiring a WakeLock normally requires the `WAKE_LOCK` permission in Android.
/com/android/systemui/util/wakelock/WakeLock.java,wrapImpl,Yes, requires permissions. The method interacts with a `WakeLock`, which necessitates the `WAKE_LOCK` permission in Android.
/com/android/systemui/util/wakelock/WakeLock.java,wrap,Yes, this method requires permissions because it involves managing a `WakeLock`, which can affect device power state and requires specific permissions (e.g., `android.permission.WAKE_LOCK`).
/com/android/systemui/util/wakelock/WakeLock.java,acquire,Yes, this method requires permission because it involves acquiring a `WakeLock`, which requires the permission `android.permission.WAKE_LOCK` to function properly on Android devices.
/com/android/systemui/util/leak/DumpTruck.java,captureHeaps,Yes, this method requires permissions. It involves capturing memory and interacting with files (dumping and zipping data) which typically requires write permissions to external storage or file access permissions in Android.
/com/android/systemui/util/leak/DumpTruck.java,zipUp,Yes, because it involves file operations, which typically require storage permissions.
/com/android/systemui/util/leak/LeakReporter.java,dumpLeak,Yes, it requires permissions primarily for writing to external storage for the leak dump file and for posting notifications.
/com/android/systemui/util/leak/LeakReporter.java,getIntent,Yes, this method requires permissions because it involves accessing files and sharing data using intents, which typically requires storage or file access permissions.
/com/android/systemui/util/leak/GarbageMonitor.java,getMemInfo,Yes, because getting memory information may require permissions related to accessing process information.
/com/android/systemui/util/service/ObservableServiceConnection.java,bind,Yes, this method requires permissions because it involves binding to a service, which typically requires specific permissions declared in the Android Manifest to regulate access to certain system services or user data.
/com/android/systemui/doze/DozeTriggers.java,register,Yes, this method likely requires permissions because it registers a receiver (as indicated by `registerReceiver`), which typically requires permissions related to receiving broadcasts.
/com/android/systemui/doze/DozeHost.java,setDozeScreenBrightness,Yes, because setting the display brightness typically requires permissions related to modifying system settings.
/com/android/systemui/doze/DozeService.java,requestWakeUp,Yes, this method likely requires permissions related to device power management, such as waking up the device.
/com/android/systemui/doze/AlwaysOnDisplayPolicy.java,observe,Yes, the method involves registering a content observer, which typically requires permissions to access the content provider being observed.
/com/android/systemui/doze/DozeScreenBrightness.java,clampToUserSetting,Yes, it likely requires permissions. The method interacts with system settings which usually require permissions (e.g., `WRITE_SETTINGS` or `READ_SETTINGS`).
/com/android/systemui/doze/DozeScreenBrightness.java,setLightSensorEnabled,Yes, the method likely requires permissions because it involves registering a listener for a light sensor, which typically requires the `android.permission.READ_SENSOR` or equivalent permissions in Android.
/com/android/systemui/doze/DozeMachine.java,wakeUp,Yes, the method likely requires permissions to interact with the PowerManager and control the device wake state.
/com/android/systemui/doze/DozeMachine.java,updateWakeLockState,Yes, because managing wake locks requires the `WAKE_LOCK` permission in Android to prevent the device from going to sleep.
/com/android/systemui/doze/DozeMachine.java,setDozeScreenBrightness,Yes, because setting screen brightness typically requires permission to modify system settings.
/com/android/systemui/plugins/GlobalActionsPanelPlugin.java,startPendingIntentDismissingKeyguard,Yes, this method requires permissions to interact with system features such as the keyguard.
/com/android/systemui/plugins/BcSmartspaceDataPlugin.java,setKeyguardBypassEnabled,Yes, it likely requires permissions as it controls keyguard settings, which typically need security permissions in Android.
/com/android/systemui/plugins/BcSmartspaceDataPlugin.java,setDnd,Yes, this method likely requires permissions because it interacts with Do Not Disturb settings, which typically require specific user permissions in Android.
/com/android/systemui/plugins/VolumeDialogController.java,setStreamVolume,Yes, it likely requires permissions to modify the audio stream volume.
/com/android/systemui/plugins/VolumeDialogController.java,setRingerMode,Yes, it likely requires permissions because setting the ringer mode typically involves modifying system settings which usually requires appropriate permissions in Android.
/com/android/systemui/plugins/VolumeDialogController.java,vibrate,Yes, the method likely requires permission to access the device's vibration feature, typically `VIBRATE`.
/com/android/systemui/plugins/PluginEnablerImpl.java,setDisabled,Yes, because this method modifies component settings, which typically requires permissions related to modifying application state or settings in Android.
/com/android/systemui/plugins/ActivityStarter.java,startActivity,Yes, because starting an activity can require permissions based on the specific activity being launched.
/com/android/systemui/plugins/ActivityStarter.java,startActivity,Yes, because starting an activity may require permissions depending on the intent being used.
/com/android/systemui/plugins/ActivityStarter.java,startActivity,Yes, this method likely requires permissions to start activities that may interact with system-level features or sensitive user data.
/com/android/systemui/plugins/ActivityStarter.java,startActivity,Yes, this method likely requires permissions because starting an activity may involve actions that require user consent or specific permissions (e.g., launching activities that access sensitive data or resources).
/com/android/systemui/plugins/ActivityStarter.java,startActivity,Yes, the method `startActivity` may require permissions depending on the `Intent` being used (e.g., activities that access sensitive data or features).
/com/android/systemui/plugins/ActivityStarter.java,startActivity,Yes, it requires permissions because starting activities can involve launching components that may need specific permissions based on the intent or the targeted app.
/com/android/systemui/plugins/ActivityStarter.java,startActivityDismissingKeyguard,Yes, it requires permission to dismiss the keyguard and start an activity, typically related to device security.
/com/android/systemui/plugins/ActivityStarter.java,startActivityDismissingKeyguard,Yes, because it involves starting an activity and dismissing the keyguard, which may require permission to interact with the user's device security settings.
/com/android/systemui/plugins/ActivityStarter.java,executeRunnableDismissingKeyguard,Yes, because it involves interacting with the keyguard (lock screen), which typically requires permission to modify system UI behavior.
/com/android/systemui/plugins/ActivityStarter.java,executeRunnableDismissingKeyguard,Yes, requires permission to manage the keyguard and execute actions related to it.
/com/android/systemui/plugins/GlobalActions.java,reboot,Yes, rebooting a device typically requires system-level permissions that are not available to regular applications.
/com/android/systemui/dagger/FrameworkServicesModule.java,provideIStatusBarService,Yes, this method likely requires permissions to access the status bar service, as it involves retrieving a system service that typically requires specific permissions in Android.
/com/android/systemui/dagger/FrameworkServicesModule.java,provideIWallPaperManager,Yes, access to wallpaper services typically requires the `SET_WALLPAPER` permission.
/com/android/systemui/dagger/FrameworkServicesModule.java,provideNotificationManager,Yes, this method likely requires permissions to use the NotificationManager, as sending notifications usually requires specific permissions in Android, such as `POST_NOTIFICATIONS`.
/com/android/systemui/dagger/FrameworkServicesModule.java,provideINotificationManager,Yes, the method interacts with the notification service, which requires specific permissions to access and manipulate notifications in Android (e.g., `android.permission.BIND_NOTIFICATION_LISTENER_SERVICE`).
/com/android/systemui/dagger/FrameworkServicesModule.java,providePackageManager,Yes, because accessing the PackageManager typically requires the permission to access specific package-related information.
/com/android/systemui/dagger/FrameworkServicesModule.java,provideTelecomManager,Yes, this method requires permissions because accessing the `TelecomManager` typically requires permissions related to managing calls and telephony services in Android.
/com/android/systemui/dagger/FrameworkServicesModule.java,provideVibrator,Yes, the method likely requires permission to access the Vibrator service, as using device services often involves permissions in Android.
/com/android/systemui/dagger/FrameworkServicesModule.java,provideOptionalVibrator,Yes, because accessing the `Vibrator` service may require vibration permissions, specifically `VIBRATE`.
/com/android/systemui/dagger/FrameworkServicesModule.java,provideBluetoothManager,Yes, it requires permissions because accessing the BluetoothManager may require Bluetooth-related permissions in the Android Manifest.
/com/android/systemui/statusbar/KeyguardIndicationController.java,getDisclosureText,Yes, this method likely requires permissions related to device policy management, as it interacts with `DevicePolicyManager` and retrieves information that may be sensitive or restricted.
/com/android/systemui/statusbar/KeyguardIndicationController.java,getOrganizationOwnedDeviceOrganizationName,Yes, this method likely requires permissions because it accesses device management information, which typically requires specific permissions in Android for security and privacy reasons.
/com/android/systemui/statusbar/KeyguardIndicationController.java,faceLockedOutFollowupMessage,Yes, because the method involves unlocking with a fingerprint, which requires fingerprint authentication permissions.
/com/android/systemui/statusbar/GestureRecorder.java,save,Yes, because the method appears to involve file writing, which typically requires file write permissions.
/com/android/systemui/statusbar/KeyboardShortcutListSearch.java,getPackageInfoForIntent,Yes, this method likely requires permissions because it interacts with the PackageManager, which typically requires permissions to access package information and resolve intents.
/com/android/systemui/statusbar/AlertingNotificationManager.java,showNotification,Yes, this method likely requires permissions to post notifications to alert the user on the screen.
/com/android/systemui/statusbar/VibratorHelper.java,vibrate,Yes, this method requires permissions because it interacts with the device's vibrator hardware.
/com/android/systemui/statusbar/VibratorHelper.java,vibrate,Yes, this method likely requires permissions because it interacts with the device's vibrator hardware, which typically requires the `VIBRATE` permission in Android.
/com/android/systemui/statusbar/VibratorHelper.java,vibrate,Yes, because vibrating the device typically requires the `VIBRATE` permission in Android.
/com/android/systemui/statusbar/VibratorHelper.java,vibrate,Yes, the vibrate method requires permissions because it controls device vibration, which typically necessitates the `VIBRATE` permission in an Android application.
/com/android/systemui/statusbar/VibratorHelper.java,vibrateAuthSuccess,Yes, the method likely requires permission to access hardware features like vibration.
/com/android/systemui/statusbar/OperatorNameViewController.java,setIsAirplaneMode,Yes, because changing the airplane mode state requires the `WRITE_SETTINGS` permission on Android.
/com/android/systemui/statusbar/KeyboardShortcuts.java,getPackageInfoForIntent,Yes, this method requires permissions to access information about installed applications and their packages, which typically requires `GET_PACKAGE_INFO` permission or similar in Android.
/com/android/systemui/statusbar/NotificationShadeWindowController.java,setKeyguardShowing,Yes, it likely requires permission to modify keyguard settings, which typically involves sensitive system access.
/com/android/systemui/statusbar/NotificationLockscreenUserManagerImpl.java,onReceive,Yes, this method likely requires permissions because it involves user-related actions (e.g., user added or removed) and might interact with user data or notification handling, which typically necessitate appropriate permissions in Android.
/com/android/systemui/statusbar/NotificationLockscreenUserManagerImpl.java,setUpWithPresenter,Yes, because it interacts with system settings, notifications, and content observers, which typically require specific permissions.
/com/android/systemui/statusbar/NotificationLockscreenUserManagerImpl.java,adminAllowsKeyguardFeature,Yes, this method likely requires permissions because it interacts with device management features that usually necessitate administrative privileges or permissions to access keyguard settings.
/com/android/systemui/statusbar/NotificationLockscreenUserManagerImpl.java,setLockscreenPublicMode,Yes, the method likely requires permissions because it involves modifying the state of the lockscreen, which typically requires system-level permissions due to security implications.
/com/android/systemui/statusbar/NotificationLockscreenUserManagerImpl.java,userAllowsNotificationsInPublic,Yes, the method likely requires permissions related to notification access and user profile management, as it checks user settings for notifications while the device is locked.
/com/android/systemui/statusbar/CommandQueue.java,showRecentApps,Yes, this method requires permissions because it may control UI elements related to recent apps, which typically requires specific permissions in Android to operate correctly.
/com/android/systemui/statusbar/CommandQueue.java,showAuthenticationDialog,Yes, this method likely requires permissions related to biometric authentication, such as `USE_BIOMETRIC` or `USE_FINGERPRINT`, as it involves showing an authentication dialog for biometric verification.
/com/android/systemui/statusbar/CommandQueue.java,showToast,Yes, this method likely requires permissions as it deals with displaying toast notifications, which can involve user interface interactions and may require specific permissions based on the context of use or the application design.
/com/android/systemui/statusbar/CommandQueue.java,passThroughShellCommand,Yes, this method likely requires permissions because it appears to be handling shell commands, which typically necessitate certain privileges such as executing commands or accessing file descriptors.
/com/android/systemui/statusbar/connectivity/AccessPointControllerImpl.java,canConfigMobileData,Yes, requires permissions, as it checks user restrictions related to mobile data configuration, which may involve user management permissions.
/com/android/systemui/statusbar/connectivity/AccessPointControllerImpl.java,scanForAccessPoints,Yes, this method likely requires permissions because it involves accessing Wi-Fi access points, which typically requires the "ACCESS_FINE_LOCATION" or "ACCESS_COARSE_LOCATION" permission in Android to retrieve Wi-Fi information.
/com/android/systemui/statusbar/connectivity/AccessPointControllerImpl.java,connect,Yes, because connecting to Wi-Fi networks typically requires the `ACCESS_WIFI_STATE` and `CHANGE_WIFI_STATE` permissions in Android.
/com/android/systemui/statusbar/connectivity/AccessPointControllerImpl.java,create,Yes, this method likely requires permissions related to accessing Wi-Fi, as it interacts with `WifiManager`.
/com/android/systemui/statusbar/connectivity/MobileSignalController.java,setAirplaneMode,Yes, because changing airplane mode typically requires the `WRITE_SETTINGS` permission in Android.
/com/android/systemui/statusbar/connectivity/MobileSignalController.java,registerListener,Yes, this method likely requires permissions to access phone state changes, as it deals with phone status and possibly mobile data.
/com/android/systemui/statusbar/connectivity/MobileSignalController.java,getCdmaLevel,Yes, this method likely requires permissions. It deals with signal strength information, which typically requires access to the device's telephony services, necessitating permissions like `ACCESS_FINE_LOCATION` or `ACCESS_COARSE_LOCATION`.
/com/android/systemui/statusbar/connectivity/NetworkController.java,setWifiEnabled,Yes, because enabling or disabling Wi-Fi requires the appropriate permissions in the AndroidManifest.xml (e.g., `CHANGE_WIFI_STATE`).
/com/android/systemui/statusbar/connectivity/WifiSignalController.java,handleBroadcast,Yes, because extracting Wi-Fi state typically requires access to Wi-Fi state permissions in Android.
/com/android/systemui/statusbar/notification/NotificationChannelHelper.java,createConversationChannelIfNeeded,Yes, requires permissions. Creating notification channels generally requires notifications permission (`POST_NOTIFICATIONS`).
/com/android/systemui/statusbar/notification/collection/NotifCollection.java,dismissNotifications,Yes, the method requires permissions because it dismisses notifications on behalf of the user, which typically requires the `POST_NOTIFICATIONS` permission in Android.
/com/android/systemui/statusbar/notification/collection/NotifCollection.java,dismissAllNotifications,Yes, it requires permissions because dismissing notifications typically requires the `android.permission.MANAGE_NOTIFICATIONS` permission.
/com/android/systemui/statusbar/notification/collection/NotifCollection.java,postNotification,Yes, the method likely requires permissions related to notifications (such as `android.permission.POST_NOTIFICATIONS`) as it handles posting notifications to the status bar.
/com/android/systemui/statusbar/notification/collection/coordinator/DeviceProvisionedCoordinator.java,showNotificationEvenIfUnprovisioned,Yes, because it mentions the permission `android.permission.NOTIFICATION_DURING_SETUP` is required for notifications to show during device unprovisioning.
/com/android/systemui/statusbar/notification/collection/coordinator/DeviceProvisionedCoordinator.java,checkUidPermission,Yes, it likely requires permissions because it checks the permission status of a specific uid.
/com/android/systemui/statusbar/notification/row/NotificationConversationInfo.java,run,Yes, this method requires permissions related to notification management.
/com/android/systemui/statusbar/notification/row/ExpandableNotificationRowDragController.java,getPkgIcon,Yes, this method requires permissions because it accesses application information using the PackageManager, which typically requires the "QUERY_ALL_PACKAGES" permission or specific app-related permissions depending on the Android version.
/com/android/systemui/statusbar/notification/row/NotificationGutsManager.java,startAppOpsSettingsActivity,Yes, the method deals with app permissions and requires appropriate permissions to access app settings.
/com/android/systemui/statusbar/notification/row/NotificationInfo.java,run,Yes, this method likely requires permissions to update notification channels and their importance levels, which typically involve accessing app-specific settings.
/com/android/systemui/statusbar/notification/row/NotificationInlineImageCache.java,doInBackground,Yes, this method likely requires permissions, as it operates on `Uri` objects, which may involve accessing files or other resources that need explicit permissions in Android (e.g., reading external storage).
/com/android/systemui/statusbar/notification/row/NotificationInlineImageResolver.java,resolveImage,Yes, because accessing image data from a URI typically requires permissions such as READ_EXTERNAL_STORAGE if the URI points to an external source.
/com/android/systemui/statusbar/notification/row/NotificationInlineImageResolver.java,loadImage,Yes, this method requires permissions. Accessing an image from a `Uri` often involves reading from external storage, which requires appropriate permissions in Android.
/com/android/systemui/statusbar/dagger/CentralSurfacesDependenciesModule.java,isDreaming,Yes, the method likely requires permissions because it interacts with the `dreamManager`, which may involve system-level interactions related to the device's dreaming functionality, often requiring specific permissions.
/com/android/systemui/statusbar/tv/TvStatusBar.java,showPictureInPictureMenu,Yes, because it appears to send a broadcast which may require a specific permission (SYSTEMUI_PERMISSION).
/com/android/systemui/statusbar/tv/notifications/TvNotificationHandler.java,onNotificationRemoved,Yes, because the method is part of `NotificationListenerService`, which requires the `BIND_NOTIFICATION_LISTENER_SERVICE` permission to access notifications.
/com/android/systemui/statusbar/tv/notifications/TvNotificationPanel.java,animateCollapsePanels,Yes, this method likely requires permissions because it involves sending broadcasts, which typically requires specific permissions in Android (e.g., `SEND_BROADCAST`).
/com/android/systemui/statusbar/tv/notifications/TvNotificationPanel.java,openInternalNotificationPanel,Yes, this method likely requires permissions to access or interact with system notifications, as it involves opening the internal notification panel.
/com/android/systemui/statusbar/tv/notifications/TvNotificationPanel.java,startNotificationHandlerActivity,Yes, the method requires the `STATUS_BAR_SERVICE` permission as stated in the documentation and within the method's logic.
/com/android/systemui/statusbar/phone/StatusBarSignalPolicy.java,setIsAirplaneMode,Yes, this method might require permissions because setting airplane mode typically involves modifying system settings, which is often restricted to applications with specific permissions in Android.
/com/android/systemui/statusbar/phone/StatusBarSignalPolicy.java,setMobileDataEnabled,Yes, it likely requires permissions to modify mobile data settings.
/com/android/systemui/statusbar/phone/PhoneStatusBarPolicy.java,onReceive,Yes, this method requires permissions because it handles system broadcast intents that may involve sensitive actions like headset state changes and telecom-related events, which generally require specific permissions in Android.
/com/android/systemui/statusbar/phone/KeyguardDismissHandler.java,executeWhenUnlocked,Yes, this method likely requires permissions related to device security and interaction with the keyguard (lock screen), as it involves executing actions when the screen is unlocked and managing the keyguard state.
/com/android/systemui/statusbar/phone/KeyguardStatusBarViewController.java,onViewAttached,Yes, this method likely requires permissions because it involves operations related to user settings and content observers, which typically require appropriate permissions in the Android framework.
/com/android/systemui/statusbar/phone/KeyguardDismissUtil.java,executeWhenUnlocked,Yes, because it requires the screen to be unlocked, which typically involves permissions related to device security and keyguard access.
/com/android/systemui/statusbar/phone/ScrimController.java,holdWakeLock,Yes, this method requires permissions because it involves acquiring a wake lock, which requires the `WAKE_LOCK` permission in Android.
/com/android/systemui/statusbar/phone/CentralSurfacesImpl.java,registerBroadcastReceiver,Yes, because registering a broadcast receiver may require permissions to listen for system broadcasts such as screen off or system dialogs.
/com/android/systemui/statusbar/phone/CentralSurfacesImpl.java,wakeUpIfDozing,Yes, it likely requires permissions to control the device's wake state.
/com/android/systemui/statusbar/phone/CentralSurfacesImpl.java,wakeUpForFullScreenIntent,Yes, this method likely requires permissions to wake the device from a sleep state, which involves the use of power management features.
/com/android/systemui/statusbar/phone/CentralSurfacesImpl.java,hideKeyguard,Yes, it likely requires permissions to manipulate the keyguard state.
/com/android/systemui/statusbar/phone/CentralSurfacesImpl.java,hideKeyguardImpl,Yes, this method likely requires permissions related to controlling the keyguard and interacting with system UI elements.
/com/android/systemui/statusbar/phone/CentralSurfacesImpl.java,onFinishedWakingUp,Yes, because it involves camera launching and emergency actions which typically require permissions.
/com/android/systemui/statusbar/phone/CentralSurfacesImpl.java,executeActionDismissingKeyguard,Yes, this method requires permissions because dismissing the keyguard typically involves controlling device security settings, which may require specific permissions like `DISABLE_KEYGUARD` or `USE_BIOMETRIC`.
/com/android/systemui/statusbar/phone/CentralSurfacesImpl.java,hideKeyguardWithAnimation,Yes, this method likely requires permissions because it interacts with the device's keyguard functionality, which typically requires specific permissions to modify or manage.
/com/android/systemui/statusbar/phone/StatusBarRemoteInputCallback.java,startWorkChallengeIfNecessary,Yes, this method likely requires permissions because it interacts with device security features and intents, which typically require user permission in Android (e.g., for accessing secure settings or user credentials).
/com/android/systemui/statusbar/phone/StatusBarRemoteInputCallback.java,onReceive,Yes, this method likely requires permissions related to device administration or user management, as it deals with actions like device lock changes and user profiles.
/com/android/systemui/statusbar/phone/CentralSurfaces.java,wakeUpIfDozing,Yes, because it interacts with device power states.
/com/android/systemui/statusbar/phone/CentralSurfaces.java,hideKeyguard,Yes, it likely requires permissions because it involves manipulating the device's keyguard (lock screen), which typically requires sensitive permissions to access or modify security features.
/com/android/systemui/statusbar/phone/StatusBarKeyguardViewManager.java,requestFp,Yes, because it requires permission to use the fingerprint sensor.
/com/android/systemui/statusbar/phone/StatusBarIconHolder.java,setWifiState,Yes, it likely requires permissions to modify Wi-Fi state.
/com/android/systemui/statusbar/phone/BiometricUnlockController.java,onBiometricAcquired,Yes, this method requires permissions because it deals with biometric operations, which typically require the use of specific permissions (e.g., `USE_BIOMETRIC` or `USE_FINGERPRINT`).
/com/android/systemui/statusbar/phone/BiometricUnlockController.java,startWakeAndUnlock,Yes, this method likely requires permission to wake or unlock the device, as it interacts with system settings related to device security and user authentication.
/com/android/systemui/statusbar/phone/BiometricUnlockController.java,onBiometricAuthFailed,Yes, this method may require permissions related to biometric authentication, as it involves handling biometric authentication failures.
/com/android/systemui/statusbar/phone/CentralSurfacesCommandQueueCallbacks.java,disable,Yes, this method requires permissions because it interacts with the status bar and modifies its states, which typically requires system-level permissions in Android.
/com/android/systemui/statusbar/phone/CentralSurfacesCommandQueueCallbacks.java,onCameraLaunchGestureDetected,Yes, this method likely requires permissions related to camera access as it involves launching the camera and possibly interacting with the device's wake state and user interface elements that might necessitate special permissions.
/com/android/systemui/statusbar/phone/CentralSurfacesCommandQueueCallbacks.java,onEmergencyActionLaunchGestureDetected,Yes, this method likely requires permissions related to emergency actions or starting activities, such as `START_ACTIVITY` or related device management permissions.
/com/android/systemui/statusbar/phone/DozeParameters.java,observe,Yes, because it registers content observers which typically requires permissions to access specific content (e.g., reading contacts, calendar, etc.).
/com/android/systemui/statusbar/phone/SystemUIDialog.java,setShowForAllUsers,Yes, because it modifies window flags that may relate to user visibility, which generally requires specific permissions in Android.
/com/android/systemui/statusbar/phone/SystemUIDialog.java,setWindowOnTop,Yes, it likely requires permissions related to displaying overlays or managing windows.
/com/android/systemui/statusbar/phone/SystemUIDialog.java,register,Yes, this method likely requires permissions to register a broadcast receiver, as it involves the use of `registerReceiver`.
/com/android/systemui/statusbar/phone/NotificationListenerWithPlugins.java,getActiveNotifications,Yes, this method requires permissions because it retrieves active notifications, which typically requires the "ACCESS_NOTIFICATION_POLICY" permission in Android.
/com/android/systemui/statusbar/phone/NotificationListenerWithPlugins.java,getProvider,Yes, this method likely requires permissions related to notifications, as it interacts with notification-related classes and functionalities such as `StatusBarNotification` and `NotificationListenerWithPlugins`.
/com/android/systemui/statusbar/phone/NotificationListenerWithPlugins.java,getActiveNotifications,Yes, this method requires permissions because it likely accesses active notifications, which typically require notification access permissions in Android.
/com/android/systemui/statusbar/phone/LockscreenWallpaper.java,getBitmap,Yes, because it interacts with wallpaper management, which typically requires permissions related to accessing wallpaper settings.
/com/android/systemui/statusbar/phone/LockscreenWallpaper.java,loadBitmap,Yes, it likely requires permissions related to wallpaper access, as it interacts with `WallpaperManager` and gets the user's wallpaper file.
/com/android/systemui/statusbar/policy/SplitClockView.java,onAttachedToWindow,Yes, this method may require permissions to register broadcast receivers and handle various system intents, such as time changes and locale changes, which typically need permissions defined in the AndroidManifest.xml.
/com/android/systemui/statusbar/policy/RotationLockControllerImpl.java,hasSufficientPermission,Yes, because it checks for permissions related to the CAMERA feature.
/com/android/systemui/statusbar/policy/NextAlarmControllerImpl.java,onReceive,Yes, the method involves an `Intent` that may relate to alarm management, which typically requires permission to access or modify alarm-related activities.
/com/android/systemui/statusbar/policy/SecurityControllerImpl.java,getProfileOwnerName,Yes, this method likely requires permissions because it involves retrieving profile owner information, which typically requires specific user-related permissions in Android (e.g., `android.permission.MANAGE_USERS`).
/com/android/systemui/statusbar/policy/SecurityControllerImpl.java,getPrimaryVpnName,Yes, this method likely requires permissions to access VPN configurations or user data, which typically involves sensitive information on Android.
/com/android/systemui/statusbar/policy/SecurityControllerImpl.java,getDeviceOwnerComponentOnAnyUser,Yes, this method likely requires permissions related to device administration, as it retrieves the device owner component, which typically requires elevated privileges.
/com/android/systemui/statusbar/policy/SecurityControllerImpl.java,onReceive,Yes, this method likely requires permissions related to user data or certificate management, given it interacts with user handles and actions like trust store changes.
/com/android/systemui/statusbar/policy/FlashlightControllerImpl.java,tryInitCamera,Yes, requires camera permissions.
/com/android/systemui/statusbar/policy/FlashlightControllerImpl.java,setFlashlight,Yes, because the method interacts with the camera hardware, specifically to control the flashlight, which requires camera permissions.
/com/android/systemui/statusbar/policy/FlashlightControllerImpl.java,onTorchModeChanged,Yes, this method likely requires permissions because it interacts with the device's camera functionality (specifically, handling torch mode), which generally requires camera-related permissions on Android devices.
/com/android/systemui/statusbar/policy/FlashlightControllerImpl.java,setTorchMode,Yes, this method likely requires permissions to access the flashlight (torch) functionality of the device.
/com/android/systemui/statusbar/policy/ExtensionControllerImpl.java,get,Yes, the method likely requires permissions related to accessing system features through `getPackageManager` and `hasSystemFeature`.
/com/android/systemui/statusbar/policy/CastControllerImpl.java,getAppName,Yes, because accessing app names and application information generally requires the `GET_PACKAGE_SIZE` or `PACKAGE_USAGE_STATS` permissions in Android.
/com/android/systemui/statusbar/policy/LocationController.java,setLocationEnabled,Yes, because setting the location enabled state typically requires location permissions.
/com/android/systemui/statusbar/policy/DataSaverControllerImpl.java,setDataSaverEnabled,Yes, this method likely requires permissions related to network management, such as modifying data saver settings.
/com/android/systemui/statusbar/policy/FlashlightController.java,setFlashlight,Yes, because controlling the flashlight typically requires camera or flashlight permissions.
/com/android/systemui/statusbar/policy/FlashlightController.java,onFlashlightChanged,Yes, the method may require permissions to access or control the flashlight functionality.
/com/android/systemui/statusbar/policy/UserInfoControllerImpl.java,onReceive,Yes, this method likely requires permissions related to accessing user information and contacts (e.g., `READ_CONTACTS` or similar) due to its involvement with user profiles and intents related to user information changes.
/com/android/systemui/statusbar/policy/UserInfoControllerImpl.java,queryForUserInformation,Yes, the method requires permissions related to accessing user information from contacts (e.g., `READ_CONTACTS`).
/com/android/systemui/statusbar/policy/UserInfoControllerImpl.java,doInBackground,Yes, because it involves querying user contacts, which requires permissions related to accessing contacts data.
/com/android/systemui/statusbar/policy/ZenModeControllerImpl.java,onUserChanged,Yes, the method `onUserChanged` likely requires permissions because it involves user-related actions (registering/unregistering a receiver) and interacting with system components like `AlarmManager` and `NotificationManager`, which typically require specific permissions in Android.
/com/android/systemui/statusbar/policy/ZenModeControllerImpl.java,isVolumeRestricted,Yes, this method requires permissions because it checks user restrictions related to volume adjustments, which typically involves access to user or system settings.
/com/android/systemui/statusbar/policy/ZenModeControllerImpl.java,setZen,Yes, this method likely requires permissions related to managing the Zen mode (Do Not Disturb) settings on a device.
/com/android/systemui/statusbar/policy/ZenModeControllerImpl.java,getNextAlarm,Yes, this method requires permissions because accessing alarm information typically needs the `USE_ALARM` permission in Android.
/com/android/systemui/statusbar/policy/ZenModeControllerImpl.java,updateZenModeConfig,Yes, this method likely requires permissions related to modifying Do Not Disturb settings or notification policies in Android, which typically require specific permissions such as `MANAGE_DND` or similar, depending on the API level and context.
/com/android/systemui/statusbar/policy/ZenModeControllerImpl.java,register,Yes, this method likely requires permissions as it involves registering content observers, which typically requires permissions related to reading or accessing certain content providers or settings in Android.
/com/android/systemui/statusbar/policy/BluetoothControllerImpl.java,canConfigBluetooth,Yes, it checks for user restrictions on configuring Bluetooth, which may require certain permissions related to user management.
/com/android/systemui/statusbar/policy/BluetoothControllerImpl.java,getConnectedDevices,Yes, this method likely requires permissions because it operates with Bluetooth devices, which typically require location permissions in Android to access connected devices for security and privacy reasons.
/com/android/systemui/statusbar/policy/BluetoothControllerImpl.java,isBluetoothEnabled,Yes, accessing Bluetooth status typically requires Bluetooth permissions in Android.
/com/android/systemui/statusbar/policy/BluetoothControllerImpl.java,setBluetoothEnabled,Yes, to set Bluetooth enabled state, the method likely requires Bluetooth permissions.
/com/android/systemui/statusbar/policy/BluetoothControllerImpl.java,updateConnectedOld,Yes, the method likely requires permissions related to Bluetooth access, as it interacts with Bluetooth devices and their connection states.
/com/android/systemui/statusbar/policy/BluetoothControllerImpl.java,updateAudioProfile,Yes, the method likely requires permissions related to Bluetooth access, as it involves checking Bluetooth profiles and connected devices.
/com/android/systemui/statusbar/policy/BluetoothControllerImpl.java,onProfileConnectionStateChanged,Yes, because it involves Bluetooth profile connection state changes, which typically requires Bluetooth permissions in Android.
/com/android/systemui/statusbar/policy/LocationControllerImpl.java,setLocationEnabled,Yes, location-related functionalities require permissions, specifically for accessing and modifying location settings.
/com/android/systemui/statusbar/policy/LocationControllerImpl.java,onReceive,Yes, because it handles location changes, which typically requires location permissions in Android.
/com/android/systemui/statusbar/policy/HeadsUpManager.java,snooze,Yes, this method likely requires permissions to manage notifications.
/com/android/systemui/statusbar/policy/HotspotControllerImpl.java,isHotspotEnabled,Yes, because it likely checks the state of a Wi-Fi hotspot, which typically requires access to Wi-Fi state permissions.
/com/android/systemui/statusbar/policy/HotspotControllerImpl.java,setHotspotEnabled,Yes, because it manages tethering which requires specific permissions (e.g., `ACCESS_WIFI_STATE`, `CHANGE_WIFI_STATE`, and `TETHERING`).
/com/android/systemui/statusbar/policy/Clock.java,updateShowSeconds,Yes, this method requires permissions because it is registering a broadcast receiver, which typically requires the `RECEIVE_BOOT_COMPLETED` or related permissions in Android.
/com/android/systemui/statusbar/policy/Clock.java,dispatchDemoCommand,Yes, this method might require permissions because it interacts with system time and formatting functions that may depend on access to the user's settings or calendar.
/com/android/systemui/statusbar/policy/BluetoothController.java,setBluetoothEnabled,Yes, setting Bluetooth state typically requires the permission `BLUETOOTH_ADMIN`.
/com/android/systemui/statusbar/policy/ZenModeController.java,setZen,Yes, the method likely requires permissions related to modifying Zen mode settings on the device.
/com/android/systemui/statusbar/policy/SafetyController.java,addCallback,Yes, because it involves registering a broadcast receiver, which typically requires permissions in Android.
/com/android/systemui/statusbar/policy/SafetyController.java,removeCallback,Yes, it likely requires permissions because it involves unregistering a receiver, which typically requires the appropriate permissions in Android to ensure secure communication and resource management.
/com/android/systemui/appops/AppOpsControllerImpl.java,setListening,Yes, this method likely requires permissions. It interacts with audio recording capabilities and sensor blocks, which typically require specific permissions in Android (e.g., RECORD_AUDIO, CAMERA).
/com/android/systemui/appops/AppOpsControllerImpl.java,updateActives,Yes, this method likely requires permissions because it involves operations related to microphone and camera usage, which typically require specific permissions in Android (such as `Manifest.permission.RECORD_AUDIO` for microphone and `Manifest.permission.CAMERA` for camera).
/com/android/systemui/appops/AppOpsControllerImpl.java,updateSensorDisabledStatus,Yes, because the method references microphone and camera operations, which typically require permissions to access in Android.
/com/android/systemui/appops/AppOpsControllerImpl.java,isOpMicrophone,Yes, because it checks for audio recording and microphone operation permissions.
/com/android/systemui/qs/QSHost.java,addTile,Yes, this method requires permissions to modify the Quick Settings tiles in the system.
/com/android/systemui/qs/QSSecurityFooterUtils.java,createOrganizationDialogView,Yes, it likely requires permissions to access device management features.
/com/android/systemui/qs/QSSecurityFooterUtils.java,onClick,Yes, this method may require permissions because it involves starting an activity that relates to VPN settings, which typically requires specific permissions in Android (e.g., `BIND_VPN_SERVICE`).
/com/android/systemui/qs/ReduceBrightColorsController.java,addCallback,Yes, because it involves registering a content observer, which typically requires permissions to access certain data.
/com/android/systemui/qs/tileimpl/QSTileImpl.java,userSwitch,Yes, this method likely requires permissions because it involves switching user contexts, which typically necessitates administrative or specific user permissions in Android.
/com/android/systemui/qs/tiles/BluetoothTile.java,getLongClickIntent,Yes, this method interacts with Bluetooth settings, which typically requires permissions related to Bluetooth access.
/com/android/systemui/qs/tiles/BluetoothTile.java,handleSecondaryClick,Yes, because the method deals with Bluetooth settings, which requires appropriate permissions for accessing and modifying Bluetooth states.
/com/android/systemui/qs/tiles/BluetoothTile.java,handleUpdateState,Yes, this method requires permissions related to Bluetooth operations (e.g., enabling/disabling Bluetooth, accessing Bluetooth state).
/com/android/systemui/qs/tiles/BluetoothTile.java,getSecondaryLabel,Yes, this method may require permissions related to Bluetooth access to retrieve data about connected devices and their metadata (like battery level).
/com/android/systemui/qs/tiles/CameraToggleTile.java,isAvailable,Yes, it potentially requires permissions related to camera access and privacy configurations.
/com/android/systemui/qs/tiles/CameraToggleTile.java,getSensorId,Yes, this method likely requires permissions because it accesses the CAMERA sensor, which typically necessitates the CAMERA permission in Android.
/com/android/systemui/qs/tiles/DndTile.java,enableZenMode,Yes, this method likely requires permissions related to modifying the "Do Not Disturb" (DND) settings and accessing settings, as it is interacting with Zen mode and system settings.
/com/android/systemui/qs/tiles/InternetTile.java,setMobileDataIndicators,Yes, this method likely requires permissions to access mobile data indicators and perform operations related to cellular information.
/com/android/systemui/qs/tiles/InternetTile.java,setIsAirplaneMode,Yes, this method requires permissions. It likely involves changing the airplane mode setting, which requires special permissions in Android for security and user privacy reasons.
/com/android/systemui/qs/tiles/DataSaverTile.java,getLongClickIntent,Yes, it likely requires permissions to access certain settings (like data saver settings).
/com/android/systemui/qs/tiles/MicrophoneToggleTile.java,isAvailable,Yes, it likely requires permissions. The method checks if a microphone toggle is supported, which typically involves accessing hardware features that may require specific permissions.
/com/android/systemui/qs/tiles/NfcTile.java,isAvailable,Yes, this method requires permissions because it checks for the NFC (Near Field Communication) feature availability, which typically requires the `android.permission.NFC` permission to access NFC functionalities.
/com/android/systemui/qs/tiles/DreamTile.java,onReceive,Yes, the method `onReceive` appears to handle dock events through an `Intent`, which typically requires permissions related to dock state changes.
/com/android/systemui/qs/tiles/DreamTile.java,handleSetListening,Yes, this method likely requires permissions because it involves registering a broadcast receiver, which typically requires the appropriate permissions in Android.
/com/android/systemui/qs/tiles/SensorPrivacyToggleTile.java,handleClick,Yes, this method likely requires permissions due to the references to `mSensorPrivacyController` and `mKeyguard`, which may involve sensitive operations that typically require user permissions, such as accessing sensor data or handling security features.
/com/android/systemui/qs/tiles/AirplaneModeTile.java,setEnabled,Yes, it requires permission to modify airplane mode settings.
/com/android/systemui/qs/tiles/AirplaneModeTile.java,handleSetListening,Yes, because it registers a broadcast receiver, which requires the `RECEIVE_BOOT_COMPLETED` permission.
/com/android/systemui/qs/tiles/AirplaneModeTile.java,onReceive,Yes, this method requires permissions because it listens for the ACTION_AIRPLANE_MODE_CHANGED broadcast, which requires the permission to access airplane mode state changes.
/com/android/systemui/qs/tiles/LocationTile.java,getLongClickIntent,Yes, this method likely requires permissions to access location settings.
/com/android/systemui/qs/tiles/dialog/InternetDialogController.java,onStart,Yes, it likely requires permissions, such as access to network state or Wi-Fi configuration, due to interactions with telephony and connectivity services.
/com/android/systemui/qs/tiles/dialog/InternetDialogController.java,isAirplaneModeEnabled,Yes, because checking airplane mode status typically requires `ACCESS_NETWORK_STATE` permission.
/com/android/systemui/qs/tiles/dialog/InternetDialogController.java,setAirplaneModeDisabled,Yes, because changing airplane mode typically requires the "WRITE_SETTINGS" permission.
/com/android/systemui/qs/tiles/dialog/InternetDialogController.java,getSubtitleText,Yes, it requires permissions because accessing Wi-Fi status and mobile data connectivity status typically requires relevant permissions in Android, such as `ACCESS_WIFI_STATE` and `ACCESS_NETWORK_STATE`.
/com/android/systemui/qs/tiles/dialog/InternetDialogController.java,getSignalStrengthDrawable,Yes, it likely requires permissions related to telephony and network access, as it involves retrieving network signal strength and checking if the carrier network is active.
/com/android/systemui/qs/tiles/dialog/InternetDialogController.java,getSignalStrengthDrawableWithLevel,Yes, because accessing signal strength typically requires permissions related to telephony such as `ACCESS_NETWORK_STATE` and/or `ACCESS_FINE_LOCATION`.
/com/android/systemui/qs/tiles/dialog/InternetDialogController.java,getActiveAutoSwitchNonDdsSubId,Yes, this method requires permissions because it interacts with telephony features, which typically require special permissions like `READ_PHONE_STATE` or `ACCESS_NETWORK_STATE`.
/com/android/systemui/qs/tiles/dialog/InternetDialogController.java,getMobileSummary,Yes, the method requires permissions because it checks for mobile data states and network activities, which typically necessitate access to network-related permissions in Android (e.g., ACCESS_NETWORK_STATE, ACCESS_WIFI_STATE).
/com/android/systemui/qs/tiles/dialog/InternetDialogController.java,startActivity,Yes, this method may require permissions to start activities, depending on the intent being used.
/com/android/systemui/qs/tiles/dialog/InternetDialogController.java,launchWifiDetailsSetting,Yes, the method likely requires permissions to access Wi-Fi settings.
/com/android/systemui/qs/tiles/dialog/InternetDialogController.java,setWifiEnabled,Yes, because enabling or disabling Wi-Fi requires the `CHANGE_WIFI_STATE` permission.
/com/android/systemui/qs/tiles/dialog/InternetDialogController.java,isMobileDataEnabled,Yes, it requires permission to access telephony features, specifically to check if mobile data is enabled.
/com/android/systemui/qs/tiles/dialog/InternetDialogController.java,setMobileDataEnabled,Yes, this method requires permissions because it manipulates mobile data settings, which generally requires relevant permissions related to telephony and network management in Android.
/com/android/systemui/qs/tiles/dialog/InternetDialogController.java,setAutoDataSwitchMobileDataPolicy,Yes, this method likely requires permissions related to modifying mobile data settings, such as `CHANGE_NETWORK_STATE`.
/com/android/systemui/qs/tiles/dialog/InternetDialogController.java,isDataStateInService,Yes, the method likely requires permission for accessing telephony services to get the data state, specifically related to the use of `TelephonyManager`.
/com/android/systemui/qs/tiles/dialog/InternetDialogController.java,isVoiceStateInService,Yes, this method likely requires permissions related to telephony services, such as accessing the state of the telephony services.
/com/android/systemui/qs/tiles/dialog/InternetDialogController.java,activeNetworkIsCellular,Yes, because it interacts with network capabilities which typically require the `ACCESS_NETWORK_STATE` permission in Android.
/com/android/systemui/qs/tiles/dialog/InternetDialogController.java,connect,Yes, this method likely requires permissions to manage Wi-Fi connections.
/com/android/systemui/qs/tiles/dialog/InternetDialogController.java,scanWifiAccessPoints,Yes, it likely requires permissions to access Wi-Fi configurations.
/com/android/systemui/qs/tiles/dialog/InternetDialogController.java,updateListener,Yes, this method likely requires permissions because it interacts with telephony services and callbacks, which generally necessitate specific permissions in Android, such as `READ_PHONE_STATE` or `ACCESS_FINE_LOCATION`.
/com/android/systemui/qs/tiles/dialog/InternetDialog.java,onClickSeeMoreButton,Yes, this method likely requires permissions to access network settings.
/com/android/systemui/qs/tiles/dialog/WifiStateWorker.java,setWifiEnabled,Yes, because enabling or disabling Wi-Fi requires permissions related to network state.
/com/android/systemui/qs/tiles/dialog/WifiStateWorker.java,onReceive,Yes, this method requires permissions because it deals with Wi-Fi state changes which typically require the `ACCESS_WIFI_STATE` and possibly `CHANGE_WIFI_STATE` permissions in Android.
/com/android/systemui/qs/tiles/dialog/InternetAdapter.java,setWifiEntries,Yes, this method likely requires permissions to access and update Wi-Fi networks.
/com/android/systemui/qs/tiles/dialog/InternetAdapter.java,setMaxEntriesCount,Yes, it likely requires permissions related to modifying Wi-Fi settings.
/com/android/systemui/qs/tiles/dialog/InternetAdapter.java,onWifiClick,Yes, the method `onWifiClick` likely requires permissions related to Wi-Fi access and connectivity. Activities such as connecting to Wi-Fi networks and launching settings often need the `ACCESS_WIFI_STATE` and `CHANGE_WIFI_STATE` permissions.
/com/android/systemui/qs/external/PackageManagerAdapter.java,getPackageInfoAsUser,Yes, it likely requires permissions because retrieving package information typically involves accessing sensitive data about installed applications, which usually requires permissions in Android.
/com/android/systemui/qs/external/TileServiceManager.java,onReceive,Yes, this method may require permissions as it deals with package removal and service queries which can implicate sensitive user data or settings, depending on the context in which it is used.
/com/android/systemui/qs/external/CustomTile.java,handleClick,Yes, this method likely requires permissions, as it involves interactions with window management and possibly remote service interactions (e.g., 'addWindowToken', 'startActivityAndCollapse'), which typically require specific permissions in Android (like SYSTEM_ALERT_WINDOW or related).
/com/android/systemui/qs/external/CustomTile.java,startUnlockAndRun,Yes, this method likely requires permissions to interact with system services like the keyguard, which typically involve sensitive operations.
/com/android/systemui/qs/external/CustomTile.java,startActivityAndCollapse,Yes, this method requires permissions because it starts an Activity, which may require permissions depending on the type of Activity being launched.
/com/android/systemui/qs/external/TileServices.java,startActivity,Yes, this method likely requires permissions because starting activities in Android often involves user actions that might require specific permissions to operate, such as starting an activity from services or apps that alter user experience.
/com/android/systemui/qs/external/TileLifecycleManager.java,setBindService,Yes, because binding or unbinding services typically requires permissions, such as `BIND_SERVICE`.
/com/android/systemui/qs/external/TileLifecycleManager.java,bindServices,Yes, the method likely requires permission to bind services, as binding to a service typically involves permissions related to the service being accessed (e.g., foreground service or background activity permissions).
/com/android/systemui/qs/external/TileLifecycleManager.java,startPackageListening,Yes, it likely requires permissions. It registers receivers for package-related actions, which typically necessitates permissions like `PACKAGE_INSTALL` or similar for accessing package state changes.
/com/android/systemui/qs/external/TileLifecycleManager.java,onReceive,Yes, the method likely requires permissions related to broadcast receiver actions such as listening for package changes or user unlock events.
/com/android/systemui/qs/external/TileLifecycleManager.java,isPackageAvailable,Yes, the method likely requires permissions because it interacts with the PackageManager to check for package availability, which typically requires the `QUERY_ALL_PACKAGES` permission or similar permissions in Android to access package information.
/com/android/systemui/qs/customize/TileQueryHelper.java,addPackageTiles,Yes, this method requires permissions. It interacts with `PackageManager` and checks for the `BIND_QUICK_SETTINGS_TILE` permission, indicating it requires specific permissions to manage Quick Settings tiles.
/com/android/systemui/globalactions/GlobalActionsComponent.java,reboot,Yes, this method requires permissions because rebooting a device typically requires system-level permissions for security and stability reasons.
/com/android/systemui/globalactions/GlobalActionsDialogLite.java,onPress,Yes, because the method `performEmergencyCall` typically requires permissions related to making emergency calls.
/com/android/systemui/globalactions/GlobalActionsDialogLite.java,onPress,Yes, it likely requires permissions to initiate a phone call or access the emergency dialer functionality.
/com/android/systemui/globalactions/GlobalActionsDialogLite.java,run,Yes, the method likely requires permissions for taking a screenshot and logging events related to it.
/com/android/systemui/globalactions/GlobalActionsDialogLite.java,onPress,Yes, this method likely requires permissions as it involves launching a bug report handler, which typically requires specific permissions related to system diagnostics.
/com/android/systemui/globalactions/GlobalActionsDialogLite.java,run,Yes, because the method appears to invoke a function related to requesting a bug report which typically requires specific permissions to access system diagnostics or logs on Android devices.
/com/android/systemui/globalactions/GlobalActionsDialogLite.java,onLongPress,Yes, the method likely requires permissions to perform a bug report, as it interacts with the `ActivityManager` and requests a full bug report which typically needs specific permissions.
/com/android/systemui/globalactions/GlobalActionsDialogLite.java,onPress,Yes, this method requires permissions. It involves starting a new activity with an intent, which may require permissions based on the activity being started (like accessing settings).
/com/android/systemui/globalactions/GlobalActionsDialogLite.java,getVoiceAssistAction,Yes, because it uses intents that may require permissions based on the action being performed, such as starting a voice assistant.
/com/android/systemui/globalactions/GlobalActionsDialogLite.java,onPress,Yes, because the method involves locking the device, which typically requires permissions related to device administration or security features.
/com/android/systemui/globalactions/GlobalActionsDialogLite.java,onToggle,Yes, it likely requires permissions, specifically for changing airplane mode settings and possibly for managing telephony features.
/com/android/systemui/globalactions/GlobalActionsDialogLite.java,onToggle,Yes, it likely requires permission to change the ringer mode, typically `MODIFY_AUDIO_SETTINGS`.
/com/android/systemui/globalactions/GlobalActionsDialogLite.java,onServiceStateChanged,Yes, it likely requires permissions to access telephony services and airplane mode states.
/com/android/systemui/globalactions/GlobalActionsDialogLite.java,changeAirplaneModeSystemSetting,Yes, this method requires permissions because it changes the system setting for airplane mode, which typically requires the `CHANGE_AIRPLANE_MODE` permission in Android.
/com/android/systemui/globalactions/GlobalActionsDialogLite.java,showPowerOptionsMenu,Yes, this method likely requires permissions related to displaying system UI or power options, as it involves showing a power options menu.
/com/android/systemui/user/CreateUserActivity.java,addUserNow,Yes, this method likely requires permissions related to user management, such as adding or switching users on the device.
/com/android/systemui/user/CreateUserActivity.java,switchToUser,Yes, this method likely requires permissions to switch users in the Android system, as user management typically involves security and sensitive operations.
/com/android/systemui/user/CreateUserActivity.java,startActivity,Yes, this method requires permissions. It involves starting an activity, which typically requires the permission to interact with other applications and system resources.
/com/android/systemui/shared/tracing/FrameProtoTracer.java,writeToFile,Yes, it requires permissions to write to a file in the Android file system.
/com/android/systemui/shared/plugins/PluginEnabler.java,setDisabled,Yes, because it modifies the state of a plugin using the PackageManager, typically requiring permissions to alter app packages.
/com/android/systemui/shared/plugins/PluginManagerImpl.java,startListening,Yes, the method likely requires permissions because it uses `registerReceiver`, which typically requires the `RECEIVE_BOOT_COMPLETED` or other related permissions to listen for broadcasts in an Android application context.
/com/android/systemui/shared/plugins/PluginActionManager.java,loadPluginComponent,Yes, the method checks for a specific permission using `checkPermission`, so it requires runtime permissions.
/com/android/systemui/shared/system/RecentsAnimationControllerCompat.java,screenshotTask,Yes, the method likely requires permissions related to taking screenshots.
/com/android/systemui/shared/system/PackageManagerWrapper.java,getActivityInfo,Yes, this method likely requires permissions because it interacts with the system's package manager, which typically involves accessing sensitive information about applications installed on the device.
/com/android/systemui/shared/system/ActivityManagerWrapper.java,getRunningTask,Yes, requires permission to access the list of running tasks.
/com/android/systemui/shared/system/ActivityManagerWrapper.java,getRunningTasks,Yes, this method requires permissions because it deals with obtaining information about running tasks, which typically requires relevant permissions to access app activity details.
/com/android/systemui/shared/system/ActivityManagerWrapper.java,getRunningTasks,Yes, because accessing running tasks typically requires the `android.permission.GET_TASKS` permission.
/com/android/systemui/shared/system/ActivityManagerWrapper.java,invalidateHomeTaskSnapshot,Yes, the method requires permission `MANAGE_ACTIVITY_TASKS` to find the home task automatically.
/com/android/systemui/shared/system/ActivityManagerWrapper.java,closeSystemWindows,Yes, because closing system windows may require permissions related to system-level interactions and UI management.
/com/android/systemui/shared/system/ActivityManagerWrapper.java,removeAllRecentTasks,Yes, because it modifies recent tasks, which typically requires permissions related to task management or modifying app states.
/com/android/systemui/shared/system/ActivityManagerWrapper.java,showVoiceSession,Yes, it likely requires permissions to interact with the voice interaction service.
/com/android/systemui/navigationbar/NavigationModeController.java,getCurrentUserContext,Yes, because it involves accessing user context and package information that typically require permissions in Android, such as accessing the user's identity and application context.
/com/android/systemui/navigationbar/NavigationBar.java,disable,Yes, this method likely requires permissions because it involves disabling UI elements or features, which typically requires system-level permissions in Android.
/com/android/systemui/navigationbar/NavigationBar.java,onAccessibilityLongClick,Yes, this method likely requires permission to start an activity, as it involves launching an `AccessibilityButtonChooserActivity` which typically requires the `BIND_ACCESSIBILITY_SERVICE` permission or similar due to its nature related to accessibility services.
/com/android/systemui/navigationbar/NavigationBarController.java,updateAccessibilityButtonModeIfNeeded,Yes, because it interacts with secure settings related to accessibility, which typically requires specific permissions in Android.
/com/android/systemui/navigationbar/NavBarHelper.java,setupOnFirstBar,Yes, because it involves registering content observers and listeners, which typically require permissions related to accessing system settings and user details.
/com/android/systemui/navigationbar/gestural/EdgeBackGestureHandler.java,sendEvent,Yes, this method requires permissions because it interacts with device input events, which typically requires input device permissions in Android.
/com/android/systemui/clipboardoverlay/IntentCreator.java,getShareIntent,Yes, because it interacts with URIs and requires permissions for reading from external sources (e.g., FLAG_GRANT_READ_URI_PERMISSION).
/com/android/systemui/clipboardoverlay/IntentCreator.java,getImageEditIntent,Yes, this method requires permissions because it interacts with URIs that may refer to images, which typically requires reading external storage permissions.
/com/android/systemui/clipboardoverlay/IntentCreator.java,getRemoteCopyIntent,Yes, because it involves handling clipboard data which may require permissions related to reading from or writing to external storage or accessing other resources.
/com/android/systemui/clipboardoverlay/ClipboardListener.java,onPrimaryClipChanged,Yes, because it deals with clipboard operations, which may require permissions related to accessing the clipboard data.
/com/android/systemui/clipboardoverlay/EditTextActivity.java,onStart,Yes, this method likely requires permissions to access the clipboard and handle clipboard data operations in Android.
/com/android/systemui/wallpapers/ImageWallpaper.java,loadWallpaperAndDrawFrameInternal,Yes, this method requires permissions because it involves loading wallpapers, which typically requires specific permissions in Android, such as `SET_WALLPAPER`.
/com/android/systemui/usb/StorageNotification.java,start,Yes, permissions are required. The method registers receivers that listen for actions requiring the "MOUNT_UNMOUNT_FILESYSTEMS" permission.
/com/android/systemui/usb/StorageNotification.java,onVolumeUnmountable,Yes, because the method involves creating notifications, which usually requires permissions to access notifications in Android (e.g., `POST_NOTIFICATIONS`).
/com/android/systemui/usb/StorageNotification.java,onVolumeBadRemoval,Yes, this method may require permission to access certain volume information or to show notifications, which typically requires permissions like `READ_EXTERNAL_STORAGE` or `POST_NOTIFICATIONS` in Android.
/com/android/systemui/usb/StorageNotification.java,buildUnmountPendingIntent,Yes, because the method involves unmounting storage, which typically requires storage permissions.
/com/android/systemui/usb/StorageNotification.java,isTv,Yes, because it checks for a system feature (FEATURE_LEANBACK), which requires the `QUERY_ALL_PACKAGES` permission to access system features in some cases.
/com/android/systemui/usb/UsbConfirmActivity.java,onResume,Yes, this method likely requires permissions due to the checks for audio recording capabilities and device connections in the logic, which typically necessitate permissions such as RECORD_AUDIO.
/com/android/systemui/usb/UsbConfirmActivity.java,onConfirm,Yes, the method involves granting permissions and managing default packages, which typically requires specific permissions in Android.
/com/android/systemui/usb/UsbDebuggingActivity.java,onReceive,Yes, this method is related to USB connectivity, which requires permissions such as `android.permission.USB_PERMISSIONS` or related permissions to access USB state changes in Android.
/com/android/systemui/usb/UsbDebuggingActivity.java,notifyService,Yes, because notifying the ADB service likely involves modifying adb permissions or settings related to debugging, which requires appropriate permissions.
/com/android/systemui/usb/UsbDialogHelper.java,packageHasAudioRecordingPermission,Yes, it requires RECORD_AUDIO permission to check if the package has it specified in the manifest.
/com/android/systemui/usb/UsbDialogHelper.java,grantUidAccessPermission,Yes, this method requires permissions as it grants USB permission to a device or accessory for the calling uid.
/com/android/systemui/usb/UsbDialogHelper.java,setDefaultPackage,Yes, because it likely involves setting a default package for the device or accessory, which may require permissions related to device administration or USB access.
/com/android/systemui/usb/UsbDialogHelper.java,confirmDialogStartActivity,Yes, because it involves USB accessory or device handling, which requires appropriate permissions (e.g., `USB_PERMISSION`).
/com/android/systemui/usb/UsbAudioWarningDialogMessage.java,hasRecordPermission,Yes, it checks for audio recording permission.
/com/android/systemui/usb/UsbAudioWarningDialogMessage.java,getMessageId,Yes, the method requires permissions because it checks for `hasRecordPermission`, `hasAudioCapture`, and `hasAudioPlayback`, which indicate that audio recording or playback permissions are needed.
/com/android/systemui/usb/UsbAudioWarningDialogMessage.java,getUsbAccessoryPromptId,Yes, requires permission to access USB accessories.
/com/android/systemui/usb/UsbDisconnectedReceiver.java,onReceive,Yes, this method requires permissions because it deals with USB devices and accessories, which typically require specific permissions (e.g., `USB_PERMISSION`) in Android to access device details and manage connections.
/com/android/systemui/usb/UsbPermissionActivity.java,onConfirm,Yes, likely requires permissions, as it involves granting access and setting package defaults, which typically need user consent or specific permissions.
/com/android/systemui/usb/UsbResolverActivity.java,onCreate,Yes, this method requires permissions because it interacts with USB devices, which typically requires specific permissions in Android (like `USB_PERMISSION`).
/com/android/systemui/usb/UsbResolverActivity.java,onTargetSelected,Yes, it likely requires permissions related to USB access and possibly managing user profiles or activities, which generally require specific permissions in Android.
/com/android/systemui/usb/UsbAccessoryUriActivity.java,onClick,Yes, this method likely requires permissions because it launches an activity using an Intent, which may need permissions depending on the URI being accessed.
/com/android/systemui/usb/UsbDebuggingSecondaryUserActivity.java,onReceive,Yes, it requires permissions. This method interacts with USB state changes which typically requires USB permissions in the Android manifest (e.g., `android.permission.USB_PERMISSION`).
/com/android/systemui/usb/tv/TvUsbConfirmActivity.java,onResume,Yes, because the method checks for audio recording permission.
/com/android/systemui/usb/tv/TvUsbPermissionActivity.java,onResume,Yes, because it references `packageHasAudioRecordingPermission`, indicating it may require audio recording permissions.
/com/android/systemui/telephony/TelephonyCallback.java,onCallStateChanged,Yes, this method likely requires permissions as it deals with call state changes, which generally require permissions like `READ_PHONE_STATE` in Android for accessing the phone state information.
/com/android/systemui/telephony/TelephonyListenerManager.java,addCallStateListener,Yes, this method likely requires permissions related to accessing telephony features, such as reading phone state or managing calls.
/com/android/systemui/telephony/TelephonyListenerManager.java,updateListening,Yes, because it manages telephony callbacks, which typically require permissions such as `READ_PHONE_STATE` or `ACCESS_FINE_LOCATION`.
/com/android/systemui/theme/ThemeOverlayController.java,handleWallpaperColors,Yes, this method involves handling wallpaper colors, which typically requires specific permissions related to changing or accessing wallpaper settings.
/com/android/systemui/theme/ThemeOverlayController.java,onReceive,Yes, it likely requires permissions because it involves user profiles and wallpaper changes, which typically necessitate permission checks in Android.
/com/android/systemui/theme/ThemeOverlayController.java,start,Yes, the method likely requires permissions because it registers a broadcast receiver and interacts with system settings or user-related information, which typically requires specific permissions in the Android SDK.
/com/android/systemui/bluetooth/BroadcastDialog.java,startBluetoothLeBroadcast,Yes, because starting a Bluetooth LE broadcast typically requires Bluetooth permissions.
/com/android/systemui/bluetooth/BroadcastDialog.java,startLeBroadcastDialog,Yes, this method likely requires permissions since it involves sending a broadcast, which typically requires the appropriate permission in Android.
/com/android/systemui/people/PeopleSpaceUtils.java,getNotificationsByUri,Yes, the method requires permissions because it checks for the permission to read contacts (`hasReadContactsPermission`).
/com/android/systemui/people/PeopleSpaceUtils.java,getDataFromContactsOnBackgroundThread,Yes, this method likely requires permissions to access contacts data.
/com/android/systemui/people/PeopleSpaceUtils.java,getDataFromContacts,Yes, it requires permissions to access contacts.
/com/android/systemui/people/PeopleSpaceUtils.java,updateTileWithBirthdayAndUpdateAffinity,Yes, the method involves querying contact information, which typically requires permissions related to accessing contacts.
/com/android/systemui/people/PeopleSpaceUtils.java,getContactLookupKeysWithBirthdaysToday,Yes, because it likely requires permission to access contacts data.
/com/android/systemui/people/PeopleProvider.java,call,Yes, the method includes a permission check to verify if the caller has the necessary permissions to access certain APIs, indicated by the `doesCallerHavePermission` method call.
/com/android/systemui/people/PeopleProvider.java,doesCallerHavePermission,Yes, because it checks for specific permissions using the `checkPermission` method from the `PackageManager`.
/com/android/systemui/people/PeopleProvider.java,query,Yes, it likely requires permissions because it involves querying a database or content provider, which typically necessitates permissions such as READ_EXTERNAL_STORAGE or similar.
/com/android/systemui/people/PeopleProvider.java,insert,Yes, this method likely requires permissions because it involves inserting data, which typically requires write permissions to a content provider in Android.
/com/android/systemui/people/PeopleProvider.java,delete,Yes, this method likely requires permissions because it is interacting with a `Uri`, which typically involves accessing content that may require permissions (e.g., reading or writing to storage or contacts).
/com/android/systemui/people/PeopleProvider.java,update,Yes, this method likely requires permission to access or modify data represented by the Uri, which is common in methods that interact with content providers.
/com/android/systemui/people/NotificationHelper.java,hasReadContactsPermission,Yes, it checks if a package has permission to read contacts, which requires the READ_CONTACTS permission.
/com/android/systemui/people/NotificationHelper.java,getContactUri,Yes, this method likely requires permissions to access contact information, such as `READ_CONTACTS`, because it works with `Person` objects and retrieves `Uris` associated with them.
/com/android/systemui/people/PeopleTileViewHelper.java,isDndBlockingTileData,Yes, because the method deals with DND (Do Not Disturb) settings, which require specific permissions to access.
/com/android/systemui/people/PeopleTileViewHelper.java,resolveImage,Yes, this method likely requires permissions to access the content associated with the Uri parameter, which could involve reading from external storage or other protected resources.
/com/android/systemui/people/widget/LaunchConversationActivity.java,onCreate,Yes, this method requires permissions. It potentially deals with user data and launching activities, which typically requires permissions in Android.
/com/android/systemui/people/widget/LaunchConversationActivity.java,clearNotificationIfPresent,Yes, because clearing notifications generally requires permission to access and modify the notification system in Android.
/com/android/systemui/people/widget/PeopleSpaceWidgetManager.java,init,Yes, this method requires permissions because it registers receivers for various system-wide broadcasts, which typically requires specific permissions declared in the AndroidManifest.xml file.
/com/android/systemui/people/widget/PeopleSpaceWidgetManager.java,augmentTileFromNotifications,Yes, the method requires permissions because it checks for `READ_CONTACTS` permission to access notifications associated with a contact URI.
/com/android/systemui/people/widget/PeopleSpaceWidgetManager.java,addNewWidget,Yes, because adding or modifying widgets typically requires permissions to access app widget functionality and possibly to access specific user data or app resources.
/com/android/systemui/people/widget/PeopleSpaceWidgetManager.java,getPriorityTiles,Yes, this method requires permissions as it deals with user conversations and potentially sensitive information related to notifications and contacts, which typically require permissions to access in Android.
/com/android/systemui/people/widget/PeopleSpaceWidgetManager.java,getNotificationPolicyState,Yes, this method requires permissions because it interacts with the notification policy, which typically requires certain permissions related to managing notifications and audio states in the Android system.
/com/android/systemui/people/widget/PeopleBackupHelper.java,performBackup,Yes, this method likely requires permissions because it involves reading and writing data for backup purposes, which typically requires storage permissions in Android.
/com/android/systemui/people/widget/PeopleBackupHelper.java,updateWidgets,Yes, it requires permissions to send broadcasts.
/com/android/systemui/shade/CameraLauncher.java,launchCamera,Yes, because launching the camera typically requires camera permissions to access hardware.
/com/android/systemui/shade/NotificationShadeWindowControllerImpl.java,applyKeyguardFlags,Yes, because the method deals with the keyguard state and potentially sensitive user interface flags, which typically require permissions to access.
/com/android/systemui/shade/NotificationPanelViewController.java,maybeVibrateOnOpening,Yes, this method requires permissions because it involves vibrating the device, which typically requires the "VIBRATE" permission in Android.
/com/android/systemui/recents/OverviewProxyService.java,startScreenPinning,Yes, because starting screen pinning typically requires permission to restrict user interface interactions and protect user privacy.
/com/android/systemui/recents/OverviewProxyService.java,sendEvent,Yes, this method likely requires permissions because it involves injecting input events, which typically requires the `INJECT_EVENTS` permission on Android.
/com/android/systemui/recents/OverviewProxyService.java,expandNotificationPanel,Yes, this method likely requires permission to expand the notification panel, as it involves UI interaction and potentially sensitive information.
/com/android/systemui/recents/OverviewProxyService.java,toggleNotificationPanel,Yes, because toggling the notification panel typically requires permission to access notifications or system services related to device UI.
/com/android/systemui/recents/OverviewProxyService.java,internalConnectToCurrentUser,Yes, because it involves binding to a service (`bindServiceAsUser`), which typically requires permission.
/com/android/systemui/recents/ScreenPinningRequest.java,onClick,Yes, because it involves starting a system lock task mode, which typically requires permissions related to device administration or screen pinning.
/com/android/systemui/wallet/ui/WalletScreenController.java,onCardClicked,Yes, the method interacts with the `startPendingIntentDismissingKeyguard`, which typically requires permissions related to the keyguard or possibly sensitive user data.
/com/android/systemui/wallet/controller/QuickAccessWalletController.java,queryWalletCards,Yes, the method likely requires permissions related to accessing wallet features or user data to retrieve wallet cards.
/com/android/systemui/wallet/controller/QuickAccessWalletController.java,setupDefaultPaymentAppObserver,Yes, it likely requires permissions because it involves observing changes to the default payment app and interacting with secure settings, which typically require specific permissions for security and privacy reasons in Android.
/com/android/systemui/complication/ComplicationTypesUpdater.java,onStart,Yes, it requires permissions because it involves registering a `ContentObserver` which typically requires access to certain settings or data that may be protected by permissions.
/com/android/systemui/complication/DreamHomeControlsComplication.java,onClickHomeControls,Yes, this method likely requires permissions because it involves starting an activity, which typically needs permission to access system-level features in Android, especially when dealing with user interfaces or security-related actions like dismissing the keyguard.
/com/android/systemui/wmshell/BubblesManager.java,onUserChangedBubble,Yes, because it involves managing notifications and possibly interacting with user settings, which typically requires notification permissions in Android.
/com/android/systemui/screenrecord/ScreenMediaRecorder.java,prepare,Yes, it likely requires permissions because it involves accessing media projection and recording via `MediaProjectionManager` and `MediaRecorder`, which typically require specific permissions in Android, such as `android.permission.RECORD_AUDIO` and `android.permission.START_MEDIA_PROJECTION`.
/com/android/systemui/screenrecord/ScreenMediaRecorder.java,start,Yes, it likely requires permissions because screen recording access typically involves user privacy considerations and may require permissions like RECORD_AUDIO or SYSTEM_ALERT_WINDOW.
/com/android/systemui/screenrecord/ScreenMediaRecorder.java,end,Yes, because stopping a screen recording typically requires permission to access the media or recording features.
/com/android/systemui/screenrecord/ScreenMediaRecorder.java,recordInternalAudio,Yes, this method likely requires permissions because it involves recording audio internally.
/com/android/systemui/screenrecord/ScreenMediaRecorder.java,save,Yes, this method requires permissions because it interacts with the device's storage to save recorded video files. Specifically, it likely requires WRITE_EXTERNAL_STORAGE permissions to store files in external storage.
/com/android/systemui/screenrecord/RecordingService.java,onStartCommand,Yes, this method requires permissions because it involves operations related to notifications and media projection, which typically require appropriate permissions in the Android manifest (such as `android.permission.FOREGROUND_SERVICE`, `android.permission.WRITE_EXTERNAL_STORAGE`, or `android.permission.MEDIA_CONTENT_CONTROL`).
/com/android/systemui/screenrecord/RecordingService.java,updateState,Yes, the method sends a broadcast, which typically requires permissions if other components need to receive it.
/com/android/systemui/screenrecord/RecordingService.java,startRecording,Yes, recording audio typically requires the `RECORD_AUDIO` permission in Android.
/com/android/systemui/screenrecord/RecordingService.java,createSaveNotification,Yes, this method requires permissions because it is creating a notification, which typically requires the `POST_NOTIFICATIONS` permission in Android.
/com/android/systemui/screenrecord/RecordingService.java,saveRecording,Yes, it likely requires permissions related to notifications and possibly storage, depending on how recordings are saved and managed.
/com/android/systemui/screenrecord/RecordingService.java,setTapsVisible,Yes, this method likely requires permissions because it accesses `Settings.System`, which typically requires the `WRITE_SETTINGS` permission to modify system settings on Android devices.
/com/android/systemui/screenrecord/ScreenRecordDialog.java,onCreate,Yes, this method requires permissions because it involves requesting screen capture, which typically requires the `SYSTEM_ALERT_WINDOW` and `WRITE_EXTERNAL_STORAGE` permissions on Android devices.
/com/android/systemui/screenrecord/ScreenRecordDialog.java,requestScreenCapture,Yes, it requires permission to capture the screen.
/com/android/systemui/screenrecord/ScreenRecordDialog.java,onReceiveResult,Yes, the method involves capturing the screen, which requires permission to access screen recording features.
/com/android/systemui/screenrecord/RecordingController.java,createScreenRecordDialog,Yes, this method likely requires permissions because it deals with screen recording, which typically requires user consent and special permissions related to capturing screen content.
/com/android/systemui/screenrecord/ScreenRecordingMuxer.java,mux,Yes, this method likely requires permissions, particularly related to file access and media handling in Android, such as reading or writing to storage.
/com/android/systemui/screenrecord/ScreenInternalAudioRecorder.java,setupSimple,Yes, this method requires permissions. It involves audio recording and playback operations which typically require permissions like `RECORD_AUDIO` and `MODIFY_AUDIO_SETTINGS` in Android.
/com/android/systemui/screenrecord/ScreenInternalAudioRecorder.java,writeOutput,Yes, this method likely requires permissions related to media handling, such as capturing or modifying audio/video content.
/com/android/systemui/screenrecord/ScreenInternalAudioRecorder.java,start,Yes, this method likely requires permissions because it involves audio recording, which typically requires the RECORD_AUDIO permission in Android.
/com/android/systemui/sensorprivacy/television/TvUnblockSensorActivity.java,onCreate,Yes, because the method involves checking and managing sensor privacy settings, which typically requires permissions to access camera and microphone resources.
/com/android/systemui/sensorprivacy/television/TvUnblockSensorActivity.java,updateUiForSoftwareToggle,Yes, this method requires permissions because it interacts with the microphone and camera, which typically require user permissions (e.g., RECORD_AUDIO and CAMERA).
/com/android/systemui/sensorprivacy/television/TvSensorPrivacyChangedActivity.java,onCreate,Yes, the method may require permissions related to accessing sensor data, depending on the implementation and context in which it is used (e.g., checking sensor states).
/com/android/systemui/sensorprivacy/television/TvSensorPrivacyChangedActivity.java,updateUiForMicUpdate,Yes, this method likely requires permissions. It manipulates UI components related to microphone privacy settings, indicating it interacts with the microphone, which generally requires microphone-related permissions in Android.
/com/android/systemui/sensorprivacy/television/TvSensorPrivacyChangedActivity.java,isExplicitUserInteractionAudioBypassAllowed,Yes, this method checks a global setting related to user interaction audio, which typically requires permission to access.
/com/android/systemui/dreams/DreamOverlayRegistrant.java,onStart,Yes, this method likely requires permissions because it involves registering a broadcast receiver, which typically requires the `RECEIVE_BOOT_COMPLETED` or similar permissions in Android.
/com/android/systemui/dreams/touch/scrim/BouncerlessScrimController.java,expand,Yes, it likely requires permissions because it involves waking up the device (`wakeUp` method on `mPowerManager`), which typically requires specific permissions in Android, such as `WAKE_LOCK`.
/com/android/systemui/battery/BatteryMeterViewController.java,registerShowBatteryPercentObserver,Yes, because it interacts with system settings and content observers, which typically require specific permissions.
/com/android/systemui/battery/BatteryMeterViewController.java,registerGlobalBatteryUpdateObserver,Yes, because it interacts with battery settings and requires access to system settings which typically need permissions.
/com/android/systemui/accessibility/WindowMagnificationController.java,mirrorDisplay,Yes, because it likely interacts with the display and window manager services which may require system-level permissions.
/com/android/systemui/accessibility/SystemActions.java,start,Yes, it likely requires permissions because it involves registering a receiver, which typically requires declaring permissions in the Android manifest.
/com/android/systemui/accessibility/SystemActions.java,registerOrUnregisterDismissNotificationShadeAction,Yes, because it involves registering system actions that may require permissions related to accessibility features.
/com/android/systemui/accessibility/SystemActions.java,sendKeyEventIdentityCleared,Yes, this method likely requires permissions because it involves injecting input events, which generally requires appropriate permissions in Android to ensure security and prevent unauthorized input manipulation.
/com/android/systemui/accessibility/SystemActions.java,handleTakeScreenshot,Yes, it likely requires permissions because taking screenshots generally necessitates user consent and, in some cases, specific permissions in Android.
/com/android/systemui/accessibility/SecureSettingsContentObserver.java,getSettingsValue,Yes, because accessing secure settings usually requires specific permissions to read user data.
/com/android/systemui/accessibility/WindowMagnificationSettings.java,onProgressChanged,Yes, this method interacts with `Settings.Secure`, which typically requires permissions to access or modify settings, such as `WRITE_SETTINGS`.
/com/android/systemui/accessibility/WindowMagnificationSettings.java,showSettingPanel,Yes, because it involves changing accessibility settings and managing system gestures, which typically require permissions in Android.
/com/android/systemui/accessibility/WindowMagnificationSettings.java,setDiagonalScrolling,Yes, it requires permissions because it modifies system settings (ACCESSIBILITY_ALLOW_DIAGONAL_SCROLLING).
/com/android/systemui/accessibility/floatingmenu/MenuInfoRepository.java,registerObserversAndCallbacks,Yes, requires permissions for accessing secure settings and accessibility services.
/com/android/systemui/accessibility/floatingmenu/MenuInfoRepository.java,isMenuFadeEffectEnabledFromSettings,Yes, this method likely requires permissions related to accessing user settings, specifically for retrieving the fade effect setting from secure settings.
/com/android/systemui/accessibility/floatingmenu/MenuViewLayer.java,run,Yes, this method requires permissions. It's interacting with accessibility services, which typically require specific permissions to access user-sensitive features on the device.
/com/android/systemui/accessibility/accessibilitymenu/AccessibilityMenuService.java,onServiceConnected,Yes, the method requires permissions because it registers receivers for actions that may require the `WRITE_SECURE_SETTINGS` permission.
/com/android/systemui/accessibility/accessibilitymenu/AccessibilityMenuService.java,performGlobalActionInternal,Yes, the method sends a broadcast which typically requires permissions to ensure that only authorized apps can receive that broadcast.
/com/android/systemui/accessibility/accessibilitymenu/AccessibilityMenuService.java,handleClick,Yes, this method likely requires permissions because it triggers various system actions (like adjusting volume, taking a screenshot, or launching settings), which typically require specific permissions in Android.
/com/android/systemui/accessibility/accessibilitymenu/AccessibilityMenuService.java,adjustBrightness,Yes, the method likely requires permissions because it adjusts the display brightness, which typically requires system-level permissions in Android.
/com/android/systemui/accessibility/accessibilitymenu/AccessibilityMenuService.java,adjustVolume,Yes, this method likely requires permissions because it involves adjusting the volume of audio on the device, which typically requires permissions related to audio settings.
/com/android/systemui/accessibility/accessibilitymenu/view/A11yMenuOverlayLayout.java,configureLayout,Yes, this method likely requires permissions related to accessibility and window management, as it involves creating and manipulating views in the Accessibility menu and interacting with the `WindowManager`.
/com/android/systemui/volume/VolumeDialogControllerImpl.java,setAudioManagerStreamVolume,Yes, this method likely requires permissions because it involves altering audio stream settings, which typically requires the "MODIFY_AUDIO_SETTINGS" permission in Android.
/com/android/systemui/volume/VolumeDialogControllerImpl.java,register,Yes, the method interacts with media sessions and volume policy, which typically requires permissions related to audio and media access.
/com/android/systemui/volume/VolumeDialogControllerImpl.java,setRingerMode,Yes, because setting the ringer mode may require permission to modify audio settings in the device.
/com/android/systemui/volume/VolumeDialogControllerImpl.java,setZenMode,Yes, because setting the Zen mode typically requires permission to modify the Do Not Disturb settings.
/com/android/systemui/volume/VolumeDialogControllerImpl.java,setStreamMute,Yes, this method likely requires permissions to modify audio stream settings.
/com/android/systemui/volume/VolumeDialogControllerImpl.java,setStreamVolume,Yes, this method likely requires permissions since it deals with adjusting the stream volume, which typically requires audio-related permissions in Android.
/com/android/systemui/volume/VolumeDialogControllerImpl.java,vibrate,Yes, this method requires permissions because it likely accesses the device's vibration functionality, which typically requires the `VIBRATE` permission in Android.
/com/android/systemui/volume/VolumeDialogControllerImpl.java,onVolumeChangedW,Yes, the `onVolumeChangedW` method may require permissions related to audio settings, such as adjusting volume or modifying audio settings in an Android application.
/com/android/systemui/volume/VolumeDialogControllerImpl.java,updateZenModeW,Yes, this method likely requires permissions because it interacts with system settings (`Settings.Global.ZEN_MODE`), which typically require specific permissions to modify in Android.
/com/android/systemui/volume/VolumeDialogControllerImpl.java,updateZenConfig,Yes, this method likely requires permissions due to its interaction with notification settings, which typically requires specific permissions such as `MODIFY_AUDIO_SETTINGS` or `ACCESS_NOTIFICATION_POLICY`.
/com/android/systemui/volume/VolumeDialogControllerImpl.java,updateRingerModeExternalW,Yes, this method likely requires permissions to change the ringer mode, as modifying ringer settings typically requires specific system permissions in Android.
/com/android/systemui/volume/VolumeDialogControllerImpl.java,updateRingerModeInternalW,Yes, this method likely requires permissions to change the ringer mode, as it modifies the device's audio state.
/com/android/systemui/volume/VolumeDialogControllerImpl.java,onSetRingerModeW,Yes, this method likely requires permissions because it involves changing the ringer mode of the device, which usually requires the "MODIFY_AUDIO_SETTINGS" permission in Android.
/com/android/systemui/volume/VolumeDialogControllerImpl.java,onSetStreamVolumeW,Yes, this method likely requires permissions because it involves adjusting audio volume levels, which typically requires `MODIFY_AUDIO_SETTINGS` permission in Android.
/com/android/systemui/volume/VolumeDialogControllerImpl.java,init,Yes, the method involves accessing content resolvers and registering content observers, which typically require specific permissions in Android to read system settings.
/com/android/systemui/volume/VolumeDialogControllerImpl.java,init,Yes, because it uses actions related to system broadcasts (e.g., volume changes, configurations, screen state), which typically require permissions to receive.
/com/android/systemui/volume/VolumeDialogControllerImpl.java,setStreamVolume,Yes, it requires permission to adjust the volume levels.
/com/android/systemui/keyboard/KeyboardUI.java,init,Yes, this method requires permissions because it involves accessing Bluetooth services and system services, which generally require specific permissions in Android, such as `BLUETOOTH` and `BLUETOOTH_ADMIN`.
/com/android/systemui/keyboard/KeyboardUI.java,processKeyboardState,Yes, the method appears to interact with Bluetooth features, which typically require permissions such as `BLUETOOTH` and `BLUETOOTH_ADMIN`.
/com/android/systemui/keyboard/KeyboardUI.java,getCachedBluetoothDevice,Yes, this method may require permissions related to Bluetooth access in Android, as it deals with `BluetoothDevice` and caching Bluetooth devices.
/com/android/systemui/keyboard/KeyboardUI.java,startScanning,Yes, this method requires permissions because it involves scanning for Bluetooth LE devices, which typically requires the `BLUETOOTH_SCAN` permission in Android.
/com/android/systemui/keyboard/KeyboardUI.java,onDeviceAddedInternal,Yes, this method likely requires permissions related to Bluetooth operations, such as discovering and pairing devices.
/com/android/systemui/keyboard/KeyboardUI.java,handleMessage,Yes, this method may require permissions because it deals with Bluetooth functionality, which typically requires permissions like `BLUETOOTH` and `BLUETOOTH_ADMIN`.
/com/android/systemui/keyboard/KeyboardUI.java,handleMessage,Yes, this method likely requires permissions because it handles messages related to Bluetooth functionality, such as enabling Bluetooth and monitoring connection states, which typically needs specific permissions in Android (e.g., `BLUETOOTH`, `BLUETOOTH_ADMIN`).
/com/android/systemui/keyboard/KeyboardUI.java,isDeviceDiscoverable,Yes, because checking if a device is discoverable may involve Bluetooth permissions for accessing Bluetooth settings.
/com/android/systemui/keyboard/KeyboardUI.java,onBatchScanResults,Yes, this method likely requires permissions because it deals with Bluetooth scanning results, which typically involves accessing Bluetooth device information and requires specific permissions (such as BLUETOOTH and BLUETOOTH_ADMIN) in the Android environment.
/com/android/systemui/keyboard/KeyboardUI.java,onScanResult,Yes, this method likely requires permissions related to Bluetooth, as it involves handling scan results for Bluetooth devices, which typically requires permissions like `BLUETOOTH` and `BLUETOOTH_ADMIN` in Android.
/com/android/systemui/media/RingtonePlayer.java,start,Yes, the method likely requires permissions related to audio services, such as `MODIFY_AUDIO_SETTINGS` or `BIND_AUDIO_SERVICE`, to interact with system audio components and services.
/com/android/systemui/media/RingtonePlayer.java,play,Yes, this method likely requires permissions related to playing audio, such as `android.permission.READ_EXTERNAL_STORAGE` if the `Uri` points to an audio file stored externally.
/com/android/systemui/media/RingtonePlayer.java,playWithVolumeShaping,Yes, it likely requires permissions for audio playback and possibly accessing system audio settings.
/com/android/systemui/media/RingtonePlayer.java,playAsync,Yes, because the method plays audio and requires permission to access audio resources.
/com/android/systemui/media/RingtonePlayer.java,openRingtone,Yes, this method requires permissions to access media files (like ringtones) stored on the device.
/com/android/systemui/media/MediaProjectionPermissionActivity.java,onCreate,Yes, the `onCreate` method in an Android context requires permissions because it utilizes `getCallingPackage` and `MediaProjectionServiceHelper`, which typically involve security-sensitive operations that may need explicit permissions.
/com/android/systemui/media/MediaProjectionPermissionActivity.java,grantMediaProjectionPermission,Yes, this method likely requires permissions. It deals with media projection, which typically requires user consent and permissions related to screen recording or capturing.
/com/android/systemui/media/systemsounds/HomeSoundEffectController.java,hasFlagNoSound,Yes, the method requires permissions because it checks for `DISABLE_SYSTEM_SOUND_EFFECTS` permission using `checkPermission`, which indicates that specific permissions are necessary to perform this action.
/com/android/systemui/media/dialog/MediaOutputController.java,getAppSourceName,Yes, this method requires permissions. It accesses application information using `getApplicationInfo()` from the `PackageManager`, which typically requires `QUERY_ALL_PACKAGES` or similar permissions in the Android manifest.
/com/android/systemui/media/dialog/MediaOutputController.java,startBluetoothLeBroadcast,Yes, this method requires permissions related to Bluetooth, specifically for starting Bluetooth broadcasts.
/com/android/systemui/media/dialog/MediaOutputController.java,isThereAnyBroadcastSourceIntoSinkDevice,Yes, this method likely requires permissions as it interacts with Bluetooth devices, which typically necessitates permissions like `BLUETOOTH` and `BLUETOOTH_ADMIN`.
/com/android/systemui/media/dialog/MediaOutputController.java,addSourceIntoSinkDeviceWithBluetoothLeAssistant,Yes, the method involves Bluetooth operations, which typically require Bluetooth permissions in Android (e.g., `BLUETOOTH`, `BLUETOOTH_ADMIN`).
/com/android/systemui/media/dialog/MediaOutputBroadcastDialog.java,connectBroadcastWithActiveDevice,Yes, this method likely requires Bluetooth permissions since it interacts with Bluetooth devices and metadata.
/com/android/systemui/media/dialog/MediaOutputBaseDialog.java,dismissDialog,Yes, it likely requires permissions to close system dialogs, as it could affect user interface behavior.
/com/android/media/tv/remoteprovider/TvRemoteProvider.java,sendKeyUp,Yes, because sending key events may require permissions related to input or accessibility.
/com/android/media/tv/remoteprovider/TvRemoteProvider.java,sendKeyDown,Yes, because sending key events may require permissions related to input or system controls.
/com/android/media/remotedisplay/RemoteDisplayProvider.java,adjustVolume,Yes, this method requires permissions because adjusting the volume typically requires the `MODIFY_AUDIO_SETTINGS` permission in Android.
/com/android/nfc_extras/NfcExecutionEnvironment.java,open,Yes, requires the `WRITE_SECURE_SETTINGS` permission.
/com/android/nfc_extras/NfcExecutionEnvironment.java,close,Yes, requires the `WRITE_SECURE_SETTINGS` permission.
/com/android/nfc_extras/NfcExecutionEnvironment.java,transceive,Yes, requires `WRITE_SECURE_SETTINGS` permission to function.
/com/android/nfc_extras/NfcAdapterExtras.java,get,Yes, requires `WRITE_SECURE_SETTINGS` permission.
/com/android/nfc_extras/NfcAdapterExtras.java,getCardEmulationRoute,Yes, Requires the `WRITE_SECURE_SETTINGS` permission.
/com/android/nfc_extras/NfcAdapterExtras.java,setCardEmulationRoute,Yes, requires `WRITE_SECURE_SETTINGS` permission.
/com/android/nfc_extras/NfcAdapterExtras.java,getEmbeddedExecutionEnvironment,Yes, requires the `WRITE_SECURE_SETTINGS` permission.
/com/android/nfc_extras/NfcAdapterExtras.java,authenticate,Yes, the method may require permissions for authentication with a token, particularly if it involves secure operations or accessing sensitive data.