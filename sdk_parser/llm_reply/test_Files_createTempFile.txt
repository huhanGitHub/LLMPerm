Here is an example code of method `test_Files_createTempFile` which uses the `java.nio.file.Files` API to create a temporary file. The method creates a temporary file with a given prefix and suffix and then prints the path of the temporary file.

This method includes exception handling in case the temporary file cannot be created for some reason.

```java
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;

public void test_Files_createTempFile() {
    try {
        // Create a temp file with the prefix "tempFile" and suffix ".txt"
        Path tempFile =  Files.createTempFile("tempFile", ".txt");

        // The system default temporary-file directory will be used, and 
        // a cryptographically strong pseudo-random number generator will be used 
        // to generate names for the file.
        
        // Get the absolute file path of the temporary file
        String filePath = tempFile.toAbsolutePath().toString();

        // Print the file path
        System.out.println("Temporary file path: " + filePath);
        
    } catch (IOException e) {
        System.err.println("Failed to create temp file.");
        e.printStackTrace();
    }
}
```

The method can be used within an android activity, but be aware that android has its own system for generating temporary files using `File.createTempFile()`. If you are trying to work with files in an Android context, you may want to use android-specific methods.