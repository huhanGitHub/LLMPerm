Here is a simple method that will display a list of files in a directory using the listFiles() method in java.io.File:

```java
private void test_File_listFiles() {
    File directory = new File(Environment.getExternalStorageDirectory().getAbsolutePath());
    File[] files = directory.listFiles();

    for (File file : files) {
        Log.d("test_File_listFiles", "File: " + file.getName());
    }
}
```

This method gets your device's external storage directory and lists all of its files. It then logs the names of those files to your Logcat. 

The `Environment.getExternalStorageDirectory().getAbsolutePath()` gets a `String` that represents the path to your external storage directory, and this `String` is used to create a new `File`. If this directory doesn't actually exist or if an error occurs, listFiles() will return null.

Then, it goes through each `File` in the array `files` and logs its name.

However, note that due to Android's security policy, you should declare and request permissions in order to read or write files in external storage. If your app targets SDK version 23 or above, you will also need to request these permissions at runtime.

Here's how you would do this in your AndroidManifest.xml:

```xml
<uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
```

And here's how you'd do it at runtime:

```java
if (checkSelfPermission(Manifest.permission.READ_EXTERNAL_STORAGE)
        != PackageManager.PERMISSION_GRANTED) {

    // Should we show an explanation?
    if (shouldShowRequestPermissionRationale(
            Manifest.permission.READ_EXTERNAL_STORAGE)) {
        // Explain to the user why we need to read the contacts
    }

    requestPermissions(new String[]{Manifest.permission.READ_EXTERNAL_STORAGE},
            MY_PERMISSIONS_REQUEST_READ_EXTERNAL_STORAGE);

    // MY_PERMISSIONS_REQUEST_READ_EXTERNAL_STORAGE is an
    // app-defined int constant that should be quite unique

    return;
}
```

You'd typically do this in your Android activity's onCreate() method, before calling `test_File_listFiles()`.