Here is the requested method. In this method I am demonstrating how to use ContactsContract API to add a contact to a specific group in the contacts. Please be sure to add correct permissions to AndroidManifest.xml file.

```Java
private void test_Contacts_addToMyContactsGroup() {
    // Request required permissions
    if (ContextCompat.checkSelfPermission(this, Manifest.permission.WRITE_CONTACTS) != PackageManager.PERMISSION_GRANTED) {
        ActivityCompat.requestPermissions(this, new String[]{Manifest.permission.WRITE_CONTACTS}, 1);
    } else {
        addContactToGroup();
    }
}

private void addContactToGroup() {
    long rawContactId = 0;  // you need to fetch the desired RawContactId here
    long groupId = 0; // you need to fetch the desired GroupId here

    ContentValues values = new ContentValues();
    values.put(ContactsContract.CommonDataKinds.GroupMembership.RAW_CONTACT_ID, rawContactId);
    values.put(ContactsContract.CommonDataKinds.GroupMembership.GROUP_ROW_ID, groupId);
    values.put(ContactsContract.CommonDataKinds.GroupMembership.MIMETYPE, ContactsContract.CommonDataKinds.GroupMembership.CONTENT_ITEM_TYPE);
    getContentResolver().insert(ContactsContract.Data.CONTENT_URI, values);
}

@Override
public void onRequestPermissionsResult(int requestCode, @NonNull String permissions[], @NonNull int[] grantResults) {
    switch (requestCode) {
        case 1: {
            if (grantResults.length > 0 && grantResults[0] == PackageManager.PERMISSION_GRANTED) {
                addContactToGroup();
            } else {
                Toast.makeText(this, "Permission denied for write contacts!", Toast.LENGTH_SHORT).show();
            }
        }
    }
}
```
This code only demonstrates how to assign a contact to a specific group, you should fetch the desired RawContactId and GroupId in your app according to your specific requirements and need.

Also you need to place below permission in your AndroidManifest.xml file.
```xml
<uses-permission android:name="android.permission.WRITE_CONTACTS" />
```