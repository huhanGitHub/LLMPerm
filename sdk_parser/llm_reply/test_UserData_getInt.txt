In order to create a method test for UserData.getInt, an instance of UserData needs to be used. However, in Android API, UserData class does not have a public method named getInt.

Nevertheless, if we were to hypothetically assume that such a method exists, testing it in a local method inside an activity could look like this:

Also, note that Android unit tests involving UI should typically be written in a separate test directory using Android-specific test classes like AndroidJUnit4, ActivityScenario, etc. 

```Java
public void test_UserData_getInt() {
    // Create a mock field type and value
    String fieldId = "user_password";
    String value = "1234";

    // Initialize the autofill field collection
    AutofillField autofillField = new AutofillField(fieldId, value);

    // Initialize a UserData builder with a dummy user id and name, we only care about the field value.
    UserData.Builder builder = new UserData.Builder("testId", "testName", "en_US");

    // Then populate it with our mock field
    builder.addField(autofillField.getId(), autofillField.getValue());

    // Build the user data
    UserData userData = builder.build();

    // Assuming getInt is a method which converts string to integer
    // Let's try to retrieve the password in integer
    int password = userData.getInt(fieldId);

    // If getInt works correctly, and it converts the string "1234" to integer 1234.
    // This assert function should pass
    assert(password == 1234);
}
```

Please note that this is a hypothetical scenario because UserData class does not contain getInt method. It would be more suitable if you specify the correct method or Class from Android API for writing the test case.