In Android, for creating a method to test `DeviceAdminReceiver.onProfileProvisioningComplete()` you may need to create a mock Android context and a mock Intent.

Here is an example method:

```java
import android.app.admin.DeviceAdminReceiver;
import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;
import android.support.test.InstrumentationRegistry;
import android.support.test.runner.AndroidJUnit4;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.robolectric.Robolectric;
import org.robolectric.android.controller.ActivityController;
import org.robolectric.annotation.Config;

import static org.junit.Assert.*;
import static org.robolectric.Shadows.shadowOf;

@RunWith(AndroidJUnit4.class)
@Config(manifest=Config.NONE)
public class ExampleUnitTest {

    @Test
    public void test_DeviceAdminReceiver_onProfileProvisioningComplete() {
        // App context
        Context appContext = InstrumentationRegistry.getTargetContext();

        // Mock Activity
        ActivityController<MainActivity> activityController = Robolectric.buildActivity(MainActivity.class);
        MainActivity activity = activityController.get();

        // Creating DeviceAdminReceiver
        DeviceAdminReceiver mDeviceAdminReceiver = new DeviceAdminReceiver();

        // Creating the intent
        Intent intent = new Intent(DeviceAdminReceiver.ACTION_PROFILE_PROVISIONING_COMPLETE);
        ComponentName componentName = new ComponentName("com.example.deviceadminsample", ".SampleDeviceAdminReceiver");
        intent.setComponent(componentName);

        // triggering the onProfileProvisioningComplete method
        mDeviceAdminReceiver.onProfileProvisioningComplete(appContext, intent);
        
        // business logic to verify the effects of calling onProfileProvisioningComplete()
        // For instance, you can check if the method has set the specified setting or has started the desired activity
        // Check your business logic here
    }
}
```
Please replace `"com.example.deviceadminsample"` and `.SampleDeviceAdminReceiver` with the actual package and class names for your `DeviceAdminReceiver` 

The `onProfileProvisioningComplete()` method doesn't directly return a result, so your test should verify the desired behavior of your specific app. For instance, this method could have side effects such as changing settings or launching activities, which you could check by using the `shadowOf()` method from Robolectric or other similar techniques depending on your business logic. 

This example uses Robolectric, a popular unit testing framework for Android that can simulate the Android framework without needing a device. 

Remember, always ensure your test does meaningful assertions related to the business logic of your app.