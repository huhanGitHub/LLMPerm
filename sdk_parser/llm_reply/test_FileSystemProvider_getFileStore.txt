The FileSystemProvider class is an abstract class in Java that provides an interface for file systems in a machine. The getFileStore method is used to retrieve a FileStore that represents the place where a file system object is stored is store. 

Here is a self-contained method of how to test the getFileStore method in an Android Activity. Please note this is applicable to Java environments and may not work directly on Android due to the difference in file system structure and security control.

```java
// Import necessary libraries
import java.nio.file.FileSystems;
import java.nio.file.Path;
import java.nio.file.spi.FileSystemProvider;
import java.io.IOException;
import java.nio.file.FileStore;

public void test_FileSystemProvider_getFileStore() {
    try {
        // Get the default file system
        FileSystemProvider provider = FileSystems.getDefault().provider();
        
        // Get the path where the file system object is stored
        Path path = FileSystems.getDefault().getPath("/");

        // Retrieve the file store
        FileStore store = provider.getFileStore(path);
        
        // Print the file store
        System.out.println("File Store: " + store.toString());
    } catch (IOException e) {
        // Handle any IO exceptions
        System.out.println("An error occurred.");
        e.printStackTrace();
    }
}
``` 

In Android, due to restrictions in accessing the file system directly, you can use methods provided in the android.os.Environment class to get access to specific directories based on your needs.