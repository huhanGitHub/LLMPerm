Here's a basic example of how to use setImageURI() method with android.widget.ImageSwitcher in an Android activity context. Please make sure to replace "YOUR_URI_HERE" with the actual URI of your image.

```java
public void test_ImageSwitcher_setImageURI() {
    // Create ImageSwitcher
    ImageSwitcher imageSwitcher = new ImageSwitcher(this);

    // Set the factory required to create the views for ImageSwitcher
    imageSwitcher.setFactory(new ViewSwitcher.ViewFactory() {
        @Override
        public View makeView() {
            ImageView imageView = new ImageView(getApplicationContext());
            imageView.setScaleType(ImageView.ScaleType.FIT_CENTER);
            imageView.setLayoutParams(new ImageSwitcher.LayoutParams(LayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT));
            return imageView;
        }
    });

    // Set the animation to use when switching images
    imageSwitcher.setInAnimation(AnimationUtils.loadAnimation(this, android.R.anim.slide_in_left));
    imageSwitcher.setOutAnimation(AnimationUtils.loadAnimation(this, android.R.anim.slide_out_right));

    // Set the URI of the image that should be displayed
    imageSwitcher.setImageURI(Uri.parse("YOUR_URI_HERE"));

    // Add imageSwitcher to your activity layout
    // Let's assume we have a LinearLayout with an id of "linearLayout"
    LinearLayout linearLayout = findViewById(R.id.linearLayout);
    linearLayout.addView(imageSwitcher);
}
```

Few things to note:
1) This example is just a simple usage for setImageURI(). In a real-world application, "YOUR_URI_HERE" must be replaced with a real URI of the image you want to display.
2) If you have permissions issue, be sure to grant permissions to access storage in Android Manifest file or request them at runtime for Android 6.0 and above.
3) Before you add ImageSwitcher to an existing layout, ensure the chosen IDs do actually exist in your activity or fragment XML layout.