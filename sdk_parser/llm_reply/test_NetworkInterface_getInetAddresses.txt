Here's a JAVA method that uses the NetworkInterface API in JAVA to get all the Internet addresses:

```java
import java.net.NetworkInterface;
import java.net.InetAddress;
import java.net.SocketException;
import java.util.Enumeration;
import android.util.Log;

public void test_NetworkInterface_getInetAddresses(){
    try {
        // Get all network interfaces of the current system
        Enumeration<NetworkInterface> networkInterfaceEnumeration = NetworkInterface.getNetworkInterfaces();

        while(networkInterfaceEnumeration.hasMoreElements()){
            NetworkInterface networkInterface = networkInterfaceEnumeration.nextElement();
            // Get all addresses for the current network interface
            Enumeration<InetAddress> inetAddressEnumeration = networkInterface.getInetAddresses();

            while(inetAddressEnumeration.hasMoreElements()){
                InetAddress inetAddress = inetAddressEnumeration.nextElement();
                // log each InetAddress
                Log.i("InetAddress", inetAddress.toString());
            }
        }
    }catch (SocketException e){
        // Log any SocketException
        Log.e("NetworkInterface", "Error when getting network interfaces", e);
    }
}
```

A note that while using this code in Android you would need to specify INTERNET permission in AndroidManifest.xml file:
```xml
<uses-permission android:name="android.permission.INTERNET" />
```

Also, this method might not work as expected on Android since devices have different hardware / software configurations and not all network interfaces are accessible, you may need to check for null or other exceptions.