Creating a unit test for an Android BroadcastReceiver such as PolicyUpdateReceiver will need the use of tools like Robolectric, JUnit and Mockito to verify its functionality. Here's an example of how you can test the `onPolicyChanged()` method in your receiver.

Please keep in mind that this is an example and you will need to adapt it to your actual use case:

```java
@Test
public void test_PolicyUpdateReceiver_onPolicyChanged() {
    // Prepare the test environment using Robolectric
    RobolectricTestRunner runner = new RobolectricTestRunner(PolicyUpdateReceiver.class);
    RunnerParams runnerParams = new RunnerParams();
    runnerParams.setIncludePackages("com.yourpackage");
    runner.prepareTest(runnerParams);

    // Initialize your broadcast receiver (replace with your actual receiver)
    PolicyUpdateReceiver policyUpdateReceiver = new PolicyUpdateReceiver();

    // Create an intent that matches the intent-filter of your broadcast receiver
    Intent intent = new Intent("android.intent.action.ACTION_POLICY_UPDATE");

    // Broadcast the intent
    RuntimeEnvironment.application.sendBroadcast(intent);

    // Use ShadowApplication to get all BroadcastReceivers listening to the broadcasted intent
    ShadowApplication shadowApplication = shadowOf(RuntimeEnvironment.application);
    List<BroadcastReceiver> receivers = shadowApplication.getReceiversForIntent(intent);

    // Verify BroadcastReceiver has received your intent
    Assert.assertEquals("BroadcastReceiver did not receive the intent", 1, receivers.size());

    // Obtain the BroadcastReceiver and trigger onReceive with the intent
    BroadcastReceiver receiver = receivers.get(0);
    
    // mock the context and devicepolicymanager
    Context context = mock(Context.class);
    Intent policyUpdateIntent = mock(Intent.class);
  
    when(policyUpdateIntent.getAction()).thenReturn(DevicePolicyManager.ACTION_DEVICE_POLICY_MANAGER_STATE_CHANGED);
      
    receiver.onReceive(context, policyUpdateIntent);

    // Assertion here depends on the exact implementation of your onPolicyChanged
    // This is just an example and need to be replaced by your actual assertion
    Mockito.verify(context).getString(anyInt());
}
```
Before using this test case don't forget to add the necessary dependencies in your build.gradle file, as follows:

```groovy
testImplementation 'junit:junit:4.12'
testImplementation 'org.robolectric:robolectric:3.8'
testImplementation 'org.mockito:mockito-core:1.10.19'
```

And replace "com.yourpackage" and "PolicyUpdateReceiver" with your actual package name and receiver class.