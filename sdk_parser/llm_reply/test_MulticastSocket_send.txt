Please note that MulticastSocket usage on Android requires the `android.permission.ACCESS_NETWORK_STATE` and `android.permission.ACCESS_WIFI_STATE` permissions in AndroidManifest.xml. It also would require `android.permission.CHANGE_WIFI_MULTICAST_STATE` to allow Wifi Multicast Lock.

```java
public void test_MulticastSocket_send() {
    MulticastSocket socket = null;
    byte[] data = "Hello, World!".getBytes();
    
    try {
        // Create a MulticastSocket
        socket = new MulticastSocket(5000);

        // Determine the IP address of a host, given the host's name
        InetAddress group = InetAddress.getByName("230.0.0.1");

        // Joins a multicast group
        socket.joinGroup(group);

        // Create a DatagramPacket
        DatagramPacket packet = new DatagramPacket(data, data.length, group, 5000);

        // Sends a DatagramPacket to the server
        socket.send(packet);

        // Leaves a multicast group
        socket.leaveGroup(group);

    } catch (IOException e) {
        e.printStackTrace();
    } finally {
        if (socket != null) {
            socket.close();
        }
    }
}
```

This is a basic example of usage MulticastSocket to send a message to a certain group. During the creation of the datagram packet, we send the message with the "Hello World!" text to the multicast group with the address "230.0.0.1".