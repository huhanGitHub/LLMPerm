Below is an example code of the method 'test_NetworkInterface_getHardwareAddress()' which uses the java.net.NetworkInterface API. This code gets the hardware address of a network interface and prints it. 

```java
import android.os.Bundle;
import android.util.Log;
import android.app.Activity;

import java.net.NetworkInterface;
import java.net.SocketException;
import java.util.Enumeration;

public class MainActivity extends Activity {

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        test_NetworkInterface_getHardwareAddress();
    }
  
    public void test_NetworkInterface_getHardwareAddress() {
        try {
            Enumeration<NetworkInterface> networkInterfaces = NetworkInterface.getNetworkInterfaces();
            while(networkInterfaces.hasMoreElements()) {
                NetworkInterface networkInterface = networkInterfaces.nextElement();
                if(networkInterface.getHardwareAddress() != null) {
                    StringBuilder builder = new StringBuilder();
                    for(byte b : networkInterface.getHardwareAddress()){
                        builder.append(String.format("%02X:",b));
                    }
                    if(builder.length() > 0){
                        builder.deleteCharAt(builder.length() - 1);
                    }
                    Log.d("Hardware Address", "Interface " + networkInterface.getName() + " : " + builder.toString());
                }
            }
        } catch (SocketException e) {
            e.printStackTrace();
        }
    }
}
```

Please note that network operations should not be performed on the Main(UI) thread, as per the Android documentation. It's advisable to do this operation on a background thread. Here, however, we are not sending or receiving any data. We are just fetching and displaying the data locally. This in general will not block the UI thread for a noticeable amount of time.

Before running, don't forget to add the INTERNET permission to your AndroidManifest.xml:

```xml
<uses-permission android:name="android.permission.INTERNET" />
```