Here is a usage example of the java.nio.file.spi.FileSystemProvider API. Java's FileSystemProvider is a service provider that provides an interface to a file system. The file system is used to access the files present on the server. In this sample code, we are creating a function named "test_FileSystemProvider_move" that uses the FileSystemProvider.move() method to move a file from one location to another.

Please note that this API is not suitable directly for Android development. It's mostly used in Java SE development. Also, keep in mind that it requires JAVA 7 and above. 

```java
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.nio.file.StandardCopyOption;

public void test_FileSystemProvider_move() {
    Path source = Paths.get("/path/to/source/file.txt");
    Path target = Paths.get("/path/to/target/file.txt");

    try {
        // This method will move the file from source to target.
        // It uses StandardCopyOption.REPLACE_EXISTING to replace the file at the target if it exists.
        Files.move(source, target, StandardCopyOption.REPLACE_EXISTING);
        System.out.println("File moved successfully!");
    } catch (Exception e) {
        e.printStackTrace();
    }
}
```

Here's how you can use the above method in your Android activity:

```java
// this is your Android activity
public class MainActivity extends AppCompatActivity {
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        test_FileSystemProvider_move();
    }

    public void test_FileSystemProvider_move() {
        // since Android doesn't use the local file system in the way desktop Java does,
        // we need to use Android's own methods for dealing with files
        // here we copy a file from assets to the app's internal storage
        try {
            File sourceFile = new File(getAssets().open("file.txt"));
            File targetFile = new File(getFilesDir(), "file.txt");

            if (targetFile.exists()) targetFile.delete();
            targetFile.createNewFile();

            try (InputStream in = new FileInputStream(sourceFile); OutputStream out = new FileOutputStream(targetFile)) {
                byte[] buf = new byte[1024];
                int len;
                while ((len = in.read(buf)) > 0) {
                    out.write(buf, 0, len);
                }
            }

            System.out.println("File moved successfully!");
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}
```
This snippet copies a file from the app's 'assets' folder to its internal storage. The `test_FileSystemProvider_move()` method is called in the `onCreate()` method of your Android activity.