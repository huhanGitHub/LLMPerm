```java
public void test_Geocoder_getFromLocation() {
    double latitude = 40.7143528; // example latitude
    double longitude = -74.0059731; // example longitude
    int maxResults = 1;

    Geocoder geocoder = new Geocoder(this, Locale.getDefault());
    try {
        List<Address> addresses = geocoder.getFromLocation(latitude, longitude, maxResults);
        // if an address is found, print it
        if (addresses.size() > 0) {
            Address address = addresses.get(0);
            String result = "Address: " + address.getAddressLine(0);
            Log.d("MyActivity", "test_Geocoder_getFromLocation result: " + result);
        } else {
            Log.d("MyActivity", "No address found");
        }
    } catch (IOException e) {
        Log.e("MyActivity", "Cannot get address", e);
    }
}
```
In order to run the above example, `ACCESS_FINE_LOCATION` or `ACCESS_COARSE_LOCATION` permission is required, and it will be good practice to run these long-running IO operations on a separate thread to prevent UI blocking. The `getFromLocation` method can return multiple addresses (ordered by likelihood), but in this example, we are asking for just one result (maxResults = 1).