The following code will demonstrate how to use the method `getOption` of the ServerSocket class. The method `getOption` gets the value of a socket option. 

```java
public void test_ServerSocket_getOption() {
    int port = 8080;
    try {
        // Create a server socket
        ServerSocket serverSocket = new ServerSocket(port);

        // Get the value of an option for the server socket
        int receiveBuffer = (int) serverSocket.getOption(StandardSocketOptions.SO_RCVBUF);

        // Close the server socket
        serverSocket.close();

        // Print the value of the receive buffer size option
        System.out.println("Receive Buffer size: " + receiveBuffer);
    } catch (IOException e) {
        // Print the stack trace for the exception
        e.printStackTrace();
    }
}
```

This method creates a ServerSocket listening on port 8080 and gets the value for the `SO_RCVBUF` option, which is the buffer size used by the platform for input on this ServerSocket.

This method prints the buffer size to the console. In a real-world application, you would probably want this method to return such data or make other use of it.

*Note*: It is essential to perform network operations like this on a background thread, not the main UI thread. The Android OS does not allow network operations on the main UI thread.